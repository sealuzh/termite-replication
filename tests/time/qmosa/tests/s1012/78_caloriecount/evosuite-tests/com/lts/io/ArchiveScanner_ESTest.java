/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:58:17 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&-W5>_t:");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("7j2OUt");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "7j2OUt";
      stringArray0[1] = "&-zs>_t:O.jar";
      stringArray0[2] = "&-zs>_t:O.jar";
      stringArray0[3] = "&-zs>_t:O.jar";
      Integer integer0 = new Integer(22);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("&-W5>_t:");
      archiveScanner0.setExcludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "V");
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      DirectoryScanner.matchPath("ocM", "7j2OUt");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("&-zs>_t:O.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&-W5>_t:");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile("V");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "V");
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      improvedFile1.createNewFile();
      String string0 = "";
      ImprovedFile.buildName(".zip", (-1103L), "", improvedFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setBasedir((File) improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(93L);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile1, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&-W5>_t:");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "&-zs>_t:O.jar";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "V");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("7j2OUt");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "7j2OUt";
      stringArray0[1] = "&-zs>_t:O.jar";
      stringArray0[2] = "&-zs>_t:O.jar";
      stringArray0[3] = "&-zs>_t:O.jar";
      Integer integer0 = new Integer(22);
      int int0 = 846;
      int int1 = (-706);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("&-W5>_t:");
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "V");
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(22);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "7j2OUt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&-W5>_t:");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "V");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("7j2OUt");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "7j2OUt";
      stringArray0[1] = "&-zs>_t:O.jar";
      stringArray0[2] = "&-zs>_t:O.jar";
      stringArray0[3] = "&-zs>_t:O.jar";
      archiveScanner0.setExcludes(stringArray0);
      DirectoryScanner.matchPath("7j2OUt", "&-zs>_t:O.jar");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "V");
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "7j2OUt", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "h.jar";
      String[] stringArray0 = new String[9];
      DirectoryScanner.matchPath("h.jar", "h.jar");
      archiveScanner0.haveSlowResults = true;
      stringArray0[0] = "h.jar";
      stringArray0[1] = "h.jar";
      stringArray0[2] = "h.jar";
      stringArray0[3] = "h.jar";
      stringArray0[4] = "h.jar";
      stringArray0[5] = "h.jar";
      archiveScanner0.addDefaultExcludes();
      stringArray0[6] = "h.jar";
      stringArray0[7] = "h.jar";
      stringArray0[8] = "h.jar";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "h.jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&-W5>_t:");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile("V");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "V");
      Vector<Integer> vector0 = new Vector<Integer>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      improvedFile1.createNewFile();
      ImprovedFile.buildName(".zip", (-1103L), "", improvedFile1);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector1;
      DirectoryScanner.matchPath("V", "V");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".zip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.086783844412593
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      MockFile mockFile0 = new MockFile(improvedFile0, "");
      DirectoryScanner.matchPatternStart("", "");
      Vector<Integer> vector1 = new Vector<Integer>();
      improvedFile0.setWritable(true);
      archiveScanner0.dirsNotIncluded = vector1;
      String[] stringArray0 = new String[0];
      DirectoryScanner.match("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      MockFile.createTempFile("IVx/.n<A", "", (File) mockFile0);
      mockFile0.setExecutable(true, true);
      archiveScanner0.setIncludes(stringArray0);
      File file0 = ImprovedFile.buildName("ount", (-1L), "", improvedFile0);
      Integer integer0 = new Integer(6);
      improvedFile0.mkdirs();
      vector1.add((Integer) null);
      archiveScanner0.processDirectory(improvedFile0, "ount", false);
      archiveScanner0.processFile("IVx/.n<A");
      System.setCurrentTimeMillis(6);
      try { 
        archiveScanner0.processDirectory(file0, ", before creating temp directory with prefix ", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /ount-1.
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5579696673135186
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile0 = new MockFile(improvedFile0, "");
      DirectoryScanner.matchPatternStart("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      DirectoryScanner.matchPath("", "");
      mockFile0.setExecutable(true, false);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      MockFile mockFile1 = new MockFile("ount", "");
      Integer integer0 = new Integer(6);
      vector1.add((Integer) null);
      archiveScanner0.processDirectory(improvedFile0, "", true);
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&-W5>_t:");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "repository0repository.jar");
      Integer integer0 = new Integer(1362);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile("7j2OUt");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      archiveScanner0.includes = stringArray0;
      stringArray0[0] = "7j2OUt";
      stringArray0[1] = "repository0repository.jar";
      stringArray0[2] = "&-Ws>_t:O>.jar";
      stringArray0[3] = "repository0repository.jar";
      Integer integer1 = new Integer(22);
      Integer integer2 = new Integer((-706));
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "V");
      archiveScanner0.setIncludes(stringArray0);
      MockFile mockFile0 = new MockFile(improvedFile0, "repository0repository.jar");
      archiveScanner0.isArchive(mockFile0);
      System.setCurrentTimeMillis(3248L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Wt?", "78_caloriecoun.jar");
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("78_caloriecoun.jar", "Wt?", mockFile0);
      ImprovedFile improvedFile1 = improvedFile0.tempBackup();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "Wt?", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile0 = new MockFile(improvedFile0, "");
      DirectoryScanner.matchPatternStart("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      DirectoryScanner.matchPath("", "");
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      DirectoryScanner.match("", "");
      mockFile0.getAbsolutePath();
      MockFile.createTempFile("IVx/.n<A", "", (File) mockFile0);
      mockFile0.setExecutable(true, true);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.setIncludes(stringArray0);
      DirectoryScanner.matchPath("er|Nr}(fuL,<?V !", "0Wt?");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("IVx/.n<A");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ImprovedFile improvedFile0 = new ImprovedFile("&-W5>_t:", "&-W5>_t:");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[2];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[0] = "&-W5>_t:";
      stringArray0[1] = "&-W5>_t:";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processArchive(improvedFile1, "Xq{am<hP[;");
      assertEquals(0L, improvedFile1.getUsableSpace());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".JAR";
      stringArray0[0] = ".JAR";
      stringArray0[2] = "GkT ~6<g/]l-";
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("V*P");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      File file0 = archiveScanner0.basedir;
      File file1 = archiveScanner0.basedir;
      archiveScanner0.getBasedir();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.clone();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("qGSU|[YkH;yYkB{(1&", "78_caloriecoun.jar");
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("78_caloriecoun.jar", "qGSU|[YkH;yYkB{(1&", mockFile0);
      ImprovedFile improvedFile1 = improvedFile0.tempBackup();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "qGSU|[YkH;yYkB{(1&", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte) (-119);
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)55;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ImprovedFile improvedFile0 = new ImprovedFile("AIfDx25J");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "AIfDx25J");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("V*P");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      archiveScanner0.getBasedir();
      File file0 = archiveScanner0.basedir;
      archiveScanner0.getBasedir();
      Vector<Object> vector0 = new Vector<Object>();
      vector0.clone();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Wt?", "78_caloriecoun.jar");
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("78_caloriecoun.jar", "Wt?", mockFile0);
      ImprovedFile improvedFile1 = improvedFile0.tempBackup();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("fH4oWG0A_pp", ">vL~a<<=5Ik#EX;k");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      boolean boolean0 = archiveScanner0.isArchive(mockFile0);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&-W5>_t:");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("7j2OUt");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "7j2OUt";
      stringArray0[1] = "&-zs>_t:O.jar";
      stringArray0[2] = "&-zs>_t:O.jar";
      stringArray0[3] = "&-zs>_t:O.jar";
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "V");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0569159974344733
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile0 = new MockFile(improvedFile0, "");
      DirectoryScanner.matchPatternStart("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      improvedFile0.setWritable(true);
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      DirectoryScanner.match("", "");
      MockFile.createTempFile("IVx/.n<A", "", (File) mockFile0);
      mockFile0.setExecutable(true, true);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.setIncludes(stringArray0);
      MockFile mockFile1 = new MockFile("IVx/.n<A", "");
      Integer integer0 = new Integer(6);
      improvedFile0.mkdirs();
      vector0.add((Integer) null);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "ouxnt", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile0 = new MockFile(improvedFile0, "");
      DirectoryScanner.matchPatternStart("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      improvedFile0.setWritable(true);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile.buildName((String) null, 0, "**/CVS", mockFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      archiveScanner0.processDirectory(improvedFile1, "**/CVS", true);
      assertEquals(0L, improvedFile1.length());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("V*P");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      File file0 = archiveScanner0.basedir;
      Vector<Object> vector0 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream0.markSupported();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream2);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream2);
      Object object0 = new Object();
      try { 
        archiveScanner0.scanArchive(improvedFile0, "s,Qs");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, V*P
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("dSnL[*_<s:");
      Vector<Integer> vector0 = new Vector<Integer>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "dSnL[*_<s:", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/dSnL[*_<s:
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      DirectoryScanner.matchPatternStart("2", "Sp#hL");
      archiveScanner0.haveSlowResults = false;
      archiveScanner0.haveSlowResults = false;
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer((-1983));
      Integer integer2 = new Integer((-180859485));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer3 = new Integer((-180859485));
      Integer integer4 = new Integer(1826);
      Integer integer5 = new Integer(7);
      Vector<Object> vector1 = new Vector<Object>();
      Integer integer6 = new Integer((-2711));
      vector1.add((Object) integer6);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis(1826);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      Vector<Integer> vector0 = new Vector<Integer>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "", true);
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1187));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("V*P");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      File file0 = archiveScanner0.basedir;
      Vector<Object> vector0 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2335);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream1.markSupported();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(2335);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream1, pipedInputStream1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, ":0}s~'6O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }
}
