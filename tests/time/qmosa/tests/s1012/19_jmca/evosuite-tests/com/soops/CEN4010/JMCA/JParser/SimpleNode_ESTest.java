/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:43:27 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(18);
      String string0 = "t0rw9=P";
      simpleNode0.dump("t0rw9=P", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(18);
      int int1 = (-1113371894);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-1113371894));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("t0rw9=P", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      int int1 = (-1113371894);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-1113371894));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("L'X d+Ru3)4xFu<DM+^");
      int int0 = (-429);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-429));
      simpleNode0.parent = (Node) simpleNode0;
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -429
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9409668586611084
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<2P<taN_?");
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(30);
      StringWriter stringWriter1 = new StringWriter(30);
      stringWriter0.flush();
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("{", stringWriter0);
      simpleNode0.setIdentifier(">");
      simpleNode0.dump(");w]sbk\"Vz2D}7*nJ", stringWriter1);
      SimpleNode simpleNode1 = new SimpleNode(2075);
      SimpleNode simpleNode2 = new SimpleNode(420);
      simpleNode2.dump("(K", stringWriter0);
      simpleNode2.dump("RUNSIGNEDSHIFT", (Writer) null);
      StringReader stringReader0 = new StringReader("\"import\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, (-1106823794));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode3 = new SimpleNode(javaParser0, (-1982342024));
      simpleNode0.setIdentifier(";");
      simpleNode0.dump("AnnotationTypeMemberDeclaration", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>*gt</identifier>\n</ClassOrInterfaceType>\n<ClassOrInterfaceType>\n  <identifier>*gt</identifier>\n  <identifier>*gt</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.311020481113516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      simpleNode0.toString("CompilationUnit");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ")");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) ")");
      stringWriter1.close();
      stringWriter2.append('\\');
      StringWriter stringWriter3 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode2.jjtAddChild((Node) null, 0);
      simpleNode2.jjtAddChild(simpleNode0, 1);
      simpleNode2.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(19);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4842355541080061
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString("FormalParameters");
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.flush();
      simpleNode1.setIdentifier("&");
      StringWriter stringWriter1 = stringWriter0.append('|');
      simpleNode1.dump("&", stringWriter1);
      Node node1 = simpleNode0.parent;
      StringWriter stringWriter2 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode((-1983366717));
      simpleNode2.setIdentifier("&");
      StringWriter stringWriter3 = stringWriter0.append('|');
      simpleNode1.dump("4", stringWriter3);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode2, (-1078909011));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1078909011
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 30;
      SimpleNode simpleNode0 = new SimpleNode(30);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.setIdentifier("&&");
      stringWriter0.append('[');
      simpleNode0.dump("}I\"\"-F5X$[r},S-<d", stringWriter0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("==");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(12);
      SimpleNode simpleNode1 = new SimpleNode(12);
      simpleNode0.jjtAddChild(simpleNode1, 15);
      Node node0 = simpleNode1.parent;
      StringWriter stringWriter0 = new StringWriter(12);
      simpleNode0.jjtGetChild(15);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-1910504865));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2048);
      String string0 = ">";
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter(13);
      // Undeclared exception!
      try { 
        simpleNode0.dump(">", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3517814824679821
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("Bj");
      String string0 = null;
      simpleNode0.setIdentifier((String) null);
      simpleNode0.jjtClose();
      simpleNode0.setIdentifier((String) null);
      simpleNode0.jjtAddChild(simpleNode0, 1831);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("");
      simpleNode0.identifiers.add("");
      StringWriter stringWriter0 = new StringWriter(81);
      // Undeclared exception!
      simpleNode0.dump((String) null, stringWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2263282181113064
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.toString();
      simpleNode0.toString("CompilationUnit");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.toString();
      Writer writer0 = null;
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        simpleNode0.dump("CompilationUnitCompilationUnit", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter(18);
      String string0 = "t0rw9=P";
      simpleNode0.dump("t0rw9=P", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(18);
      int int1 = (-1113371894);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-1113371894));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6018904825060272
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(8);
      simpleNode0.toString((String) null);
      SimpleNode simpleNode1 = new SimpleNode(8);
      int int0 = 98;
      simpleNode0.jjtAddChild(simpleNode1, 98);
      Node node0 = simpleNode1.parent;
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.close();
      simpleNode0.dump("(K", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-6319));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6319
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.233504898246879
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier("y");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("</y");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "y");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.setIdentifier("<");
      stringWriter0.append('9');
      simpleNode0.dump("}I\"\"-F5X$[r},S-<d", stringWriter0);
      assertEquals("9<ClassOrInterfaceType>\n  <identifier>y</identifier>\n  <identifier>*lt</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      MockFile mockFile0 = new MockFile("<", "y");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 30);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(mockFileInputStream0, sequenceInputStream0);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream1);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(bufferedInputStream0, byteArrayInputStream0);
      sequenceInputStream3.skip((-2512L));
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 486);
      SequenceInputStream sequenceInputStream4 = new SequenceInputStream(sequenceInputStream2, pushbackInputStream1);
      sequenceInputStream4.read();
      JavaParser javaParser0 = new JavaParser(sequenceInputStream4);
      simpleNode0.toString();
      String string0 = simpleNode0.toString("AlNoN^\"*dXTCN4#{K");
      assertEquals("AlNoN^\"*dXTCN4#{KClassOrInterfaceType : y : <", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      StringReader stringReader0 = new StringReader("^nJys>v(4\"S");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      JavaParser javaParser1 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.setIdentifier("^nJys>v(4\"S");
      simpleNode0.jjtClose();
      simpleNode0.jjtOpen();
      simpleNode0.setIdentifier("");
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier("i");
      StringWriter stringWriter0 = new StringWriter(30);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte) (-55);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.dump("\"++\"", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>i</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(30);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter3 = new StringWriter(3759);
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter(1093);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringWriter2.close();
      StringWriter stringWriter6 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringWriter3.write("\"++\"");
      simpleNode0.dump("i", stringWriter1);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>i</identifier>\n</ClassOrInterfaceType>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4374355727841266
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "g4&r}@ve{L'-6";
      SystemInUtil.addInputLine("g4&r}@ve{L'-6");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string1 = "<FLOATING_POINT_LITERAL>";
      JavaParser javaParser0 = new JavaParser("<FLOATING_POINT_LITERAL>");
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 3.  Encountered: &
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7736806390558368
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString("FormalParameters");
      String string0 = "Literal";
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("Literal", stringWriter0);
      simpleNode0.jjtClose();
      simpleNode0.jjtClose();
      SimpleNode simpleNode1 = new SimpleNode((-645));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode2 = new SimpleNode((-563));
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("FormalParameters");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      String string0 = null;
      simpleNode0.setIdentifier((String) null);
      int int0 = 10;
      StringWriter stringWriter0 = new StringWriter(10);
      String string1 = "<=";
      // Undeclared exception!
      try { 
        simpleNode0.dump("<=", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.7962209059715708
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter(18);
      String string0 = "t0rw9=P";
      simpleNode0.dump("t0rw9=P", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      int int1 = (-1113371894);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-1113371894));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1649));
      SimpleNode simpleNode1 = new SimpleNode(102);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1649));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.459426466602929
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 30);
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1996);
      simpleNode1.jjtAddChild((Node) null, 10);
      simpleNode0.toString("<=");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode1.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(0);
      SimpleNode simpleNode2 = new SimpleNode((-130764442));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-130764442));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -130764442
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      StringReader stringReader0 = new StringReader("-DNXXl#S,vofv-3");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      nodeArray0[1] = null;
      Node node1 = simpleNode0.parent;
      nodeArray0[2] = null;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      simpleNode0.toString("~");
      Node node2 = simpleNode0.jjtGetChild(0);
      assertSame(simpleNode0, node2);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9512667872451708
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("CompilationUnit");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-124);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      arrayList0.add("\"}v}7{5Pf$g8esWG");
      arrayList0.add("EnumConstant");
      JavaParser javaParser0 = new JavaParser("CompilationUnit");
      int int0 = 0;
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode1.toString("\"}v}7{5Pf$g8esWG");
      SimpleNode simpleNode2 = new SimpleNode(2514);
      simpleNode0.jjtAddChild(simpleNode2, 0);
      simpleNode1.id = 0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode2, (-4819));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4819
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6688310524148733
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString("FormalParameters");
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      Node node0 = simpleNode1.parent;
      StringWriter stringWriter0 = new StringWriter(682);
      stringWriter0.close();
      simpleNode0.dump((String) null, stringWriter0);
      int int0 = (-1952679914);
      simpleNode0.jjtAddChild(simpleNode1, 682);
      simpleNode0.jjtGetChild(55);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-926));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -926
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1790);
      simpleNode0.id = 0;
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild(nodeArray0[0], 0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-258));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -258
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)106;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode((byte) (-56));
      // Undeclared exception!
      try { 
        simpleNode0.toString((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -56
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("CXE\"dGiz-xA%");
      JavaParser javaParser1 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 1456);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2093));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
