/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:37:43 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6118946777123186
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-5220), (-5220));
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "java.util.Collections$UnmodifiableRandomAccessList@0000000002", (-7), 148);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((-1L));
      boolean boolean2 = foreignKeyConstraint1.isReal();
      assertFalse(boolean2 == boolean0);
      
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean3 = foreignKeyConstraint1.isRestrictDelete();
      assertEquals((-7), foreignKeyConstraint1.getUpdateRule());
      assertTrue(boolean3 == boolean1);
      assertEquals(148, foreignKeyConstraint1.getDeleteRule());
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.getName();
      assertEquals((-5220), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1815416102034564
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WjD^?dH1%AKT'1(CI7", 2, 917);
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "2g^Y$y", 917, 1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "2g^Y$y", 1, 2);
      foreignKeyConstraint2.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "", 917, 2);
      foreignKeyConstraint3.getChildColumns();
      foreignKeyConstraint2.isReal();
      ForeignKeyConstraint foreignKeyConstraint4 = new ForeignKeyConstraint((Table) null, "", 917, (-710));
      foreignKeyConstraint2.isNullOnDelete();
      System.setCurrentTimeMillis(2608L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5179872908529675
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Table table0 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "EEP\\QpA\"&iB!9:";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "EEPQpA\"&iB!9:");
      String[] stringArray0 = new String[2];
      stringArray0[1] = "";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      int int0 = 1;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "EEPQpA\"&iB!9:", 1, 0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getParentColumns();
      Config.getInstance();
      DatabaseMetaData databaseMetaData0 = null;
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", "UTF-8", "Cascade on delete:\n Deletion of parent deletes child");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \"Cascade on delete:
         //  Deletion of parent deletes child.meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.234691887155377
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Xj]Yq=4EO 6504-U", (-2649), (-782));
      foreignKeyConstraint0.getParentColumns();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Xj]Yq=4EO 6504-U", (-2647), (-38));
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "S?3SF6|O>`0", 396, (-891));
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "F0D<oAv>)#TcL", (-3468), 3);
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint3.isNullOnDelete();
      System.setCurrentTimeMillis((-1431L));
      boolean boolean2 = foreignKeyConstraint2.isReal();
      assertFalse(boolean2 == boolean1);
      
      String string0 = foreignKeyConstraint3.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      foreignKeyConstraint2.getDeleteRuleDescription();
      boolean boolean3 = foreignKeyConstraint3.isRestrictDelete();
      assertFalse(boolean3 == boolean0);
      
      foreignKeyConstraint1.getDeleteRuleName();
      assertEquals((-2647), foreignKeyConstraint1.getUpdateRule());
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6103750560929169
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = ")fine1sk";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")fine1sk", (-17), 0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "p", (-17), 0);
      String string1 = "net.sourceforge.schemaspy.model.TableColumn$ColumnComparator";
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.TableColumn$ColumnComparator", 173, (-17));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint2.getDeleteRuleName();
      Config config0 = Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      Database database0 = null;
      try {
        database0 = new Database(config0, connection0, databaseMetaData0, "X,v", "", "net.sourceforge.schemaspy.model.TableColumn$ColumnComparator", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2401988774888655
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.xml.TableColumnMeta", (-2196), 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 299, 299);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      foreignKeyConstraint1.isRestrictDelete();
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(299);
      boolean boolean1 = foreignKeyConstraint1.isReal();
      foreignKeyConstraint1.getDeleteRuleDescription();
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string2);
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      assertEquals((-2196), foreignKeyConstraint0.getUpdateRule());
      assertTrue(foreignKeyConstraint0.isNullOnDelete());
      
      boolean boolean2 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean2 == boolean1);
      
      foreignKeyConstraint1.getDeleteRuleName();
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.42048096046969
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "J=a", 10, 10);
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, " via ", 0, 94);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "", (-17), 3758);
      foreignKeyConstraint1.isRestrictDelete();
      boolean boolean0 = foreignKeyConstraint2.isNullOnDelete();
      System.setCurrentTimeMillis(0L);
      boolean boolean1 = foreignKeyConstraint2.isReal();
      assertTrue(boolean1);
      
      foreignKeyConstraint2.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint1.isRestrictDelete();
      foreignKeyConstraint2.getDeleteRuleName();
      assertEquals((-17), foreignKeyConstraint2.getUpdateRule());
      
      foreignKeyConstraint1.getUpdateRule();
      boolean boolean2 = foreignKeyConstraint1.isRestrictDelete();
      assertTrue(boolean2 == boolean0);
      assertEquals(94, foreignKeyConstraint1.getDeleteRule());
      assertFalse(boolean2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4171715285888293
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 917, 1981);
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-116), 917);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, ":kylsM2Oh#?#f(", 17, (-116));
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean1);
      
      System.setCurrentTimeMillis(1981);
      boolean boolean2 = foreignKeyConstraint1.isReal();
      assertFalse(boolean2 == boolean0);
      
      foreignKeyConstraint2.getDeleteRuleDescription();
      foreignKeyConstraint2.getDeleteRuleDescription();
      assertFalse(foreignKeyConstraint2.isNullOnDelete());
      assertFalse(foreignKeyConstraint2.isRestrictDelete());
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getName();
      assertEquals(917, foreignKeyConstraint0.getUpdateRule());
      assertEquals(1981, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4200467442300027
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ":!*%pj", (-5220), (-2001));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-1769), 688);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "`Q#", (-2196), (-4523));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint2.getDeleteRuleName();
      boolean boolean0 = foreignKeyConstraint2.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint2.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      System.setCurrentTimeMillis(0L);
      boolean boolean2 = foreignKeyConstraint1.isReal();
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean3 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean3 == boolean2);
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
      
      foreignKeyConstraint2.getDeleteRuleName();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-5220), int0);
      assertEquals((-2001), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4979067443811425
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WjD^?dH1%AKT'1(CI7", 2, 917);
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "2g^Y$y", 917, 1);
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      foreignKeyConstraint0.getParentColumns();
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals((-69), int0);
      
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      foreignKeyConstraint0.isNullOnDelete();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "&v<vuhk]O]TCRJ", (-546), (-1));
      assertFalse(foreignKeyConstraint2.isNullOnDelete());
      assertFalse(foreignKeyConstraint2.isRestrictDelete());
      
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "Restrict delete:\n Parent cannot be deleted if children exist", 46, 3);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = foreignKeyConstraint3.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      
      boolean boolean1 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean1 == boolean0);
      
      String string2 = foreignKeyConstraint3.getDeleteRuleAlias();
      assertEquals("R", string2);
      assertEquals(46, foreignKeyConstraint3.getUpdateRule());
      assertFalse(foreignKeyConstraint3.isNullOnDelete());
      assertTrue(foreignKeyConstraint3.isRestrictDelete());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3177988005346264
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ":kylsM2Oh#?#f(", (-33), (-33));
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean1);
      
      System.setCurrentTimeMillis(2585L);
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean2 = foreignKeyConstraint0.isReal();
      assertFalse(boolean2 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-33), int0);
      assertEquals((-33), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2642245966471153
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ":kylsM2Oh#?#f(", (-33), (-33));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ")fines_", (-782), 1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "8TPI3:`*!)\"xA a", (-1), (-1));
      boolean boolean0 = foreignKeyConstraint2.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(2585L);
      boolean boolean2 = foreignKeyConstraint1.isReal();
      assertFalse(boolean2 == boolean0);
      
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean3 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean3 == boolean1);
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint2.getDeleteRuleDescription();
      assertFalse(foreignKeyConstraint2.isNullOnDelete());
      
      foreignKeyConstraint1.getDeleteRule();
      String string1 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      assertEquals((-782), foreignKeyConstraint1.getUpdateRule());
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.161528110879957
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")fine1sk", (-17), (-2654));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ")finest", 3758, 1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, (String) null, 3758, (-1));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      boolean boolean0 = foreignKeyConstraint2.isRestrictDelete();
      assertFalse(foreignKeyConstraint2.isNullOnDelete());
      
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      
      System.setCurrentTimeMillis(0L);
      foreignKeyConstraint0.getParentTable();
      assertEquals((-17), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7826283537028045
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")fine1sk");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")fine1sk", (-18), (-2661));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 3758, 1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, (String) null, 3758, (-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleName();
      boolean boolean0 = foreignKeyConstraint2.isRestrictDelete();
      assertFalse(boolean0);
      
      String string1 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      assertEquals(3758, foreignKeyConstraint1.getUpdateRule());
      assertEquals("R", string1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2072626737639878
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "R", (-2988), (-2654));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ")finest", 3746, 0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      foreignKeyConstraint0.isRestrictDelete();
      assertEquals((-2654), foreignKeyConstraint0.getDeleteRule());
      
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      System.setCurrentTimeMillis(3746);
      boolean boolean2 = foreignKeyConstraint1.isCascadeOnDelete();
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      assertFalse(boolean2 == boolean1);
      assertEquals(3746, foreignKeyConstraint1.getUpdateRule());
      assertTrue(boolean2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.811660286822432
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")fine1sk", (-17), (-2654));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ")finest", 2, (-17));
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "", 173, 2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = foreignKeyConstraint2.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      
      boolean boolean0 = foreignKeyConstraint2.isRestrictDelete();
      assertFalse(boolean0);
      
      String string1 = foreignKeyConstraint2.getDeleteRuleAlias();
      assertEquals("N", string1);
      assertEquals(173, foreignKeyConstraint2.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-5220), 5);
      foreignKeyConstraint0.getChildTable();
      assertEquals(5, foreignKeyConstraint0.getDeleteRule());
      assertEquals((-5220), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")finest", 2582, 2582);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      List<TableColumn> list1 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list1);
      assertEquals(2582, foreignKeyConstraint0.getDeleteRule());
      assertEquals(2582, foreignKeyConstraint0.getUpdateRule());
      assertTrue(list1.contains(tableColumn0));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.42048096046969
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")finest", (-17), (-7));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 2541, (-537));
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "DECIMAL", (-17), (-375));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint2.getDeleteRuleName();
      foreignKeyConstraint2.isRestrictDelete();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((-17));
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      boolean boolean1 = foreignKeyConstraint1.isReal();
      assertTrue(boolean1);
      
      foreignKeyConstraint2.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean2 == boolean0);
      
      foreignKeyConstraint1.getDeleteRuleName();
      int int0 = foreignKeyConstraint2.getDeleteRule();
      assertEquals((-17), foreignKeyConstraint2.getUpdateRule());
      assertEquals((-375), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3838128177308118
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-8), (-8));
      foreignKeyConstraint0.getParentColumns();
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      System.setCurrentTimeMillis(2432L);
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      assertEquals((-8), foreignKeyConstraint0.getDeleteRule());
      assertEquals(0, int0);
      assertEquals((-8), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.331568579658225
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "WjD^?dH1%AKT'1(CI7", 2, 917);
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "2g^Yb$y", 917, 1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "2g^Yb$y", 1, 2);
      boolean boolean0 = foreignKeyConstraint2.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "", 917, 2);
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals((-69), int0);
      
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      assertTrue(boolean1 == boolean0);
      
      ForeignKeyConstraint foreignKeyConstraint4 = new ForeignKeyConstraint((Table) null, "", 2638, 917);
      ForeignKeyConstraint foreignKeyConstraint5 = new ForeignKeyConstraint((Table) null, "", 917, 475);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = foreignKeyConstraint2.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      assertTrue(foreignKeyConstraint2.isNullOnDelete());
      
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean2);
      
      foreignKeyConstraint5.getDeleteRuleAlias();
      assertFalse(foreignKeyConstraint5.isNullOnDelete());
      assertEquals(917, foreignKeyConstraint5.getUpdateRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.174973465704277
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Table table0 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = (-2649);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "Xj]Yq=4EO 6504-U";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Xj]Yq=4EO 6504-U", (-2649), (-782));
      foreignKeyConstraint0.getParentColumns();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Xj]Yq=4EO 6504-U", (-2647), (-38));
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint0.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.328693364017052
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")finest", (-17), (-2654));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ")finest", 3746, 1);
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
      
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "-x", (-980), 3746);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint2.getDeleteRuleName();
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "' to ", (-980), (-1));
      boolean boolean0 = foreignKeyConstraint3.isNullOnDelete();
      int int0 = foreignKeyConstraint2.compareTo(foreignKeyConstraint3);
      assertEquals(6, int0);
      assertFalse(foreignKeyConstraint3.isRestrictDelete());
      
      boolean boolean1 = foreignKeyConstraint2.isRestrictDelete();
      assertFalse(foreignKeyConstraint2.isNullOnDelete());
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-17), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")finest", 1, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getChildColumns();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getName();
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
      assertEquals(1, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2888094008886872
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";bj_K@UJNs6{Vl|0");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\" should contain a file named \"", (-1), (-1145));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "\" should contain a file named \"", (-1195), (-2654));
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, (String) null, (-370), (-486));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint2.isRestrictDelete();
      foreignKeyConstraint2.isNullOnDelete();
      System.setCurrentTimeMillis((-1));
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.367849594026894
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")fine1sk", 556, (-2654));
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "B8yinSsb", (-17), (-17));
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, ")finest", (-17), 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis(556);
      boolean boolean0 = foreignKeyConstraint1.isReal();
      String string0 = foreignKeyConstraint2.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      foreignKeyConstraint2.addParentColumn((TableColumn) null);
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = foreignKeyConstraint2.isRestrictDelete();
      assertTrue(boolean1 == boolean0);
      
      String string1 = foreignKeyConstraint2.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      
      foreignKeyConstraint0.getParentTable();
      assertEquals(556, foreignKeyConstraint0.getUpdateRule());
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0, 1, 110);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "tes";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 1, (-2643));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkParents();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1600466293984755
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")finest", (-17), (-2654));
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 3746, 1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      assertFalse(boolean1 == boolean0);
      
      System.setCurrentTimeMillis(0L);
      int int0 = foreignKeyConstraint1.getUpdateRule();
      assertEquals(3746, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = (-17);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")fSnest", (-17), (-17));
      String string0 = "\" does not exist";
      foreignKeyConstraint0.isImplied();
      String[] stringArray0 = new String[0];
      Config config0 = new Config(stringArray0);
      Connection connection0 = null;
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string1 = "Kzy:[[Kzs=*zC+!5&";
      String string2 = "Null on delete:\n Foreign key to parent set to NULL when parent deleted";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", "\" does not exist", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }
}
