/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:38:12 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.329787809019504
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      XPathLexer xPathLexer1 = new XPathLexer(">rFk");
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(">", token6.getTokenText());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("rFk", token8.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.mod();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('`');
      assertFalse(boolean0);
      
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(18, int0);
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer1.leftParen();
      Token token12 = xPathLexer1.identifier();
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.70144679460923
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("LhWdD4[Df|");
      xPathLexer1.consume(11);
      xPathLexer0.setXPath("LhWdD4[Df|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("LhWdD4", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer1.plus();
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer(": cq{F@");
      Token token1 = xPathLexer2.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("+}6}K)>-=5)hpeN:");
      Token token2 = xPathLexer3.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer2.equals();
      String string0 = token3.toString();
      assertEquals("[ (21) ( )", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (1) (:)", string1);
      
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.plus();
      xPathLexer0.setPreviousToken(token4);
      xPathLexer1.hasMoreChars();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("[ (1) (:)");
      xPathLexer5.leftParen();
      xPathLexer5.setPreviousToken(token4);
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("+}6}K)>-=5)hpeN:");
      Token token6 = xPathLexer6.nextToken();
      assertEquals(5, token6.getTokenType());
      assertEquals("+", token6.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer7 = new XPathLexer("8C]XU");
      xPathLexer2.hasMoreChars();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("f", token7.getTokenText());
      
      Token token8 = xPathLexer4.leftParen();
      assertEquals(1, token8.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7092514900615712
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      Token token0 = xPathLexer0.colon();
      assertEquals("c", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.plus();
      assertEquals("c", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("we", token5.getTokenText());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertNotNull(token6);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0246980369346588
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("Df", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("LhWdD4[Df|");
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.consume();
      Token token8 = xPathLexer1.minus();
      assertEquals("h", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      xPathLexer2.or();
      Token token10 = xPathLexer1.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("WdD4", token10.getTokenText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8427646910136093
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer0.leftParen();
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9285244312513834
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (Q)", string0);
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) (Q)");
      xPathLexer1.or();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("LV", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("(", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer1.and();
      Token token4 = xPathLexer1.equals();
      assertEquals("1", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("@{", token5.getTokenText());
      
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("dam", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer2.hasMoreChars();
      assertFalse(boolean0);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2823531861933315
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (13) (Q)", string0);
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("QR.`LV@{dam!EjE");
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("Q", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(".", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals("R.", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (13) (Q)");
      xPathLexer2.dots();
      Token token6 = xPathLexer2.literal();
      assertEquals(27, token6.getTokenType());
      assertNotNull(token6);
      assertEquals("(13)", token6.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5157704653474173
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      xPathLexer0.or();
      xPathLexer0.consume(136);
      xPathLexer0.setXPath(": cq{F@");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.plus();
      assertEquals(" ", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.leftParen();
      Token token3 = xPathLexer0.pipe();
      String string0 = token3.toString();
      assertEquals("[ (17) (q)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (1) (c)", string1);
      
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.hasMoreChars();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken((Token) null);
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("F", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(16, token5.getTokenType());
      assertEquals("@", token5.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("HcWjqB%e`Z");
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertTrue(boolean0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftParen();
      assertEquals("H", token7.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6754773162108474
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (13) (Q)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.not();
      Token token3 = xPathLexer0.at();
      assertEquals(".", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.consume(0);
      Token token5 = xPathLexer0.equals();
      assertEquals("`", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("LV", token6.getTokenText());
      
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token2);
      assertEquals(23, token2.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("@", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("{dam!EjE", token8.getTokenText());
      
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.061161792970119
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.setXPath("w.(7I");
      XPathLexer xPathLexer1 = new XPathLexer("96*5-IbEk]|Z%9oOZ*`");
      xPathLexer1.at();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer1.plus();
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.or();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8583006779275841
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.endPosition();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("erken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      
      xPathLexer1.or();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.717386419304388
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (13) (Q)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.equals();
      assertEquals("`", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("LV", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      char char0 = xPathLexer0.LA(0);
      assertEquals('{', char0);
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals("da", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token6);
      assertEquals(16, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
      
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      Token token10 = xPathLexer1.identifier();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1533755621090584
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.consume((-5047));
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.313533433544667
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token1 = xPathLexer0.dots();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (13) (Q)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.not();
      assertEquals("R", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(".", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.consume(0);
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("@{", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(15, int0);
      
      xPathLexer0.whitespace();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("a", token6.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('a', char0);
      
      xPathLexer0.notEquals();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals("jE", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.708652179918582
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.identifier();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8177011098284077
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.identifier();
      xPathLexer0.consume(0);
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.endPosition();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.LA(0);
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5288609787480776
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      Token token0 = xPathLexer0.equals();
      Token token1 = xPathLexer0.dots();
      assertEquals(".", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (21) (w)", string0);
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("(", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.or();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("7", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer1.and();
      xPathLexer1.mod();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer1.relationalOperator();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('*');
      assertFalse(boolean0);
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer1.currentPosition();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals(1, token10.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6609644919042312
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("om", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.plus();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.setPreviousToken((Token) null);
      xPathLexer1.hasMoreChars();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setPreviousToken(token1);
      assertEquals("c", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer("|MD5nSr}\"$5E=$J*M3&");
      boolean boolean0 = xPathLexer2.hasMoreChars();
      assertFalse(boolean0);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("MK~Ci:");
      Token token4 = xPathLexer6.minus();
      assertEquals("M", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer2.leftParen();
      assertEquals(1, token5.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5399703942942615
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath(") (");
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-2677));
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7938131631694842
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8078217784886652
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.not();
      boolean boolean0 = xPathLexer0.isIdentifierChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0083890639212134
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      xPathLexer0.number();
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (w)", string0);
      
      Token token1 = xPathLexer0.dots();
      assertEquals(".", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("I", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("2!ggH");
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5880902553697513
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-286));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0797168251011273
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      Token token0 = xPathLexer0.equals();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (4) ()", string0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("(7", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      assertEquals("I", token6.getTokenText());
      
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      char char0 = xPathLexer1.LA(773);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("w.(7I");
      Token token9 = xPathLexer4.slashes();
      assertEquals("w", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.rightParen();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0186719602834637
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("Yq`U\"+OrN");
      xPathLexer1.slashes();
      xPathLexer1.equals();
      xPathLexer1.comma();
      xPathLexer0.consume(2073);
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.or();
      xPathLexer0.identifier();
      xPathLexer2.getXPath();
      xPathLexer0.div();
      xPathLexer1.dollar();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.000304480620607
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("LhWdD4", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("Df", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.not();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("<[wF~EH");
      XPathLexer xPathLexer4 = new XPathLexer("kP7cr6q]H");
      Token token9 = xPathLexer4.not();
      assertEquals("k", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      xPathLexer3.isIdentifierChar('!');
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7026206879981705
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (4) ()", string0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("(7", token4.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.rightParen();
      assertEquals("I", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.032238861391309
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      xPathLexer0.or();
      xPathLexer0.consume(136);
      xPathLexer0.setXPath(": cq{F@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(18, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("{", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      token1.toString();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("F@", token3.getTokenText());
      
      token1.toString();
      xPathLexer0.div();
      String string0 = token1.toString();
      assertEquals("[ (5) ( )", string0);
      
      Token token4 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token4);
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0089404594393248
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"J-*VkN-~0O1&6!");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("J-", token1.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("'@2");
      Token token2 = xPathLexer0.plus();
      assertEquals("'", token2.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(3, int0);
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('t');
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("@", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0784472198948105
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      String string0 = "";
      xPathLexer0.consume((-2422));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.789175997555298
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer2.colon();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7466837001223168
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7253243731129295
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      token2.toString();
      token2.toString();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      String string0 = token2.toString();
      assertEquals("[ (4) ()", string0);
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals(22, token4.getTokenType());
      assertEquals("(7", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("I", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.getXPath();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.mod();
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer1.mod();
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.913443664993926
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cvF[vjL");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.or();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      token1.toString();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("[v", token3.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (32) (v)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("}Q4");
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("}", token4.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("jL", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("[ (32) (v)");
      Token token7 = xPathLexer1.notEquals();
      assertEquals("Q4", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.588706639263613
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cvF[vjL");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.or();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      token1.toString();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("[v", token3.getTokenText());
      
      token1.toString();
      xPathLexer0.div();
      String string0 = token1.toString();
      assertEquals("[ (32) (v)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("j", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("L", token5.getTokenText());
      
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.5725467512629274
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cvF[vjL");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("v", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token2 = xPathLexer0.comma();
      xPathLexer0.or();
      token2.toString();
      token2.toString();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      token2.toString();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("vj", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      token2.toString();
      xPathLexer0.div();
      String string0 = token2.toString();
      assertEquals("[ (32) (F)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("L", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(7, int0);
      
      xPathLexer0.whitespace();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(7);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.notEquals();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (32) (F)");
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("[ ", token8.getTokenText());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals("(", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2626734155771304
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w.(7I");
      Token token0 = xPathLexer0.equals();
      assertEquals("w", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (4) ()", string0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.rightParen();
      assertEquals("I", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4127511375993709
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.not();
      String string0 = "";
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.at();
      xPathLexer0.identifier();
      xPathLexer1.consume((-639));
      xPathLexer1.equals();
      xPathLexer0.doubleColon();
      xPathLexer1.endPosition();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.whitespace();
      xPathLexer2.at();
      // Undeclared exception!
      try { 
        xPathLexer1.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.743636949666424
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      String string0 = null;
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.557657607410613
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.literal();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.consume(119);
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.318484311892777
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";ZXnNyZE");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals(";", token0.getTokenText());
      
      xPathLexer0.setXPath(";ZXnNyZE");
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("Z", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("XnNyZE", token3.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('a');
      assertTrue(boolean0);
      
      xPathLexer0.setXPath(";ZXnNyZE");
      Token token8 = xPathLexer0.equals();
      assertEquals(";", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.currentPosition();
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals("Z", token10.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("n", token11.getTokenText());
      
      char char0 = xPathLexer0.LA(347);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5889203275335304
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.039312838169828
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VkNgXefLZ1Ve8");
      Token token0 = xPathLexer0.equals();
      Token token1 = xPathLexer0.number();
      Token token2 = xPathLexer0.rightBracket();
      String string0 = token2.toString();
      assertEquals("[ (4) (k)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (30) ()", string1);
      
      Token token3 = xPathLexer0.dots();
      assertEquals("N", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("V", token0.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("gXefLZ1Ve8", token4.getTokenText());
      assertNotNull(token4);
      
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.identifier();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer1.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5697173106186995
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4661337075228813
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4567611108723977
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.setXPath("QR.`LV@{dam!EjE");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (13) (Q)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.not();
      assertEquals(".", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("`", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.literal();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3183115270083685
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("LhWdD4", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("[", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.dollar();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.mod();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('`');
      assertFalse(boolean0);
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(20, int0);
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer0.leftParen();
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.9487747129723696
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.at();
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.dots();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (19) (Df)", string0);
      
      String string1 = token3.toString();
      assertEquals("[ (13) (|)", string1);
      
      String string2 = token0.toString();
      assertEquals("[ (15) (LhWdD4)", string2);
      
      String string3 = token1.toString();
      assertEquals("[ (16) ([)", string3);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("LhWdD4", token0.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.identifier();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      xPathLexer0.getXPath();
      xPathLexer0.at();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer2.mod();
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.166186628575104
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LhWdD4[Df|");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.2115841956189661
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.330023414707523
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.1170310062923714
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer0.notEquals();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }
}
