/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:38:04 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.222230919138722
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEmptyLdi!";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-expandEmptyLdi!";
      outputFormat1.setOmitEncoding(true);
      stringArray0[3] = "-xhtlLdi";
      stringArray0[4] = "K=j_";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("-suppressDeclaration");
      assertEquals("-suppressDeclaration", outputFormat0.getIndent());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9844013708380563
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding("\n");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("\n");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewLineAfterNTags(27);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setTrimText(true);
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.dom4j.io.OutputFormat";
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      outputFormat0.getNewLineAfterNTags();
      assertEquals(27, outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.getLineSeparator();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.501516696960544
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("Invalid attribute quote character (");
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Invalid attribute quote character (";
      stringArray0[1] = "Invalid attribute quote character (";
      boolean boolean0 = false;
      // Undeclared exception!
      outputFormat1.setIndentSize(2147483645);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.setNewLineAfterNTags((-1880423499));
      outputFormat1.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('G');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (G)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.887511378356885
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", true);
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("-expandEmptyLdi!");
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", false);
      outputFormat0.setIndent("");
      outputFormat0.setEncoding((String) null);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent("*");
      assertEquals("*", outputFormat0.getIndent());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.850242284432409
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 1183);
      outputFormat0.setIndentSize(10);
      outputFormat0.parseOptions(stringArray0, 1034);
      outputFormat0.setIndentSize(365);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent("ltm)VMrf");
      outputFormat0.setLineSeparator("UTF-8");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = new OutputFormat((String) null, false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("N3Q*Ap{6))T");
      outputFormat1.setEncoding("0R*`#C>6r,s86hZ");
      outputFormat1.isSuppressDeclaration();
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.374007648602506
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEmptyLdi!";
      stringArray0[1] = "-expandEmptyLdi!";
      stringArray0[2] = "-expandEmptyLdi!";
      stringArray0[3] = "-expandEmptyLdi!";
      stringArray0[4] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.528800626331699
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 1183);
      outputFormat0.setIndentSize(0);
      outputFormat0.parseOptions(stringArray0, 1034);
      outputFormat0.setIndentSize(365);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent("ltm)VMrf");
      outputFormat0.setLineSeparator("UTF-8");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = new OutputFormat("-suppressDeclaration", false);
      outputFormat1.setIndent("-xhtmlLdi!");
      outputFormat1.setEncoding("sE9)m|");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertTrue(outputFormat0.isNewlines());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.924886245768638
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(305);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat1.setEncoding("");
      outputFormat1.setTrimText(true);
      String[] stringArray0 = new String[20];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat1.parseOptions(stringArray0, 305);
      outputFormat1.setIndent("");
      String string0 = outputFormat1.getEncoding();
      assertEquals("", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.507254572487286
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(379);
      outputFormat0.setEncoding("?Sh(GKm_t^/UQW1");
      outputFormat0.setIndent(false);
      outputFormat0.isPadText();
      outputFormat0.setNewlines(false);
      outputFormat0.getIndent();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = new OutputFormat("?Sh(GKm_t^/UQW1", true, "-suppressDeclaration");
      outputFormat1.setIndent(true);
      OutputFormat outputFormat2 = new OutputFormat("k", true, "?Sh(GKm_t^/UQW1");
      outputFormat2.isNewlines();
      outputFormat2.isXHTML();
      outputFormat0.isExpandEmptyElements();
      outputFormat1.setSuppressDeclaration(true);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent((String) null);
      outputFormat1.getAttributeQuoteCharacter();
      OutputFormat.createCompactFormat();
      outputFormat3.setIndentSize(379);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "k";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "?Sh(GKm_t^/UQW1";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = "?Sh(GKm_t^/UQW1";
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-53));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -53
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8771691142994396
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(34);
      String[] stringArray0 = new String[3];
      stringArray0[1] = "InvalidCattribute qute character (";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "InvalidCattribute qute character (";
      stringArray1[1] = "-trimText";
      stringArray1[2] = "InvalidCattribute qute character (";
      stringArray1[3] = "-trimText";
      stringArray1[7] = "-trimText";
      stringArray1[5] = "-trimText";
      stringArray1[6] = "-trimText";
      stringArray1[7] = "InvalidCattribute qute character (";
      stringArray1[8] = "-trimText";
      outputFormat0.parseOptions(stringArray1, 1);
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(stringArray0[0]);
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "-encoding";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptyLdi!";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-encoding";
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "-encoding");
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.61952596312107
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterNTags(2928);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(2928);
      outputFormat0.getLineSeparator();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('3');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (3)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1049922791552107
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("-xhtml");
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags((-3194));
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent(false);
      outputFormat0.setLineSeparator("-omitEncoding");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      outputFormat0.getIndent();
      outputFormat0.setSuppressDeclaration(true);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9847882836811908
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("N3Q*Ap{6))T[J");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "N3Q*Ap{6))T[J";
      stringArray0[1] = "N3Q*Ap{6))T[J";
      stringArray0[2] = "N3Q*Ap{6))T[J";
      stringArray0[3] = "N3Q*Ap{6))T[J";
      stringArray0[4] = "N3Q*Ap{6))T[J";
      stringArray0[5] = "N3Q*Ap{6))T[J";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1650));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1650
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.944797816169571
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setEncoding((String) null);
      assertTrue(outputFormat1.isTrimText());
      
      outputFormat0.setEncoding((String) null);
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "!rZ'14B2#}7q!";
      outputFormat1.parseOptions(stringArray0, 1);
      OutputFormat outputFormat2 = new OutputFormat("K8FXIp*%17C;e~c0Ll", true, "o~J");
      assertFalse(outputFormat2.isExpandEmptyElements());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.651760534930837
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("A5XJ*v$Qj");
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^6_7gw~'{!6_=gHM", false, "^6_7gw~'{!6_=gHM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^6_7gw~'{!6_=gHM";
      stringArray0[1] = "^6_7gw~'{!6_=gHM";
      stringArray0[2] = "^6_7gw~'{!6_=gHM";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("^6_7gw~'{!6_=gHM", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("^6_7gw~'{!6_=gHM", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.371791465262859
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(":f{2@F+'9%AH?dLK}H");
      assertEquals(":f{2@F+'9%AH?dLK}H", outputFormat1.getIndent());
      
      outputFormat0.setIndent("");
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat4 = new OutputFormat(":f{2@F+'9%AH?dLK}H", true, "");
      outputFormat4.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = ":f{2@F+'9%AH?dLK}H";
      stringArray0[4] = ":f{2@F+'9%AH?dLK}H";
      stringArray0[5] = "";
      outputFormat2.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      int int0 = outputFormat3.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^6_7gw~'{!6_=gHM";
      stringArray0[1] = "^6_7gw~'{!6_=gHM";
      stringArray0[2] = "^6_7gw~'{!6_=gHM";
      OutputFormat outputFormat0 = new OutputFormat("^6_7gw~'{!6_=gHM", false, "^6_7gw~'{!6_=gHM");
      outputFormat0.setLineSeparator("K<*&}3)a`%1Sy~");
      outputFormat0.getLineSeparator();
      assertEquals("K<*&}3)a`%1Sy~", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.730749559840463
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(1051);
      OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 1051);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("-trimText");
      assertEquals("-trimText", outputFormat1.getIndent());
      
      outputFormat0.setIndent("-xhtlLdi");
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute qute character (");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(true);
      assertTrue(outputFormat1.isTrimText());
      
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEmptySIzLZQ(9s7;;s";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "Invalid attribute qute character (";
      stringArray0[3] = "-expandEmptySIzLZQ(9s7;;s";
      stringArray0[4] = "-expandEmpty-expandEmpty-trimText";
      outputFormat0.parseOptions(stringArray0, 10);
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^6_7gw~'{!6_=gHM", false, "^6_7gw~'{!6_=gHM");
      String[] stringArray0 = new String[3];
      stringArray0[1] = "^6_7gw~'{!6_=gHM";
      stringArray0[2] = "^6_7gw~'{!6_=gHM";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.763393936425376
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("N3Q*Ap{6))T[J");
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat1.isNewLineAfterDeclaration());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtmlLdi!";
      stringArray0[1] = "-expandEmptyLdi!";
      OutputFormat.createPrettyPrint();
      stringArray0[2] = "N3Q*Ap{6))T[J";
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7968218285526025
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", true);
      outputFormat0.setIndentSize(305);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(305);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(true);
      outputFormat0.setIndent(":f{2@F+'9%AH?dLK}H");
      assertEquals(":f{2@F+'9%AH?dLK}H", outputFormat0.getIndent());
      
      outputFormat1.setXHTML(true);
      outputFormat0.setIndent("");
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals("UTF-8", outputFormat2.getEncoding());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^6_7gd~'{!6_W:=gHM", false, "^6_7gd~'{!6_W:=gHM");
      outputFormat0.setIndentSize((-1));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^6_7gd~'{!6_W:=gHM";
      stringArray0[1] = "^6_7gd~'{!6_W:=gHM";
      outputFormat0.parseOptions(stringArray0, 791);
      outputFormat0.parseOptions(stringArray0, 791);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^6_7gd~'{!6_W:=gHM", false, "^6_7gd~'{!6_W:=gHM");
      assertEquals("^6_7gd~'{!6_W:=gHM", outputFormat0.getIndent());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^6_7gd~'{!6_W:=gHM";
      stringArray0[1] = "^6_7gd~'{!6_W:=gHM";
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(false);
      stringArray0[2] = "^6_7gd~'{!6_W:=gHM";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "^6_7gd~'{!6_W:=gHM";
      stringArray1[1] = "^6_7gd~'{!6_W:=gHM";
      stringArray1[2] = "^6_7gd~'{!6_W:=gHM";
      stringArray1[3] = "^6_7gd~'{!6_W:=gHM";
      stringArray1[4] = "^6_7gd~'{!6_W:=gHM";
      stringArray1[5] = "^6_7gd~'{!6_W:=gHM";
      stringArray1[6] = "^6_7gd~'{!6_W:=gHM";
      outputFormat0.parseOptions(stringArray1, 2873);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("^6_7gd~'{!6_W:=gHM", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 1183);
      outputFormat0.setIndentSize(0);
      outputFormat0.setEncoding("UTF-8");
      outputFormat0.setXHTML(true);
      outputFormat0.isTrimText();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isXHTML();
      outputFormat0.getIndent();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(true);
      outputFormat0.isNewlines();
      outputFormat0.parseOptions(stringArray0, 2302);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.09175005280486
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = new OutputFormat("  ", true);
      outputFormat1.setIndent(false);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat1.setNewLineAfterNTags((-190));
      outputFormat0.setLineSeparator("  ");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setLineSeparator("  ");
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat2 = new OutputFormat("d$rqsO(p;ZXnNyZE=?", false);
      outputFormat2.setIndent("-xhtmlLdi!");
      outputFormat2.setEncoding("sE9)m|");
      assertEquals("sE9)m|", outputFormat2.getEncoding());
      
      outputFormat1.isSuppressDeclaration();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "  ";
      stringArray0[1] = "sE9)m|";
      stringArray0[2] = "sE9)m|";
      stringArray0[3] = "sE9)m|";
      stringArray0[4] = "-xhtmlLdi!";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setAttributeQuoteCharacter('\"');
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^6_7gd~'{!6_W:=gHM", false, "^6_7gd~'{!6_W:=gHM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^6_7gd~'{!6_W:=gHM";
      stringArray0[1] = "^6_7gd~'{!6_W:=gHM";
      stringArray0[2] = "^6_7gd~'{!6_W:=gHM";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("^6_7gd~'{!6_W:=gHM", outputFormat0.getIndent());
      assertEquals("^6_7gd~'{!6_W:=gHM", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.625841752594754
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('&');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (&)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", true);
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('P');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (P)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.654864747791147
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(275);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.getIndent();
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(0);
      assertEquals("", outputFormat1.getIndent());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.580196745765607
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("N3Q*Ap{6))T[J");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "N3Q*Ap{6))T[J";
      stringArray0[1] = "N3Q*Ap{6))T[J";
      stringArray0[2] = "N3Q*Ap{6))T[J";
      stringArray0[3] = "N3Q*Ap{6))T[J";
      stringArray0[4] = "N3Q*Ap{6))T[J";
      stringArray0[5] = "N3Q*Ap{6))T[J";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.parseOptions(stringArray0, 338);
      outputFormat1.setExpandEmptyElements(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat2.isSuppressDeclaration());
      
      OutputFormat outputFormat3 = new OutputFormat("4QC2OJLvLwKRvWQ/", false, "N3Q*Ap{6))T[J");
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.parseOptions(stringArray0, 651);
      outputFormat1.isPadText();
      assertTrue(outputFormat1.isSuppressDeclaration());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.3333199440064438
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^6_7gw~'{!6_=gHM", false, "^6_7gw~'{!6_=gHM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^6_7gw~'{!6_=gHM";
      stringArray0[1] = "^6_7gw~'{!6_=gHM";
      outputFormat0.parseOptions(stringArray0, 17);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(true);
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isTrimText());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1790584393453534
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtmlLdi!";
      stringArray0[1] = "-expandEmptyLdi!";
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^6_7gw~'{!6_=gHM", false, "^6_7gw~'{!6_=gHM");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^6_7gw~'{!6_=gHM";
      OutputFormat outputFormat1 = new OutputFormat("^6_7gw~'{!6_=gHM", false, "^6_7gw~'{!6_=gHM");
      outputFormat1.isExpandEmptyElements();
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setNewLineAfterNTags((-601));
      outputFormat1.getLineSeparator();
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat3 = new OutputFormat("^6_7gw~'{!6_=gHM", false);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "^6_7gw~'{!6_=gHM";
      stringArray1[1] = "\n";
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray1, (-601));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -601
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.357838240407283
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("N3Q*Ap{6))T[J");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "N3Q*Ap{6))T[J";
      stringArray0[1] = "N3Q*Ap{6))T[J";
      stringArray0[2] = "N3Q*Ap{6))T[J";
      stringArray0[3] = "N3Q*Ap{6))T[J";
      stringArray0[4] = "N3Q*Ap{6))T[J";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = new OutputFormat("", true);
      outputFormat1.setIndent("\n");
      outputFormat1.setEncoding("N3Q*Ap{6))T[J");
      assertEquals("N3Q*Ap{6))T[J", outputFormat1.getEncoding());
      
      outputFormat0.isSuppressDeclaration();
      assertTrue(outputFormat0.isOmitEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat("-expandEmpty", false, "Vsj+whKn]V Z");
      boolean boolean0 = outputFormat2.isOmitEncoding();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.482408271202476
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("&^O5z<`*e<F)#k6S-V");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      outputFormat0.setOmitEncoding(false);
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-encoding";
      stringArray0[5] = "-encoding";
      stringArray0[6] = "-encoding";
      stringArray0[7] = "-encoding";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-encoding", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.983818251559958
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmptyLdi!";
      stringArray0[1] = "-encoding";
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimText";
      String[] stringArray1 = new String[0];
      OutputFormat outputFormat0 = new OutputFormat("E.At&+ox", true, "-xhtml6[?3,v0MJgM~iy");
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("E.At&+ox", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("-xhtml6[?3,v0MJgM~iy", string0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2812946128925007
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.isNewlines();
      outputFormat0.setIndent(true);
      outputFormat0.setLineSeparator("&q/FIc");
      outputFormat0.setIndentSize(3141);
      outputFormat0.getIndent();
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize((-230));
      outputFormat0.getEncoding();
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isTrimText();
      outputFormat0.setIndent("Tb.1bh_ZOdxR#tu'!");
      outputFormat0.setNewlines(false);
      outputFormat0.getNewLineAfterNTags();
      assertEquals("&q/FIc", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
  }
}
