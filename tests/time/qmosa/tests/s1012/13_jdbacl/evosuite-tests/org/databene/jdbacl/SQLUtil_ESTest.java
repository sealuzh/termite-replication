/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:08:36 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.db.BasicDatabase;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.sql.GenericLanguageFactory;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.store.access.btree.BTreeController;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.engine.Session;
import org.h2.jdbc.JdbcConnection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "kxxA#d'0RfH;[;";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kxxA#d'0RfH;[;");
      SQLUtil.normalize("abr\"ndk4yg$;l@", true);
      String string1 = "drop tablesysconstraints";
      VersionNumber versionNumber0 = VersionNumber.valueOf("abr \"ndk4yg$;l@\"");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("L{:39}cKQw", "drop tablesysconstraints", versionNumber0);
      // Undeclared exception!
      try { 
        defaultDatabase0.getTable("1 f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table '1 f'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      SQLUtil.isDML("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil sQLUtil0 = new SQLUtil();
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFile mockFile0 = new MockFile("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      MockFile mockFile1 = new MockFile(mockFile0, "create materialized view");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object object0 = new Object();
      SQLUtil.renderValue(defaultDBTable0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte)107;
      byteArray0[6] = (byte)26;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("~jHmh", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9952407384211903
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setObject(", false, "setObject(", "insertohniujc");
      SQLUtil.normalize("setObject(", false);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "setObject (";
      stringArray0[1] = "insertohniujc";
      stringArray0[3] = "insertohniujc";
      SQLUtil.mutatesDataOrStructure("setObject (");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("setObject (");
      // Undeclared exception!
      try { 
        SQLUtil.isDML(stringArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0768184191073686
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setObject(", false, "setObject(", "insertohniujc");
      SQLUtil.normalize("setObject(", false);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "setObject (";
      stringArray0[1] = "insertohniujc";
      stringArray0[2] = "insertohniujc";
      stringArray0[3] = "insertohniujc";
      SQLUtil.mutatesDataOrStructure("setObject (");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("insertohniujc");
      SQLUtil.isDML("setObject (");
      DBDataType dBDataType0 = DBDataType.getInstance((-2022097117), "setObject (");
      dBDataType0.isAlpha();
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("~=K9", defaultDBTable0, dBDataType0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("|XAResource.TMONEPHASE");
      dBCatalog0.getTable("|XAResource.TMONEPHASE", false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|XAResource.TMONEPHASE");
      SQLUtil.typeAndName((DBObject) null);
      SQLUtil.renderValue("|XAResource.TMONEPHASE");
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("|XAResource.TMONEPHASE", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.022489733237862
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~jHmh";
      stringArray0[4] = "~jHmh";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "i'", true, stringArray0);
      String string1 = "TX:0MI7?";
      dBUniqueConstraint0.setName("TX:0MI7?");
      SQLUtil.typeAndName(defaultDBTable0);
      SQLUtil.ownerDotComponent(dBUniqueConstraint0);
      SQLUtil.leftJoin("NvaPwCyilxOXBD", stringArray0, "", "~jHmh", stringArray0);
      SQLUtil.isProcedureCall("~jHmh");
      SQLUtil.isProcedureCall("i'");
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      // Undeclared exception!
      try { 
        DBDataType.getInstance("~jHmh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9504353308198517
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLUtil.normalize("LOCKS", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "LOCKS";
      stringArray0[1] = "LOCKS";
      SQLUtil.isProcedureCall("LOCKS");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "LOCKS", false, stringArray0);
      Object object0 = new Object();
      SQLUtil.normalize("yBLx6tk822E,[k%c'", false);
      DBDataType.getInstance(4711, "]i+m~!CMIaD");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      SQLUtil.mutatesStructure("Mwso/~yR16Ouz3");
      System.setCurrentTimeMillis((-672L));
      SQLUtil.isQuery("Mwso/~yR16Ouz3");
      SQLUtil.renderColumnNames(stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        stringBuilder0.insert(4711, charArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4711
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.194859365197599
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("9q");
      SQLUtil.isQuery("9q");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getIndex("exd1]y\"l");
      DBDataType dBDataType0 = DBDataType.getInstance(2147483645, "oPovWr'#Sh");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("oPovWr'#Sh", defaultDBTable0, dBDataType0, integer1, integer1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("oPovWr'#Sh OPOVWR'#SH(3,3) NULL", string0);
      
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop index", false, stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"drop index\" UNIQUE ()", string1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[9];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = "STORE";
      stringArray1[2] = "STORE";
      stringArray0[1] = "H;jZ%";
      stringArray1[4] = "STORE";
      stringArray1[5] = "";
      // Undeclared exception!
      try { 
        SQLUtil.join("trunca", "trunca", stringArray0, "H;jZ%", "STORE", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9032515195712008
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'");
      defaultDBTable0.getReferrers();
      String[] stringArray0 = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "[", false, (String[]) null);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      BTreeController bTreeController0 = new BTreeController();
      bTreeController0.getXactMgr();
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "'";
      stringArray1[1] = "[";
      stringArray1[2] = "'";
      stringArray1[3] = "'";
      stringArray1[4] = "alter index42z19";
      stringArray1[5] = "alter index42z19";
      SQLUtil.renderWhereClause(stringArray1, stringArray1);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName((String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6479879247736346
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.isDML("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[1] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[2] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[3] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[4] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[5] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[6] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[7] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[8] = "CompiledStatementExecutor.executeImpl()";
      SQLUtil.renderColumnListWithTableName("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)", stringArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil.mutatesDataOrStructure("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "create mater";
      String string1 = "alter tabledbyl;v5d-g61e>unw";
      DBConstraint dBConstraint0 = null;
      int int0 = 2598;
      StringBuilder stringBuilder0 = new StringBuilder(2598);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8114889181240077
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("=M/)");
      SQLUtil.isQuery("alter indexnwc`-fmbo");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      Object object0 = new Object();
      String string0 = SQLUtil.renderValue("");
      assertEquals("''", string0);
      
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte)81;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      DBSchema dBSchema0 = new DBSchema("update", (DBCatalog) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized viewdbyl;v5d-g61e>unw", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(")", defaultDBTable0, (-2), "alter materialized viewdbyl;v5d-g61e>unw");
      String string1 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW", string1);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "alter indexnwc`-fmbo";
      stringArray0[2] = "update";
      stringArray0[3] = "update";
      stringArray0[4] = "update";
      stringArray0[5] = ")";
      stringArray0[6] = "''";
      String string2 = SQLUtil.renderColumnListWithTableName("ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW", stringArray0);
      assertEquals("ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW.), ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW.alter indexnwc`-fmbo, ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW.update, ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW.update, ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW.update, ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW.), ALTER MATERIALIZED VIEWDBYL;V5D-G61E>UNW.''", string2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.785759362598575
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      assertTrue(boolean0);
      
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[1] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[2] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[3] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[4] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[5] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[6] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[7] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      stringArray0[8] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.renderColumnListWithTableName("ZE8JW(N8N@", stringArray0);
      assertEquals("ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), ZE8JW(N8N@.INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wUJxg'?I@wKZyD^");
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec1);
      assertEquals("UNIQUE (INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?), INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?))", string1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.478880198962041
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("9q");
      SQLUtil.isQuery("9q");
      SQLUtil.mutatesDataOrStructure("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getIndex("exd1]y\"l");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)81;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      dynamicByteArrayOutputStream0.flush();
      SQLUtil.isDML("");
      SQLUtil.mutatesStructure("\"8WW1SkNhQ-^[(");
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("exd1]y\"l", defaultDBTable0, 65, "\"8WW1SkNhQ-^[(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: \"8WW1SkNhQ-^[(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.543100346718248
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLUtil.isDML("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil sQLUtil0 = new SQLUtil();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil.mutatesDataOrStructure("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "delete2048";
      stringArray0[1] = "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)";
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("delete2048", true, defaultDBTable0, stringArray0);
      defaultDBTable0.removeIndex(dBNonUniqueIndex0);
      List<DBColumn> list0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(list0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8354354351264752
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("NWC`-fmbo");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "NWC`-fmbo";
      stringArray0[1] = "q}&xM$ht";
      DBDataType.getInstance(2482, "q}&xM$ht");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray1 = new String[5];
      stringArray1[0] = "NWC`-fmbo";
      stringArray1[1] = "q}&xM$ht";
      stringArray1[2] = "2";
      stringArray1[3] = "2";
      stringArray1[4] = "2";
      SQLUtil.renderWhereClause(stringArray1, stringArray1);
      String string0 = SQLUtil.renderColumnListWithTableName("q}&xM$ht", stringArray1);
      assertEquals("q}&xM$ht.NWC`-fmbo, q}&xM$ht.q}&xM$ht, q}&xM$ht.2, q}&xM$ht.2, q}&xM$ht.2", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
      assertEquals("SELECT * FROM null WHERE NWC`-fmbo = 'NWC`-fmbo' AND q}&xM$ht = 'q}&xM$ht' AND 2 = null AND 2 = null AND 2 = null", string1);
      
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "alter indexnwc`-fmbo", true, stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      String string2 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"alter indexnwc`-fmbo\" UNIQUE (NWC`-fmbo, q}&xM$ht, 2, 2, 2)", string2);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.095278581238429
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setObject(", false, "setObject(", "insertohniujc");
      SQLUtil.normalize("setObject(", false);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "setObject (";
      stringArray0[1] = "insertohniujc";
      stringArray0[2] = "insertohniujc";
      stringArray0[3] = "insertohniujc";
      SQLUtil.renderColumnListWithTableName("jy|Nx]G@3NkTY}J)f%:", stringArray0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "<3J~#+P[Nza";
      objectArray0[1] = (Object) "a>a-+rb4/'@5y*'[";
      objectArray0[2] = (Object) "a>a-+rb4/'@5y*'[";
      objectArray0[3] = (Object) "insertohniujc";
      SQLUtil.mutatesStructure("-db");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) "insertohniujc";
      objectArray1[1] = (Object) "a>a-+rb4/'@5y*'[";
      objectArray1[2] = (Object) "insertohniujc";
      objectArray1[3] = (Object) "setObject (";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~jHmh";
      stringArray0[4] = "~jHmh";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "encryptionAlgorithm";
      stringArray0[8] = "~jHmh";
      DBConstraint dBConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("=M/)");
      String string0 = "ACTN_";
      boolean boolean0 = false;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ACTN_";
      defaultDBTable0.getReferrers();
      stringArray0[1] = "ACTN_";
      stringArray0[2] = "=M/)";
      GenericLanguageFactory genericLanguageFactory0 = new GenericLanguageFactory();
      GenericLanguageConnectionFactory genericLanguageConnectionFactory0 = new GenericLanguageConnectionFactory();
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2692404415462466
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SQLUtil.isDDL("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil sQLUtil0 = new SQLUtil();
      byte[] byteArray0 = new byte[0];
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil.isDML("call");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9844935290697798
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setObject(", false, "setObject(", "insertohniujc");
      SQLUtil.mutatesDataOrStructure("alter index");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBObject dBObject0 = null;
      SQLUtil.typeAndName((DBObject) null);
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.543100346718248
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SQLUtil.isQuery("SYSCONSTRAINTS");
      SQLUtil.mutatesDataOrStructure("SYSCONSTRAINTS");
      Object object0 = new Object();
      SQLUtil.renderValue("alter indexnwc`-fmbo");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)107;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte)81;
      byteArray0[6] = (byte)81;
      byteArray0[7] = (byte)26;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "{[v)=FUph$xd");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "{[v)=FUph$xd";
      String string0 = "} @utm";
      stringArray0[1] = "} @utm";
      stringArray0[2] = "{[v)=FUph$xd";
      stringArray0[3] = "{[v)=FUph$xd";
      stringArray0[4] = "{[v)=FUph$xd";
      stringArray0[5] = "`Wdy]H*LxG^NRs6Gv";
      SQLUtil.leftJoin("{[v)=FUph$xd", stringArray0, "} @utm", "tf0DXN!Q`!Ddqn[aS", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("ZjMPfNr'paa7~'");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("`Wdy]H*LxG^NRs6Gv", stringBuilder0);
      int int0 = (-4554);
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-4554), (Object) "left join } @utm as tf0DXN!Q`!Ddqn[aS on {[v)=FUph$xd.{[v)=FUph$xd = tf0DXN!Q`!Ddqn[aS.{[v)=FUph$xd and {[v)=FUph$xd.} @utm = tf0DXN!Q`!Ddqn[aS.} @utm and {[v)=FUph$xd.{[v)=FUph$xd = tf0DXN!Q`!Ddqn[aS.{[v)=FUph$xd and {[v)=FUph$xd.{[v)=FUph$xd = tf0DXN!Q`!Ddqn[aS.{[v)=FUph$xd and {[v)=FUph$xd.{[v)=FUph$xd = tf0DXN!Q`!Ddqn[aS.{[v)=FUph$xd and {[v)=FUph$xd.`Wdy]H*LxG^NRs6Gv = tf0DXN!Q`!Ddqn[aS.`Wdy]H*LxG^NRs6Gv");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4554
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SQLUtil.isDDL("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil sQLUtil0 = new SQLUtil();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "|XAResource.TMNOFLAGS";
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0, genericDescriptorList0);
      DBDataType.getInstance(4711, "|XAResource.TMNOFLAGS");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "2";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String[] stringArray1 = new String[2];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.885150328612323
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0, genericDescriptorList0);
      DBDataType.getInstance(4711, "|XAResource.TMNOFLAGS");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "2";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "|XAResource.TMNOFLAGS";
      stringArray1[1] = "2 = '2'";
      SQLUtil.renderColumnListWithTableName("droxp indXxisnot", stringArray1);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("2 = '2'");
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "|XAResource.TMNOFLAGS", false, stringArray1);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("42Z43.U", false, dBUniqueConstraint0);
      defaultDBTable1.removeIndex(dBUniqueIndex0);
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "[>%r+";
      String string1 = "";
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      boolean boolean0 = false;
      SQLUtil.normalize("", false);
      String[] stringArray0 = null;
      String string2 = "caller`vrr}\"fp?nng\\n@d";
      // Undeclared exception!
      try { 
        SQLUtil.join("create unique index", "caller`vrr}\"fp?nng\n@d", (String[]) null, "caller`vrr}\"fp?nng\n@d", "[>%r+", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5656825482084757
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      SQLUtil.mutatesDataOrStructure("~jHmh");
      Object object0 = new Object();
      SQLUtil.renderValue(defaultDBTable0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("~jHmh");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      byte[] byteArray0 = new byte[0];
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, true);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) dynamicByteArrayOutputStream0;
      objectArray0[1] = (Object) defaultDBTable0;
      objectArray0[2] = object0;
      objectArray0[3] = (Object) dynamicByteArrayOutputStream0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("~jHmh", objectArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      assertEquals(21, dynamicByteArrayOutputStream0.getUsed());
      assertEquals(21, dynamicByteArrayOutputStream0.getPosition());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SQLUtil.normalize("|@", true);
      String string0 = "68+Nz(^";
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.171417801900708
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("alter indexnwc`-fmbo");
      assertFalse(boolean0);
      
      boolean boolean1 = SQLUtil.isDML("=M/)");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Boolean boolean2 = SQLUtil.mutatesStructure("execute2");
      assertTrue(boolean2.equals((Object)boolean1));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.776589594264875
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.normalize("-UXaWLW", false);
      DBDataType.getInstance(4711, "W1#`P+ULUF\"iw<#P");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      SQLUtil.mutatesStructure("select");
      System.setCurrentTimeMillis(4711);
      SQLUtil.isQuery("select");
      SQLUtil.mutatesStructure("exec");
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.440832331432847
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SQLUtil.isQuery("alter indexnwc`-fmbo");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      Object object0 = new Object();
      String string0 = SQLUtil.renderValue("");
      assertEquals("''", string0);
      
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte)81;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("call");
      boolean boolean1 = SQLUtil.isDML("create materialized view");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8311399307289697
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("9q");
      SQLUtil.isQuery("9q");
      SQLUtil.mutatesDataOrStructure("u!Vdy~j#");
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)81;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, true);
      mockPrintWriter0.printf("java.lang.Object@12d62eea", objectArray0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("u!Vdy~j#", defaultDBTable0, (byte)81, "exec");
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SQLUtil.removeComments("");
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0, genericDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("5/)y&Of04R<", "", versionNumber0);
      defaultDatabase0.getTable("", false);
      String string0 = " as ";
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("drop materialized viewb+}isi0rbi,h#", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(4711, '1');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("=M/)");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ACTN_";
      defaultDBTable0.getReferrers();
      stringArray0[1] = "ACTN_";
      stringArray0[2] = "=M/)";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "ACTN_", false, stringArray0);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.ownerDotComponent(defaultDBTable0);
      StringBuilder stringBuilder0 = new StringBuilder(3916);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        stringBuilder0.insert(3916, object0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3916
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5910528396085937
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0, genericDescriptorList0);
      DBDataType.getInstance(4711, "|XAResource.TMNOFLAGS");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "2";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "|XAResource.TMNOFLAGS";
      stringArray1[1] = "2 = '2'";
      String string0 = SQLUtil.renderColumnListWithTableName("drop indexisnot", stringArray1);
      assertEquals("drop indexisnot.|XAResource.TMNOFLAGS, drop indexisnot.2 = '2'", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("2 = '2'");
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM 2 = '2' WHERE 2 = '2'", string1);
      
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "|XAResource.TMNOFLAGS", false, stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT |XAResource.TMNOFLAGS ", stringBuilder0.toString());
      
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      String string2 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec1);
      assertEquals("UNIQUE (|XAResource.TMNOFLAGS, 2 = '2')", string2);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~jHmh";
      stringArray0[4] = "~jHmh";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "i'", true, stringArray0);
      dBUniqueConstraint0.setName("TX:0MI7?");
      SQLUtil.typeAndName(defaultDBTable0);
      SQLUtil.ownerDotComponent(dBUniqueConstraint0);
      int int0 = 39;
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-1033));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SQLUtil.normalize("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)", false);
      String string0 = "68+Nz(^";
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        ContextService.getFactory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.apache.derby.iapi.services.context.ContextService", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("%yK,`>~J,bE2`al");
      StringBuilder stringBuilder0 = new StringBuilder("%yK,`>~J,bE2`al");
      SQLUtil.addRequiredCondition("", stringBuilder0);
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("%yK,`>~J,bE2`al", false, "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0008978692206196
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBDataType.getInstance(4711, "|XAResource.TMNOFLAGS");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "2";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("drop index\"8ww1sknhq-^[(");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean1 = SQLUtil.mutatesStructure("|XAResource.TMNOFLAGS");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3221086830269158
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil sQLUtil0 = new SQLUtil();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte) (-87);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("updateTimestamp(");
      boolean boolean1 = SQLUtil.isDML("73o}&Fh?<E)_G$");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4416981322986477
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean1 = SQLUtil.mutatesStructure("NrZ 77t)n");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7174727810340702
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~jHmh";
      stringArray0[7] = "~jHmh";
      DBDataType dBDataType0 = DBDataType.getInstance((-169), "+UI=QV=.M6!6P+8u46Y");
      Integer integer0 = new Integer((-169));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, (Integer) null, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "g2[Kwp3u6.*", false, stringArray0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) null;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setObject(", false, "setObject(", "insertohniujc");
      SQLUtil.normalize("setObject(", false);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "setObject (";
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = 1195;
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("setObject(", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5131939972990156
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SQLUtil.isProcedureCall("|K3.apq'W~o@%N_5?f");
      SQLUtil.mutatesDataOrStructure("FOREIGN KEY ");
      String[] stringArray0 = new String[22];
      stringArray0[0] = "`Y^J$5l#Hps]'}7EG7";
      stringArray0[1] = "FOREIGN KEY ";
      stringArray0[2] = "FOREIGN KEY ";
      stringArray0[3] = "|K3.apq'W~o@%N_5?f";
      stringArray0[4] = "72L";
      stringArray0[5] = "FOREIGN KEY ";
      SQLUtil.innerJoin("FOREIGN KEY ", stringArray0, "org.postgresql.jdbc3.AbstractJdbc3Clob", "org.postgresql.jdbc3.AbstractJdbc3Clob", stringArray0);
      Session session0 = new Session();
      JdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new JdbcConnection(session0, "drop materialized view", "linux");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.engine.Session", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "--";
      SQLUtil.normalize("--", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "--";
      stringArray0[1] = "jdbc:hsqld";
      stringArray0[2] = "--";
      int int0 = 0;
      BasicDatabase basicDatabase0 = new BasicDatabase();
      String string1 = "wHWt7C";
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTransactionCompile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = "ALTER TABLE ";
      stringArray0[8] = null;
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.ALTER TABLE , null.null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ", ", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("m$7SfIZdkG~]JI9", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      dBUniqueIndex0.setTable(dBTable0);
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.ALTER TABLE , null.null", false, dBTable0, stringArray0, dBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , , , ALTER TABLE , ) REFERENCES null(, , , , , , , ALTER TABLE , )", string1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = "ALTER TABLE ";
      stringArray0[8] = null;
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.ALTER TABLE , null.null", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, ", ", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("m$7SfIZdkG~]JI9", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("null.null, null.null, null.null, null.null, null.null, null.null, null.null, null.ALTER TABLE , null.null", false, dBTable0, stringArray0, dBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , , , , ALTER TABLE , ) REFERENCES null(, , , , , , , ALTER TABLE , )", string1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SQLUtil.removeComments("LOCKS");
      Object object0 = new Object();
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6337723332221934
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("9q");
      SQLUtil.isQuery("9q");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getIndex("exd1]y\"l");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)81;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      dynamicByteArrayOutputStream0.flush();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("java.lang.Object@1a3491bb");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter1);
      SQLUtil.isDML("");
      Boolean boolean1 = SQLUtil.mutatesStructure("\"8WW1SkNhQ-^[(");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5432451932622584
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("9q");
      SQLUtil.isQuery("9q");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getIndex("exd1]y\"l");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)81;
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      dynamicByteArrayOutputStream0.flush();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dynamicByteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("indexType");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter1);
      SQLUtil.isDML("&cqK^aWY6ZCu");
      Boolean boolean1 = SQLUtil.mutatesStructure("\"8WW1SkNhQ-^[(");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBConstraint dBConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.4398548143262975
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SQLUtil.isDML("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil sQLUtil0 = new SQLUtil();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      SQLUtil.mutatesDataOrStructure("INSERT INTO INFORMATION_SCHEMA.LOB_DATA(BLOCK, COMPRESSED, DATA) VALUES(?, ?, ?)");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3778722346154972
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'");
      defaultDBTable0.getReferrers();
      String string0 = "[";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "[", false, (String[]) null);
      SQLUtil.constraintName(dBPrimaryKeyConstraint0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter index42z19", false, (String[]) null);
      dBPrimaryKeyConstraint1.isIdentical(dBPrimaryKeyConstraint0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint1, nameSpec0);
      SQLUtil.ownerDotComponent(dBPrimaryKeyConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder(39);
      Object object0 = new Object();
      int int0 = 2;
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-1196), "[");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1196
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~jHmh";
      stringArray0[4] = "~jHmh";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "dk%_9f";
      stringArray0[8] = "~jHmh";
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("~jHmh", true, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.join("j'MS", "j'MS", stringArray0, "", "'", stringArray0);
      assertEquals("j'MS join  as ' on j'MS. = '. and j'MS. = '. and j'MS. = '. and j'MS.~jHmh = '.~jHmh and j'MS.~jHmh = '.~jHmh and j'MS. = '. and j'MS. = '. and j'MS.dk%_9f = '.dk%_9f and j'MS.~jHmh = '.~jHmh", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "~jHmh";
      stringArray0[4] = "~jHmh";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      stringArray0[5] = "";
      stringArray0[6] = "";
      // Undeclared exception!
      try { 
        SQLUtil.join("", "~jHmh", stringArray0, "c?Oq8lxlUoY%_jk]", "alter index", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0, genericDescriptorList0);
      DBDataType.getInstance(4711, "|XAResource.TMNOFLAGS");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = " T";
      String string0 = SQLUtil.join("|XAResource.TMNOFLAGS", "hxPT7eoF]ss", stringArray0, ";gO", "jdbc:hsqldb", stringArray0);
      assertEquals("|XAResource.TMNOFLAGS join ;gO as jdbc:hsqldb on hxPT7eoF]ss. T = jdbc:hsqldb. T", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      String string0 = SQLUtil.substituteMarkers("$Y~HCmJg<WcQzK", "//", (Object) null);
      assertEquals("$Y~HCmJg<WcQzK", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("c013800d-00fb-2644-07ec-000000134f30");
      defaultDBTable0.getPrimaryKeyConstraint();
      String string0 = SQLUtil.substituteMarkers("$Y~HCmJg<WcQzK", "", (Object) null);
      assertEquals("null$nullYnull~nullHnullCnullmnullJnullgnull<nullWnullcnullQnullznullKnull", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.3230994163312477
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("SYSCONSTRAINTS");
      Object object0 = new Object();
      byte[] byteArray0 = new byte[8];
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      SQLUtil.mutatesStructure("alter indexnwc`-fmbo");
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.6999267696231979
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0, genericDescriptorList0);
      DBDataType.getInstance(4711, "|XAResource.TMNOFLAGS");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "2";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderColumnListWithTableName("2", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = "insertohniujc";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("setObject(", false, "setObject(", "insertohniujc");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      String string1 = "$^3soiT7Ef0M|lr)it$";
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTransactionCompile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(genericDescriptorList0, genericDescriptorList0);
      DBDataType.getInstance(4711, "|XAResource.TMNOFLAGS");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[2] = "2";
      stringArray0[7] = "2";
      NameSpec nameSpec0 = NameSpec.NEVER;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.414805121000819
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("9q");
      SQLUtil.isQuery("9q");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getIndex("exd1]y\"l");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("drop index");
      assertTrue(boolean1);
      assertNotNull(boolean1);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("drop tablex^gijp~l[n*drk5{+}c");
      boolean boolean2 = SQLUtil.isDML("drop tablex^gijp~l[n*drk5{+}c");
      assertFalse(boolean2);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SQLUtil.renderColumnNames(stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "(, )";
      stringArray1[1] = "Unknown constraint type: ";
      stringArray1[2] = "Unknown constraint type: ";
      stringArray1[3] = "(, )";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("Unknown constraint type: ", stringArray1, "+f5dC+~_UbF", "&N6y'T^.", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.3791042536364526
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = ", ";
      DBDataType dBDataType0 = DBDataType.getInstance(1490, "select#");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      TableContainer tableContainer0 = new TableContainer(", ");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select#", (DBSchema) null);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" as ", defaultDBTable0, dBDataType0, integer1, integer1);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals(" as  SELECT#(2,2) NULL", string0);
      
      String[] stringArray1 = new String[4];
      stringArray1[0] = ", ";
      stringArray1[1] = "drop indexsysconstraints";
      stringArray1[2] = "drop indexsysconstraints";
      stringArray1[3] = " as  SELECT#(2,2) NULL";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "drop indexsysconstraints", true, stringArray1);
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray1);
      assertEquals(",  = ', ' AND null = 'drop indexsysconstraints'", string1);
      
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string2 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (, , drop indexsysconstraints, drop indexsysconstraints,  as  SELECT#(2,2) NULL)", string2);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Boolean boolean0 = SQLUtil.mutatesStructure("OHNIUjc");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
