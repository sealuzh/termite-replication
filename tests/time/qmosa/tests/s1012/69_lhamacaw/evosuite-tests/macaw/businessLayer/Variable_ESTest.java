/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:07:40 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8302205196959207
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(375);
      ontologyTerm1.setTerm("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.getAlternativeVariable();
      User user1 = new User();
      user1.setEmail("m");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertTrue(arrayList1.isEmpty());
      
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7262362922986
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList1.size());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.703144962976796
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      rawVariable1.setIdentifier(1);
      rawVariable0.setIdentifier(419);
      rawVariable2.getFilePath();
      rawVariable2.setOntologyTerms((ArrayList<OntologyTerm>) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals(419, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.662211813538998
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      rawVariable1.setIdentifier(1);
      rawVariable0.setIdentifier(419);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("3");
      valueLabel0.setValue("f9t%y}aU6><");
      assertFalse(valueLabel0.isDeletedRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1694267446959503
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm1.setOntologyName("X~]{[TuF}");
      ontologyTerm0.setNameSpace((String) null);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.745910136412458
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("eiZ'G", "general.fieldValue.unknown");
      User.detectFieldChanges(user0, user0, user0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.questionNumber = "$VALUES";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("3");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("$VALUES", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("?Lr1jENvO");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setDescription("");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.7158630413578195
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable4);
      assertEquals("Unknown", rawVariable4.getCategory());
      assertEquals(0, rawVariable4.getIdentifier());
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
      assertEquals("Unknown", rawVariable4.getAvailability());
      
      int int0 = derivedVariable1.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9419317154235816
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getLabel();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getAlternativeVariable();
      valueLabel0.setValue("UNABLE_TO_FILTER_SUMMARIES");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("hYumSL4t^rC<J/Cn!");
      derivedVariable0.getCategory();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.8680956109361975
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "X)wxu04";
      rawVariable0.getColumnEnd();
      rawVariable0.isCleaned();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setYear("");
      rawVariable0.getColumnEnd();
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("general.fieldValue.blank");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.setIsNewRecord(false);
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      rawVariable0.clone();
      rawVariable0.getAlias();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getColumnStart();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.927820393237823
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.setYear("variable.cleaningDescription.label");
      derivedVariable0.setColumnEnd("variable.cleaningDescription.label");
      derivedVariable0.setIdentifier(1362);
      derivedVariable0.setForm("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      derivedVariable0.getOntologyTerms();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable1.setCodeBookNumber("U)7=QVXz");
      derivedVariable0.getQuestionNumber();
      derivedVariable0.clone();
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.getAlternativeVariable();
      derivedVariable1.setIsNewRecord(true);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3809111583898823
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlias();
      rawVariable0.getAlias();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getNotes();
      rawVariable0.setAlias("");
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      arrayList0.iterator();
      rawVariable0.setCleaned(true);
      derivedVariable1.setNotes("T=$N3bTL,");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setNameSpace("LHA");
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.isCleaned();
      derivedVariable0.getDisplayName();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      rawVariable0.isCleaned();
      derivedVariable0.getYear();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable1.getYear();
      rawVariable0.setCleaningDescription("9");
      derivedVariable0.getQuestionNumber();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.686026273172041
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, rawVariable0);
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable1.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("-,i4N5d_g4tb4mY", "-,i4N5d_g4tb4mY");
      user0.clone();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.747418205035434
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setName("\",{j");
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.clone();
      Variable variable0 = null;
      derivedVariable0.addSourceVariable((Variable) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) null);
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable0.getCleaningStatus();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.7852027308481446
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.columnStart = "L>ML";
      rawVariable0.setCoded(false);
      rawVariable0.setIdentifier(1);
      rawVariable0.setIdentifier(2463);
      rawVariable0.getFilePath();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_CHECK_VARIABLE_DUPLICATES");
      ontologyTerm0.setNameSpace("zd<5nF*nv");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable1.addOntologyTerms(arrayList0);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.671228445727552
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("");
      rawVariable0.notes = "";
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.clone();
      String string0 = derivedVariable0.getAvailability();
      derivedVariable0.createVariableSummary();
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      String string1 = rawVariable0.getCleaningDescription();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.89425613647302
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("t N&n", "t N&n");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("D*ekIDt>n", "D*ekIDt>n");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user1, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.7158189545067226
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable3);
      assertEquals(0, arrayList0.size());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable2);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable4);
      assertEquals("Unknown", derivedVariable4.getAvailability());
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
      assertEquals("Unknown", derivedVariable4.getCategory());
      assertFalse(derivedVariable4.isNewRecord());
      
      derivedVariable0.getNotes();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.435348070075531
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setColumnEnd("variable.label.label");
      rawVariable0.setIdentifier((-1248));
      valueLabel0.setIdentifier(684);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getNotes();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setForm("");
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setNotes("&F2,6{,y],");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setYear("/k@8&.B[Q)");
      rawVariable0.getYear();
      assertEquals("-1248", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      derivedVariable2.removeSupportingDocument(supportingDocument0);
      derivedVariable2.getQuestionNumber();
      derivedVariable2.addSupportingDocument(supportingDocument1);
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setDocumentCode((String) null);
      supportingDocument0.setDescription((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.columnEnd = null;
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaningStatus("");
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("sWX\"g");
      User user0 = new User();
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("UNABLE_TO_CHECK_VARIABLE_DUPLICATES");
      valueLabel0.setValue("UNABLE_TO_CHECK_VARIABLE_DUPLICATES");
      System.setCurrentTimeMillis((-5197L));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.359747399048139
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      String string0 = "a/ND$Up$-qq@";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      ontologyTerm1.setTerm("9~/@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.containsSourceVariable(rawVariable0);
      arrayList0.add(ontologyTerm1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean1);
      
      rawVariable0.setIsNewRecord(false);
      boolean boolean2 = rawVariable0.isCleaned();
      assertTrue(boolean2 == boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.7034928729589534
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      rawVariable1.setIdentifier(1);
      rawVariable0.setIdentifier(419);
      rawVariable0.setForm("UNABLE_TO_GET_CATEGORY_IDENTIFIER");
      rawVariable1.getFilePath();
      rawVariable2.setOntologyTerms((ArrayList<OntologyTerm>) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User("", "");
      rawVariable0.columnEnd = "";
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable1);
      rawVariable2.hasSameDisplayName(rawVariable1);
      assertTrue(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getFilePath();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm0.setOntologyName("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("?Lr1jENvO");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setTerm("");
      ontologyTerm0.setDescription("");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      User user0 = new User("general.fieldValue.unknown", "eiZ'G");
      User user1 = new User("eiZ'G", "<d>*0ID`%UJ\",");
      User.detectFieldChanges(user0, user0, user1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Y^4nsTX5]Xm;wD");
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("Y^4nsTX5]Xm;wD", rawVariable0.getColumnEnd());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("eiZ'G", "general.fieldValue.unknown");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("y~*m");
      valueLabel0.setValue("general.fieldValue.unknown");
      rawVariable0.getName();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4869548922107656
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      User user0 = new User();
      User.checkValidUserIDField("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("");
      ValueLabel valueLabel0 = new ValueLabel();
      Variable.validateFields(rawVariable0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setValue("");
      valueLabel2.setValue("");
      System.setCurrentTimeMillis((-1545L));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("?Lr1jENvO");
      User user0 = new User();
      ontologyTerm0.setTerm("?Lr1jENvO");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable1.getForm();
      derivedVariable1.setQuestionNumber("cgCEf<hOA");
      assertEquals("cgCEf<hOA", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel0.setValue("variable.saveChanges.valueChanged");
      valueLabel1.setValue("");
      System.setCurrentTimeMillis((-1L));
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("user.affiliation.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.removeValueLabel(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setMissingValue(false);
      // Undeclared exception!
      try { 
        valueLabel0.hasSameDisplayName((ValueLabel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.584549889021196
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable2.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.764233190334541
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "";
      rawVariable0.setCoded(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = "j|^4Wrzf4SgLEL8Dw_";
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("");
      supportingDocument0.setFileName("");
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setAvailability("");
      rawVariable0.setColumnEnd("");
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-57));
      ontologyTerm0.clone();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4351304718858917
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm1.setOntologyName("4Tsob@l*>Lc");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setNameSpace("4Tsob@l*>Lc");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnStart("4Tsob@l*>Lc");
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      assertEquals("4Tsob@l*>Lc", rawVariable1.getColumnStart());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5863932069935465
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.setAlternativeVariable(rawVariable0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      User user0 = new User();
      ontologyTerm0.setTerm("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm0.setOntologyName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      String string0 = "a/ND$Up$-qq@";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("9~/@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("9~/@");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.574729047527649
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setTerm("");
      User user0 = new User();
      ontologyTerm0.setTerm("a/ND$Up$-qq@");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm0.setOntologyName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName((String) null);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("+L\"?OG,EWoUHFO");
      ontologyTerm1.setNameSpace("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6930121983106288
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      supportingDocument0.setDescription("");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCoded(true);
      String string0 = ":_Xkjz$GEX";
      derivedVariable0.columnStart = ":_Xkjz$GEX";
      derivedVariable0.getColumnEnd();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = null;
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.getForm();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setColumnStart("=5~<>SJB1N@e)T");
      // Undeclared exception!
      try { 
        arrayList0.subList(0, (-2448));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2448)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.455005600113097
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("9~/@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ontologyTerm1.setOntologyName("a/ND$Up$-qq@");
      ontologyTerm1.setNameSpace("''A;&tG");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable1.getOntologyTerms();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.741881032063148
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      rawVariable1.setIdentifier(1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      rawVariable0.setIdentifier(419);
      rawVariable1.getFilePath();
      rawVariable2.setOntologyTerms((ArrayList<OntologyTerm>) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument2);
      boolean boolean0 = rawVariable2.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.842632659445204
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable3);
      assertTrue(arrayList0.isEmpty());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.hasSameDisplayName(derivedVariable0);
      String string0 = derivedVariable2.getCleaningStatus();
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7490545369607124
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("general.fieldValue.unknown", "eiZ'G");
      User user1 = new User("NON_EXISTENT_VARIABLE_ASSOCIATION", "<d>*0ID`%UJ\",");
      User.detectFieldChanges(user0, user0, user1);
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.setNotes("");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertTrue(arrayList1.isEmpty());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.8851218920964308
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability(",&h'pH__ajOI@mL");
      derivedVariable0.getAlias();
      derivedVariable0.setNotes("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.getCleaningDescription();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.842430978772935
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable2);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable2);
      assertTrue(arrayList0.isEmpty());
      
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.getCleaningDescription();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.483883726843824
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, rawVariable3);
      rawVariable0.columnStart = null;
      RawVariable rawVariable4 = new RawVariable();
      rawVariable3.getAlternativeVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.7445572890206655
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      rawVariable1.setIdentifier(1);
      rawVariable0.setIdentifier(419);
      rawVariable1.getFilePath();
      rawVariable0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument2);
      rawVariable2.containsSupportingDocument(supportingDocument2);
      rawVariable1.getAlias();
      assertTrue(rawVariable0.isCoded());
      assertEquals("419", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.9237391052282304
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setCodeBookNumber("2B!+$#7U%Vc=< |<6");
      rawVariable0.getValueLabels();
      rawVariable0.isCoded();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.form = "}Ad=B<jd$T!A;$";
      rawVariable0.setNotes("LK`2F/0");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setIsNewRecord(false);
      rawVariable1.addSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("2B!+$#7U%Vc=< |<6");
      rawVariable1.setAlternativeVariable(rawVariable0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable0.getAlias();
      rawVariable1.getCleaningStatus();
      rawVariable1.setCleaned(true);
      rawVariable0.setColumnStart("");
      rawVariable0.isNewRecord();
      assertEquals("2B!+$#7U%Vc=< |<6", rawVariable0.getCodeBookNumber());
      
      rawVariable1.getSupportingDocuments();
      rawVariable1.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "variable.availability.label";
      rawVariable0.getColumnStart();
      assertEquals("variable.availability.label", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("?Lr1jENvO");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("aGd12/vh");
      rawVariable0.setIdentifier(1024);
      rawVariable0.setIdentifier(1024);
      rawVariable0.getFilePath();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("?Lr1jENvO");
      supportingDocument0.setTitle("");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals(1024, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.663437102202474
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.spliterator();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.form = "user.county.label";
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setYear("");
      derivedVariable0.getAlias();
      User user0 = new User("macaw.businessLayer.Variable", "user.county.label");
      user0.setPhone("");
      user0.setCounty("c7UYU][@]D7O");
      user0.setIdentifier(2553);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("user.county.label", derivedVariable0.getForm());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.688514447186191
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setName("&(\"?M^\"v}Ew");
      assertEquals("&(\"?M^\"v}Ew", derivedVariable0.getName());
      
      DerivedVariable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("variable.year.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setIsNewRecord(false);
      ontologyTerm1.setOntologyName("7?UF");
      ontologyTerm1.setNameSpace("7?UF");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getAvailability();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.7474182050354337
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      User user0 = new User();
      ontologyTerm0.setTerm("a/ND$Up$-qq@");
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setLabel("a/ND$Up$-qq@");
      rawVariable0.getAlternativeVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.clone();
      System.setCurrentTimeMillis(1890L);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "macaw.businessLayer.ValueLabel$EditingOperationType";
      ontologyTerm0.setDescription("macaw.businessLayer.ValueLabel$EditingOperationType");
      derivedVariable0.setYear("macaw.businessLayer.ValueLabel$EditingOperationType");
      ontologyTerm0.setTerm("macaw.businessLayer.ValueLabel$EditingOperationType");
      ontologyTerm0.setTerm("a/ND$Up$-qq@");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setOntologyName(">*~Ve6{_jL");
      ontologyTerm1.setNameSpace("");
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.314371970281624
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("9~/@");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("9GAp)(sXG?4rx@`e", "");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm1.setOntologyName("a/ND$Up$-qq@");
      ontologyTerm1.setNameSpace("''A;&tG");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("4Tsob@l*>Lc");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) ontologyTerm0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "4Tsob@l*>Lc";
      objectArray0[4] = (Object) ontologyTerm1;
      objectArray0[5] = (Object) arrayList1;
      objectArray0[6] = (Object) ontologyTerm0;
      objectArray0[7] = (Object) ontologyTerm0;
      objectArray0[8] = (Object) arrayList0;
      arrayList1.toArray(objectArray0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ontologyTerm1.setOntologyName("X~]{[TuF}");
      ontologyTerm0.setNameSpace("4Tsob@l*>Lc");
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getForm();
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.6321363424300435
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.spliterator();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.form = "user.county.label";
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.setYear("variable.notes.label");
      derivedVariable0.getAlias();
      User user0 = new User("macaw.businessLayer.Variable", "user.county.label");
      user0.setCounty("c7UYU][@]D7O");
      user0.setIdentifier(2553);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("variable.notes.label", derivedVariable0.getYear());
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.195641802808069
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2222);
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNameSpace("-LHA");
      Variable.validateFields(rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setCodeBookNumber("?");
      rawVariable0.getAvailability();
      rawVariable0.setLabel("Unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("?");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.setAlias("");
      arrayList0.add(supportingDocument1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.isCoded();
      rawVariable0.getFilePath();
      assertEquals("?", rawVariable0.getCodeBookNumber());
      
      derivedVariable0.getForm();
      derivedVariable0.setAlias("");
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.setCodeBookNumber((String) null);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setNameSpace("w3eK");
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.setAlias("TADu>G[@3");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getValueLabels();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("TADu>G[@3", derivedVariable1.getAlias());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.041959926755759
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.setCodeBookNumber("UNABLE_TO_COMMIT_CHANGES");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable1.getAlternativeVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      rawVariable1.hasSameDisplayName(rawVariable0);
      assertEquals("UNABLE_TO_COMMIT_CHANGES", rawVariable1.getCodeBookNumber());
      
      rawVariable0.getNotes();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setEmail("rLkI lr(}JGDMW");
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = unaryOperator0.apply(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setMissingValue(false);
      arrayList0.replaceAll(unaryOperator0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      
      derivedVariable0.getValueLabels();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addValueLabel(valueLabel1);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "general.fieldValue.unknown";
      User user0 = new User("eiZ'G", "general.fieldValue.unknown");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.spliterator();
      arrayList0.remove((Object) rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("+g]#,%)GbC4z#]/^");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("macaw.businessLayer.ValueLabel$EditingOperationType");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ontologyTerm1.setOntologyName("+g]#,%)GbC4z#]/^");
      ontologyTerm2.setNameSpace("macaw.businessLayer.ValueLabel$EditingOperationType");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm3 = null;
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
