/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:40:35 GMT 2019
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.controller.actions.generated.instance.JiBX_bindingFactory;
import freemind.modes.browsemode.BrowseController;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.mindmapmode.MindMapController;
import freemind.modes.mindmapmode.actions.EdgeWidthAction;
import freemind.modes.schememode.SchemeMode;
import freemind.view.mindmapview.MapView;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyListener;
import java.awt.event.MouseWheelEvent;
import java.beans.VetoableChangeListenerProxy;
import java.sql.Timestamp;
import java.util.Date;
import java.util.TimeZone;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JTextPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.AncestorListener;
import javax.swing.event.MenuKeyEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.LabelView;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.PlainDocument;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StringContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import org.apache.batik.svggen.DefaultExtensionHandler;
import org.apache.batik.svggen.DefaultImageHandler;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.xalan.processor.StylesheetHandler;
import org.apache.xalan.processor.TransformerFactoryImpl;
import org.apache.xalan.processor.XSLTElementProcessor;
import org.apache.xalan.processor.XSLTSchema;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xml.serializer.EmptySerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.jibx.runtime.IBindingFactory;
import org.jibx.runtime.impl.UnmarshallingContext;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.JMapViewer;
import org.openstreetmap.gui.jmapviewer.MemoryTileCache;
import plugins.collaboration.database.DatabaseConnectionHook;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3499317204919192
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JYearChooser jYearChooser0 = new JYearChooser();
      Color color0 = MapView.standardNodeTextColor;
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      EmptySerializer emptySerializer0 = new EmptySerializer();
      emptySerializer0.getOutputFormat();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      jDayChooser0.setMaxDayCharacters(0);
      jDayChooser0.setMaxDayCharacters(10);
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(0, int0);
      
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.isWeekOfYearVisible();
      assertFalse(jDayChooser1.isDecorationBordersVisible());
      
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.isDecorationBordersVisible();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.362136879578068
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getToolkit();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setMaxSelectableDate(date0);
      MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar)jDayChooser0.calendar;
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
      
      System.setCurrentTimeMillis(9L);
      jDayChooser0.getLocale();
      jDayChooser0.setMaxDayCharacters(988);
      jDayChooser0.setMaxDayCharacters(1650);
      jDayChooser0.getMaxDayCharacters();
      boolean boolean0 = jDayChooser0.isWeekOfYearVisible();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(boolean0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4546104003964153
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getName();
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.value = 0;
      jDayChooser0.setMonth(14);
      jDayChooser0.setYearChooser(jYearChooser0);
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.getWeekdayForeground();
      Color color0 = MapView.standardNodeTextColor;
      Color color1 = jDayChooser0.getSundayForeground();
      assertEquals(0, color1.getGreen());
      
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.getLocale();
      jDayChooser0.getLocale();
      jDayChooser0.setYear(0);
      Timestamp timestamp0 = new Timestamp(0);
      jDayChooser0.setSelectableDateRange(timestamp0, timestamp0);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.getDecorationBackgroundColor();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jDayChooser_DecoratorButton0.addMouseListener(defaultCaret0);
      assertEquals(14, jDayChooser0.getDay());
      
      boolean boolean0 = jDayChooser1.isDecorationBackgroundVisible();
      assertTrue(boolean0);
      assertFalse(jDayChooser1.isDecorationBordersVisible());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2056426439518515
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDebugGraphicsOptions();
      Color color0 = jDayChooser0.getWeekdayForeground();
      Dimension dimension0 = jDayChooser0.getMaximumSize();
      dimension0.clone();
      jDayChooser0.setYear(164);
      jDayChooser0.updateUI();
      PlainDocument plainDocument0 = new PlainDocument();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, Integer.MAX_VALUE, Integer.MAX_VALUE, 0, (-2532));
      StringContent stringContent0 = new StringContent(0);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      defaultStyledDocument0.getStartPosition();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.getInputAttributes();
      jDayChooser0.setWeekdayForeground(color0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(29);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3761779386919226
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setWeekOfYearVisible(true);
      Color color0 = jDayChooser0.getSundayForeground();
      MemoryTileCache memoryTileCache0 = new MemoryTileCache();
      JMapViewer jMapViewer0 = new JMapViewer(memoryTileCache0, 58);
      TransformerFactoryImpl transformerFactoryImpl0 = new TransformerFactoryImpl();
      Color.getColor("/>_\"7%alT$u+jxw(~", color0);
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.getDayPanel();
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      jDayChooser0.setSundayForeground(color0);
      assertEquals(164, color0.getRed());
      
      jDayChooser0.setMaxDayCharacters(3526);
      Color color1 = jDayChooser0.getWeekdayForeground();
      assertEquals((-16754012), color1.getRGB());
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)36;
      byteArray0[5] = (byte)23;
      byteArray0[6] = (byte)23;
      byteArray0[7] = (byte)26;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      MenuSelectionManager.defaultManager();
      jDayChooser0.drawDays();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2691675918969167
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getHeight();
      jDayChooser0.getSelectedDay();
      jDayChooser0.getHierarchyListeners();
      jDayChooser0.setDay((-1427));
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getDaysInMonth();
      assertEquals(1, jDayChooser0.getDay());
      
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      StringContent stringContent0 = new StringContent(28);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      Style style0 = defaultStyledDocument0.getLogicalStyle((-1096));
      Style style1 = defaultStyledDocument0.addStyle("9l4jo|l(W!)aA=hM`", style0);
      jTextPane0.setLogicalStyle(style1);
      MutableAttributeSet mutableAttributeSet0 = jTextPane0.getInputAttributes();
      styleContext0.getBackground(mutableAttributeSet0);
      JDayChooser jDayChooser1 = new JDayChooser();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument1.getBidiRootElement();
      LabelView labelView0 = new LabelView(element0);
      Color color0 = labelView0.getForeground();
      jDayChooser1.setWeekdayForeground(color0);
      jDayChooser1.getWeekdayForeground();
      MockDate mockDate0 = new MockDate((-1174), (-1081), (-1081));
      jDayChooser1.setMinSelectableDate(mockDate0);
      assertTrue(jDayChooser1.isDayBordersVisible());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3964604882170977
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getInputVerifier();
      jDayChooser0.setInputVerifier((InputVerifier) null);
      jDayChooser0.setMaxDayCharacters(0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.getMaxSelectableDate();
      JPanel jPanel0 = jDayChooser0.getDayPanel();
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      jDayChooser0.setSundayForeground(systemColor0);
      jDayChooser0.setMaxDayCharacters(3526);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jPanel0, 0, 2834L, 0, 0, '`', (MenuElement[]) null, (MenuSelectionManager) null);
      menuKeyEvent0.setSource((Object) null);
      jDayChooser0.keyTyped(menuKeyEvent0);
      jDayChooser0.getMaxDayCharacters();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser0.initDecorations();
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.keyReleased(menuKeyEvent0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.222572517559133
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDebugGraphicsOptions();
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.getMaximumSize();
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.setMaxDayCharacters((-508));
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.addFocusListener((FocusListener) null);
      jDayChooser_DecoratorButton0.setFocusCycleRoot(true);
      jDayChooser_DecoratorButton0.firePropertyChange("Metal", (double) (-508), 0.0);
      jDayChooser_DecoratorButton0.setVisible(true);
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser1.getWeekdayForeground();
      StringContent stringContent0 = new StringContent(0);
      DefaultStyledDocument defaultStyledDocument0 = null;
      try {
        defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, (StyleContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.240235895383868
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      SystemColor systemColor0 = SystemColor.windowBorder;
      jDayChooser0.setForeground(systemColor0);
      jDayChooser0.setSundayForeground(systemColor0);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      
      jDayChooser0.setWeekOfYearVisible(false);
      boolean boolean0 = jDayChooser0.isDecorationBackgroundVisible();
      assertTrue(boolean0);
      
      jDayChooser0.getMaxSelectableDate();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1699419390281305
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      boolean boolean0 = false;
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.getSundayForeground();
      MemoryTileCache memoryTileCache0 = new MemoryTileCache();
      int int0 = 58;
      JMapViewer jMapViewer0 = new JMapViewer(memoryTileCache0, 58);
      int int1 = 1088;
      TransformerFactoryImpl transformerFactoryImpl0 = new TransformerFactoryImpl();
      StylesheetHandler stylesheetHandler0 = new StylesheetHandler(transformerFactoryImpl0);
      XSLTSchema xSLTSchema0 = stylesheetHandler0.getSchema();
      XSLTElementProcessor xSLTElementProcessor0 = xSLTSchema0.getElementProcessor();
      SVGGraphics2D sVGGraphics2D0 = null;
      try {
        sVGGraphics2D0 = new SVGGraphics2D(xSLTElementProcessor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ElemTemplateElement error: Function not supported!
         //
         verifyException("org.apache.xalan.templates.ElemTemplateElement", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.164766018437543
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getHeight();
      jDayChooser0.getSelectedDay();
      jDayChooser0.setDay((-1421));
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getDaysInMonth();
      SystemColor systemColor0 = SystemColor.activeCaptionBorder;
      jDayChooser0.setForeground(systemColor0);
      BrowseMode browseMode0 = new BrowseMode();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(browseMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      JComponent.getDefaultLocale();
      jMonthChooser0.getName();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      // Undeclared exception!
      try { 
        jDayChooser0.getBaseline((-2754), (-2754));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width and height must be >= 0
         //
         verifyException("java.awt.Component", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1337055042791775
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.invalidate();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jDayChooser0, (-2827), (-2827), 2468, 2468, (-2827), 0, true, (-585), 0, 16384);
      jDayChooser0.getPopupLocation(mouseWheelEvent0);
      jDayChooser0.init();
      jDayChooser0.getMinSelectableDate();
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.324438362931036
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = jDayChooser0.defaultMaxSelectableDate;
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.isPaintingForPrint();
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.drawWeeks();
      jDayChooser0.focusLost((FocusEvent) null);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.getAlignmentX();
      jDayChooser0.setDay(8211);
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.setYear(8211);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      jDayChooser0.removeHierarchyListener((HierarchyListener) null);
      jDayChooser0.focusGained((FocusEvent) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0";
      stringArray0[1] = "day";
      stringArray0[2] = "day";
      stringArray0[3] = "day";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2255398652885714
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(442);
      Color color0 = jDayChooser0.getSundayForeground();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getInputAttributes();
      Color color1 = Color.lightGray;
      jDayChooser0.setWeekdayForeground(color0);
      jDayChooser0.getWeekdayForeground();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(29);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.324438362931036
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = jDayChooser0.defaultMaxSelectableDate;
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.isPaintingForPrint();
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.drawWeeks();
      jDayChooser0.focusLost((FocusEvent) null);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.getAlignmentX();
      jDayChooser0.setDay(8211);
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.setYear(8211);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      jDayChooser0.focusGained((FocusEvent) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "day";
      stringArray0[1] = "hHv_";
      stringArray0[2] = "0";
      stringArray0[3] = "day";
      stringArray0[4] = "ALTER";
      stringArray0[5] = "ALTER";
      stringArray0[6] = "ALTER";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.1338975621224803
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setFocus();
      jDayChooser0.updateUI();
      jDayChooser0.init();
      StyleContext styleContext0 = new StyleContext();
      StringContent stringContent0 = new StringContent(0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Class<VetoableChangeListenerProxy> class0 = VetoableChangeListenerProxy.class;
      defaultStyledDocument0.getListeners(class0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jDayChooser0.setMonth(20);
      jDayChooser0.initDecorations();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      String string0 = "freemind.modes.mindmapmode.actions.xml.ActionFactory";
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser0, 22, "plugins.map.FreeMindMapController$SetHomeAction", 19);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      actionEvent0.setSource(defaultTableModel0);
      actionEvent0.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.table.DefaultTableModel cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4008414420297024
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setWeekOfYearVisible(true);
      Color color0 = jDayChooser0.getSundayForeground();
      MemoryTileCache memoryTileCache0 = new MemoryTileCache();
      JMapViewer jMapViewer0 = new JMapViewer(memoryTileCache0, 58);
      TransformerFactoryImpl transformerFactoryImpl0 = new TransformerFactoryImpl();
      Color.getColor("/>_\"7%alT$u+jxw(~", color0);
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.getDayPanel();
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      jDayChooser0.setSundayForeground(color0);
      jDayChooser0.setMaxDayCharacters(3526);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      defaultStyledDocument0.getStartPosition();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.getInputAttributes();
      Color color1 = Color.lightGray;
      jDayChooser0.setWeekdayForeground(color0);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.setDay(3526);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2056114235461948
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setFocus();
      jDayChooser0.updateUI();
      jDayChooser0.init();
      StyleContext styleContext0 = new StyleContext();
      int int0 = 0;
      StringContent stringContent0 = new StringContent(0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      jDayChooser0.setMaxDayCharacters(0);
      jDayChooser0.getWeekdayForeground();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "day";
      stringArray0[1] = "day";
      stringArray0[2] = "day";
      stringArray0[3] = "day";
      stringArray0[4] = "day";
      stringArray0[5] = "day";
      stringArray0[6] = "day";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.376133781270716
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setWeekOfYearVisible(true);
      Color color0 = jDayChooser0.getSundayForeground();
      MemoryTileCache memoryTileCache0 = new MemoryTileCache();
      JMapViewer jMapViewer0 = new JMapViewer(memoryTileCache0, 58);
      TransformerFactoryImpl transformerFactoryImpl0 = new TransformerFactoryImpl();
      Color.getColor("/>_\"7%alT$u+jxw(~", color0);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.getDayPanel();
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      jDayChooser0.setSundayForeground(color0);
      jDayChooser0.setMaxDayCharacters(3526);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "day";
      stringArray0[1] = "org/apache/xalan/res/XSLTInfo.properties";
      stringArray0[2] = "http://xml.apache.org/xalan/properties/source-location";
      stringArray0[3] = "org/apache/xalan/res/XSLTInfo.properties";
      stringArray0[4] = "http://xml.apache.org/xalan/features/incremental";
      stringArray0[0] = "org/apache/xalan/res/XSLTInfo.properties";
      stringArray0[4] = "org/apache/xalan/res/XSLTInfo.properties";
      stringArray0[7] = "http://xml.apache.org/xalan/features/incremental";
      stringArray0[8] = "day";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2358253639551506
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      
      jDayChooser0.setEnabled(false);
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      DocumentImpl documentImpl0 = new DocumentImpl();
      DefaultImageHandler defaultImageHandler0 = new DefaultImageHandler();
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      SVGGeneratorContext sVGGeneratorContext0 = SVGGraphics2D.buildSVGGeneratorContext(documentImpl0, defaultImageHandler0, defaultExtensionHandler0);
      SVGGraphics2D sVGGraphics2D0 = new SVGGraphics2D(sVGGeneratorContext0, true);
      jDayChooser_DecoratorButton0.paint(sVGGraphics2D0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.2055218749828893
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getName();
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.value = 0;
      jDayChooser0.setMonth(14);
      jDayChooser0.setYearChooser(jYearChooser0);
      jYearChooser0.repaint((long) 0);
      jDayChooser0.setDecorationBordersVisible(false);
      int int0 = (-1502);
      long long0 = (-1949L);
      int int1 = 0;
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      jYearChooser0.removeAncestorListener(ancestorListener0);
      int int2 = 669;
      char char0 = 'L';
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDecorationBackgroundColor();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2308216109542167
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getInputMethodListeners();
      jDayChooser0.isValidateRoot();
      jDayChooser0.setMaxDayCharacters(92);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.addFocusListener((FocusListener) null);
      jDayChooser_DecoratorButton0.setFocusCycleRoot(true);
      jDayChooser_DecoratorButton0.firePropertyChange("day", 1.0, (-766.9851768324241));
      jDayChooser_DecoratorButton0.setVisible(false);
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser0.getWeekdayForeground();
      StringContent stringContent0 = new StringContent(1081);
      DefaultStyledDocument defaultStyledDocument0 = null;
      try {
        defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, (StyleContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1247934888088933
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = null;
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      int int0 = (-236);
      String string0 = "";
      double double0 = 0.0;
      SchemeMode schemeMode0 = new SchemeMode();
      schemeMode0.getController();
      DatabaseConnectionHook databaseConnectionHook0 = new DatabaseConnectionHook();
      databaseConnectionHook0.getMindMapController();
      EdgeWidthAction edgeWidthAction0 = null;
      try {
        edgeWidthAction0 = new EdgeWidthAction((MindMapController) null, (-236));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.mindmapmode.actions.NodeGeneralAction", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.1962175022002226
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = jDayChooser0.defaultMaxSelectableDate;
      jDayChooser0.setSelectableDateRange(date0, date0);
      ActionEvent actionEvent0 = new ActionEvent(date0, (-3786), (String) null, (-3786));
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      actionEvent0.setSource((Object) null);
      actionEvent0.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2054607286107037
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getHeight();
      jDayChooser0.getSelectedDay();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.addFocusListener((FocusListener) null);
      jDayChooser_DecoratorButton0.firePropertyChange("28", (double) 92, (-766.9851768324241));
      jDayChooser_DecoratorButton0.isFocusable();
      jDayChooser0.getWeekdayForeground();
      StringContent stringContent0 = new StringContent(0);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.getInputAttributes();
      StyleContext styleContext1 = new StyleContext();
      Element element0 = defaultStyledDocument0.getCharacterElement(92);
      AttributeSet attributeSet0 = SimpleAttributeSet.EMPTY;
      AbstractDocument.BranchElement abstractDocument_BranchElement0 = null;
      try {
        abstractDocument_BranchElement0 = defaultStyledDocument0.new BranchElement(element0, attributeSet0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Illegal cast to MutableAttributeSet
         //
         verifyException("javax.swing.text.AbstractDocument$AbstractElement", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getUIClassID();
      jDayChooser0.setAlwaysFireDayProperty(false);
      TimeZone timeZone0 = TimeZone.getTimeZone("7.AIm^!OgPMk<A^");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PanelUI";
      stringArray0[1] = "o2(kY";
      stringArray0[2] = "day";
      stringArray0[3] = "]";
      stringArray0[4] = "7.AIm^!OgPMk<A^";
      String[] stringArray1 = new String[0];
      IBindingFactory iBindingFactory0 = JiBX_bindingFactory.getInstance();
      UnmarshallingContext unmarshallingContext0 = null;
      try {
        unmarshallingContext0 = new UnmarshallingContext((-3339), stringArray0, stringArray0, stringArray1, stringArray0, iBindingFactory0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jibx.runtime.impl.UnmarshallingContext", e);
      }
  }
}
