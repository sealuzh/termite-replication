/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:48:36 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Shape;
import java.awt.event.KeyEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import javax.swing.JRootPane;
import javax.swing.JWindow;
import org.apache.batik.ext.awt.g2d.GraphicContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        Controller.addPropertyChangeListenerAndPropagate((FreemindPropertyListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JRootPane jRootPane0 = new JRootPane();
      Controller.removePropertyChangeListener((FreemindPropertyListener) null);
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      jRootPane0.removeNotify();
      KeyEvent keyEvent0 = new KeyEvent(jRootPane0, 61442, 1954L, 0, 61442, 'L', 0);
      keyEvent0.setSource(controller_DisposeOnClose0);
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BrowseMode browseMode0 = new BrowseMode();
      browseMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controller.getCommonJColorChooser();
      JWindow jWindow0 = null;
      try {
        jWindow0 = new JWindow();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JRootPane jRootPane0 = new JRootPane();
      GraphicContext graphicContext0 = new GraphicContext();
      Font font0 = Font.decode("");
      graphicContext0.clipRect(1, 1, 1, 0);
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance((-1832.0396716651123), (-1832.0396716651123));
      GraphicContext graphicContext1 = new GraphicContext();
      FontRenderContext fontRenderContext0 = graphicContext0.getFontRenderContext();
      Rectangle2D rectangle2D0 = font0.getMaxCharBounds(fontRenderContext0);
      GraphicContext graphicContext2 = new GraphicContext(affineTransform0);
      graphicContext2.setTransform(affineTransform0);
      graphicContext0.setFont(font0);
      Color color0 = graphicContext2.getColor();
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (-1832.0396716651123);
      float[] floatArray0 = new float[8];
      graphicContext2.setClip((Shape) rectangle2D0);
      graphicContext2.shear((-4857), (-1832.0396716651123));
      floatArray0[0] = (float) (-4857);
      floatArray0[1] = (float) (-4857);
      graphicContext2.setPaint(color0);
      graphicContext0.shear(13.962891F, (-4857));
      affineTransform0.transform(doubleArray0, 12450, floatArray0, 1026, (-2077));
      try { 
        Controller.showCommonJColorChooserDialog(jRootPane0, "bG", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }
}
