/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:58:03 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7130415601881177
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "l[PU");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://fjc^47W:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "#O)q");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("fjc^47W", 0);
      assertEquals(5, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      Services.testHTTP("", 1);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", (-1));
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertEquals(0L, services_HTTP_Result1.time);
      assertFalse(services_HTTP_Result1.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)50;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      System.setCurrentTimeMillis(0L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 50);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(620L);
      System.setCurrentTimeMillis((-2891L));
      System.setCurrentTimeMillis((byte)0);
      Services.testPOP3("", (byte)50);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.861445611758169
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("`T,ql}/U0zE4Pk7TloH", (-441));
      assertFalse(services_HTTP_Result0.works);
      
      services_HTTP_Result0.time = (long) (-441);
      services_HTTP_Result0.works = true;
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-441) **", 0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://]\\,}} >y.1nf:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, " {![):!Wc.CM@\"bZx");
      services_SIMPLE_Result0.Error = "`T,ql}/U0zE4Pk7TloH";
      services_HTTP_Result0.page_weight = 0;
      services_SIMPLE_Result0.time = 1L;
      services_SIMPLE_Result0.time = (-729L);
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("],}} >y.1nf", 0);
      services_SIMPLE_Result1.Error = "CwzM;<`5r\"zQ##,";
      services_SIMPLE_Result1.toString();
      Services.HTTP_Result services_HTTP_Result2 = new Services.HTTP_Result();
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testPOP3("", 740);
      Services services0 = new Services();
      services_SIMPLE_Result2.toString();
      services_HTTP_Result2.toString();
      services_HTTP_Result1.toString();
      Services.testHTTP("],}} >y.1nf", 0);
      Services.testHTTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : CwzM;<`5r\"zQ##,.\n****", 0);
      Services.testHTTPS("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 0);
      services_SIMPLE_Result2.reset();
      assertEquals(0L, services_SIMPLE_Result2.time);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("127.0.0.1", 3389);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-124);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.testSMTP("", 3389);
      boolean boolean1 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress2 = new EvoSuiteRemoteAddress("**Erreur d'E/S** (", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.page_weight = 0;
      services_HTTP_Result0.page_weight = 2321;
      services_HTTP_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 558);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis((-193L));
      System.setCurrentTimeMillis((-193L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1289L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-437L));
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      System.setCurrentTimeMillis((-1063L));
      System.setCurrentTimeMillis((-1289L));
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**** Resultat : \n** Fonctionnement : ", 3000);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-124);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (-49));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**** Resultat : \n** Fonctionnement : ", 3000);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-124);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("vpbm?80y.g5b+Ch>", 1143);
      services_HTTP_Result0.code = (int) (byte) (-124);
      services_HTTP_Result0.reset();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", 1);
      assertEquals(0L, services_HTTP_Result1.time);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-193L));
      System.setCurrentTimeMillis((-193L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1289L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-437L));
      System.setCurrentTimeMillis((-1060L));
      System.setCurrentTimeMillis((-1289L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3((String) null, (-1442));
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("@pdpksy=?s", 0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-124);
      services_SIMPLE_Result0.works = false;
      byteArray0[5] = (byte) (-124);
      byteArray0[6] = (byte) (-16);
      byteArray0[7] = (byte) (-124);
      byteArray0[8] = (byte) (-124);
      services_SIMPLE_Result0.toString();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "@pdpksy=?s");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@827f5656) **");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.testSMTP("", (byte) (-124));
      byte[] byteArray1 = new byte[0];
      boolean boolean1 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, (-1));
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur : java.lang.NullPointerException**.\n****", string0);
  }
}
