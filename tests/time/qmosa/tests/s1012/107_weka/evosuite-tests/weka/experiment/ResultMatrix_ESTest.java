/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 00:15:44 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[8][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 2;
      intArray2[6] = (-1941);
      intArray2[7] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = (-1941);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 0;
      intArray4[3] = (-1941);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 0;
      intArray5[1] = 1;
      intArray5[2] = 2;
      intArray5[3] = 0;
      intArray5[4] = 1;
      intArray5[5] = (-734);
      intArray5[6] = 1;
      intArray5[7] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 0;
      intArray7[1] = 0;
      intArray7[2] = 0;
      intArray7[3] = (-734);
      intArray7[4] = (-734);
      intArray7[5] = 1;
      intArray7[6] = (-1941);
      intArray7[7] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[1];
      intArray8[0] = (-1941);
      intArray0[7] = intArray8;
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.toStringSummary();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.744429708806687
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setPrintColNames(true);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      int[][] intArray1 = new int[2][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      resultMatrixSignificance0.setSummary(intArray1, intArray1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      int int0 = 30;
      resultMatrixSignificance1.setSize(30, 16);
      resultMatrixSignificance1.meanWidthTipText();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance2 = null;
      try {
        resultMatrixSignificance2 = new ResultMatrixSignificance((-103), 34);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.3023455124813856
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot1.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setColName((-1161), "");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 17);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.toStringKey();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.076612479512107
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      stringArray0[5] = "*";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      stringArray0[8] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = ")";
      stringArray0[3] = "*";
      stringArray0[4] = ")";
      stringArray0[5] = "*";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[][] stringArray1 = new String[0][0];
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize(stringArray1, 2, true, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.834737490139163
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(71, 26);
      resultMatrixLatex0.setMean(1, (-3620), (-3147.336831));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getRowCount();
      resultMatrixLatex0.printRowNamesTipText();
      resultMatrixCSV0.setRowNameWidth(0);
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV(1096, (-1906));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8521976015669326
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.trimString(")", 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      int int0 = (-3350);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(1, (-536));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.258279332980235
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.setSize((-884), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(71, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML1.countWidthTipText();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.significanceWidthTipText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getVisibleColCount();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2203769571281557
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.setSize(1, 12);
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.setOptions(stringArray0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.53245677218007
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.LEFT_PARENTHESES = "$circ$";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getVisibleRowCount();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.setRowOrder((int[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = ")";
      stringArray0[3] = "v";
      stringArray0[4] = "$circ$";
      ResultMatrixHTML.main(stringArray0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.96659032187855
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixLatex0.LEFT_PARENTHESES = "c";
      resultMatrixLatex0.getColNameWidth();
      resultMatrixHTML0.getRevision();
      resultMatrixLatex0.setColHidden(2, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[3][0];
      String[] stringArray1 = new String[6];
      stringArray1[0] = " ";
      stringArray1[1] = "$circ$";
      stringArray1[2] = ")";
      stringArray1[3] = "$circ$";
      stringArray1[4] = "(";
      stringArray1[5] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = " ";
      stringArray2[2] = " ";
      stringArray2[3] = "c";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowNameWidth(1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.setRowHidden((-1199), true);
      resultMatrixCSV0.setRemoveFilterName(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.8657021318552482
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray3[5] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 0;
      intArray4[1] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 2;
      intArray5[1] = 1;
      intArray5[2] = 2;
      intArray5[3] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = 2;
      intArray6[1] = 2;
      intArray6[2] = 2;
      intArray6[3] = 0;
      intArray6[4] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = 1;
      intArray7[1] = 0;
      intArray7[2] = 0;
      intArray7[3] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[8];
      intArray8[0] = 2;
      intArray8[1] = 0;
      intArray8[2] = 1;
      intArray8[3] = 0;
      intArray8[4] = 11;
      intArray8[5] = 2;
      intArray8[6] = 49;
      intArray8[7] = 2;
      intArray0[7] = intArray8;
      int[][] intArray9 = new int[4][0];
      intArray9[0] = intArray7;
      int[] intArray10 = new int[0];
      intArray9[1] = intArray10;
      intArray9[2] = intArray5;
      int[] intArray11 = new int[6];
      intArray11[0] = 0;
      intArray11[1] = 0;
      intArray11[2] = 2;
      intArray11[3] = 1;
      intArray11[4] = 0;
      intArray11[5] = 30;
      intArray9[3] = intArray11;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0472770782777543
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      stringArray0[5] = "*";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(365, 0);
      resultMatrixLatex0.setMean(1, 95, 95);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getRowCount();
      resultMatrixLatex0.printRowNamesTipText();
      resultMatrixCSV0.setRowNameWidth(2);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.setRowHidden(1, true);
      resultMatrixCSV1.setRemoveFilterName(true);
      resultMatrixSignificance0.toStringKey();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.19238203809315
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getRowName(0);
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.TIE_STRING = "@',V^4iw";
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setSize(2, 0);
      resultMatrixSignificance1.meanWidthTipText();
      resultMatrixSignificance1.toStringKey();
      resultMatrixSignificance1.getAverage(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance1);
      resultMatrixCSV0.setRowNameWidth(77);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV();
      resultMatrixCSV2.setRowHidden(2, false);
      resultMatrixCSV0.setRemoveFilterName(false);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.434084404494077
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2190);
      resultMatrixSignificance0.doubleToString(1810.751679967, 3);
      resultMatrixSignificance0.setRowOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      int int0 = 1574;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString(0, (-4073));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4228100830170742
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot1.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setColName(1293, "Nw%o}W");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.toStringKey();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.311906811068249
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setColName(1, "-supervised..*");
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-339), 625);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8997571011430585
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[4];
      resultMatrixGnuPlot0.setPrintColNames(true);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      booleanArray0[0] = false;
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.m_ShowAverage = false;
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setColName(4226, (String) null);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(4, (-3824));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3626909365899262
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      stringArray0[5] = "*";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixGnuPlot0.addHeader((String) null, "v");
      int[] intArray0 = new int[6];
      intArray0[0] = 3962;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 0;
      int[] intArray2 = new int[2];
      intArray2[0] = 3962;
      intArray2[1] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals("Dataset                                               col0\n----------------------------------------------------------\nrow0                                              (0)    |\n----------------------------------------------------------\nv/ /*                                                    |\n", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.302753417471908
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setMeanPrec(2);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.368064820958119
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.getSummaryTitle((-1837));
      resultMatrixSignificance0.m_MeanPrec = (-1837);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.isMean((-198));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.toString();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixHTML0.significanceWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.globalInfo();
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setEnumerateRowNames(false);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.788626037967038
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[4];
      resultMatrixGnuPlot0.setPrintColNames(true);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      booleanArray0[0] = false;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 26);
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixSignificance0.setSignificanceWidth(6);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.383639648934799
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixHTML0.toStringMatrix();
      int[] intArray0 = new int[4];
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.m_ColNames = stringArray0;
      intArray0[1] = 1;
      intArray0[3] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "v";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray1 = new int[9];
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      intArray1[0] = 0;
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.m_HeaderValues = vector0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[6] = 1;
      intArray1[7] = 1;
      intArray1[8] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.assign(resultMatrixSignificance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.305083776481921
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.getSummaryTitle((-1837));
      resultMatrixSignificance0.m_MeanPrec = (-1837);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.m_ShowAverage = true;
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.isMean(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.toString();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixHTML0.significanceWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-2539), (-1837));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.092903088647827
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getSummaryTitle(2);
      resultMatrixGnuPlot0.setSignificanceWidth(2);
      resultMatrixGnuPlot0.removeFilterName("print-col-names");
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.getRowOrder();
      assertTrue(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1167906919559734
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.setSize(1, 12);
      resultMatrixSignificance1.meanWidthTipText();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(12, 2);
      resultMatrixSignificance2.getAverage(0);
      ResultMatrixSignificance resultMatrixSignificance3 = new ResultMatrixSignificance(resultMatrixSignificance1);
      resultMatrixSignificance0.getSummaryTitle((-1));
      resultMatrixSignificance3.toStringRanking();
      resultMatrixSignificance3.setRowNameWidth(53);
      resultMatrixPlainText0.globalInfo();
      resultMatrixSignificance2.getEnumerateRowNames();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-567), 54);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.472422873542602
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      // Undeclared exception!
      resultMatrixSignificance0.setSize(749, 4665);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      resultMatrixGnuPlot0.setSignificanceWidth((-759));
      resultMatrixGnuPlot0.removeFilterName("*");
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.getRowOrder();
      assertTrue(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6945234666079596
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.RIGHT_PARENTHESES = " ";
      resultMatrixLatex0.getColNameWidth();
      resultMatrixHTML0.getRevision();
      resultMatrixLatex0.setColHidden(2, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[3][0];
      String[] stringArray1 = new String[6];
      stringArray1[0] = " ";
      stringArray1[1] = "$circ$";
      stringArray1[2] = " ";
      stringArray1[3] = "$circ$";
      stringArray1[4] = "(";
      stringArray1[5] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = " ";
      stringArray2[2] = " ";
      stringArray2[3] = "(";
      stringArray2[4] = " ";
      stringArray2[5] = "$circ$";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[1];
      String[][] stringArray4 = new String[3][9];
      stringArray4[0] = stringArray1;
      stringArray4[1] = stringArray3;
      stringArray4[2] = stringArray1;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize(stringArray4, 0, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8827945597505553
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String string0 = resultMatrixSignificance0.getRowName((-1711));
      assertNull(string0);
      
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.setSize(0, 1);
      String string1 = resultMatrixSignificance0.meanWidthTipText();
      assertEquals("The width of the mean (0 = optimal).", string1);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      resultMatrixSignificance0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getAverage((-693));
      resultMatrixSignificance1.getRevision();
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.754902366156803
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(5, 5);
      resultMatrixPlainText0.trimString("*", 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setMeanPrec(2158);
      resultMatrixHTML0.getColOrder();
      assertEquals(2158, resultMatrixHTML0.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(2, 0);
      int[][] intArray0 = new int[0][7];
      resultMatrixSignificance0.setRanking(intArray0);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance1.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2498, 1);
      resultMatrixCSV0.globalInfo();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.1095546356203583
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      stringArray0[5] = "*";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      stringArray0[8] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixGnuPlot0.getEnumerateColNames();
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.01260663709537
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.TIE_STRING = "(";
      resultMatrixPlainText0.trimString("dCvz~|Xcvo=G~lB=", 2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setMeanPrec(1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.5353549205943553
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getVisibleRowCount();
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[3] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      stringArray0[3] = "Dataset (1)\n-----------\nrow0       \n";
      stringArray0[4] = "Dataset (1)\n-----------\nrow0       \n";
      stringArray0[5] = "*";
      stringArray0[6] = "(";
      stringArray0[7] = "v";
      ResultMatrixLatex.main(stringArray0);
      resultMatrixHTML0.addHeader("", "(");
      resultMatrixHTML0.significanceWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixPlainText0.setSignificanceWidth(0);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.508335201216428
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixGnuPlot0.setPrintColNames(true);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      ResultMatrixLatex.main((String[]) null);
      resultMatrixHTML0.addHeader("j _Bd1vn=sT", "mgB/e.ZnD");
      resultMatrixHTML0.significanceWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1679, 1);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixPlainText0.setSignificanceWidth(1);
      assertEquals(1, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.9154793492940048
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.significanceWidthTipText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText1.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText1);
      int int0 = 12;
      resultMatrixSignificance1.setSize(1, 6);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(4052, 2376);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.169980456601832
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[4];
      resultMatrixGnuPlot0.setPrintColNames(true);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getColHidden((-664));
      assertEquals(1, resultMatrixHTML0.getRowCount());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3545638372461997
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ColNameWidth = 383;
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.removeFilterName((String) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      stringArray0[7] = "v";
      stringArray0[8] = "vF";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.showAverageTipText();
      resultMatrixPlainText0.m_RemoveFilterName = true;
      int[] intArray0 = resultMatrixPlainText0.getRowOrder();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.getSignificanceWidth();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "*";
      stringArray1[1] = null;
      stringArray1[2] = ")";
      int[][] intArray1 = new int[4][7];
      intArray1[0] = null;
      intArray1[1] = null;
      resultMatrixHTML0.m_Wins = intArray1;
      intArray1[2] = intArray0;
      intArray1[3] = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.867455416675068
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getRowName(0);
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.TIE_STRING = "@',V^4iw";
      resultMatrixSignificance0.setSize(0, 0);
      resultMatrixSignificance0.setSize(0, 26);
      resultMatrixSignificance0.meanWidthTipText();
      assertEquals(26, resultMatrixSignificance0.getRowCount());
      
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getAverage(0);
      resultMatrixSignificance0.getRevision();
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0870914540642103
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixLatex0.getPrintRowNames();
      int[] intArray0 = new int[10];
      intArray0[0] = 0;
      intArray0[1] = 2;
      resultMatrixSignificance0.getRowName(2);
      resultMatrixSignificance0.showAverageTipText();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.setSize(0, 0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance2.meanWidthTipText();
      resultMatrixSignificance2.toStringKey();
      resultMatrixSignificance0.getAverage(1);
      resultMatrixSignificance2.setRowNameWidth((-2226));
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.significanceWidthTipText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[0][4];
      resultMatrixSignificance0.m_ShowStdDev = true;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = "(";
      stringArray0[3] = " ";
      stringArray0[4] = ")";
      stringArray0[5] = "*";
      stringArray0[6] = "v";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 25;
      intArray1[2] = 1;
      resultMatrixSignificance0.m_RankingWins = intArray1;
      resultMatrixSignificance0.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.3384098341258195
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getVisibleRowCount();
      String string1 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string1);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[3] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "v";
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      stringArray0[3] = "Dataset (1)\n-----------\nrow0       \n";
      stringArray0[4] = "Dataset (1)\n-----------\nrow0       \n";
      stringArray0[5] = "*";
      stringArray0[6] = "(";
      stringArray0[7] = "v";
      resultMatrixSignificance0.toArray();
      int[][] intArray1 = new int[9][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixSignificance0.setRanking(intArray1);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.getRevision();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.removeFilterName("8034");
      resultMatrixCSV0.globalInfo();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[4] = "*";
      stringArray0[6] = "";
      stringArray0[7] = "*";
      stringArray0[8] = " ";
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.648896458548255
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 3);
      resultMatrixSignificance0.m_ColNameWidth = 3;
      resultMatrixSignificance0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v";
      stringArray0[1] = "(";
      stringArray0[2] = "*";
      stringArray0[3] = "`ow1:F\"S[y&q";
      stringArray0[4] = "TW]x#7b!";
      stringArray0[5] = "vF";
      stringArray0[6] = "8034";
      stringArray0[7] = "P?bm|,P@H";
      stringArray0[8] = "*";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.showAverageTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 706.7;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 1391.570905506;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      resultMatrixPlainText0.m_Counts = doubleArray0;
      resultMatrixPlainText0.getRowOrder();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.getSignificanceWidth();
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixHTML0.stdDevPrecTipText();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6480644479925375
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.removeFilterName("*");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.setOptions((String[]) null);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.showAverageTipText();
      resultMatrixPlainText0.getRowOrder();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.getSignificanceWidth();
      ResultMatrixPlainText.main((String[]) null);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col | (2)\n---------------------------------------\nrow0                       (0)    |    \nrow1                       (0)    |    \n---------------------------------------\n                          (v/ /* (0/0/0\n", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4236076394870394
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.padString("", 2);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixLatex0.setMean(0, 1, 2);
      resultMatrixCSV0.getStdDevWidth();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixSignificance1);
      resultMatrixCSV1.getRowCount();
      resultMatrixLatex0.printRowNamesTipText();
      resultMatrixCSV0.setRowNameWidth(532);
      resultMatrixCSV0.setRowHidden(0, false);
      resultMatrixCSV0.setRemoveFilterName(true);
      assertEquals(532, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9652780485597328
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_ColNameWidth = 383;
      resultMatrixPlainText0.clearHeader();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      resultMatrixPlainText0.removeFilterName((String) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      stringArray0[7] = "(";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setSize(383, 12);
      resultMatrixSignificance0.meanWidthTipText();
      assertEquals(12, resultMatrixSignificance0.getVisibleRowCount());
      
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getAverage(0);
      resultMatrixSignificance0.setRowNameWidth((-2061));
      resultMatrixPlainText0.getPrintColNames();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(false);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1600, 1600);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6486255461118287
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[4];
      resultMatrixGnuPlot0.setPrintColNames(true);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixGnuPlot0.assign(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.1504870539255267
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getRowName(0);
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.TIE_STRING = "@',V^4iw";
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setSize(2, 0);
      resultMatrixSignificance1.meanWidthTipText();
      resultMatrixSignificance1.toStringKey();
      resultMatrixSignificance1.getAverage(0);
      resultMatrixSignificance0.setRowNameWidth(0);
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.543538816277597
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "A}roDNWxdl%`yQzclF";
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.removeFilterName("{centering\n");
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      ResultMatrixPlainText.main(resultMatrixGnuPlot0.m_RowNames);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.258279332980235
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(2, (-866));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0554356734824246
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      boolean boolean0 = false;
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.LOSS_STRING = "(";
      resultMatrixPlainText0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-3350), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8521976015669326
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(3, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.m_CountWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      boolean boolean0 = false;
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.TIE_STRING = "(";
      resultMatrixPlainText0.trimString("dCvz~|Xcvo=G~lB=", 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-3350), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.0414805767005273
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.LEFT_PARENTHESES = "$circ$";
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[][] intArray1 = new int[1][3];
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 25;
      intArray2[2] = (-601);
      intArray2[3] = 2;
      intArray1[0] = intArray2;
      resultMatrixCSV0.m_NonSigWins = intArray1;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      resultMatrixPlainText0.toStringRanking();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSize(25, 1);
      resultMatrixSignificance0.meanWidthTipText();
      assertEquals(25, resultMatrixSignificance0.getColCount());
      
      resultMatrixSignificance0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(25, 2);
      resultMatrixSignificance0.getAverage((-601));
      resultMatrixSignificance1.setRowNameWidth(0);
      assertEquals(0, resultMatrixSignificance1.getRowNameWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.459633981235579
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.LEFT_PARENTHESES = "$circ$";
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[][] intArray1 = new int[1][3];
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 25;
      intArray2[2] = (-601);
      intArray2[3] = 2;
      intArray1[0] = intArray2;
      resultMatrixCSV0.m_NonSigWins = intArray1;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      resultMatrixPlainText0.toStringRanking();
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(";
      stringArray0[1] = "u2r/~p(a";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixCSV0.getColHidden(0);
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getDefaultPrintColNames();
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 1;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) 4439;
      doubleArray0[3] = doubleArray4;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      resultMatrixLatex0.setSize(4439, 0);
      resultMatrixHTML0.toStringSummary();
      assertEquals(4439, resultMatrixLatex0.getColCount());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = 2825;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize(41, (-818));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.0038343881233085
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevPrec = (-1284);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.isAverage(3);
      resultMatrixLatex1.clearHeader();
      resultMatrixLatex0.getMeanWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = ")";
      resultMatrixHTML0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.7127291374784415
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixGnuPlot0.m_StdDevPrec = 2;
      String string0 = resultMatrixGnuPlot0.padString("", 0);
      assertEquals("", string0);
      
      resultMatrixCSV0.m_PrintRowNames = true;
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.isSignificance((-1359));
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.5424553087509043
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.headerKeys();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "(";
      stringArray0[3] = "*";
      stringArray0[4] = "[";
      resultMatrixSignificance0.m_ShowAverage = false;
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      
      stringArray0[5] = "-summary data not set-";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixCSV0.showAverageTipText();
      String[][] stringArray1 = new String[4][0];
      String[] stringArray2 = new String[6];
      stringArray2[0] = " ";
      stringArray2[1] = "(";
      stringArray2[2] = "*";
      stringArray2[3] = "(";
      stringArray2[4] = "-summary data not set-";
      stringArray2[5] = "";
      stringArray1[0] = stringArray2;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      int int0 = resultMatrixSignificance0.getColSize(stringArray1, 1, true, true);
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, int0);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMeanWidth(961);
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.m_PrintColNames = true;
      resultMatrixCSV0.m_EnumerateColNames = true;
      resultMatrixCSV0.removeFilterName("CSV");
      resultMatrixCSV0.clear();
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.2214201999848897
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.m_RowNameWidth = (-3904);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      resultMatrixGnuPlot0.getColName(0);
      assertEquals((-3904), resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.1302718268744707
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getRowName(0);
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.TIE_STRING = "@',V^4iw";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 465);
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixSignificance0.m_RowOrder = null;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 111);
      resultMatrixGnuPlot1.getRowOrder();
      resultMatrixSignificance0.getRowNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot2);
      resultMatrixCSV0.clear();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.9792949754551628
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.clearHeader();
      resultMatrixHTML0.setPrintRowNames(false);
      resultMatrixHTML0.m_CountWidth = (-1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultCountWidth();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixHTML0.removeFilterName("");
      resultMatrixHTML0.m_StdDevWidth = 2;
      intArray0[4] = 1;
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getStdDev(0, (-2554));
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getColCount();
      String[][] stringArray0 = new String[1][1];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      resultMatrixGnuPlot0.getColSize(stringArray0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.clear();
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.997068727089016
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(50, 0);
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.listOptions();
      resultMatrixSignificance0.setStdDevWidth(10);
      assertEquals(10, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getColOrder();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1, 1);
      resultMatrixHTML0.getAverage(804);
      resultMatrixSignificance1.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance2.getRevision();
      assertEquals(2, resultMatrixSignificance2.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance2.getMeanPrec());
      assertFalse(resultMatrixSignificance2.getShowStdDev());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(50, resultMatrixSignificance2.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance2.getMeanWidth());
      assertTrue(resultMatrixSignificance2.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance2.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance2.getCountWidth());
      assertFalse(resultMatrixSignificance2.getEnumerateColNames());
      assertEquals(1, resultMatrixSignificance2.getColCount());
      assertTrue(resultMatrixSignificance2.getPrintColNames());
      assertEquals(0, resultMatrixSignificance2.getSignificanceWidth());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.992196960885483
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixHTML0.m_RankingWins = intArray0;
      resultMatrixHTML0.setMeanPrec(0);
      assertEquals(0, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.5635028896473853
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("L{x");
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getRowHidden((-391));
      resultMatrixCSV0.removeFilterName("-summary data not set-");
      int[] intArray0 = new int[4];
      intArray0[0] = (-690);
      intArray0[1] = 1004;
      intArray0[2] = 0;
      intArray0[3] = 1;
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixCSV0.getVisibleRowCount();
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "]";
      stringArray0[1] = "v";
      stringArray0[2] = "[";
      stringArray0[3] = "]";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowStdDev(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("Whether to enumerate the column names (prefixing them with '(x)', with 'x' being the index).", "*");
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixSignificance0.setShowStdDev(true);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.getColHidden(1004);
      resultMatrixCSV0.colNameWidthTipText();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.9779945576543874
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.removeFilterName("oO]L{x");
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.getRowHidden((-391));
      resultMatrixCSV0.removeFilterName("-summary data not set-");
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1004;
      intArray0[2] = 0;
      intArray0[2] = 1;
      resultMatrixCSV0.setColOrder(intArray0);
      int int0 = resultMatrixCSV0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixCSV0.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray1 = new int[4][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixHTML0.setRanking(intArray1);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.3156536237731387
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(4665);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_EnumerateRowNames = true;
      resultMatrixPlainText0.getDisplayName();
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.meanWidthTipText();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixCSV0.setColNameWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(0, (-1510));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.52450635626861
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixHTML0.toStringMatrix();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[3] = 0;
      resultMatrixHTML0.setRowOrder(intArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "v";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[6] = 2;
      intArray1[7] = 1;
      intArray1[8] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray1);
      resultMatrixGnuPlot0.assign(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixHTML.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.9678486540041416
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixLatex0.getPrintRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.padString("K*nA2loyVVF?\"F;G3", 2, true);
      resultMatrixGnuPlot0.setRowNameWidth(1);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.9512516113626925
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.LEFT_PARENTHESES = "$circ$";
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      resultMatrixLatex0.setRowOrder(intArray0);
      resultMatrixPlainText0.setPrintRowNames(false);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[][] intArray1 = new int[1][3];
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 25;
      intArray2[3] = 2;
      intArray1[0] = intArray2;
      resultMatrixCSV0.m_NonSigWins = intArray1;
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.toStringRanking();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(";
      resultMatrixPlainText0.m_RowNameWidth = 0;
      stringArray0[1] = "u2r/~p(a";
      resultMatrixPlainText0.WIN_STRING = "-ranking data not set-";
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.m_StdDevPrec = 25;
      resultMatrixCSV0.getColHidden(2);
      resultMatrixCSV0.getCount(0);
      resultMatrixCSV0.m_PrintColNames = true;
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixCSV0.setRowName(2, "r}\"$5E=$J*M3&C]<{7U");
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.834458569408769
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixHTML0.m_RankingWins = intArray0;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray1[4] = 0;
      intArray1[5] = 2;
      intArray1[6] = 0;
      intArray1[7] = 934;
      intArray1[8] = (-618);
      resultMatrixGnuPlot0.setColOrder(intArray1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5955157854799817
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.padString("", 1, true);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray3[3] = 1;
      intArray3[4] = 1;
      intArray3[5] = 2;
      intArray3[6] = 2;
      intArray3[7] = 3618;
      intArray3[8] = 1;
      intArray0[2] = intArray3;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixGnuPlot0.setRowNameWidth(25);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixGnuPlot0.m_RowNameWidth = (-932);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.08397174642982
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.meanPrecTipText();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 0;
      intArray0[7] = 1;
      intArray0[8] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.setRemoveFilterName(true);
      resultMatrixHTML0.getCount((-1));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.colNameWidthTipText();
      int[] intArray1 = new int[1];
      intArray1[0] = 25;
      resultMatrixCSV0.m_RankingDiff = intArray1;
      resultMatrixHTML0.padString("*", 25, true);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixHTML0.getSignificance(1639, (-1654));
      resultMatrixHTML0.setShowAverage(false);
      assertTrue(resultMatrixHTML0.getRemoveFilterName());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setStdDevWidth(1);
      assertEquals(1, resultMatrixSignificance0.getStdDevWidth());
      
      resultMatrixSignificance0.assign(resultMatrixCSV0);
      resultMatrixSignificance0.getSignificanceWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.4117021314359723
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 3470);
      resultMatrixCSV0.getRowName(3470);
      resultMatrixCSV0.meanWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevPrec(3470);
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.m_HeaderValues = null;
      resultMatrixLatex0.padString("[", (-869));
      resultMatrixLatex0.toStringMatrix();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.getVisibleRowCount();
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixCSV0.getDisplayName();
      resultMatrixLatex0.setMean(3470, (-1231), 0);
      resultMatrixCSV0.getStdDevWidth();
      resultMatrixCSV0.getRowCount();
      resultMatrixLatex0.printRowNamesTipText();
      resultMatrixCSV0.setRowNameWidth(3470);
      resultMatrixCSV0.setRowHidden(1095, false);
      resultMatrixCSV0.setRemoveFilterName(false);
      assertEquals(3470, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.9963067983056164
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "A}roDNWxdl%`yQzclF";
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.removeFilterName("{centering\n");
      resultMatrixGnuPlot0.setShowStdDev(true);
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      resultMatrixGnuPlot0.m_MeanWidth = 2;
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.getMean(2, 0);
      assertTrue(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintRowNames();
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.WIN_STRING = "BHbpc2vx 9nA}iK6[L";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 1);
      resultMatrixCSV0.assign(resultMatrixLatex0);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.m_PrintRowNames = true;
      resultMatrixCSV0.clearHeader();
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixCSV0.setStdDevPrec((-575));
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.getCountWidth();
      int int0 = resultMatrixCSV0.getDefaultStdDevPrec();
      assertEquals(0, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.568234442001242
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setColNameWidth(4665);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_EnumerateRowNames = true;
      resultMatrixPlainText0.getDisplayName();
      resultMatrixCSV0.listOptions();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setOptions(stringArray0);
      assertEquals(4665, resultMatrixCSV0.getColNameWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      resultMatrixCSV0.m_Counts = doubleArray0;
      resultMatrixCSV0.m_StdDevPrec = 0;
      int int0 = resultMatrixCSV0.getStdDevPrec();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5955157854799817
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.padString("", 1, true);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 2;
      intArray3[4] = 1;
      intArray3[5] = 2;
      resultMatrixGnuPlot0.m_ColOrder = intArray2;
      intArray3[6] = 2;
      intArray3[7] = 3618;
      intArray3[8] = 1;
      intArray0[2] = intArray3;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      resultMatrixGnuPlot0.setRowNameWidth(25);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixGnuPlot0.m_RowNameWidth = (-932);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.meanWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixCSV0.setColNameWidth(1);
      assertEquals(1, resultMatrixCSV0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixPlainText0.rowNameWidthTipText();
      resultMatrixHTML0.getRevision();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.1726919534566647
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 3470);
      resultMatrixCSV0.getRowName(3470);
      resultMatrixCSV0.meanWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1, 261);
      resultMatrixLatex1.setMean(3429, 1437, 2928.80391279278);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixLatex1);
      resultMatrixCSV1.getStdDevWidth();
      resultMatrixCSV0.getRowCount();
      resultMatrixLatex1.printRowNamesTipText();
      resultMatrixCSV0.setRowNameWidth(17);
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(resultMatrixCSV1);
      resultMatrixCSV2.setRowHidden(1, true);
      resultMatrixCSV2.setRemoveFilterName(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringKey();
      resultMatrixCSV0.setStdDev(3259, (-158), 376.64891737951);
      assertEquals(17, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.670294859592121
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      int int0 = resultMatrixHTML1.getVisibleColCount();
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(97, int0);
      assertTrue(resultMatrixHTML1.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertTrue(resultMatrixHTML1.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(0, resultMatrixHTML1.getStdDevWidth());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.874519625657589
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      resultMatrixCSV0.m_RowHidden = booleanArray0;
      resultMatrixCSV0.TIE_STRING = "row";
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      resultMatrixSignificance0.WIN_STRING = "";
      resultMatrixHTML0.m_Counts = doubleArray0;
      resultMatrixHTML0.setMeanWidth(640);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      resultMatrixGnuPlot0.toStringKey();
      assertTrue(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.098194714519659
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_PrintRowNames = true;
      resultMatrixGnuPlot0.getSignificanceWidth();
      int[][] intArray0 = new int[6][6];
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray3[3] = 0;
      intArray3[4] = 1;
      intArray3[5] = 2905;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 89;
      intArray4[1] = 1;
      intArray4[2] = 2905;
      intArray4[3] = (-3864);
      intArray4[4] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      resultMatrixGnuPlot0.m_Significance = intArray0;
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[][] stringArray0 = new String[4][1];
      String[] stringArray1 = new String[3];
      stringArray1[0] = " ";
      stringArray1[1] = ")";
      stringArray1[2] = "*";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = "*";
      stringArray2[1] = ")";
      stringArray2[2] = " ";
      stringArray2[3] = ")";
      stringArray2[4] = " ";
      stringArray2[5] = "Only outputs the significance indicators. Can be used for spotting patterns.";
      stringArray2[6] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[0];
      stringArray0[3] = stringArray4;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 997);
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.711316048861173
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.RIGHT_PARENTHESES = "c";
      resultMatrixLatex0.getColNameWidth();
      resultMatrixHTML0.getRevision();
      resultMatrixLatex0.setColHidden(2, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[3][0];
      String[] stringArray1 = new String[6];
      stringArray1[0] = " ";
      stringArray1[1] = "$circ$";
      stringArray1[2] = "c";
      stringArray1[3] = "$circ$";
      stringArray1[4] = "(";
      stringArray1[5] = "c";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = " ";
      stringArray2[3] = "(";
      stringArray2[4] = "c";
      stringArray2[5] = "$circ$";
      stringArray0[1] = stringArray2;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getColSize(stringArray0, 1, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.RIGHT_PARENTHESES = "c";
      resultMatrixLatex0.getColNameWidth();
      resultMatrixHTML0.getRevision();
      resultMatrixLatex0.setColHidden(2, true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      String[][] stringArray0 = new String[3][0];
      String[] stringArray1 = new String[6];
      stringArray1[0] = " ";
      stringArray1[1] = "$circ$";
      stringArray1[2] = "c";
      stringArray1[3] = "$circ$";
      stringArray1[4] = "(";
      stringArray1[5] = "c";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = " ";
      stringArray2[2] = " ";
      stringArray2[3] = "(";
      stringArray2[4] = "c";
      stringArray2[5] = "$circ$";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[1];
      stringArray3[0] = ")";
      stringArray0[2] = stringArray3;
      int int0 = resultMatrixHTML0.getColSize(stringArray0, (-2096), false, true);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, int0);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      resultMatrixLatex0.getDefaultPrintRowNames();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanPrec(3428);
      assertEquals(3428, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setColNameWidth(229);
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixHTML0.toStringKey();
      assertEquals(229, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.8443053266982625
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixLatex0.getPrintRowNames();
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 1;
      intArray4[3] = 2;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray4[6] = 1;
      intArray4[7] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 2;
      intArray5[5] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      int[] intArray7 = new int[10];
      intArray7[0] = 1;
      intArray7[1] = (-267);
      intArray7[2] = 2;
      intArray7[3] = 1;
      intArray7[4] = 2;
      intArray7[5] = 0;
      intArray7[6] = 0;
      intArray7[7] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[9];
      intArray8[0] = 2;
      intArray8[1] = 0;
      intArray8[2] = 2;
      intArray8[3] = 40;
      intArray8[4] = 2;
      intArray8[5] = 2;
      intArray8[6] = (-267);
      intArray8[7] = 2;
      intArray8[8] = 2;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.8443053266982625
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.assign(resultMatrixSignificance0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixLatex0.getPrintRowNames();
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 1;
      intArray4[3] = 2;
      intArray4[4] = 2;
      intArray4[5] = 2;
      intArray4[6] = 1;
      intArray4[7] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 2;
      intArray5[5] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 1;
      intArray7[1] = (-267);
      intArray7[2] = 2;
      intArray7[3] = 1;
      intArray7[4] = 2;
      intArray7[5] = 0;
      intArray7[6] = 0;
      intArray7[7] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[9];
      intArray8[0] = 2;
      intArray8[1] = 0;
      intArray8[2] = 2;
      intArray8[3] = 40;
      intArray8[4] = 2;
      intArray8[5] = 2;
      intArray8[6] = (-267);
      intArray8[7] = 2;
      intArray8[8] = 2;
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
  }
}
