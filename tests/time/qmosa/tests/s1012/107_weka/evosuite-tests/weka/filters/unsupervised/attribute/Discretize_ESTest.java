/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:45:14 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.647826624623992
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 278;
      doubleArray1[1] = (double) 278;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "$Revision: 8964 $");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      doubleArray1[0] = (double) 278;
      doubleArray1[3] = (double) 278;
      discretize0.setInvertSelection(true);
      doubleArray1[5] = (double) 278;
      doubleArray1[6] = (double) 278;
      doubleArray1[0] = 5.3;
      doubleArray1[8] = (double) 278;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[3];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = (double) 278;
      doubleArray4[1] = 5.3;
      doubleArray4[2] = 5.3;
      doubleArray4[3] = (double) 278;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "$Revision: 8964 $");
      doubleArray0[3] = doubleArray4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.m_CutPoints = doubleArray0;
      discretize0.m_IgnoreClass = true;
      discretize0.m_NumBins = 278;
      discretize0.getInvertSelection();
      discretize0.getOptions();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7229732264381474
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      discretize0.getFindNumBins();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$Revision: 8964 $";
      stringArray0[1] = "$Revision: 8964 $";
      stringArray0[2] = "$Revision: 8964 $";
      stringArray0[3] = "$Revision: 8964 $";
      stringArray0[4] = "$Revision: 8964 $";
      stringArray0[5] = "$Revision: 8964 $";
      discretize0.setOptions(stringArray0);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7257318471278027
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 278;
      doubleArray1[1] = (double) 278;
      doubleArray1[2] = (double) 278;
      doubleArray1[3] = (double) 278;
      discretize0.setInvertSelection(true);
      doubleArray1[5] = (double) 278;
      doubleArray1[6] = (double) 278;
      doubleArray1[0] = 5.3;
      doubleArray1[8] = (double) 278;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[22];
      doubleArray4[0] = (double) 278;
      doubleArray4[1] = 5.3;
      discretize0.setMakeBinary(true);
      doubleArray4[2] = 5.3;
      doubleArray4[3] = (double) 278;
      doubleArray0[3] = doubleArray4;
      discretize0.m_CutPoints = doubleArray0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "$Revision: 8964 $";
      stringArray0[1] = "Z2txm";
      stringArray0[2] = "$Revision: 8964 $";
      discretize0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        discretize0.getCutPoints(4346);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4346
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5102170934221872
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[4] = "";
      Discretize discretize0 = new Discretize("");
      String[] stringArray1 = discretize0.getOptions();
      assertEquals(10, discretize0.getBins());
      assertEquals(4, stringArray1.length);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.460877603278201
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.m_MakeBinary = true;
      discretize0.getAttributeIndices();
      discretize0.listOptions();
      discretize0.setOutputFormat();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      byte[] byteArray0 = new byte[7];
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Sets the desired weight of instances per interval for equal-frequency binning.";
      stringArray0[1] = "Sets the desired weight of instances per interval for equal-frequency binning.";
      Discretize.main(stringArray0);
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      byteArray0[0] = (byte)38;
      discretize0.getCapabilities();
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)34;
      discretize0.getBinRangesString((byte)34);
      discretize0.getMakeBinary();
      String[] stringArray1 = discretize0.getOptions();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(7, stringArray1.length);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9917764774049043
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      double[][] doubleArray0 = new double[4][3];
      discretize0.setInvertSelection(true);
      discretize0.setIgnoreClass(true);
      double[] doubleArray1 = new double[1];
      doubleArray0[1] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[2] = doubleArray2;
      double[] doubleArray3 = new double[22];
      doubleArray3[0] = (double) 278;
      doubleArray3[1] = 5.3;
      discretize0.setMakeBinary(true);
      doubleArray3[2] = 5.3;
      doubleArray3[3] = (double) 278;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "of";
      stringArray0[1] = "$Revision: 8964 $";
      stringArray0[2] = "$Revision: 8964 $";
      stringArray0[3] = "$Revision: 8964 $";
      stringArray0[4] = "$Revision: 8964 $";
      stringArray0[5] = "`1/{q9aJ)Fo:oOcG3";
      stringArray0[6] = "$Revision: 8964 $";
      Discretize.main(stringArray0);
      discretize0.m_CutPoints = doubleArray0;
      int int0 = 79;
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(79);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 79
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8807342062201364
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("Kn3Ru! SYV");
      discretize0.setInvertSelection(false);
      discretize0.setUseBinNumbers(true);
      discretize0.setUseEqualFrequency(true);
      discretize0.getBinRangesString(86);
      discretize0.getOptions();
      assertTrue(discretize0.getUseBinNumbers());
      assertTrue(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.205464322156926
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getInvertSelection();
      String[] stringArray0 = discretize0.getOptions();
      discretize0.listOptions();
      discretize0.setOptions(stringArray0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Discretize discretize0 = new Discretize("Dwl\"Tax!x1K");
      String string0 = null;
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndices((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8003780070989173
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yOS{*");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "!erts;qG");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Discretize discretize0 = new Discretize("!erts;qG");
      discretize0.setInvertSelection(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.getInvertSelection();
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(7, stringArray0.length);
      
      discretize0.getCapabilities();
      discretize0.setOutputFormat();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize("UOwCOa 2~Q/I k");
      discretize0.getUseEqualFrequency();
      int int0 = 68;
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8871137915470904
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.m_MakeBinary = true;
      discretize0.getOptions();
      discretize0.setOutputFormat();
      discretize0.getBins();
      Discretize discretize1 = new Discretize("\tSpecifies the (maxim=m) number qf bins to divide num6rc attributes into.\n\t(default = 10)");
      discretize0.setBins(10);
      discretize0.getOptions();
      discretize0.findNumBinsTipText();
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Discretize discretize0 = new Discretize("E;9F}n#c1k");
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 278;
      doubleArray0[1] = (double) 278;
      doubleArray0[2] = (double) 278;
      doubleArray0[3] = (double) 278;
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(278, doubleArray0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(6);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(binarySparseInstance1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize1 = new Discretize();
      // Undeclared exception!
      try { 
        discretize1.calculateCutPointsByEqualFrequencyBinning((-199));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.useBinNumbersTipText();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.binsTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals("Number of bins.", string0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yOS{*");
      char[] charArray0 = new char[9];
      charArray0[7] = 'P';
      charArray0[1] = 'G';
      charArray0[3] = 'G';
      charArray0[4] = 'G';
      charArray0[5] = 'G';
      charArray0[6] = '%';
      charArray0[7] = 'G';
      charArray0[8] = 'G';
      Attribute attribute0 = new Attribute("c[*sa", (List<String>) null);
      int[] intArray0 = new int[9];
      intArray0[0] = (int) 'G';
      intArray0[1] = (int) 'G';
      intArray0[3] = 1;
      intArray0[4] = 4;
      intArray0[5] = (int) '%';
      intArray0[6] = (int) 'G';
      intArray0[7] = (int) 'G';
      Discretize discretize0 = new Discretize("YfNWuu/");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "relational";
      stringArray0[1] = "integer";
      stringArray0[3] = "!erts;qG";
      stringArray0[3] = "real";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 278;
      DenseInstance denseInstance0 = new DenseInstance((-1141.18993339255), doubleArray0);
      denseInstance0.toString();
      // Undeclared exception!
      try { 
        discretize0.input(denseInstance0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8242202192383004
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int[] intArray0 = new int[7];
      intArray0[0] = (-5493);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "=SN7IV";
      stringArray0[1] = "";
      stringArray0[2] = "l@";
      stringArray0[3] = "$6]6W;";
      stringArray0[4] = "kGQf$H";
      stringArray0[5] = "u)Ym=nuIZ}S;s";
      stringArray0[6] = "x120!+\"@41MW9c";
      stringArray0[7] = "\"iTUP";
      stringArray0[8] = ";,or?L`^];y;a~}&fb";
      discretize0.setOptions(stringArray0);
      intArray0[1] = (-3402);
      intArray0[2] = (-1);
      intArray0[3] = 20;
      intArray0[4] = 0;
      intArray0[5] = 2737;
      discretize0.setFindNumBins(true);
      intArray0[6] = 0;
      discretize0.setAttributeIndicesArray(intArray0);
      discretize0.setUseBinNumbers(false);
      discretize0.listOptions();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize("SH\"[\"OiB");
      Range range0 = new Range();
      discretize0.m_DiscretizeCols = range0;
      discretize0.setUseEqualFrequency(false);
      discretize0.getAttributeIndices();
      discretize0.getCutPoints(791);
      discretize0.getInvertSelection();
      discretize0.getUseBinNumbers();
      String string0 = discretize0.makeBinaryTipText();
      assertEquals("Make resulting attributes binary.", string0);
      
      discretize0.setUseBinNumbers(false);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.makeBinaryTipText();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(70);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7229732264381474
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yOS{*");
      char[] charArray0 = new char[9];
      charArray0[7] = 'P';
      charArray0[1] = 'G';
      charArray0[3] = 'G';
      charArray0[4] = 'G';
      charArray0[5] = 'G';
      charArray0[6] = '%';
      charArray0[7] = 'G';
      charArray0[8] = 'G';
      Attribute attribute0 = new Attribute("c[*sa", (List<String>) null);
      int[] intArray0 = new int[9];
      intArray0[0] = (int) 'G';
      intArray0[1] = (int) 'G';
      intArray0[3] = 1;
      intArray0[4] = 4;
      intArray0[5] = (int) '%';
      intArray0[6] = (int) 'G';
      intArray0[7] = (int) 'G';
      Discretize discretize0 = new Discretize("YfNWuu/");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "relational";
      stringArray0[1] = "integer";
      stringArray0[2] = "!erts;qG";
      stringArray0[3] = "real";
      discretize0.setOptions(stringArray0);
      double double0 = discretize0.getDesiredWeightOfInstancesPerInterval();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals((-1.0), double0, 0.01);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8003780070989173
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 278;
      doubleArray1[1] = (double) 278;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "$Revision: 8964 $");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      doubleArray1[2] = (double) 278;
      doubleArray1[3] = (double) 278;
      discretize0.setInvertSelection(true);
      doubleArray1[5] = (double) 278;
      doubleArray1[6] = (double) 278;
      doubleArray1[0] = 5.3;
      doubleArray1[8] = (double) 278;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = (double) 278;
      doubleArray4[1] = 5.3;
      doubleArray4[2] = 5.3;
      doubleArray4[3] = (double) 278;
      doubleArray0[3] = doubleArray4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      discretize0.m_CutPoints = doubleArray0;
      discretize0.m_NumBins = 278;
      discretize0.getInvertSelection();
      discretize0.getOptions();
      discretize0.getCapabilities();
      // Undeclared exception!
      try { 
        discretize0.setOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6163875428420864
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Discretize discretize0 = new Discretize("UOwCOa 2~Q/I k");
      assertFalse(discretize0.getFindNumBins());
      
      SystemInUtil.addInputLine("UOwCOa 2~Q/I k");
      discretize0.m_FindNumBins = true;
      Discretize discretize1 = new Discretize();
      discretize0.getOptions();
      assertTrue(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3090447801453586
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCapabilities();
      discretize0.getOptions();
      String[] stringArray0 = new String[2];
      discretize0.toString();
      discretize0.m_NumBins = 2177;
      stringArray0[0] = "X~o9}(Are_";
      stringArray0[1] = "%R'>d1,FA}roDNWx";
      discretize0.setOptions(stringArray0);
      discretize0.setOutputFormat();
      discretize0.getRevision();
      discretize0.setDesiredWeightOfInstancesPerInterval((-1118.7185));
      String[] stringArray1 = new String[1];
      stringArray1[0] = "X~o9}(Are_";
      discretize0.setOptions(stringArray1);
      discretize0.m_DiscretizeCols = null;
      discretize0.setMakeBinary(false);
      // Undeclared exception!
      try { 
        discretize0.getAttributeIndices();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getRevision();
      discretize0.getRevision();
      discretize0.setDesiredWeightOfInstancesPerInterval(0.0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1363);
      SparseInstance sparseInstance0 = new SparseInstance((SparseInstance) binarySparseInstance0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance(sparseInstance0);
      BinarySparseInstance binarySparseInstance2 = new BinarySparseInstance((Instance) binarySparseInstance1);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(binarySparseInstance2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(false);
      int int0 = 2337;
      // Undeclared exception!
      try { 
        discretize0.findNumBins(2337);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Discretize discretize0 = new Discretize("UOwCOa 2~Q/I k");
      discretize0.toString();
      discretize0.getMakeBinary();
      int int0 = 68;
      int int1 = 2;
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = null;
      try {
        discretize0 = new Discretize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize("UOwCOa 2~Q/I k");
      int int0 = (-1952257859);
      int int1 = (-2386);
      discretize0.getCutPoints((-2386));
      discretize0.attributeIndicesTipText();
      discretize0.setOutputFormat();
      discretize0.setAttributeIndices("wekafiles");
      discretize0.globalInfo();
      discretize0.invertSelectionTipText();
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.output();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0355683846113117
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "-M <num>";
      Discretize discretize0 = new Discretize("-M <num>");
      boolean boolean0 = false;
      discretize0.setFindNumBins(false);
      discretize0.getInvertSelection();
      discretize0.getOptions();
      discretize0.setOutputFormat();
      discretize0.useEqualFrequencyTipText();
      discretize0.setBins(210);
      Discretize discretize1 = new Discretize("first-last");
      discretize1.getOptions();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances(":azGkkqTo L", arrayList0, 210);
      instances0.toString();
      try { 
        discretize1.setInputFormat(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 68;
      Discretize discretize0 = new Discretize("+uea]@#");
      discretize0.getAttributeIndices();
      intArray0[1] = 39;
      int int0 = 2;
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.726844194180083
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Discretize discretize0 = new Discretize("$Revision: 8964 $");
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 278;
      doubleArray0[1] = (double) 278;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "$Revision: 8964 $");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      discretize0.getInvertSelection();
      doubleArray0[2] = (double) 278;
      doubleArray0[3] = (double) 278;
      discretize0.setInvertSelection(true);
      doubleArray0[5] = (double) 278;
      doubleArray0[6] = (double) 278;
      Attribute attribute0 = new Attribute("$Revision: 8964 $", (List<String>) null);
      Discretize discretize1 = new Discretize("#9{,rE.-(}c:+~El3-");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "relational";
      stringArray0[1] = "numeric";
      stringArray0[2] = "integer";
      stringArray0[3] = "c[*sa";
      stringArray0[4] = "@end";
      stringArray0[5] = "#9{,rE.-(}c:+~El3-";
      stringArray0[6] = "#9{,rE.-(}c:+~El3-";
      stringArray0[7] = "c[*sa";
      discretize0.setOptions(stringArray0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Discretize discretize0 = new Discretize("=Z;[x\r*{^3L6Oo0%dF");
      discretize0.listOptions();
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.820853215871297
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize("UOwCOa 2~Q/I k");
      String[] stringArray0 = new String[3];
      discretize0.m_FindNumBins = true;
      stringArray0[0] = "UOwCOa 2~Q/I k";
      stringArray0[1] = "UOwCOa 2~Q/I k";
      stringArray0[2] = "UOwCOa 2~Q/I k";
      Filter.runFilter(discretize0, stringArray0);
      int int0 = 3047;
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(3047);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yOS{*");
      int[] intArray0 = new int[9];
      intArray0[0] = (int) 'G';
      intArray0[1] = (int) 'G';
      intArray0[5] = (int) 'G';
      intArray0[6] = (int) 'G';
      intArray0[7] = (int) 'G';
      intArray0[8] = (int) 'G';
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-848.3), intArray0, 71);
      Discretize discretize0 = new Discretize();
      boolean boolean0 = discretize0.getUseBinNumbers();
      assertEquals(10, discretize0.getBins());
      assertFalse(boolean0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.globalInfo();
      int[] intArray0 = new int[3];
      intArray0[0] = 709;
      intArray0[1] = 1035;
      intArray0[2] = (-1550);
      discretize0.setAttributeIndicesArray(intArray0);
      discretize0.globalInfo();
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      discretize0.desiredWeightOfInstancesPerIntervalTipText();
      discretize0.getDesiredWeightOfInstancesPerInterval();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) (-1550);
      doubleArray0[1] = (double) (-1550);
      doubleArray0[2] = (double) (-1550);
      doubleArray0[3] = (double) (-1550);
      doubleArray0[4] = (double) (-1550);
      doubleArray0[4] = (double) 709;
      SparseInstance sparseInstance0 = null;
      try {
        sparseInstance0 = new SparseInstance((-1416.322257413), doubleArray0, intArray0, 1035);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Discretize discretize0 = new Discretize("UOwCOa 2~Q/I k");
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setUseEqualFrequency(true);
      discretize0.m_UseEqualFrequency = false;
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = new Locale("file://");
      Discretize discretize0 = new Discretize("d8h@}");
      discretize0.setMakeBinary(false);
      discretize0.getBinRangesString((-2013265917));
      // Undeclared exception!
      try { 
        discretize0.findNumBins(1000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Discretize discretize0 = new Discretize("E;9F}n#c1k");
      Discretize discretize1 = new Discretize();
      int int0 = discretize1.m_ClassIndex;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) list1);
      Attribute attribute0 = new Attribute("Kn3Ru! SYV", list2);
      discretize0.getBinRangesString((-1));
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SystemInUtil.addInputLine((String) null);
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.attributeIndicesTipText();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Specify range of attributes to act on. This is a comma separated list of attribute indices, with \"first\" and \"last\" valid values. Specify an inclusive range with \"-\". E.g: \"first-3,5,6-10,last\".", string0);
  }
}
