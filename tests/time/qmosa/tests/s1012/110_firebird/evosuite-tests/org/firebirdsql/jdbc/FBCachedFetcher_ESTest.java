/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:19:20 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBLocalTransaction;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.AbstractConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte) (-55);
      byteArray1[2] = (byte) (-116);
      byteArray1[3] = (byte)64;
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-37);
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte) (-37);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      linkedList0.toArray();
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte) (-37);
      byteArray5[1] = (byte) (-37);
      byteArray5[2] = (byte)1;
      byteArray5[3] = (byte) (-37);
      byteArray5[4] = (byte) (-37);
      byteArray5[5] = (byte) (-37);
      byteArray0[4] = byteArray5;
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][4];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-36);
      byteArray1[1] = (byte)100;
      byteArray1[2] = (byte) (-76);
      byteArray1[3] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)53;
      byteArray2[1] = (byte) (-76);
      byteArray2[2] = (byte)100;
      byteArray2[3] = (byte)100;
      byteArray2[4] = (byte)100;
      byteArray2[5] = (byte) (-76);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte)53;
      byteArray4[1] = (byte) (-76);
      byteArray4[2] = (byte) (-1);
      byteArray4[3] = (byte)100;
      byteArray4[4] = (byte) (-1);
      byteArray4[5] = (byte) (-76);
      byteArray4[6] = (byte)100;
      byteArray4[7] = (byte)53;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-1);
      byteArray5[1] = (byte)100;
      byteArray5[2] = (byte) (-1);
      byteArray5[3] = (byte) (-76);
      byteArray5[4] = (byte) (-1);
      byteArray5[5] = (byte) (-44);
      byteArray5[6] = (byte) (-1);
      byteArray5[7] = (byte) (-36);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte) (-1);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[7];
      byteArray8[0] = (byte) (-76);
      byteArray8[1] = (byte) (-76);
      byteArray8[2] = (byte)53;
      byteArray8[3] = (byte)79;
      byteArray8[4] = (byte) (-1);
      byteArray8[5] = (byte) (-1);
      byteArray8[6] = (byte) (-36);
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray9 = new byte[1][4];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) ".E");
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate1.and(predicate2);
      predicate0.and(predicate3);
      Predicate<Object> predicate4 = predicate0.or(predicate0);
      predicate0.and(predicate4);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate0.or(predicate5);
      linkedList0.removeIf(predicate6);
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction((FBManagedConnection) null, (AbstractConnection) null);
      byte[][] byteArray0 = new byte[2][5];
      linkedList0.addFirst(byteArray0);
      boolean boolean1 = fBCachedFetcher0.isLast();
      assertFalse(boolean1 == boolean0);
      
      fBCachedFetcher0.isEmpty();
      boolean boolean2 = fBCachedFetcher0.next();
      assertFalse(boolean2);
      
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7329329910102946
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isAfterLast();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      predicate3.negate();
      Predicate<Object> predicate4 = predicate1.and(predicate2);
      predicate0.or(predicate3);
      Predicate.isEqual((Object) predicate4);
      predicate3.and(predicate4);
      fBCachedFetcher0.beforeFirst();
      Predicate<Object> predicate5 = predicate0.or(predicate3);
      Predicate<Object> predicate6 = predicate0.negate();
      predicate0.and(predicate5);
      Predicate<Object> predicate7 = predicate0.negate();
      predicate7.or(predicate0);
      Predicate<Object> predicate8 = predicate0.or(predicate7);
      predicate8.or(predicate6);
      linkedList0.removeIf(predicate8);
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction((FBManagedConnection) null, (AbstractConnection) null);
      byte[][] byteArray0 = new byte[2][5];
      linkedList0.addFirst(byteArray0);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate4);
      Predicate<Object> predicate7 = predicate5.or(predicate1);
      Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate8 = predicate6.and(predicate0);
      predicate2.or(predicate8);
      predicate4.negate();
      Predicate<Object> predicate9 = predicate7.and(predicate5);
      Predicate<Object> predicate10 = predicate7.negate();
      predicate10.or(predicate8);
      predicate10.or(predicate9);
      predicate9.or(predicate3);
      linkedList0.removeIf(predicate10);
      FBLocalTransaction fBLocalTransaction0 = new FBLocalTransaction((FBManagedConnection) null, (AbstractConnection) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isEmpty();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte) (-55);
      byteArray1[2] = (byte) (-116);
      linkedList0.addFirst(byteArray0);
      byte[][] byteArray2 = new byte[4][6];
      byte[] byteArray3 = new byte[0];
      byteArray2[0] = byteArray3;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      linkedList0.add(byteArray2);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      Object object0 = new Object();
      linkedList2.removeFirstOccurrence(object0);
      linkedList1.parallelStream();
      linkedList1.add(byteArray0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      linkedList1.replaceAll(unaryOperator0);
      linkedList0.clear();
      linkedList2.toArray();
      linkedList1.offerLast(byteArray0);
      linkedList1.replaceAll(unaryOperator0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-37);
      linkedList0.add(byteArray0);
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte) (-37);
      byteArray0[2] = byteArray3;
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      databaseParameterBufferImp2.deepCopy();
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      Object object0 = new Object();
      Object object1 = new Object();
      linkedList0.remove(object1);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.containsAll(linkedList0);
      linkedList2.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte) (-55);
      byteArray1[2] = (byte)76;
      byteArray1[3] = (byte)64;
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = (DatabaseParameterBufferImp)databaseParameterBufferImp2.deepCopy();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      databaseParameterBufferImp3.deepCopy();
      byte[][] byteArray2 = new byte[5][1];
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBuffer0.deepCopy();
      isc_stmt_handle_impl1.getRsr_rdb();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      databaseParameterBufferImp2.deepCopy();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 2736, 2972, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte) (-55);
      byteArray1[2] = (byte) (-116);
      byteArray1[3] = (byte)64;
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = (DatabaseParameterBufferImp)databaseParameterBufferImp2.deepCopy();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      databaseParameterBufferImp3.deepCopy();
      byte[][] byteArray2 = new byte[5][1];
      linkedList0.addFirst(byteArray2);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBuffer0.deepCopy();
      isc_stmt_handle_impl1.getRsr_rdb();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      databaseParameterBufferImp2.deepCopy();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte)76;
      byteArray1[2] = (byte) (-116);
      byteArray1[3] = (byte)64;
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp2.deepCopy();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      databaseParameterBuffer0.deepCopy();
      byte[][] byteArray2 = new byte[5][1];
      linkedList0.addFirst(byteArray2);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      Object object0 = new Object();
      linkedList1.remove((Object) databaseParameterBufferImp1);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList1.addFirst(byteArray2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0332653667861926
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[9];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      linkedList0.clone();
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[8] = fBCachedBlobField0;
      FBCachedBlobField[] fBCachedBlobFieldArray1 = linkedList0.toArray(fBCachedBlobFieldArray0);
      linkedList0.toArray(fBCachedBlobFieldArray1);
      linkedList0.offerLast((byte[][]) null);
      linkedList0.stream();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.updateRow(byteArray0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      byte[][] byteArray0 = new byte[1][5];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 1023;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-37);
      linkedList0.add(byteArray0);
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte) (-37);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      linkedList0.toArray();
      byteArray0[0] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte) (-37);
      byteArray5[1] = (byte) (-37);
      byteArray5[2] = (byte)1;
      linkedList0.toArray();
      byteArray5[3] = (byte) (-37);
      byteArray5[4] = (byte) (-37);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[8];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobField0;
      linkedList1.toArray(fBCachedBlobFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative((byte) (-37));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte) (-55);
      byteArray1[2] = (byte) (-116);
      byteArray1[3] = (byte)64;
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.addFirst(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      boolean boolean1 = fBCachedFetcher0.isFirst();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte) (-55);
      byteArray1[2] = (byte) (-116);
      byteArray1[3] = (byte)64;
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray2 = new byte[5][1];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)76;
      byteArray3[1] = (byte) (-55);
      byteArray3[2] = (byte) (-43);
      byteArray2[3] = byteArray3;
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(647);
      byte[][] byteArray0 = new byte[9][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      GDSType.getType("");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)56;
      byteArray1[2] = (byte)43;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)0;
      linkedList0.offerLast(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.addFirst(byteArray0);
      linkedList1.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      delayQueue1.poll((long) (byte) (-116), timeUnit0);
      jMXPrincipal0.equals((Object) null);
      linkedList2.removeFirstOccurrence(delayQueue1);
      linkedList0.parallelStream();
      linkedList2.add(byteArray0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      linkedList2.replaceAll(unaryOperator0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.clear();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList1.toArray();
      linkedList1.offerLast(byteArray0);
      linkedList4.add(byteArray0);
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      linkedList2.replaceAll(unaryOperator1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((byte) (-37));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-37);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.toArray();
      linkedList0.toArray();
      linkedList1.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp2.removeExtensionParams();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.parallelStream();
      linkedList1.add(byteArray0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.replaceAll(unaryOperator0);
      linkedList2.clear();
      linkedList2.toArray();
      linkedList0.offerLast(byteArray0);
      try { 
        fBCachedFetcher0.absolute((byte)0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0069724918931833
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      assertTrue(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)76;
      byteArray1[1] = (byte) (-55);
      byteArray1[2] = (byte)76;
      byteArray1[3] = (byte)64;
      linkedList0.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.toArray();
      linkedList1.addFirst(byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeExtensionParams();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl1.getRsr_rdb();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp5, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      delayQueue0.poll((long) (byte) (-116), timeUnit0);
      jMXPrincipal0.equals((Object) null);
      linkedList2.removeFirstOccurrence(object0);
      linkedList0.parallelStream();
      linkedList2.add(byteArray0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      linkedList0.clear();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.toArray();
      linkedList3.offerLast(byteArray0);
      linkedList3.add(byteArray0);
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      linkedList3.replaceAll(unaryOperator1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.absolute((byte) (-37));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.addFirst(byteArray0);
      linkedList0.add(byteArray0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      delayQueue0.poll((long) (byte) (-116), timeUnit0);
      jMXPrincipal0.equals((Object) null);
      linkedList0.removeFirstOccurrence(object0);
      linkedList0.parallelStream();
      linkedList1.add(byteArray0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4387424672740177
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)56;
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[0];
      linkedList0.toArray(fBCachedBlobFieldArray0);
      byteArray1[2] = (byte)43;
      byteArray1[3] = (byte)0;
      FBCachedBlobField[] fBCachedBlobFieldArray1 = new FBCachedBlobField[6];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray1[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[5] = fBCachedBlobField0;
      linkedList0.toArray(fBCachedBlobFieldArray1);
      linkedList0.offerLast(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative((byte)0);
      fBCachedFetcher0.close();
      fBCachedFetcher1.isBeforeFirst();
      fBCachedFetcher0.absolute((byte)43);
      linkedList0.removeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[9];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[8] = fBCachedBlobField0;
      FBCachedBlobField[] fBCachedBlobFieldArray1 = linkedList0.toArray(fBCachedBlobFieldArray0);
      linkedList0.toArray(fBCachedBlobFieldArray1);
      linkedList0.offerLast((byte[][]) null);
      linkedList0.stream();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow(byteArray0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-37);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-37);
      linkedList0.add(byteArray0);
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte) (-37);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      linkedList0.toArray();
      byteArray0[0] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte) (-37);
      byteArray5[1] = (byte) (-37);
      byteArray5[2] = (byte)1;
      linkedList0.toArray();
      byteArray5[3] = (byte) (-37);
      byteArray5[4] = (byte) (-37);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[8];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobField0;
      linkedList1.toArray(fBCachedBlobFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      linkedList0.addFirst(byteArray0);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
      
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean1 = fBCachedFetcher1.isLast();
      assertFalse(boolean1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)56;
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[0];
      linkedList0.toArray(fBCachedBlobFieldArray0);
      byteArray1[2] = (byte)43;
      byteArray1[3] = (byte)0;
      FBCachedBlobField[] fBCachedBlobFieldArray1 = new FBCachedBlobField[6];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray1[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[2] = fBCachedBlobField0;
      FBCachedBlobField[] fBCachedBlobFieldArray2 = new FBCachedBlobField[4];
      fBCachedBlobFieldArray2[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray2[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray2[3] = fBCachedBlobField0;
      linkedList0.toArray(fBCachedBlobFieldArray2);
      linkedList0.stream();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.addFirst(byteArray0);
      linkedList1.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      delayQueue1.poll((long) (byte) (-116), timeUnit0);
      jMXPrincipal0.equals((Object) null);
      linkedList0.parallelStream();
      linkedList2.add(byteArray0);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      linkedList2.replaceAll(unaryOperator0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.clear();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      linkedList1.toArray();
      linkedList1.offerLast(byteArray0);
      linkedList4.add(byteArray0);
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      linkedList2.replaceAll(unaryOperator1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((byte) (-37));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][1];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.offerFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.offerLast(byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(2503);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)56;
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[0];
      linkedList0.toArray(fBCachedBlobFieldArray0);
      byteArray1[2] = (byte)43;
      byteArray1[3] = (byte)0;
      FBCachedBlobField[] fBCachedBlobFieldArray1 = new FBCachedBlobField[6];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray1[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray1[2] = fBCachedBlobField0;
      FBCachedBlobField[] fBCachedBlobFieldArray2 = new FBCachedBlobField[4];
      fBCachedBlobFieldArray2[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray2[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray2[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray2[3] = fBCachedBlobField0;
      linkedList0.toArray(fBCachedBlobFieldArray2);
      linkedList0.stream();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
