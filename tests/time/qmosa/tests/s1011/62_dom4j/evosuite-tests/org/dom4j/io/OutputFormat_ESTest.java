/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:27:02 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.121903450082589
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setPadText(false);
      stringArray0[1] = "-newlines";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(false);
      outputFormat0.setIndent("6!");
      stringArray0[2] = "+4s2G.,<6";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize((-399103791));
      outputFormat0.setTrimText(false);
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "dV^xI9P";
      stringArray0[1] = "-omitEncoding";
      stringArray0[3] = "R#_$Xu/4&MVV7";
      stringArray0[4] = "";
      stringArray0[5] = "7@9&Lb";
      stringArray0[6] = "-Z?#WA#MvTFU";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isXHTML();
      String string0 = OutputFormat.STANDARD_INDENT;
      assertEquals("  ", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat("");
      String string1 = "vO^^|\"";
      outputFormat0.setIndent("");
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterNTags(71);
      outputFormat0.setIndentSize(0);
      outputFormat0.setLineSeparator("vO^^|\"");
      outputFormat0.setPadText(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.950114608371609
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C", true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize((-911));
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(false);
      assertEquals("", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("-suppressDeclaration");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "T~f)3Ja6(S])<R&";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "C";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = "4_qGe^b#j";
      OutputFormat outputFormat2 = new OutputFormat((String) null, true);
      outputFormat2.setIndentSize(0);
      outputFormat1.setTrimText(true);
      outputFormat0.setIndent(false);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8355442696465665
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      outputFormat0.setIndent("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize((-1647));
      outputFormat0.setIndent(false);
      stringArray0[0] = "-xhtml3cg5:xf_})-.";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize(1);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setNewLineAfterNTags((-389));
      outputFormat0.setIndent("`<uAKPli");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(3078);
      int int0 = 3089;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-389));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -389
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.855868606181163
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 6002);
      OutputFormat outputFormat1 = new OutputFormat("vO^^|\"");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator("vO^^|\"");
      OutputFormat outputFormat3 = new OutputFormat("#S$V_A <p.u", true);
      outputFormat3.setPadText(false);
      outputFormat2.setAttributeQuoteCharacter('\'');
      int int0 = 1;
      int int1 = (-1412);
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-1412));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1412
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.861445611758168
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-encoding");
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-encoding";
      stringArray0[5] = "-encoding";
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterNTags((-1741));
      outputFormat0.parseOptions(stringArray0, 762);
      outputFormat2.setIndentSize(1621);
      outputFormat0.setTrimText(true);
      outputFormat2.setIndent(true);
      assertEquals("-encoding", outputFormat2.getEncoding());
      
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat3.getIndent());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1837296503255472
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      boolean boolean0 = true;
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-encoding");
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("");
      String string0 = "[8dN6lA9n";
      outputFormat0.setLineSeparator("[8dN6lA9n");
      String string1 = "";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9191634219014877
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setPadText(false);
      stringArray0[1] = "-trimText";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(false);
      outputFormat0.setIndent("6!");
      stringArray0[2] = "+4s2G.,<6";
      stringArray0[3] = "G`-ag6=DOY|'|n%";
      stringArray0[4] = "";
      outputFormat1.setOmitEncoding(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.isOmitEncoding();
      outputFormat2.setNewlines(false);
      outputFormat2.isOmitEncoding();
      outputFormat2.getIndent();
      boolean boolean0 = false;
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('S');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (S)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.16345322314015
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "\n";
      outputFormat0.setNewLineAfterNTags(39);
      stringArray0[3] = "\n";
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      stringArray0[4] = "\n";
      stringArray0[5] = "\n";
      stringArray0[6] = "\n";
      stringArray0[7] = "\n";
      outputFormat0.parseOptions(stringArray0, 1649);
      outputFormat0.setPadText(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("\n");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat0.getAttributeQuoteCharacter();
      assertEquals(39, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat.createPrettyPrint();
      boolean boolean0 = outputFormat1.isPadText();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8284807387189113
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding("j]ehPME8tgH%=R");
      outputFormat0.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setOmitEncoding(false);
      assertEquals("j]ehPME8tgH%=R", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qW5mL@{RGW>QLcEl8", true, "qW5mL@{RGW>QLcEl8");
      outputFormat0.isNewlines();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "qW5mL@{RGW>QLcEl8";
      stringArray0[1] = "";
      stringArray0[2] = "qW5mL@{RGW>QLcEl8";
      stringArray0[3] = "qW5mL@{RGW>QLcEl8";
      stringArray0[4] = "qW5mL@{RGW>QLcEl8";
      stringArray0[5] = "qW5mL@{RGW>QLcEl8";
      stringArray0[6] = "qW5mL@{RGW>QLcEl8";
      stringArray0[7] = "qW5mL@{RGW>QLcEl8";
      stringArray0[8] = "qW5mL@{RGW>QLcEl8";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("!K#c:oA");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isXHTML());
      assertEquals("!K#c:oA", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals('\"', char0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.450507848988659
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat0.setIndent("-xhtmlRE");
      assertFalse(outputFormat0.isPadText());
      assertEquals("-xhtmlRE", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat1.setIndentSize((-804));
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isPadText());
      assertEquals("", outputFormat1.getIndent());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isXHTML());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
      
      outputFormat2.setIndent("");
      assertTrue(outputFormat2.isNewlines());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isOmitEncoding());
      assertTrue(outputFormat2.isPadText());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7055388825605595
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "3cg5:xf_})-.";
      stringArray0[1] = "";
      stringArray0[2] = "N}NuYBxf)k\"W5`)Wzs%";
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterNTags(6670);
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("3cg5:xf_})-.");
      outputFormat2.setEncoding("-suppressDeclaration");
      outputFormat2.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat2.isOmitEncoding();
      outputFormat1.setNewlines(false);
      outputFormat1.isOmitEncoding();
      OutputFormat outputFormat3 = new OutputFormat("", true, "N}NuYBxf)k\"W5`)Wzs%");
      outputFormat3.getIndent();
      outputFormat3.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('C');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (C)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", false);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "vO^^|\"";
      stringArray0[1] = "K)H";
      stringArray0[2] = "c&'`";
      stringArray0[3] = "vO^^|\"";
      stringArray0[4] = "13F1X&N+jbN";
      stringArray0[5] = "K)H";
      stringArray0[6] = "vO^^|\"";
      stringArray0[7] = "K)H";
      stringArray0[8] = "K)H";
      outputFormat0.setIndent(false);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isTrimText());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isPadText());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isOmitEncoding());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertTrue(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8381597883911174
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-encoding");
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("[8dN6lA9n");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      assertEquals("[8dN6lA9n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4459012824802544
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setPadText(false);
      outputFormat1.isTrimText();
      outputFormat1.setTrimText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize(1080);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.isNewlines();
      outputFormat0.getNewLineAfterNTags();
      outputFormat1.setIndent("");
      outputFormat0.setOmitEncoding(false);
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.isSuppressDeclaration();
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 1080);
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "3cg5:xf_})-.";
      stringArray0[1] = "";
      stringArray0[2] = "N}NuYBxf)k\"W5`)Wzs%";
      stringArray0[3] = "";
      stringArray0[4] = "9rNt}|qCVAw&~e<[8";
      stringArray0[5] = "Gax?:T";
      stringArray0[6] = "l)_GZjF.a";
      outputFormat0.setIndentSize(1);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(0);
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("vO^^|\"");
      assertEquals("vO^^|\"", outputFormat0.getIndent());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0103904401323787
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(false);
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("G[b[>o");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("-suppressDeclaration");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(false);
      assertEquals("-suppressDeclaration", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("l3_");
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setEncoding("l3_");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize(34);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isPadText();
      outputFormat0.isTrimText();
      outputFormat1.setPadText(false);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0306023415568295
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals("\n", outputFormat2.getLineSeparator());
      
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setXHTML(false);
      outputFormat1.isNewlines();
      OutputFormat.createCompactFormat();
      outputFormat2.setLineSeparator("");
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat0.setIndent("vO^^|\"");
      outputFormat0.setIndentSize(735);
      OutputFormat outputFormat2 = new OutputFormat("vO^^|\"", false, "");
      outputFormat0.setIndent("WKCIep");
      assertEquals("WKCIep", outputFormat0.getIndent());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "S*T;J!&Dk[[\\eV2+juG";
      OutputFormat outputFormat0 = new OutputFormat("S*T;J!&Dk[[eV2+juG");
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewlines(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isExpandEmptyElements();
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('e');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (e)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2422326546673657
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C", true);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "C";
      stringArray0[1] = "C";
      stringArray0[2] = "C";
      stringArray0[3] = "C";
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.parseOptions(stringArray0, 93);
      outputFormat1.setNewLineAfterNTags(2);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(93);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setIndent(true);
      outputFormat0.setXHTML(true);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2912668801316993
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("C", true);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setNewLineAfterNTags(2);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "C";
      stringArray0[2] = "C";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 3584);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setLineSeparator("C");
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent("");
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      boolean boolean0 = outputFormat1.isExpandEmptyElements();
      assertEquals(2, outputFormat1.getNewLineAfterNTags());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.054554597655081
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setPadText(true);
      stringArray0[1] = "(XI/1`Er";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(false);
      outputFormat0.setIndent("6!");
      outputFormat1.parseOptions(stringArray0, 6);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.parseOptions(stringArray0, 1662);
      outputFormat0.setIndentSize(6);
      outputFormat1.setTrimText(true);
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("      ", outputFormat0.getIndent());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "S*T;J!&Dk[[eV2+juG";
      stringArray0[1] = "S*T;J!&Dk[[eV2+juG";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("S*T;J!&Dk[[eV2+juG");
      outputFormat0.setEncoding("S*T;J!&Dk[[eV2+juG");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('O');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (O)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, "dCiy^MT");
      outputFormat0.setEncoding("T~f)3Ja6(S])");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('r');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (r)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.302834596050276
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      outputFormat0.setIndent("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize((-1647));
      outputFormat0.setIndent(false);
      stringArray0[0] = "-xhtml3cg5:xf_})-.";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("-xhtml3cg5:xf_})-.");
      outputFormat0.setIndentSize(1);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setNewLineAfterNTags((-389));
      outputFormat0.setIndent("`uAKPli");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.848917468258857
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setPadText(false);
      stringArray0[1] = "-trimText";
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-trimText");
      outputFormat0.parseOptions(stringArray0, 6);
      outputFormat0.parseOptions(stringArray0, 743);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(743);
      outputFormat0.setTrimText(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.8908198977944366
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("");
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 1829);
      assertEquals("\n", outputFormat1.getLineSeparator());
      
      outputFormat1.setLineSeparator("");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat1.setIndent("-lineSeparator");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isPadText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.getEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(outputFormat0.isOmitEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.8550964054089625
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmpty";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("`uAKPli");
      outputFormat0.setLineSeparator("-expandEmpty");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding("j]ehPME8tgH%=R");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(false);
      assertEquals("-expandEmpty", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.314498869391891
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Invalid attribute quote character (";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "WKCIesjY?Sq_'";
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlG`-ag6=DOY|'|n%");
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("-xhtmlG`-ag6=DOY|'|n%", outputFormat1.getIndent());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat2 = new OutputFormat("~:i1#RtP;=K&)qZy", false);
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isTrimText());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertEquals("~:i1#RtP;=K&)qZy", outputFormat2.getIndent());
      assertFalse(outputFormat2.isPadText());
      
      OutputFormat outputFormat3 = new OutputFormat("q@~", true, "-trimText");
      outputFormat3.parseOptions(stringArray0, 2415);
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isPadText());
      assertEquals("-trimText", outputFormat3.getEncoding());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertEquals("q@~", outputFormat3.getIndent());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat4.isPadText());
      assertEquals("  ", outputFormat4.getIndent());
      assertEquals("UTF-8", outputFormat4.getEncoding());
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
      assertTrue(outputFormat4.isNewLineAfterDeclaration());
      assertFalse(outputFormat4.isSuppressDeclaration());
      assertTrue(outputFormat4.isNewlines());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5629483925092509
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText");
      outputFormat0.setIndent("-trimText");
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-xhtml1mDXHzsrHw8\u0000g");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-xhtml1mDXHzsrHw8\u0000g";
      outputFormat0.parseOptions(stringArray0, 6);
      outputFormat0.parseOptions(stringArray0, 6);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndent("j D /~M?8]-dnOu");
      assertEquals("j D /~M?8]-dnOu", outputFormat0.getIndent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("5VlLv(!z@Q$df R*O", false, (String) null);
      assertEquals("5VlLv(!z@Q$df R*O", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.690446843874878
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Invalid attribute quote character (";
      outputFormat0.setLineSeparator("Invalid attribute quote character (");
      stringArray0[1] = null;
      outputFormat0.setIndent("-expandEmpty");
      outputFormat0.setIndentSize((-1));
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent((String) null);
      assertEquals("Invalid attribute quote character (", outputFormat0.getLineSeparator());
  }
}
