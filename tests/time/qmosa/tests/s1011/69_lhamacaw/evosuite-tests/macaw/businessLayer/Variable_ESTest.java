/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:03:45 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.Locale;
import java.util.Set;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0533214504847934
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      derivedVariable0.notes = null;
      derivedVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setLabel("");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable0.getDisplayName();
      derivedVariable0.setColumnEnd("");
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      derivedVariable0.getValueLabels();
      String string1 = derivedVariable0.getNotes();
      assertNull(string1);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      boolean boolean1 = derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertFalse(boolean1 == boolean0);
      
      String string2 = derivedVariable0.getCodeBookNumber();
      assertNotNull(string2);
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList0);
      System.setCurrentTimeMillis((-1799L));
      derivedVariable1.removeSourceVariables(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      String string3 = derivedVariable0.getYear();
      assertNotNull(string3);
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable1.removeSourceVariable(rawVariable0);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.746449670977886
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setColumnStart("");
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("=cdlc9I9O ($={A6RX");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      derivedVariable0.getFilePath();
      user0.setFirstName("=cdlc9I9O ($={A6RX");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("=cdlc9I9O ($={A6RX", rawVariable1.getCodeBookNumber());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setIdentifier((-2075900857));
      derivedVariable0.setNotes("'eao;.3/O/Yg3N4i#c");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getFilePath();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7230672778425045
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("UNABLE_TO_GET_ORIGINAL_USER");
      derivedVariable0.setColumnEnd("variable.isCoded.label");
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaned(true);
      derivedVariable0.isCleaned();
      assertEquals("UNABLE_TO_GET_ORIGINAL_USER", derivedVariable0.getFilePath());
      
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.22542164156719
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("H~}bJ4V[& $]");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getDisplayItemIdentifier();
      rawVariable0.setCategory("Tt0m0`*Pd3wQdf]$[/{");
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      arrayList1.clear();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerms(arrayList2);
      rawVariable2.setColumnEnd("");
      rawVariable1.setCodeBookNumber("Tt0m0`*Pd3wQdf]$[/{");
      rawVariable1.getDisplayName();
      rawVariable0.createVariableSummary();
      User user0 = new User("/CjU=", "Tt0m0`*Pd3wQdf]$[/{");
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      rawVariable1.getForm();
      assertEquals("Tt0m0`*Pd3wQdf]$[/{", rawVariable1.getCodeBookNumber());
      
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList3);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6683905069672833
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("-wtFMB#| *#HIqmQJ`S");
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCodeBookNumber("-wtFMB#| *#HIqmQJ`S");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      derivedVariable0.setName((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3737882323911377
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Object object0 = new Object();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCleaningStatus();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.727031997134934
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setColumnStart("");
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName("variable.questionNumber.label");
      assertEquals("variable.questionNumber.label", derivedVariable0.getName());
      
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      user0.setUserID("variable.isCoded.label");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      DerivedVariable.validateFields(derivedVariable0);
      rawVariable0.getColumnStart();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9130492873822047
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      User user0 = new User();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      assertFalse(derivedVariable2.isCleaned());
      
      ArrayList<MacawChangeEvent> arrayList2 = new ArrayList<MacawChangeEvent>();
      assertTrue(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "qariabUe.questionNumber.label";
      rawVariable0.codeBookNumber = "qariabUe.questionNumber.label";
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      supportingDocument0.setFilePath("NOP?T");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCleaned();
      User user0 = new User();
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.8114537739998164
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setQuestionNumber("lP3C*wz{;0\"C,Y7x");
      User user0 = new User();
      user0.setAffiliation("1q2DW}");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.removeSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("[Bw2^Qr=t.XU");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList1);
      derivedVariable1.getIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setFilePath((String) null);
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("lP3C*wz{;0\"C,Y7x", derivedVariable0.getQuestionNumber());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7507222180102056
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("variable.isCoded.label");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.isCoded.label", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.917412204314708
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      rawVariable0.getNotes();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.iterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add((SupportingDocument) null);
      arrayList0.add((SupportingDocument) null);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setName("");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      supportingDocument0.setDescription("");
      rawVariable1.columnEnd = "general.error.promotesSecurityRisk";
      rawVariable1.columnStart = "general.error.promotesSecurityRisk";
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("macaw.businessLayer.Variable", "");
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      user0.setPassword("UNABLE_TO_UPDATE_ONTOLOGY_TERM");
      derivedVariable0.questionNumber = "";
      rawVariable1.setCodeBookNumber("`SURXY<na[bG 2eovE ");
      derivedVariable0.getNotes();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      rawVariable1.getDisplayName();
      assertEquals("general.error.promotesSecurityRisk", rawVariable1.getColumnStart());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.3142178781682268
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      derivedVariable0.setCleaningDescription("`SURXY<na[bG 2eovE ");
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine2("^w%g");
      user0.setAffiliation("[Bw2^Qr=t.XU");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("`SURXY<na[bG 2eovE ");
      rawVariable1.setColumnStart("-LHA");
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getCategory();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      arrayList1.containsAll(arrayList0);
      rawVariable1.removeOntologyTerms(arrayList1);
      rawVariable1.setIdentifier(1812);
      rawVariable0.setNotes("i+g<");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.setCodeBookNumber("-LHA");
      derivedVariable1.setOntologyTerms(arrayList1);
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("`SURXY<na[bG 2eovE ", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7468629062504872
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      derivedVariable0.setCleaningDescription("l~n)w");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setAffiliation("variable.columnStart.label");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable1.getColumnEnd();
      derivedVariable0.getCodeBookNumber();
      assertEquals("`SURXY<na[bG 2eovE ", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.73500216453779
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "`4%]Li";
      rawVariable0.getColumnEnd();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("`4%]Li", "`4%]Li");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      derivedVariable1.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("`4%]Li");
      supportingDocument1.clone();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.columnStart = "";
      derivedVariable1.getNotes();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.7341511636867897
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setLabel("TwQ");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.addOntologyTerms(arrayList1);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.setLabel("general.error.promotesSecurityRisk");
      derivedVariable0.setCoded(false);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getLabel();
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getLabel());
      
      rawVariable0.clone();
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9177312411772705
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      supportingDocument0.setFilePath("Tt0m0`*Pd3wQdf]$[/{");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.isCleaned();
      User user0 = new User();
      rawVariable0.setColumnEnd("5.:+|8");
      rawVariable0.setCodeBookNumber("`SURXY<na[bG 2eovE ");
      rawVariable0.getDisplayName();
      rawVariable0.createVariableSummary();
      User user1 = new User("", "-");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getForm();
      assertEquals("`SURXY<na[bG 2eovE ", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      derivedVariable0.setCleaningDescription("l~n)w");
      derivedVariable0.getFilePath();
      derivedVariable0.setColumnEnd("");
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("IFD<gp*#L");
      ontologyTerm0.setIdentifier(1);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("`SURXY<na[bG 2eovE ", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.349421283797024
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      user0.setAffiliation("[Bw2^Qr=t.XU");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6195259631210703
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      derivedVariable0.columnStart = "";
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setDescription("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ontologyTerm0.setDescription((String) null);
      arrayList0.iterator();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4904032277870636
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("general.error.promotesSecurityRisk");
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getFilePath();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getNotes());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.745655870184085
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setColumnStart("");
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("=cdlc9I9O ($={A6RX");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName("variable.questionNumber.label");
      ValueLabel valueLabel1 = new ValueLabel();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setQuestionNumber("=cdlc9I9O ($={A6RX");
      rawVariable2.createVariableSummary();
      User user0 = new User("", "");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      assertEquals("variable.questionNumber.label", derivedVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.750606008223237
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "FrqQ'1X28Ov_3S";
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(2359);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.form = "UNABLE_TO_DELETE_SUPPORTING_DOCUMENT";
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.clone();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      
      rawVariable0.getName();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAvailability();
      assertEquals("", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "G*phP\"xumJ3";
      derivedVariable0.setYear("G*phP\"xumJ3");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("eY9k'\"QYiQ:EL3");
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = null;
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.759288438433745
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("=message==");
      rawVariable0.notes = "=message==";
      Variable.validateFields(rawVariable0);
      rawVariable0.codeBookNumber = "=message==";
      rawVariable0.clone();
      rawVariable0.isCoded();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      Variable.validateFields(rawVariable0);
      assertEquals("=message==", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.7822612806245304
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      derivedVariable0.setCleaningDescription("l~n)w");
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      User user1 = new User("`SURXY<na[bG 2eovE ", "L");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setDescription("variable.alternativeVariable.label");
      arrayList0.iterator();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.createVariableSummary();
      derivedVariable1.clone();
      derivedVariable0.getAlias();
      derivedVariable0.clone();
      assertEquals("`SURXY<na[bG 2eovE ", derivedVariable0.getName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      derivedVariable1.setIdentifier((-1091));
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7075862036882743
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      arrayList0.removeAll(set0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getYear();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.726516755607659
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("[!$A`&G7u7dZeY");
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.getIdentifier();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("general.error.promotesSecurityRisk");
      assertEquals("general.error.promotesSecurityRisk", rawVariable1.getForm());
      
      ontologyTerm0.setDescription("UNABLE_TO_VALIDATE_USER");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCleaningStatus();
      rawVariable0.getQuestionNumber();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.841870754683299
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.getYear();
      assertFalse(derivedVariable1.isCleaned());
      
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getAlternativeVariable();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.8593911013745164
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("DELETE");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.createVariableSummary();
      rawVariable0.setCleaned(false);
      derivedVariable0.clone();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getDisplayName();
      rawVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setLabel("iK.J2E|w`nnWd9G_\"");
      derivedVariable0.setForm("VARIABLE");
      rawVariable0.setForm("j]ehPME8tgH%=R");
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaned(true);
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getForm();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setForm("");
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.665970632370836
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "Qm7";
      derivedVariable0.setLabel("-}]u,");
      derivedVariable0.isCoded();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      User user0 = new User((String) null, (String) null);
      User user1 = null;
      user0.clone();
      // Undeclared exception!
      try { 
        User.detectFieldChanges((User) null, user0, (User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.744779582787786
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setQuestionNumber("lP3C*wz{;0\"C,Y7x");
      derivedVariable0.isCleaned();
      derivedVariable0.setColumnEnd("%Q*E q!k@l|Q");
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.clone();
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setIdentifier(0);
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("zgU[8m-H-3`Mw6492u");
      derivedVariable1.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("lP3C*wz{;0\"C,Y7x", derivedVariable0.getQuestionNumber());
      
      String string0 = derivedVariable1.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.7480682592066143
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.setCleaned(true);
      rawVariable0.isCoded();
      rawVariable0.getFilePath();
      rawVariable0.form = "variable.isCoded.label";
      rawVariable0.setCategory((String) null);
      rawVariable0.getColumnStart();
      rawVariable0.clone();
      rawVariable0.getCategory();
      rawVariable0.setCleaningDescription((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.isCoded();
      assertFalse(derivedVariable0.isCleaned());
      
      rawVariable0.getAlias();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.6241857997652422
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.name.label");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.clone();
      rawVariable0.setSupportingDocuments(arrayList0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0412829359797584
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      derivedVariable0.setCleaningDescription("`SURXY<na[bG 2eovE ");
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setAffiliation("[Bw2^Qr=t.XU");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setForm("`4%]Li");
      derivedVariable1.removeSourceVariable(rawVariable0);
      assertEquals("`4%]Li", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8623417620344114
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS");
      derivedVariable0.getIdentifier();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.name.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("variable.name.label", rawVariable0.getForm());
      assertEquals("", rawVariable0.getName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setColumnStart("0");
      rawVariable0.getLabel();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.clone();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setCoded(false);
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("`SURXY<na[bG 2eovE ");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.setQuestionNumber("");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User((String) null, "");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      assertEquals("0", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.763539290447006
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("w", "w");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      user0.setCounty("0P)\"bL(3~J\"l");
      rawVariable0.clone();
      User.checkValidUserIDField("w");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable0.getIdentifier();
      System.setCurrentTimeMillis(1574L);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getColumnStart();
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals(1, arrayList1.size());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.960128309327974
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("general.error.promotesSecurityRisk");
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setName("general.error.promotesSecurityRisk");
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      User user0 = new User("variable.codeBookNumber.label", "variable.codeBookNumber.label");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getName());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5718315996613828
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("general.error.promotesSecurityRisk");
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("f*;8N5y)", "");
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-7296));
      derivedVariable0.addValueLabel(valueLabel1);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setCleaningStatus("variable.availability.label");
      derivedVariable0.isNewRecord();
      derivedVariable0.setAvailability("");
      assertEquals("variable.availability.label", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.862218290000827
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.codeBookNumber = "qariabUe.questionNumber.label";
      supportingDocument0.getDisplayName();
      supportingDocument0.setFilePath("NOP?T");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setColumnEnd("0");
      rawVariable0.setCodeBookNumber("qariabUe.questionNumber.label");
      rawVariable0.getDisplayName();
      rawVariable0.createVariableSummary();
      User user0 = new User("qariabUe.questionNumber.label", "MISSING_DISPLAY_LIST_ADDER");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getForm();
      assertEquals("0", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAlternativeVariable(rawVariable1);
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.7818758053334967
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.name.label");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "VzH[zXs'T9j'*");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      ontologyTerm1.setDescription("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.iterator();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      derivedVariable0.clone();
      derivedVariable0.getAlias();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.8411381539506984
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("general.error.promotesSecurityRisk");
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getFilePath();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getNotes());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.708665825820528
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      derivedVariable0.columnStart = "";
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName("'G#I.YK&..A*");
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel1, valueLabel0);
      assertEquals("'G#I.YK&..A*", derivedVariable0.getDisplayName());
      assertEquals("'G#I.YK&..A*", derivedVariable0.getName());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.name.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.name.label");
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("%Q*E q!k@l|Q");
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNameSpace("TQpp");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription("variable.name.label");
      derivedVariable1.containsOntologyTerm(ontologyTerm3);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.createVariableSummary();
      assertEquals("variable.name.label", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("`SURXY<na[bG 2eovE ");
      assertEquals("`SURXY<na[bG 2eovE ", derivedVariable0.getName());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("-");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setAlias("}");
      assertEquals("}", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("Wr9uS~.}iX6-nw~0UY");
      derivedVariable0.getIdentifier();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user0 = new User();
      assertEquals("", user0.getAddressLine2());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("=yXG:#J#6");
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.getIdentifier();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals("=yXG:#J#6", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.490403227787064
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("general.error.promotesSecurityRisk");
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getFilePath();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getAvailability();
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable1.getValueLabels();
      arrayList0.add((ValueLabel) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.setAlias("_gsny#*7z");
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable1.getAvailability();
      derivedVariable0.getCleaningStatus();
      assertEquals("_gsny#*7z", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("hvf7<y5>F8;Ufty:J=T");
      rawVariable0.getCleaningDescription();
      rawVariable0.setColumnEnd("");
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getNotes();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.011306986850028
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm1.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.getIdentifier();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("general.error.promotesSecurityRisk");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setDescription("UNABLE_TO_VALIDATE_USER");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm2);
      User user0 = new User();
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningDescription("4qP");
      derivedVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      assertEquals("4qP", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("general.error.promotesSecurityRisk");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("variable.isCoded.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getFilePath();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getNotes());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.getIdentifier();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setFilePath("variable.name.label");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("variable.name.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.626916081775054
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable1.setAlternativeVariable(rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setAvailability("");
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      
      rawVariable1.setCleaningStatus("blank");
      rawVariable1.setFilePath("");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaned(false);
      rawVariable2.setCodeBookNumber("");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setYear("");
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getOntologyTerms();
      rawVariable1.setAlternativeVariable(rawVariable0);
      rawVariable1.setColumnEnd("general.error.promotesSecurityRisk");
      rawVariable1.setAvailability("LU");
      rawVariable1.setFilePath("");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaned(false);
      rawVariable2.setCodeBookNumber("LU");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setYear("LU");
      assertEquals("LU", rawVariable3.getYear());
      
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.7067985424147327
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = "";
      rawVariable0.setColumnStart("");
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setCodeBookNumber("/");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "/";
      rawVariable0.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName("");
      assertEquals("/", derivedVariable0.getCodeBookNumber());
      
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User user0 = new User("x _y", "");
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8851218920964303
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "";
      rawVariable0.setLabel("");
      rawVariable0.getNotes();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add((SupportingDocument) null);
      arrayList0.add((SupportingDocument) null);
      arrayList0.add((SupportingDocument) null);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setName("");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setAlias("");
      String string1 = "general.error.promotesSecurityRisk";
      rawVariable1.columnEnd = "general.error.promotesSecurityRisk";
      rawVariable1.columnStart = "";
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      derivedVariable0.setColumnEnd("H~}bJ4V[& $]");
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("_56HVhpd=Pc@");
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6120172700343436
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setNotes("general.error.promotesSecurityRisk");
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getFilePath();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getColumnEnd();
      assertEquals("general.error.promotesSecurityRisk", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.702952104583554
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setColumnStart("0");
      rawVariable0.getLabel();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.clone();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setTitle("0");
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.7067985424147327
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setColumnStart("");
      rawVariable0.getFilePath();
      rawVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("=cdlc9I9O ($={A6RX");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName("variable.questionNumber.label");
      assertEquals("=cdlc9I9O ($={A6RX", derivedVariable0.getCodeBookNumber());
      
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel1, valueLabel1);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("macaw.businessLayer.Variable");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setIsNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setAlias("macaw.businessLayer.Variable");
      rawVariable0.setName((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setLabel("macaw.businessLayer.Variable");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setCodeBookNumber("vU:T%Nq1So\"/{K7");
      // Undeclared exception!
      try { 
        Variable.validateFields(rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.845022017055006
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("general.error.promotesSecurityRisk");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getDisplayItemIdentifier();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList1.clear();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setColumnEnd("general.error.promotesSecurityRisk");
      rawVariable2.setCodeBookNumber("0");
      rawVariable1.getDisplayName();
      rawVariable0.createVariableSummary();
      User user0 = new User("r", "Ki");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable3.getForm();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList2);
      rawVariable4.cloneAttributes(rawVariable3);
      assertEquals("general.error.promotesSecurityRisk", rawVariable3.getColumnEnd());
      
      rawVariable0.getName();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.687544037603175
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setFilePath("MISSING_DISPLAY_LIST_SELECTOR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }
}
