/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:02:47 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("wG\u0000");
      try { 
        improvedFile0.createTempDir("wG\u0000", "wG\u0000");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not create directory, wG\u0000, before creating temp directory with prefix wG\u0000, suffix wG\u0000
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[22];
      stringArray0[0] = ".EAR";
      stringArray0[1] = ".EAR";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[4] = ".EAR";
      archiveScanner0.excludes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector1.add((Object) ".EAR");
      Integer[] integerArray0 = new Integer[3];
      integerArray0[0] = (Integer) 0;
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Integer integer0 = new Integer(1149);
      integerArray0[1] = integer0;
      archiveScanner1.includes = archiveScanner0.includes;
      vector0.toArray(integerArray0);
      vector1.trimToSize();
      Integer integer1 = new Integer((-187168574));
      archiveScanner0.processFile("&p]");
      assertFalse(archiveScanner0.equals((Object)archiveScanner1));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[22];
      stringArray0[0] = ".EAR";
      stringArray0[1] = ".EAR";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[4] = ".EAR";
      archiveScanner0.excludes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector1.add((Object) ".EAR");
      Integer[] integerArray0 = new Integer[3];
      integerArray0[0] = (Integer) 0;
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Integer integer0 = new Integer(1149);
      integerArray0[1] = integer0;
      archiveScanner1.includes = archiveScanner0.includes;
      integerArray0[2] = (Integer) 2;
      vector0.toArray(integerArray0);
      vector1.trimToSize();
      Integer integer1 = new Integer(2);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".EAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("wG\\0/wG\\00wG\\0/, froW archivE, 1wG\\0");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      ImprovedFile improvedFile0 = new ImprovedFile("wG\u0000");
      try { 
        improvedFile0.createTempDir("wG\u0000", "wG\u0000");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not create directory, wG\u0000, before creating temp directory with prefix wG\u0000, suffix wG\u0000
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[22];
      stringArray0[0] = ".EAR";
      stringArray0[1] = ".EAR";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[4] = ".EAR";
      archiveScanner0.excludes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      vector1.add((Object) improvedFile0);
      vector1.add((Object) ".EAR");
      vector1.trimToSize();
      int int0 = ArchiveScanner.FILE;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".EAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[22];
      stringArray0[0] = ".EAR";
      stringArray0[1] = ".EAR";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      stringArray0[4] = ".EAR";
      stringArray0[5] = ".EAR";
      stringArray0[6] = ".EAR";
      archiveScanner0.excludes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) ".EAR");
      archiveScanner0.dirsIncluded = vector0;
      vector0.trimToSize();
      int int0 = ArchiveScanner.FILE;
      System.setCurrentTimeMillis((-1572L));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".EAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(",f*ZYCX>(FKps5J@?", ",f*ZYCX>(FKps5J@?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ",f*ZYCX>(FKps5J@?";
      stringArray0[1] = ",f*ZYCX>(FKps5J@?";
      stringArray0[2] = ",f*ZYCX>(FKps5J@?";
      stringArray0[3] = ",f*ZYCX>(FKps5J@?";
      stringArray0[4] = ",f*ZYCX>(FKps5J@?";
      stringArray0[5] = ",f*ZYCX>(FKps5J@?";
      stringArray0[6] = ",f*ZYCX>(FKps5J@?";
      archiveScanner0.excludes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) ",f*ZYCX>(FKps5J@?");
      archiveScanner0.dirsIncluded = vector0;
      vector0.trimToSize();
      int int0 = ArchiveScanner.FILE;
      System.setCurrentTimeMillis((-1572L));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      vector0.insertElementAt(bufferedInputStream0, 1);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ",f*ZYCX>(FKps5J@?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      vector0.add((Object) archiveScanner0.filesNotIncluded);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(180L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2773L);
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile(".jar");
      System.setCurrentTimeMillis(1365L);
      System.setCurrentTimeMillis((-2113L));
      System.setCurrentTimeMillis(1L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.892246898188396
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("wG\u0000");
      String string0 = ", froW ar@hivE, ";
      MockFile.createTempFile(", froW ar@hivE, ", "wG\u0000", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        improvedFile0.getCanonicalPath();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid file path
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      File file0 = ImprovedFile.createTempFileName(":6jfQmP", "Z(FZ%e04.WJ.jar", (File) null);
      ImprovedFile improvedFile0 = new ImprovedFile(file0, "y[s?|E&~Oa$(;WN4Z");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile(":6jfQmP", "y[s?|E&~Oa$(;WN4Z", improvedFile0);
      ImprovedFile improvedFile2 = improvedFile1.tempBackup();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      int int0 = archiveScanner0.toFileType(file0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2773L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2773L);
      System.setCurrentTimeMillis(1522L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0@7%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0@7%");
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "Could not create directory, ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[25];
      stringArray0[0] = ".EAR";
      stringArray0[1] = ".EAR";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[4] = ".EAR";
      archiveScanner0.excludes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector1.add((Object) ".EAR");
      Integer[] integerArray0 = new Integer[3];
      integerArray0[0] = (Integer) 0;
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Integer integer0 = new Integer(1149);
      integerArray0[1] = integer0;
      archiveScanner1.includes = archiveScanner0.includes;
      integerArray0[2] = (Integer) 2;
      vector0.toArray(integerArray0);
      vector1.trimToSize();
      MockPrintStream mockPrintStream0 = new MockPrintStream(improvedFile0);
      mockPrintStream0.println((Object) ".EAR");
      Locale locale0 = Locale.CANADA;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "[-Z";
      objectArray0[1] = (Object) vector0;
      mockPrintStream0.format(locale0, "[-Z", objectArray0);
      Locale.getISOCountries();
      mockPrintStream0.format(locale0, "\"u^JL^dGUR)g", (Object[]) archiveScanner0.excludes);
      System.setCurrentTimeMillis(111L);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".EAR", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[22];
      stringArray0[0] = ".EAR";
      stringArray0[1] = ".EAR";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[4] = ".EAR";
      archiveScanner0.excludes = stringArray0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector1.add((Object) ".EAR");
      Integer[] integerArray0 = new Integer[3];
      integerArray0[0] = (Integer) 0;
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Integer integer0 = new Integer(1149);
      integerArray0[1] = integer0;
      archiveScanner1.includes = archiveScanner0.includes;
      integerArray0[2] = (Integer) 2;
      vector0.toArray(integerArray0);
      vector1.trimToSize();
      Integer integer1 = new Integer(2);
      try { 
        archiveScanner0.scandir(improvedFile0, (String) null, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.EAR/.EAR
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis(3838L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(3838L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      ImprovedFile improvedFile0 = new ImprovedFile(">}Cb");
      System.setCurrentTimeMillis(2869L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-611L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis((-1L));
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-4218L));
      ImprovedFile improvedFile0 = new ImprovedFile("4.WJ");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis((-1L));
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      vector0.add((Object) archiveScanner0.filesNotIncluded);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-4218L));
      ImprovedFile improvedFile0 = new ImprovedFile("w1<\"Z-YKevR7,_g");
      DirectoryScanner.matchPath(".j", "o=");
      System.setCurrentTimeMillis((-4218L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      DirectoryScanner.matchPatternStart(".j", "IO error scanning directory ");
      DirectoryScanner.matchPath(".j.jar", "tempdir2.jar");
      DirectoryScanner.matchPath("9", ".JAR.jar.jar");
      System.setCurrentTimeMillis(1883L);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "9");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, w1<\"Z-YKevR7,_g
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(3857L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(3857L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      ImprovedFile improvedFile0 = new ImprovedFile(">}Cb");
      System.setCurrentTimeMillis(2869L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1807L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(847L);
      System.setCurrentTimeMillis((-757L));
  }
}
