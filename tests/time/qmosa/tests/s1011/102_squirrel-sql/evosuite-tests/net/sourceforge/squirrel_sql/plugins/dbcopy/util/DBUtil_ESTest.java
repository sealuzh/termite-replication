/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:04:02 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.function.Predicate;
import javax.swing.DropMode;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JTabbedPane;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("aon[1G/&J;]LrHn{O", "R_[tZ2/", ":<L7%^\":Wj(", (String) null, 2, " \n\r\f\t", (-1099), (-1099), (-747), 2004, "length", "aon[1G/&J;]LrHn{O", 2018, 3, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, (-747), (-7), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "W) - tab'e ", "W) - tab'e ", "insert into ", 64, ":<L7%^\":Wj(", 64, 64, (-747), 3, "", "", 64, 64, "AQh(E6Hl)C{>");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3, (-2), 3, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      LinkedHashSet<DropMode> linkedHashSet0 = new LinkedHashSet<DropMode>();
      DropMode dropMode0 = DropMode.ON_OR_INSERT;
      linkedHashSet0.add(dropMode0);
      DropMode dropMode1 = DropMode.USE_SELECTION;
      linkedHashSet0.add(dropMode1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "kWEgI (d#|", "kWEgI (d#|", "4{8TF8:/YF", 2758, "1", (-1142), 2758, 2758, 2244, "=-", "$O0hH5", 2003, 2758, "net.sourceforge.squirrel_sql.fw.dialects.GreenplumDialectExt$GreenplumDialectHelper");
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("8Wj(S", "net.sourceforge.squirrel_sql.fw.dialects.GreenplumDialectExt$GreenplumDialectHelper");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.unload();
      dBCopyPlugin0.getSourceDatabaseObjects();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl((String) null, "bit(2147000000)");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, (-1719), 2189, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceDatabaseObjects();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 92, 299, 92, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType(" )", (Icon) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.getSourceDatabaseObjects();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("\t", " )");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 93, 2003, 24, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " )", "[]{zyD\"[2>E_");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 70);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", ") - tab'e ", ") - tab'e ", "", 4, ":<L7%^\":Wj(", 70, 70, (-747), 3, "", "SquirrelPreferences.error.writing", 4, 4, "AQh(E6Hl)C{>");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      ImageIcon imageIcon0 = new ImageIcon(":<L7%^\":Wj(", "R");
      imageIcon0.getImage();
      DatabaseObjectType.createNewDatabaseObjectType("<8hK(B?]@'FeCpm*X", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(2002, tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2002, 4, 4, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DropMode dropMode0 = DropMode.ON_OR_INSERT;
      LinkedHashSet<DropMode> linkedHashSet0 = new LinkedHashSet<DropMode>();
      linkedHashSet0.add(dropMode0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      ArrayBlockingQueue<Integer> arrayBlockingQueue0 = new ArrayBlockingQueue<Integer>(1714, true, arrayList1);
      arrayList0.containsAll(arrayBlockingQueue0);
      arrayList0.clear();
      ArrayList<IDatabaseObjectInfo> arrayList2 = new ArrayList<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.unload();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceDatabaseObjects();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-6), (-4296), (-19), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      ImageIcon imageIcon0 = new ImageIcon(":<L7%^\":Wj(", "R");
      imageIcon0.getImage();
      DatabaseObjectType.createNewDatabaseObjectType("<8hK(B?]@'FeCpm*X", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(") - tab'e ");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, (-5), 4, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "Null 'start' argument.", 8, "Null 'start' argument.", 3, 16, 2758, 3, "Null 'start' argument.", "=-", 2244, 70, "_}J+_j'U\"fWv&(V7");
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("U#;;y_\"", "B7'|Ig%SE;cB");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.unload();
      dBCopyPlugin1.getSourceDatabaseObjects();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("B7'|Ig%SE;cB", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 16, 70, 70, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      LinkedHashSet<DropMode> linkedHashSet0 = new LinkedHashSet<DropMode>();
      DropMode dropMode0 = DropMode.ON_OR_INSERT;
      linkedHashSet0.add(dropMode0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      dBCopyPlugin0.getDestSession();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-1690));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DropMode dropMode0 = DropMode.ON_OR_INSERT;
      LinkedHashSet<DropMode> linkedHashSet0 = new LinkedHashSet<DropMode>();
      linkedHashSet0.add(dropMode0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      ArrayBlockingQueue<Integer> arrayBlockingQueue0 = new ArrayBlockingQueue<Integer>(1714, true, arrayList1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.unload();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("TbU{(|iq:mB$CD%", "5L");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3), 1714, (-1879048189), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "O.AT4'0*OJy`", "$wt-~", "$wt-~", (-5), (String) null, (-5), (-5), (-5), (-5), "F'.1)}Mp1E9s", "F'.1)}Mp1E9s", (-5), (-5), (String) null);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl((String) null, "\"UuW=~rGYysx");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      dBCopyPlugin0.unload();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceDatabaseObjects();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "returning null as column: ");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2004, 110, 2004, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("DefaultIntervalCategoryDataset.getVlue): category idex ut of range.", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("ri|+#4#M(d");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "getDatabaseProductName", " )");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      DBUtil.typesAreEquivalent(3, 2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "I>;37Hg\"0qwBfq4", "]P1PH'<6S");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DatabaseObjectType.createNewDatabaseObjectType("coalesce(");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[6];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) foreignKeyInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$2117895670 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("coalesce(", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("<Ha^X7-k1=Qi-K<l");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, ") - table ", "getDatabaseProductName", "coalesce(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getPropertyPrefix();
      basicCheckBoxUI1.getDefaultIcon();
      String string0 = "DELETE FROM ";
      DatabaseObjectType.createNewDatabaseObjectType("DELETE FROM ", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType(") - table ");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      dBCopyPlugin0.unload();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 70, 70, (-747), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      LinkedHashSet<DropMode> linkedHashSet0 = new LinkedHashSet<DropMode>();
      DropMode dropMode0 = DropMode.ON_OR_INSERT;
      linkedHashSet0.add(dropMode0);
      DropMode dropMode1 = DropMode.USE_SELECTION;
      linkedHashSet0.add(dropMode1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "8wL", (String) null);
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, (String) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5", ") - table ", ") - table ", "", 4, ":<L7%^\":Wj(", 70, 70, (-747), 3, "5", ") - table ", 4, (-747), "AQh(E6Hl)C{>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "t?r[I4SWzp", "", "", 8, "", 7, 4, 4, (-1281), "insert into ", "5", (-1281), 274, (String) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      ImageIcon imageIcon0 = new ImageIcon("t?r[I4SWzp", ") - table ");
      imageIcon0.getImage();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(2212, tableColumnInfo1, (ISession) null);
      assertEquals(2212, int0);
      
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-7));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      String string0 = "}";
      linkedList0.iterator();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("}", (String) null, (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      predicate0.test(linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate1.test((Object) null);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      linkedList0.removeIf(predicate3);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      DBUtil.convertTableToObjectList(list0);
      int int0 = (-487);
      int int1 = 240;
      String string1 = "name";
      int int2 = 2731;
      int int3 = 23001;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("name", "R_[tZ2/", (String) null, (String) null, 2731, "DatabaseObjectType.udt", 23001, 240, (-487), 2000, "}", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2000, 2006, "R_[tZ2/");
      DBUtil.isBinaryType(tableColumnInfo0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      dBCopyPlugin0.getPluginJarFilePath();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("[Ljava.lang.Byte;", "to_char", "", "to_char", 0, (String) null, 1616, 313, 1087, 1, ". Using 'length'", (String) null, 4192, (-2801), " )");
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl1);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "9QRG[)9", "months_between", "kKsS&1)&n@{", (-2), "GWURAx6@)~", 1914, (-2), 240, 8300, "k#Svdjx:fkN/yi", "k#Svdjx:fkN/yi", (-38), 0, "GWURAx6@)~");
      DBUtil.isBinaryType(tableColumnInfo0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)102;
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "8L", "i']LYDDY_6E+0pjAco");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ") - table ");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "q]F,B", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.clear();
      String string0 = "dayofyear";
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      int int0 = (-2087831322);
      int int1 = (-692);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "dayofyear", (ITableInfo) null, (-692));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte) (-12);
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)102;
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2160), (byte)51, (byte)110, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 7, (-1879048189), 1116, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = "\";5r[mi;c@M,|6!\"";
      int int0 = (-1482);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("NullP'start' urgument.", " )", "NullP'start' urgument.", "\";5r[mi;c@M,|6!\"", (-6), "_}J+_j'U\"fWv&(V7", (-1482), 3137, 3137, (-1656), "NullP'start' urgument.", " )", 2006, 91, " )");
      DBUtil.isBinaryType(tableColumnInfo0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(" )", 5, (-1431655763), 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)51;
      byteArray0[4] = (byte) (-37);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      boolean boolean0 = DBUtil.typesAreEquivalent(92, (byte) (-26));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getUpdateDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getExecutionLogFile();
      applicationFileWrappersImpl1.getUpdateDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 16);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(") - tab'e ", "qaSomR5EhWD", (String) null, "yg@GHMR0p", 1134, "qaSomR5EhWD", (-747), 2003, (-747), 2003, "*Gv ", "ZU.Q]n'z", (-274), (-29), "ZU.Q]n'z");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, "*/#%^9OpwLie9k:L>");
      DatabaseObjectType.createNewDatabaseObjectType(":<L7%^\":Wj(", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("[)9&>ruBW\"v");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1134, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(":<L7%^\":Wj(", ":<L7%^\":Wj(", ":<L7%^\":Wj(", "insert into ", 223, ":<L7%^\":Wj(", 223, 1276, 663, 223, ":<L7%^\":Wj(", "R", 223, (-1249), "insert into ");
      DBUtil.isBinaryType(tableColumnInfo0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      ITableInfo iTableInfo0 = null;
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      jTabbedPane0.setName("R_[tZ2/");
      // Undeclared exception!
      try { 
        jTabbedPane0.getIconAt((-1692));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      boolean boolean0 = DBUtil.typesAreEquivalent((-1498), (-2048));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#HIqmQ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DBUtil.error.tablenotfound");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "", "Ek}C)", "RMK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      //  // Unstable assertion: assertEquals("3a5e6e9b:16ecdc74339:-7fc3", uidIdentifier0.toString());
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2001);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("replaceDistinctDataType: Unexpected exception - ", " `0QHZV^;39sR47#J\"1");
      boolean boolean0 = DBUtil.typesAreEquivalent((-37), (-37));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J*Au6lOw.,\u0007");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ek}C)");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType.createNewDatabaseObjectType("Q0j=-|M");
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("42wd?|U0pq", (Icon) imageIcon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("+)YDMCkk%KO4kcGdCiy", "string", "showSessionStartupTimeHint", "SquirrelPreferences.error.writing", 3, "insert into ", 4, 3, 645, (-747), "R_[tZ2/", "string", (-2105376123), (-1347), "1k2");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("+)YDMCkk%KO4kcGdCiy");
      JInternalFrame jInternalFrame0 = new JInternalFrame("+)YDMCkk%KO4kcGdCiy", false, false, false);
      Icon icon0 = jInternalFrame0.getFrameIcon();
      DatabaseObjectType.createNewDatabaseObjectType("+)YDMCkk%KO4kcGdCiy", icon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(") REFERENCES ", "insert into ", "insert into ", "showSessionStartupTimeHint", (-1336), "+)YDMCkk%KO4kcGdCiy", 4, 502, 4, 3, "O+bO!`Z(@~EX]5", "F*R(k'%g4H7'?", (-1336), 3, "");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1336), int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "org.hibernate.tDpe.BigDecimalType", "sBt|^\"0Hu+^T/LN", "sBt|^\"0Hu+^T/LN", (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("#HIqmQ", "#HIqmQ", "#HIqmQ", "DBUtil.error.tablenotfound", 736, "#HIqmQ", 736, 736, 931, 673, "?@z", "#HIqmQ", 645, (-1879048189), "DBUtil.error.firebirdcommit");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("DBUtil.error.tablenotfound", "?@z", "0P;x~Qq63W;Rj", "StO", (-2462), "DBUtil.error.tablenotfound", 673, (-1879048189), (-2462), 736, "0P;x~Qq63W;Rj", "StO", 23514, (-2462), "#HIqmQ");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("#HIqmQ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "#HIqmQ", "#HIqmQ", 1877, "?@z", (-1879048189), 1767, 736, 1767, "DBUtil.error.bindblobfailure", "-C`lAZ|:dr", (-1703), 23514, "\t");
      tableColumnInfoArray0[2] = tableColumnInfo2;
      TableColumnInfo tableColumnInfo3 = new TableColumnInfo((String) null, "DBUtil.error.tablenotfound", "-C`lAZ|:dr", "DBUtil.error.bindblobfailure", (-9), (String) null, (-1982292595), (-680), (-2462), 1007, "-C`lAZ|:dr", "-", 1877, 234, "@eiL|<:SHL.9");
      tableColumnInfoArray0[3] = tableColumnInfo3;
      TableColumnInfo tableColumnInfo4 = new TableColumnInfo("\t", ",9QRG[)9", "i`'W5Q1t5+U_=y8sQ", (String) null, 2000, "schemaFilterInclude", 3, 526, 1877, (-1703), "schemaFilterInclude", "0P;x~Qq63W;Rj", (-680), 234, "#HIqmQ");
      tableColumnInfoArray0[4] = tableColumnInfo4;
      TableColumnInfo tableColumnInfo5 = new TableColumnInfo("ROr", "DBUtil.error.tablenotfound", ". Skipping FK constraint", "", (-1879048189), "9QG[)9", (-915), 2959, 1767, 70, "bsGTxGzr],:t(U", "?@z", (-680), (-1982292595), (String) null);
      tableColumnInfoArray0[5] = tableColumnInfo5;
      TableColumnInfo tableColumnInfo6 = new TableColumnInfo("s2<N,sMDJqu%[Zl\"a^k", "-", "select", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-3259), "?{ Njg3.L%a^", (-3259), 736, 70, (-717), "crc32", "?@z", (-9), (-1879048189), "insert into ");
      tableColumnInfoArray0[5] = tableColumnInfo2;
      TableColumnInfo tableColumnInfo7 = new TableColumnInfo("StO", "3{e/$Y$7u\"3o9", "<opZ0=rL", "9QRG[)9", 0, "", 3, Integer.MIN_VALUE, 304, 23514, "AcceleratorKey", (String) null, 645, 2001, "crc32");
      tableColumnInfoArray0[7] = tableColumnInfo7;
      TableColumnInfo tableColumnInfo8 = new TableColumnInfo("DBUtil.error.firebirdcommit", "", "5Y*>rYpbmH!vOZ", "-", 1877, "9QG[)9", 2132, 931, 2499, 23505, "", "", 0, (-3166), "-C`lAZ|:dr");
      tableColumnInfoArray0[8] = tableColumnInfo8;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("&xt(2:D|#a^I7p", (String) null, (String) null, "F'.1)}Mp1E9s", 3178, (String) null, (-3135), 3178, (-5), 3178, "M2@mm(;4D@o'~Pd9Tb", "Unknown SchemaNameLoadInfo.state = ", 3178, 340, "Unknown SchemaNameLoadInfo.state = ");
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl((String) null, "hRj&_rF{@U3?L_");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "'3mC", (String) null, 340, "M2@mm(;4D@o'~Pd9Tb", (-5), (-3135), 2003, 1412, "Tb Z=ML4lC", "-ks", 3178, (-5), "=j19Q7}E#H9]N06e");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo1, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, ") - table ", "", "=ihkgkKCw7", (-747), "=ihkgkKCw7", (-1879048189), 4936, (-1879048189), 1309, ":<L7%^\":Wj(", "", 243, 1309, ":<L7%^\":Wj(");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType.createNewDatabaseObjectType(" C2Zj`i`");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("insert into ", "K^>|d#(\"", ":<L7%^\":Wj(", "5`o%yBv4", 2000, "", (-3), 1309, (-1090), (-1292), ";p532hlSP6'TTDJ", ") - table ", (-1515), 47, "DBUtil.error.tablenotfound");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals(") - table ", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseObjectType) null).when(foreignKeyInfo0).getDatabaseObjectType();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject(foreignKeyInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5", ") - table ", ") - table ", "", 4, ":<L7%^\":Wj(", 70, 70, (-747), 3, "5", ") - table ", 4, (-747), "AQh(E6Hl)C{>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "t?r[I4SWzp", "", "", 8, "", 7, 4, 4, (-1281), "insert into ", "5", (-1281), 274, (String) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", ") - tab'e ", ") - tab'e ", "", 4, ":<L7%^\":Wj(", 70, 70, (-747), 3, "", "SquirrelPreferences.error.writing", 4, 4, "AQh(E6Hl)C{>");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      ImageIcon imageIcon0 = new ImageIcon(":<L7%^\":Wj(", "R");
      imageIcon0.getImage();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("dot.catalog", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "AQh(E6Hl)C{>", ":<L7%^\":Wj(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getSourceDatabaseObjects();
      dBCopyPlugin0.setPasteToTableName("Attempted to add null listener: SessionManager.addSessionListener");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Attempted to add null listener: SessionManager.addSessionListener", "Attempted to add null listener: SessionManager.addSessionListener", "Specify the number of seconds to allow the application to run before exiting the VM", "xr{#5)}d~Yn`80`%TW", 502, (String) null, 2001, (-452), 1593, 2775, "insert into ", "AQh(E6Hl)C{>", 96, 96, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      int int0 = DBUtil.replaceDistinctDataType((-3259), tableColumnInfo0, (ISession) null);
      assertEquals((-3259), int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, " and catalog ", " and catalog ", "J*Au6lOw.,\u0007", (-1073741822));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("W{zSM-Epg]1`*", "ZvX", "ZvX", foreignKeyInfo1, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "ikghB(i}!+.i$bYRW", "CASCADE CONSTRAINTS", "com.jidesoft.plaf.vsnet.VsnetMenuItemUI$MenuDragMouseHandler");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBUtil.setLastStatement("SELECT data_type FROM information_schema.columns where column_name = ? ");
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable((String) null, "", "SessionManager.getNextSession()-> List empty so returning passed session", (ISession) null, true, 70);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      List<ITableInfo> list0 = null;
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LinkedHashSet<DropMode> linkedHashSet0 = new LinkedHashSet<DropMode>();
      DropMode dropMode0 = DropMode.INSERT_ROWS;
      linkedHashSet0.add(dropMode0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", " t>eG=hS0Ahj:K+Y-", 174, "", 0, 0, (-1442), 0, "", "nooqKiKr}\"s", 174, 0, " t>eG=hS0Ahj:K+Y-");
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", ") - table ", ") - table ", "", 4, ":<L7%^\":Wj(", 70, 70, (-747), 3, "", "SquirrelPreferences.error.writing", 4, 502, "AQh(E6Hl)C{>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      int int0 = DBUtil.replaceDistinctDataType(70, tableColumnInfo0, (ISession) null);
      assertEquals(70, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      String string0 = "}";
      String string1 = null;
      linkedList0.iterator();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("}", (String) null, (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      predicate0.test(linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate1.test((Object) null);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      linkedList0.removeIf(predicate3);
      linkedList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("#HIqmQ", "#HIqmQ", "#HIqmQ", "DBUtil.error.tablenotfound", 736, "#HIqmQ", 736, 736, 931, 673, "?@z", "#HIqmQ", 645, (-1879048189), "DBUtil.error.firebirdcommit");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("DBUtil.error.tablenotfound", "?@z", "0P;x~Qq63W;Rj", "ScO", (-2462), "DBUtil.error.tablenotfound", 673, (-1879048189), (-2462), 736, "0P;x~Qq63W;Rj", "", 23514, (-2462), "#HIqmQ");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "", 1877, "?@z", (-1879048189), 1767, 736, 1767, "DBUtil.error.bindblobfailure", "-C`lAZ|:dr", (-1692), 23514, "\t");
      tableColumnInfoArray0[2] = tableColumnInfo2;
      TableColumnInfo tableColumnInfo3 = new TableColumnInfo((String) null, "DBUtil.error.tablenotfound", "-C`lAZ|:dr", "DBUtil.error.bindblobfailure", (-9), (String) null, (-1982292595), (-695), (-2462), 1007, "-C`lAZ|:dr", "-", 1877, 234, "@eiL|<:SHL.9");
      tableColumnInfoArray0[3] = tableColumnInfo3;
      TableColumnInfo tableColumnInfo4 = new TableColumnInfo("\t", "9QRG[)9", "i`'W5Q1t5+U_=y8sQ", (String) null, 2000, "schemaFilterInclude", 3, 515, 1877, (-1692), "schemaFilterInclude", "0P;x~Qq63W;Rj", (-695), 234, "");
      tableColumnInfoArray0[4] = tableColumnInfo4;
      TableColumnInfo tableColumnInfo5 = new TableColumnInfo("ROr", "DBUtil.error.tablenotfound", ". Skipping FK constraint", "", (-1879048189), "9QRG[)9", (-915), 2959, 1767, 70, "bsGTxGzr],:t(U", "?@z", (-695), (-1982292595), (String) null);
      tableColumnInfoArray0[5] = tableColumnInfo5;
      TableColumnInfo tableColumnInfo6 = new TableColumnInfo("s2<N,sMDJqu%[Zl\"a^k", "-", "select", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", (-3259), "?{ Njg3.L%a^", (-3259), 736, 70, (-717), "crc32", "?@z", (-9), (-1879048189), "insert into ");
      tableColumnInfoArray0[6] = tableColumnInfo6;
      TableColumnInfo tableColumnInfo7 = new TableColumnInfo("ScO", "3{e/$Y$7u\"3o9", "<opZ0=rL", "9QRG[)9", 0, "", 3, Integer.MIN_VALUE, 304, 23514, "AcceleratorKey", (String) null, 645, 2001, "crc32");
      tableColumnInfoArray0[7] = tableColumnInfo7;
      TableColumnInfo tableColumnInfo8 = new TableColumnInfo("", "", "5Y*>rYpbmH!vOZ", "-", 1877, "9QRG[)9", 2132, 931, 2499, 23505, "", "", 0, (-3165), "-C`lAZ|:dr");
      tableColumnInfoArray0[8] = tableColumnInfo8;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("DBUtil.error.tablenotfound, ScO, , DBUtil.error.bindblobfailure, null, , net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil, 9QRG[)9, -", string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType(" )", (Icon) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setPromptForDialect(true);
      dBCopyPreferenceBean0.setCommitCount((-3645));
      dBCopyPreferenceBean0.setCopyIndexDefs(false);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "t:E#4GE&=dnGgM#U";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, (String) null, "t:E#4GE&=dnGgM#U");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      LinkedHashSet<DropMode> linkedHashSet0 = new LinkedHashSet<DropMode>();
      DropMode dropMode0 = DropMode.ON_OR_INSERT;
      linkedHashSet0.add(dropMode0);
      DropMode dropMode1 = DropMode.USE_SELECTION;
      linkedHashSet0.add(dropMode1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "pXWQmI!(<]TsrBZ9!}<", "Q0j=-|M");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginJarFilePath();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "B%wNm", "B%wNm", 951, "", 2001, 2001, 810, 4192, "9QRG[)9", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 951, 2028, "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, " seems to already have it defined.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      DBUtil.setLastStatementValues("-'2w,");
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setRecordDelayMillis(1L);
      dBCopyPreferenceBean0.setPruneDuplicateIndexDefs(true);
      dBCopyPreferenceBean0.setFileCacheBufferSize(4391);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      String string1 = DBUtil.getLastStatementValues();
      assertFalse(string1.equals((Object)string0));
  }
}
