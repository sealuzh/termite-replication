/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:20:41 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-4370), "!)KnDl]y)yI#e", "!)KnDl]y)yI#e", 2743);
      Player player1 = new Player();
      player1.setJoinOK(player0, false);
      Player player2 = new Player();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player2.setMoney(832.67F);
      player0.setJoinOK(player1, true);
      Player player3 = new Player((short)4919, "dwMyMwvy", "oeNOQn", (short)4919, 3417);
      player0.isJoinOK(player3, true);
      player2.getMoney();
      assertEquals(832.67F, player2.getMoney(), 0.01F);
      
      System.setCurrentTimeMillis((short)4919);
      Player player4 = new Player();
      player3.pack();
      assertEquals(10.0F, player3.getX(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Nd~)8`kYsy)Bd%z");
      Player player0 = new Player();
      player0.setY(22.0F);
      float float0 = player0.getY();
      assertEquals(22.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte) (-13);
      player0.setDead((-750L), false);
      player0.unpack(byteArray0);
      player0.type();
      player0.pack();
      System.setCurrentTimeMillis(622L);
      long long0 = player0.getTimeOfDeath();
      assertEquals((-750L), long0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-4370), "moduleOMouuleBrowserDoalog$ModuleFilter", "moduleOMouuleBrowserDoalog$ModuleFilter", 2739);
      Player player1 = new Player((-4370));
      player0.setJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-4370", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(2739, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-4370), "", "", (-4370));
      Player player1 = new Player(3);
      player1.setJoinOK(player0, true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player3", player1.toString());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals((-4370), player0.getPictureId());
      assertTrue(player1.isConnected());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-4370), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 2739);
      Player player1 = new Player((-4370));
      player0.setJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-4370", player1.toString());
      
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertTrue(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(2739, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1913));
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.pack();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** data is not of proper type!");
      Player player1 = new Player((short)4919, "m(q:evU`;", "m(q:evU`;", 5, 5);
      Player player2 = new Player(0, "", "5n}%{O pX^J0BYnW ", (-1913));
      player2.remove(player1);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player2.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      player1.head = (Party) player0;
      player0.isJoinOK(player2, false);
      assertEquals("", player2.getIP());
      
      player0.setDead(0L);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1913", player0.getName());
      
      int int1 = player1.gangStrength();
      assertEquals(6, int1);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(5, player1.getPictureId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(25089, (String) null, 4919);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      Player player1 = new Player((short)4919, "r8#,)RO", (String) null, 25089);
      player1.getName();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      float float1 = player0.getZ();
      assertEquals(4919, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.100479061876036
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0);
      player0.gangStrength();
      player0.setZ(2790.8F);
      player0.id = (int) (short)4919;
      player0.setDead(0L, true);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 1);
      byteArrayInputStream0.mark((-1));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream1);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      Player player1 = new Player(0);
      Player player2 = new Player(0, "state.Player", "G WkT_2(R\u0002;", 0, 0);
      player2.getY();
      player0.getTimeOfDeath();
      player1.getName();
      player2.getX();
      float float0 = player0.getZ();
      assertEquals(2790.8F, float0, 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9461162077318646
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.gangStrength();
      byte[] byteArray0 = player0.pack();
      player0.remove((Party) null);
      Player player1 = new Player(2532, "m(q:evU`;", "?{b", (-256), 5);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player2 = new Player(5, "1r?dao&;", (-11838));
      player2.unpack(dataInputStream0);
      player2.unpack(byteArray0);
      assertEquals("Player-1", player2.getName());
      
      player1.getY();
      player1.isJoinOK(player0, false);
      assertEquals(5, player1.getStrength());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", (-1635));
      player0.remove(player0);
      Player player1 = new Player((-1635), "", ".wnG3HRK10\"k4sJ", (-1), 2532);
      int int0 = player1.gangStrength();
      assertEquals(2532, int0);
      
      Player player2 = new Player((short)4919, "<!n=PrOP>{+/l", "", (-134));
      player1.remove(player2);
      boolean boolean0 = player2.isJoinOK(player0, true);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      
      float float0 = player2.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      String string0 = player1.getIP();
      assertEquals("", string0);
      
      float float1 = player2.getMoney();
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(1, player2.getStrength());
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals((-134), player2.getPictureId());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TwQ");
      Player player0 = new Player((-1), (String) null, "", (-1), 3);
      Player player1 = new Player((short)4919, (String) null, "", (short)4919);
      player0.remove(player1);
      player0.pack();
      player1.toString();
      player0.pack();
      MockFile mockFile0 = new MockFile("");
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.setX((-1.0F));
      player0.setX((-1.0F));
      player0.getName();
      player0.setDead(3791L, true);
      player0.isConnected();
      player0.getZ();
      player0.getY();
      player0.getX();
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(3791L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-1913));
      player0.gangStrength();
      player0.setZ(2606.0F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.setDead(711L);
      player0.setDead(15000L, true);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(" ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(dataOutputStream0);
      player0.pack(dataOutputStream1);
      player0.setX(2606.0F);
      player0.getX();
      player0.getIP();
      MockPrintStream mockPrintStream1 = null;
      try {
        mockPrintStream1 = new MockPrintStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, "", (-1), (-1));
      player0.setX((-130.822F));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 883, 268);
      byteArrayInputStream0.mark((-1138));
      byteArrayInputStream0.read();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream1);
      Player player1 = new Player(3099, "ftfOn.+hA;*2F", 268);
      player1.unpack(dataInputStream1);
      assertEquals(2, byteArrayInputStream1.available());
      
      player1.unpack(byteArray0);
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TwQ");
      Player player0 = new Player(2117, "TwQ", "U", 2117, 1);
      player0.getSubparty();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte)111;
      byteArray0[4] = (byte)111;
      byteArray0[5] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Player player1 = new Player((byte)111, "TwQ", (String) null, 1);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      int int0 = 5;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)68;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(5, (String) null, "+I|", 3557, 442);
      player0.setDead();
      player0.gangStrength();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      player0.unpack(dataInputStream0);
      player0.getTimeOfDeath();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-1), (String) null, "", (-1), (-1));
      Player player1 = new Player((short)4919, (String) null, "", (-20));
      player0.remove(player1);
      player1.setDead((long) (-20));
      player0.isJoinOK(player1, true);
      player1.getIP();
      float float0 = Player.MOVE_DISTANCE;
      player1.type();
      float float1 = player1.getZ();
      assertEquals((-20L), player1.getTimeOfDeath());
      assertEquals(0.0F, float1, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(61, "", 512);
      Player player1 = new Player((-1), "", "module.ModuleBrowserDialog$ModuleFilter", (-15872), (-1));
      player1.gangStrength();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-201), "module.ModuleBrowserDialog$ModuleFilter", "", (-15609));
      player0.setY((-15609));
      player0.getName();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(390L);
      float float0 = player0.getY();
      assertEquals((-15609.0F), float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TwQ");
      int int0 = (-1);
      Player player0 = new Player((-1), (String) null, "", (-1), 3);
      player0.getTimeOfDeath();
      InputStream inputStream0 = null;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TwQ");
      Player player0 = new Player((-1), (String) null, "", (-1), 3);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      System.setCurrentTimeMillis(316L);
      Player player0 = new Player();
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2131), 271);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-257));
      player0.pack();
      player0.setDead((-1134L));
      player0.isDead();
      int int0 = player0.getStrength();
      assertEquals((-1134L), player0.getTimeOfDeath());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)1;
      byteArray0[7] = (byte)110;
      byteArray0[1] = (byte)12;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-36);
      byteArray0[8] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4919, (byte)86);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      Player player0 = new Player((byte)115, "K", "t,[`M90", 3025);
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(3025, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("K", player0.getIP());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = (-248);
      Player player0 = new Player((-248), "US63Z}qM", (-909));
      player0.setX((-248));
      player0.pack();
      player0.getPictureId();
      player0.getStrength();
      player0.getName();
      String string0 = "D$sKar3:T1>~.;#Hua";
      File file0 = MockFile.createTempFile("US63Z}qM", "D$sKar3:T1>~.;#Hua");
      try { 
        MockFile.createTempFile("US63Z}qM", "state.Party", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Player player0 = new Player(22);
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      Player player1 = new Player(1520, ".|^/0yn!AJ8", 0);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertEquals("Player22", player0.getName());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(10, "", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 3, 3);
      player0.reset(false);
      int int0 = player0.getPictureId();
      int int1 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(int1 == int0);
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(3, int1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      System.setCurrentTimeMillis((-11838));
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = (-651);
      Player player0 = new Player((-651), "", (String) null, 0, (-651));
      player0.setZ((-651));
      player0.getY();
      MockFile mockFile0 = new MockFile("u ", "u ");
      File file0 = MockFile.createTempFile("4v^V", (String) null, (File) mockFile0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-201), "module.ModuleBrowserDialog$ModuleFilter", "", (-15617));
      player0.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-2477), "dn{f", (-257));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(5);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u00137S\u0000\u0001\uFFFD\uFFFDA \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004dn{f", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-3631));
      Player player1 = new Player(10, "", "gui.ModuleBrowserDialog$ModuleFilter", 16335);
      player0.setJoinOK(player1, false);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TwQ");
      Player player0 = new Player(1, "\"[6", "", 5, 1491);
      Player player1 = new Player(3, (String) null, "^WB,", 1491);
      assertEquals(1491, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      
      player0.remove((Party) null);
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("\"[6", player0.getIP());
      assertEquals(1491, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-48);
      byteArray0[7] = (byte)11;
      byteArray0[8] = (byte) (-113);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      String string0 = player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", string0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(1212);
      Party party0 = player0.head;
      player0.boss = null;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-36);
      byteArray0[4] = (byte)60;
      byteArray0[5] = (byte) (-47);
      byteArray0[6] = (byte)60;
      player0.unpack(byteArray0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player1212", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.05514543589291
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-1455), "[G|U)i4Zf|Av", "000.0", (-1), (-1957));
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.setZ((-1455));
      player1.getStrength();
      player0.getY();
      player0.setZ(0);
      player0.getX();
      player1.type();
      player1.setMoney((-1));
      player1.next = (Party) player0;
      Player player2 = new Player((-1), "", "[G|U)i4Zf|Av", 0, (short)4919);
      Player player3 = new Player((-2459), "", (short)4919);
      player2.setJoinOK(player3, true);
      player1.setJoinOK(player2, true);
      assertEquals((-1.0F), player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.654151735313429
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0, ")E=nY3p", ")E=nY3p", (-236), 0);
      int int0 = player0.gangStrength();
      Player player1 = new Player();
      player1.pack();
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.getName());
      
      Player player2 = new Player((-3076), "", "0rEO`B@HB?ED", (-3076), 0);
      Player player3 = new Player((-1595), "J>rCDpk=n=ihk", "m(q:evU`;", (-3076));
      Player player4 = new Player((-3076), ".*[.]class$", "N1bM", 3760);
      player3.remove(player4);
      Player player5 = new Player(27759, "N1bM", "gui.ModuleBrowserDialog$ModuleFilter", (short)4919);
      player3.pack();
      assertEquals((-3076), player3.getPictureId());
      assertEquals(1, player3.getStrength());
      
      int int1 = player2.getStrength();
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals("", player2.getIP());
      assertEquals(0, int1);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|m6ph5<c|sCzBYy!");
      Player player0 = new Player((-3864), ".*[.]class$", ".*[.]class$", (-3864), (-3864));
      Party party0 = player0.prev;
      player0.head = null;
      Party party1 = new Party((short)4919);
      player0.remove(party1);
      player0.getStrength();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      int int0 = player0.getStrength();
      assertEquals((-3864), int0);
      
      float float1 = player0.getZ();
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-3864), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)44;
      byteArray0[6] = (byte)102;
      byteArray0[7] = (byte)0;
      player0.unpack(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TwQ");
      Player player0 = new Player((-1), (String) null, "", (-1), 3);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.getY();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.getSubparty();
      player0.toString();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, true, "Player-1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(1285, "state.Player", "f\"K<+N_4i?", (-4370));
      Player player1 = new Player((short)4919);
      Player player2 = new Player();
      player2.setJoinOK(player0, true);
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
      assertEquals((-4370), player0.getPictureId());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0, player2.getPictureId());
      assertFalse(player2.isDead());
      assertEquals("Player-1", player2.getName());
      assertEquals("state.Player", player0.getIP());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TwQ");
      Player player0 = new Player(5);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      player0.unpack(byteArray0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player5", player0.getName());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-1128), "", "", (-1128));
      player0.setY((-1128));
      player0.setZ(0.1F);
      assertEquals(0.1F, player0.getZ(), 0.01F);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-97);
      Player player1 = new Player((byte) (-97), "", (-698));
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((-2477), "dnx{f", (-257));
      boolean boolean0 = player0.isConnected();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals((-257), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)44;
      byteArray0[6] = (byte)102;
      Player player1 = new Player((-1), "C-RR:", (-100));
      assertEquals((-100), player1.getPictureId());
      
      float float0 = player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-1778), "", (-1));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)108;
      byteArray0[3] = (byte)111;
      byteArray0[4] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)108, 1);
      byteArrayInputStream0.mark((byte)108);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      Player player1 = new Player(7, "a36#yv'", "", 1364, (short)4919);
      player1.setDead();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-1913));
      player0.gangStrength();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-67);
      byteArray0[2] = (byte) (-18);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setZ(2606.0F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.setDead(15000L, true);
      player0.pack();
      player0.setConnected(false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(" ");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      Player player1 = new Player((byte) (-18), "", " ", (byte) (-18));
      float float0 = player0.getX();
      assertEquals(15000L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-4370), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 2739);
      assertEquals(2739, player0.getPictureId());
      
      Player player1 = new Player((-4370));
      player1.reset(false);
      player1.reset(true);
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      System.setCurrentTimeMillis(1L);
      Player player2 = new Player();
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(1, player2.getStrength());
      assertEquals("Player-1", player2.toString());
      assertTrue(player2.isConnected());
      assertEquals(0, player2.getPictureId());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-4370), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 2739);
      player0.setZ(2739);
      assertEquals(2739.0F, player0.getZ(), 0.01F);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player1 = new Player((-1689), "L+\"(}iQj{qhry", "", (short)4919);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-1109), "", "", (-1109));
      player0.setY((-1109));
      player0.setZ(0.1F);
      assertEquals((-1109.0F), player0.getY(), 0.01F);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-97);
      Player player1 = new Player((byte) (-97), "", (-698));
      assertEquals(10.0F, player1.getX(), 0.01F);
  }
}
