/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:03:16 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6211272758470872
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId((-3531));
      assertEquals("Next Valid Order ID: -3531", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize(0, 13, (-3531));
      assertEquals("id=0  modelOptComp=-3531", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation((-135), 13, 0, (-3531), (-2147164752), 1.7976931348623157E308);
      assertEquals("id=-135  modelOptComp: vol = 0.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", string2);
      
      String string3 = EWrapperMsgGenerator.tickEFP((-2147164752), 0, 1791.5439905, "OptionHistoricalVolatility", 0.0, 0, "$]fxF1%<,Si:H8:S", 2245.9212942787, 13);
      assertEquals("id=-2147164752  bidSize: basisPoints = 1791.5439905/OptionHistoricalVolatility impliedFuture = 0.0 holdDays = 0 futureExpiry = $]fxF1%<,Si:H8:S dividendImpact = 2245.9212942787 dividends to expiry = 13.0", string3);
      
      String string4 = EWrapperMsgGenerator.tickEFP(47, (-135), 1.7976931348623157E308, "OptionCallOpenInterest", (-626.7335925489047), 13, "id=0  modelOptComp=-3531", 973.0, 1.7976931348623157E308);
      assertEquals("id=47  unknown: basisPoints = 1.7976931348623157E308/OptionCallOpenInterest impliedFuture = -626.7335925489047 holdDays = 13 futureExpiry = id=0  modelOptComp=-3531 dividendImpact = 973.0 dividends to expiry = 1.7976931348623157E308", string4);
      
      String string5 = EWrapperMsgGenerator.currentTime((-1073L));
      assertEquals("current time = -1073 (Dec 31, 1969 11:42:07 PM)", string5);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract(13, "cBc8Ybo/$V9F7{", "$]fxF1%<,Si:H8:S", " rmaing=", (-1954.38), "cBc8Ybo/$V9F7{", "WujoVN8] R-ivh;", "$]fxF1%<,Si:H8:S", (String) null, " date = ", vector0, "v:u)ZX08r(:{OK(", false, (String) null, " date = ");
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails(13, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 13\norderId = 0\nclientId = 0\nsymbol = cBc8Ybo/$V9F7{\nsecType = $]fxF1%<,Si:H8:S\nexpiry =  rmaing=\nstrike = -1954.38\nright = cBc8Ybo/$V9F7{\ncontractExchange = $]fxF1%<,Si:H8:S\ncurrency = null\nlocalSymbol =  date = \nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
      
      String string1 = EWrapperMsgGenerator.nextValidId(13);
      assertEquals("Next Valid Order ID: 13", string1);
      
      String string2 = EWrapperMsgGenerator.tickSize((-3761), 0, 2146956680);
      assertEquals("id=-3761  bidSize=2146956680", string2);
      
      String string3 = EWrapperMsgGenerator.tickOptionComputation((-72), 13, (-2595.567984), 0, (-1954.38), 1267.336740920206);
      assertEquals("id=-72  modelOptComp: vol = N/A delta = 0.0: modelPrice = N/A: pvDividend = 1267.336740920206", string3);
      
      String string4 = EWrapperMsgGenerator.tickString((-72), 13, "validExchanges = ");
      assertEquals("id=-72  modelOptComp=validExchanges = ", string4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract(13, "$]fxF1%<,Si:H8:S", " rmaing=", ">9]/C/.p0pE", 3113.84909105093, " rmaing=", "8(]vq +KQG.f", "2R", "$]fxF1%<,Si:H8:S", (String) null, vector0, "", false, "", ">9]/C/.p0pE");
      Vector<String> vector1 = new Vector<String>();
      vector1.add((String) null);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.tickSize(13, 491, 3181);
      assertEquals("id=13  unknown=3181", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 13, (-1.0), (-408.6000353), (-2806.105277349087), 0);
      assertEquals("id=0  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 0.0", string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "X", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "X", "j-I>pW36=vY<A$");
      vector0.add("");
      Order order0 = new Order();
      contract0.m_comboLegs = null;
      OrderState orderState0 = new OrderState();
      orderState0.m_equityWithLoan = "n^L_";
      orderState0.m_initMargin = "com.ib.client.Execution";
      EWrapperMsgGenerator.openOrder(4887, contract0, order0, orderState0);
      EWrapperMsgGenerator.tickGeneric(0, 10, (-3109.7135139));
      EWrapperMsgGenerator.updateMktDepthL2(435, 4887, "L%F'9pb}44j", Integer.MAX_VALUE, (-1687), (-153.97970995305334), (-1249));
      Contract contract1 = new Contract();
      Execution execution0 = new Execution();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract1, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.132999251994992
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      Contract contract0 = new Contract(32, "BAG", "BAG", "<ZXM  7hnOsW", 32, "B`#@g%", "wG!fP%", "gJv_K\"0", "7rLSD;s.zJ>`", "BAG", vector0, "7rLSD;s.zJ>`", false, "bOR;OMDoA", "B`#@g%");
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "BAG", 32, (String) null, "A{A</]N`7/B_c[ T%Q", 110, (String) null, "<ZXM  7hnOsW", "B`#@g%", (String) null, "7rLSD;s.zJ>`", (String) null, "BAG", "7rLSD;s.zJ>`");
      String string0 = EWrapperMsgGenerator.bondContractDetails((-1256), contractDetails0);
      assertEquals("reqId = -1256 ===================================\n ---- Bond Contract Details begin ----\nsymbol = BAG\nsecType = BAG\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = gJv_K\"0\ncurrency = 7rLSD;s.zJ>`\nmarketName = null\ntradingClass = BAG\nconid = 32\nminTick = 32.0\norderTypes = null\nvalidExchanges = A{A</]N`7/B_c[ T%Q\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
      
      String string1 = EWrapperMsgGenerator.contractDetailsEnd((-1256));
      assertEquals("reqId = -1256 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.updateAccountValue("BAG", "{5GnE9P2F&", "1=7y)7", "7rLSD;s.zJ>`");
      assertEquals("updateAccountValue: BAG {5GnE9P2F& 1=7y)7 7rLSD;s.zJ>`", string2);
      
      Order order0 = new Order();
      contractDetails0.m_nextOptionType = "BAG";
      OrderState orderState0 = new OrderState("7rLSD;s.zJ>`", (String) null, "7rLSD;s.zJ>`", " stockRangeLower=", (-961.265188), (-1256), 1128.651305239403, "B`#@g%", "wG!fP%");
      EWrapperMsgGenerator.openOrder((-1256), contractDetails0.m_summary, order0, orderState0);
      String string3 = EWrapperMsgGenerator.tickSnapshotEnd(0);
      assertEquals("id=0 =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string4);
      
      String string5 = EWrapperMsgGenerator.scannerData(0, 1994091958, contractDetails0, "LB:=SM(kt", "$]fxF1%<,Si:H8:S", "'2J#&TjD1", "d[7J-bH^3A/R");
      assertEquals("id = 0 rank=1994091958 symbol=BAG secType=BAG expiry=<ZXM  7hnOsW strike=32.0 right=B`#@g% exchange=gJv_K\"0 currency=7rLSD;s.zJ>` localSymbol=BAG marketName=null tradingClass=BAG distance=LB:=SM(kt benchmark=$]fxF1%<,Si:H8:S projection='2J#&TjD1 legsStr=d[7J-bH^3A/R", string5);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.nextValidId(0);
      assertEquals("Next Valid Order ID: 0", string0);
      
      EWrapperMsgGenerator.tickSize(0, (-1762), 2129735849);
      execution0.m_avgPrice = 1256.0;
      String string1 = EWrapperMsgGenerator.tickOptionComputation(13, 0, 1113.77452257, (-1.0), 1.0, (-201.0));
      assertEquals("id=13  bidSize: vol = 1113.77452257 delta = -1.0", string1);
      
      String string2 = EWrapperMsgGenerator.tickGeneric((-422), 0, 906.15563987);
      assertEquals("id=-422  bidSize=906.15563987", string2);
      
      String string3 = EWrapperMsgGenerator.tickSize(0, (-1119), (-127));
      assertEquals("id=0  unknown=-127", string3);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2915336713312904
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.nextValidId((-422));
      assertEquals("Next Valid Order ID: -422", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize(15, 13, (-2147483646));
      assertEquals("id=15  modelOptComp=-2147483646", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(1589, 13, (-714.1709343), 3176.56995876979, 1.7976931348623157E308, (-2437.27958));
      assertEquals("id=1589  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string2);
      
      Contract contract0 = new Contract(13, (String) null, (String) null, "v\"^H?[^s7W]Y|;u", (-3920.346758), (String) null, "AlXFZ|IlZv3A", "isCQ18y+", (String) null, "id=15  modelOptComp=-2147483646", vector0, "Y{<+\"a-[ _,.|E^", false, (String) null, (String) null);
      Execution execution1 = new Execution();
      String string3 = EWrapperMsgGenerator.tickOptionComputation((-3227), (-2144480892), 3176.56995876979, 1.7976931348623157E308, 1.0, 0);
      assertEquals("id=-3227  unknown: vol = 3176.56995876979 delta = N/A", string3);
      
      String string4 = EWrapperMsgGenerator.tickString(1, (-2144480892), "w$>Ou_x]10V");
      assertEquals("id=1  unknown=w$>Ou_x]10V", string4);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      execution0.m_shares = 1;
      String string0 = EWrapperMsgGenerator.tickSize((-14), (-2147164752), 0);
      assertEquals("id=-14  unknown=0", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 1.0, (-2147164752), 0, (-14));
      assertEquals("id=0  modelOptComp: vol = 1.0 delta = N/A: modelPrice = 0.0: pvDividend = N/A", string1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.tickSize(13, (-2147164752), 0);
      assertEquals("id=13  unknown=0", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 1.0, (-2147164752), 0, 0);
      assertEquals("id=0  modelOptComp: vol = 1.0 delta = N/A: modelPrice = 0.0: pvDividend = 0.0", string1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Vector<String> vector1 = new Vector<String>();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(548, 32, 0, 1.7976931348623157E308, 0, 1.0);
      assertEquals("id=548  bidExch: vol = 0.0 delta = N/A", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EWrapperMsgGenerator.tickGeneric(13, 13, 13);
      EWrapperMsgGenerator.updateNewsBulletin(13, 13, "", "");
      EWrapperMsgGenerator.execDetailsEnd(0);
      EWrapperMsgGenerator.updateMktDepthL2(0, 0, " stockRefPrice=", (-4631), 13, 0, Integer.MAX_VALUE);
      EWrapperMsgGenerator.accountDownloadEnd("{<\"/rsjD_3m!kKW");
      EWrapperMsgGenerator.tickString(13, (-1934040559), "U");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(13, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWrapperMsgGenerator.currentTime((-1L));
      EWrapperMsgGenerator.nextValidId(99);
      int int0 = (-5706);
      EWrapperMsgGenerator.orderStatus((-5706), "current time = -1 (Dec 31, 1969 11:59:59 PM)", 1605, 3, (-895.47436328419), 3, 0, 479.69183166, (-5706), "D2Xc<%CQ^?`5wvR");
      EWrapperMsgGenerator.updateAccountTime("O");
      EWrapperMsgGenerator.updateAccountTime("D2Xc<%CQ^?`5wvR");
      int int1 = 1225;
      EWrapperMsgGenerator.tickSize(1225, 3, (-1));
      int int2 = 10;
      EWrapperMsgGenerator.tickPrice(10, (-1566), 1796.045952, (-1));
      Contract contract0 = new Contract();
      int int3 = 221;
      EWrapperMsgGenerator.updatePortfolio(contract0, 221, (-1015.412792), (-1015.412792), 1225, 0, 2300.0, (String) null);
      int int4 = 400;
      EWrapperMsgGenerator.scannerDataEnd(400);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(1605, contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Execution execution0 = new Execution();
      execution0.m_avgPrice = (double) (-72);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-72), 0, (-72.0), 1267.336740920206, 1.0, (-4079.894921355));
      assertEquals("id=-72  bidSize: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-4614), (-764), 143, 0, 646.5, (-2585));
      assertEquals("updateMktDepth: -4614 -764 143 0 646.5 -2585", string0);
      
      String string1 = EWrapperMsgGenerator.tickPrice((-257), (-257), 646.5, (-1));
      assertEquals("id=-257  unknown=646.5  canAutoExecute", string1);
      
      String string2 = EWrapperMsgGenerator.tickEFP(0, (-257), 1.7976931348623157E308, "S$Y*$>", (-764), 0, "", 3065.93396751, (-2585));
      assertEquals("id=0  unknown: basisPoints = 1.7976931348623157E308/S$Y*$> impliedFuture = -764.0 holdDays = 0 futureExpiry =  dividendImpact = 3065.93396751 dividends to expiry = -2585.0", string2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      String string0 = EWrapperMsgGenerator.execDetailsEnd(13);
      assertEquals("reqId = 13 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-2147164752), (-4631), 0, 804.3924118891, (-2147164752), 884.724219);
      assertEquals("id=-2147164752  unknown: vol = 0.0 delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.realtimeBar(0, 1000L, (-4631), 884.724219, 0, (-1695.09335), (-1L), 20, (-481));
      assertEquals("id=0 time = 1000 open=-4631.0 high=884.724219 low=0.0 close=-1695.09335 volume=-1 count=-481 WAP=20.0", string2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(98);
      assertEquals("Next Valid Order ID: 98", string0);
      
      Contract contract0 = new Contract();
      contract0.m_secIdType = "1+7Lj;LES|]sg>AZ--";
      contract0.m_symbol = "1+7Lj;LES|]sg>AZ--";
      ContractDetails contractDetails0 = new ContractDetails(contract0, "1+7Lj;LES|]sg>AZ--", "1+7Lj;LES|]sg>AZ--", 0.0, "1+7Lj;LES|]sg>AZ--", (String) null, 0, "Next Valid Order ID: 98", (String) null, "1+7Lj;LES|]sg>AZ--", (String) null, (String) null, " continuousUpdate=", (String) null, "kM");
      contract0.m_secIdType = ".?f,ho";
      String string1 = EWrapperMsgGenerator.contractDetails(98, contractDetails0);
      assertEquals("reqId = 98 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = 1+7Lj;LES|]sg>AZ--\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = 1+7Lj;LES|]sg>AZ--\ntradingClass = 1+7Lj;LES|]sg>AZ--\nminTick = 0.0\nprice magnifier = 0\norderTypes = 1+7Lj;LES|]sg>AZ--\nvalidExchanges = null\nunderConId = 0\nlongName = Next Valid Order ID: 98\ncontractMonth = null\nindustry = 1+7Lj;LES|]sg>AZ--\ncategory = null\nsubcategory = null\ntimeZoneId =  continuousUpdate=\ntradingHours = null\nliquidHours = kM\n ---- Contract Details End ----\n", string1);
      
      String string2 = EWrapperMsgGenerator.execDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.updateMktDepthL2((-1488), 0, "}\"qGj/NN/t+Weq", 98, 0, 0.0, (-1163));
      assertEquals("updateMktDepth: -1488 0 }\"qGj/NN/t+Weq 98 0 0.0 -1163", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation((-1557), (-1163), (-1967.5432818), 0.0, 1.7976931348623157E308, Integer.MAX_VALUE);
      assertEquals("id=-1557  unknown: vol = N/A delta = 0.0", string4);
      
      String string5 = EWrapperMsgGenerator.realtimeBar((-1338), 0, (-1488), (-1163), (-1338), 1.7976931348623157E308, 0, 98, (-3066));
      assertEquals("id=-1338 time = 0 open=-1488.0 high=-1163.0 low=-1338.0 close=1.7976931348623157E308 volume=0 count=-3066 WAP=98.0", string5);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "", "j-I>pW36=vY<A$");
      vector0.add("");
      Order order0 = new Order();
      order0.m_algoParams = order0.m_algoParams;
      OrderState orderState0 = new OrderState();
      orderState0.m_initMargin = "xN=tsb~3Z7O<`Q";
      orderState0.m_equityWithLoan = "n^L_";
      String string0 = EWrapperMsgGenerator.tickSize(2628, 26, Integer.MAX_VALUE);
      assertEquals("id=2628  OptionAskExchStr=2147483647", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-568), 0, 1.7976931348623157E308, (-517.221084956324), 1.0, 3);
      assertEquals("id=-568  bidSize: vol = N/A delta = N/A", string1);
      
      String string2 = EWrapperMsgGenerator.tickString((-2146765318), 4887, "BAG");
      assertEquals("id=-2146765318  unknown=BAG", string2);
      
      ContractDetails contractDetails0 = new ContractDetails(contract0, "j-I>pW36=vY<A$", (String) null, 1.7976931348623157E308, "k$q1", ":::sV.0Gz_G=n", 4887, "lo4@`8Fb~UGHk", "ua", ":::sV.0Gz_G=n", "8F/", "id=2628  OptionAskExchStr=2147483647", "", "40&q=#4J%&5CE-", "");
      String string3 = EWrapperMsgGenerator.scannerData(0, (-683), contractDetails0, "wG!fP%", "8F/", "updateMktDepth: 0 0 u(:V+xNk 4887 1680 0.0 1", "'n=");
      assertEquals("id = 0 rank=-683 symbol=wG!fP% secType=wG!fP% expiry=wG!fP% strike=4887.0 right= exchange=n^L_ currency=g+_f;t* localSymbol=g+_f;t* marketName=j-I>pW36=vY<A$ tradingClass=null distance=wG!fP% benchmark=8F/ projection=updateMktDepth: 0 0 u(:V+xNk 4887 1680 0.0 1 legsStr='n=", string3);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.poll();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      String string0 = EWrapperMsgGenerator.contractDetailsEnd((-1256));
      assertEquals("reqId = -1256 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.nextValidId((-1256));
      assertEquals("Next Valid Order ID: -1256", string1);
      
      ContractDetails contractDetails0 = new ContractDetails();
      String string2 = EWrapperMsgGenerator.scannerData((-1256), 2145276573, contractDetails0, (String) null, (String) null, (String) null, (String) null);
      assertEquals("id = -1256 rank=2145276573 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=null projection=null legsStr=null", string2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add(" 20\"_ya#'&r{dH:yg");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.tickSize(Integer.MAX_VALUE, 9, 2146994248);
      EWrapperMsgGenerator.tickOptionComputation((-568), 0, (-2988.552), 1.0, (-3669.5661478), (-130.9474));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails((-2147483646), (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.nextValidId(98);
      assertEquals("Next Valid Order ID: 98", string0);
      
      Contract contract0 = new Contract();
      contract0.m_symbol = "1+7Lj;LES|]sg>AZ--";
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 0.0, (String) null, (String) null, 0, "Next Valid Order ID: 98", (String) null, "1+7Lj;LES|]sg>AZ--", (String) null, (String) null, " continuousUpdate=", (String) null, "kM");
      contract0.m_secIdType = ".?f,ho";
      String string1 = EWrapperMsgGenerator.contractDetails(98, contractDetails0);
      assertEquals("reqId = 98 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = 1+7Lj;LES|]sg>AZ--\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = Next Valid Order ID: 98\ncontractMonth = null\nindustry = 1+7Lj;LES|]sg>AZ--\ncategory = null\nsubcategory = null\ntimeZoneId =  continuousUpdate=\ntradingHours = null\nliquidHours = kM\n ---- Contract Details End ----\n", string1);
      
      contractDetails0.m_contractMonth = "BAG";
      String string2 = EWrapperMsgGenerator.tickPrice(0, 0, 0.0, 0);
      assertEquals("id=0  bidSize=0.0  noAutoExecute", string2);
      
      contractDetails0.m_category = null;
      String string3 = EWrapperMsgGenerator.scannerDataEnd(121);
      assertEquals("id = 121 =============== end ===============", string3);
      
      Execution execution0 = new Execution();
      execution0.m_liquidation = 0;
      String string4 = EWrapperMsgGenerator.orderStatus(3202, "{bKg4M^?]yN-CWg<", 1538, 0, 0.0, 0, 0, 0, 0, "45W){l/Pix");
      assertEquals("order status: orderId=3202 clientId=0 permId=0 status={bKg4M^?]yN-CWg< filled=1538 remaining=0 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=0 whyHeld=45W){l/Pix", string4);
      
      Contract contract1 = new Contract();
      String string5 = EWrapperMsgGenerator.updatePortfolio(contractDetails0.m_summary, (-738), (-1.0), 0.0, 110, 1681.679, 1602.406635393266, "1+7Lj;LES|]sg>AZ--");
      assertEquals("updatePortfolio: conid = 0\nsymbol = 1+7Lj;LES|]sg>AZ--\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n-738 -1.0 0.0 110.0 1681.679 1602.406635393266 1+7Lj;LES|]sg>AZ--", string5);
      
      String string6 = EWrapperMsgGenerator.tickString(1431, (-1), (String) null);
      assertEquals("id=1431  unknown=null", string6);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      String string0 = EWrapperMsgGenerator.execDetailsEnd(2146206144);
      assertEquals("reqId = 2146206144 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2((-4631), 2146237430, " stockRefPrice=", 975, 1, 2146237430, (-4631));
      assertEquals("updateMktDepth: -4631 2146237430  stockRefPrice= 975 1 2.14623743E9 -4631", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(2146237430, Integer.MAX_VALUE, 0.0, 2146237430, 1, (-797.82945567));
      assertEquals("id=2146237430  unknown: vol = 0.0 delta = N/A", string2);
      
      String string3 = EWrapperMsgGenerator.tickSnapshotEnd(2146237430);
      assertEquals("id=2146237430 =============== end ===============", string3);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "", "j-I>pW36=vY<A$");
      vector0.add("6");
      Order order0 = new Order();
      order0.m_algoParams = order0.m_algoParams;
      OrderState orderState0 = new OrderState();
      orderState0.m_initMargin = "xN=tsb~3Z7O<`Q";
      orderState0.m_equityWithLoan = "n^L_";
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountValue(":", "O", "", "lastSize");
      assertEquals("updateAccountValue: : O  lastSize", string1);
      
      Order order1 = new Order();
      OrderState orderState1 = new OrderState("Ro%#B/", (String) null, " commissionCurrency=", (String) null, (-892.14), 0, 0, (String) null, "expiry = ");
      EWrapperMsgGenerator.openOrder(0, contract0, order1, orderState0);
      String string2 = EWrapperMsgGenerator.tickSnapshotEnd(Integer.MAX_VALUE);
      assertEquals("id=2147483647 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.openOrderEnd();
      assertEquals(" =============== end ===============", string3);
      
      String string4 = EWrapperMsgGenerator.updateNewsBulletin(0, 0, " scaleInitLevelSize=", (String) null);
      assertEquals("MsgId=0 :: MsgType=0 :: Origin=null :: Message= scaleInitLevelSize=", string4);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(90, (-1256), (-1256), (-1256), 913.159, 3.0);
      assertEquals("id=90  unknown: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.currentTime((-2098L));
      assertEquals("current time = -2098 (Dec 31, 1969 11:25:02 PM)", string1);
      
      String string2 = EWrapperMsgGenerator.tickPrice(90, 2146206144, 56.4993149538, 10);
      assertEquals("id=90  unknown=56.4993149538  canAutoExecute", string2);
      
      String string3 = EWrapperMsgGenerator.updateAccountTime("BAG");
      assertEquals("updateAccountTime: BAG", string3);
      
      String string4 = EWrapperMsgGenerator.orderStatus((-1256), "*#,_g#vBwv>", (-105), 0, 0, 32, (-1479), 1594.2875319171, 102, "sC;J$':ZXL^{");
      assertEquals("order status: orderId=-1256 clientId=102 permId=32 status=*#,_g#vBwv> filled=-105 remaining=0 avgFillPrice=0.0 lastFillPrice=1594.2875319171 parent Id=-1479 whyHeld=sC;J$':ZXL^{", string4);
      
      String string5 = EWrapperMsgGenerator.tickSnapshotEnd(102);
      assertEquals("id=102 =============== end ===============", string5);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.983818251559958
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(13, 13, 13);
      assertEquals("id=13  modelOptComp=13.0", string0);
      
      String string1 = EWrapperMsgGenerator.tickSnapshotEnd(13);
      assertEquals("id=13 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.execDetailsEnd(13);
      assertEquals("reqId = 13 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.updateMktDepthL2(0, 0, " stockRefP.*rice", (-4631), 13, 0, Integer.MAX_VALUE);
      assertEquals("updateMktDepth: 0 0  stockRefP.*rice -4631 13 0.0 2147483647", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation(1355, 13, Integer.MAX_VALUE, (-1967.5432818), 181.20514574, (-1.0));
      assertEquals("id=1355  modelOptComp: vol = 2.147483647E9 delta = N/A: modelPrice = 181.20514574: pvDividend = N/A", string4);
      
      String string5 = EWrapperMsgGenerator.tickPrice((-63), 13, 1865.2277, (-2146656601));
      assertEquals("id=-63  modelOptComp=1865.2277  canAutoExecute", string5);
      
      String string6 = EWrapperMsgGenerator.currentTime(0L);
      assertEquals("current time = 0 (Jan 1, 1970 12:00:00 AM)", string6);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "X", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "X", "j-I>pW36=vY<A$");
      vector0.add("");
      Order order0 = new Order();
      contract0.m_comboLegs = null;
      OrderState orderState0 = new OrderState();
      orderState0.m_equityWithLoan = "n^L_";
      orderState0.m_initMargin = "com.ib.client.Execution";
      EWrapperMsgGenerator.openOrder(4887, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickGeneric(0, 10, (-3109.7135139));
      assertEquals("id=0  bidOptComp=-3109.7135139", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2(Integer.MAX_VALUE, (-434), "", 0, 0, 1.7976931348623157E308, Integer.MAX_VALUE);
      assertEquals("updateMktDepth: 2147483647 -434  0 0 1.7976931348623157E308 2147483647", string1);
      
      Contract contract1 = new Contract();
      Execution execution0 = new Execution();
      execution0.m_execId = "lastSize";
      contract1.m_expiry = "$]fxF1%<,Si:H8:S";
      EWrapperMsgGenerator.openOrder(0, contract1, order0, orderState0);
      String string2 = EWrapperMsgGenerator.tickSize(0, 2147483646, 0);
      assertEquals("id=0  unknown=0", string2);
      
      String string3 = EWrapperMsgGenerator.fundamentalData(Integer.MAX_VALUE, "U;aG%(_ilN");
      assertEquals("id  = 2147483647 len = 11\nU;aG%(_ilN", string3);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "X", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "X", "j-I>pW36=vY<A$");
      vector0.add("");
      Order order0 = new Order();
      order0.m_algoParams = order0.m_algoParams;
      OrderState orderState0 = new OrderState();
      orderState0.m_equityWithLoan = "n^L_";
      order0.m_designatedLocation = "4h";
      String string0 = EWrapperMsgGenerator.tickSize(2628, 26, Integer.MAX_VALUE);
      assertEquals("id=2628  OptionAskExchStr=2147483647", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(2519, 2661, "Rn8`k\"*atU~ BT>D", "p9kEPDwuk$} #'\"1");
      assertEquals("MsgId=2519 :: MsgType=2661 :: Origin=p9kEPDwuk$} #'\"1 :: Message=Rn8`k\"*atU~ BT>D", string1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(857, 0, "FA:", "SCANNER PARAMETERS:");
      assertEquals("MsgId=857 :: MsgType=0 :: Origin=SCANNER PARAMETERS: :: Message=FA:", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      execution0.m_execId = "avgPrice = ";
      execution0.m_shares = 1;
      String string0 = EWrapperMsgGenerator.updateAccountTime((String) null);
      assertEquals("updateAccountTime: null", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize((-2147164752), 692, 13);
      assertEquals("id=-2147164752  unknown=13", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(1, 0, 4267.727735142052, 692, 0.0, 52.3528724);
      assertEquals("id=1  bidSize: vol = 4267.727735142052 delta = N/A", string2);
      
      String string3 = EWrapperMsgGenerator.tickString(692, 1527, "executionExchange = ");
      assertEquals("id=692  unknown=executionExchange = ", string3);
      
      String string4 = EWrapperMsgGenerator.tickSnapshotEnd((-124));
      assertEquals("id=-124 =============== end ===============", string4);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "X", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "X", "j-I>pW36=vY<A$");
      vector0.add("");
      Order order0 = new Order();
      contract0.m_comboLegs = null;
      OrderState orderState0 = new OrderState();
      orderState0.m_equityWithLoan = "n^L_";
      orderState0.m_initMargin = "com.ib.client.Execution";
      EWrapperMsgGenerator.openOrder(4887, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickGeneric(0, 10, (-3109.7135139));
      assertEquals("id=0  bidOptComp=-3109.7135139", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2(Integer.MAX_VALUE, (-434), "", 0, 0, 1.7976931348623157E308, Integer.MAX_VALUE);
      assertEquals("updateMktDepth: 2147483647 -434  0 0 1.7976931348623157E308 2147483647", string1);
      
      Contract contract1 = new Contract();
      Execution execution0 = new Execution();
      EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      String string2 = EWrapperMsgGenerator.tickSize(0, 997, 0);
      assertEquals("id=0  unknown=0", string2);
      
      String string3 = EWrapperMsgGenerator.tickPrice(0, 4887, (-1256.0), 0);
      assertEquals("id=0  unknown=-1256.0  noAutoExecute", string3);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      EWrapperMsgGenerator.nextValidId((-422));
      EWrapperMsgGenerator.tickSize(15, 13, (-2147483646));
      EWrapperMsgGenerator.tickOptionComputation(0, 15, (-714.1709343), 3176.56995876979, 1.7976931348623157E308, (-2437.27958));
      Execution execution1 = new Execution();
      execution1.m_price = (-406.777670605597);
      EWrapperMsgGenerator.tickOptionComputation(0, 0, 1961.962611312, 3769.857, 0.0, 0L);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData((-862), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OrderState orderState0 = new OrderState("XF@S4rV.lVyR8I>", "5rqso[MGj-r", "XF@S4rV.lVyR8I>", "updateMktDepth: 0 0 u(:V+xNk 4887 1680 0.0 1", 2.147483647E9, 263.2, 121.0, (String) null, ": pvDividend = ");
      Order order0 = new Order();
      Contract contract0 = new Contract(0, "[mB$(", "", "9'`Y|'tW>^^9", 990.419319772, "sF;r)0b", "OptionAskExchStr", (String) null, (String) null, "lastTimestamp", (Vector) null, "YQXf", false, (String) null, "9'`Y|'tW>^^9");
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickSize(0, Integer.MAX_VALUE, (-887));
      assertEquals("id=0  unknown=-887", string0);
      
      String string1 = EWrapperMsgGenerator.tickGeneric((-734), 2129735849, (-965.0));
      assertEquals("id=-734  unknown=-965.0", string1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(59);
      linkedList0.add(integer0);
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      String string0 = EWrapperMsgGenerator.contractDetailsEnd((-1256));
      assertEquals("reqId = -1256 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.tickString((-7409), 2146602549, "  It does not support fundamental data requests.");
      assertEquals("id=-7409  unknown=  It does not support fundamental data requests.", string1);
      
      String string2 = EWrapperMsgGenerator.tickSnapshotEnd(2106965088);
      assertEquals("id=2106965088 =============== end ===============", string2);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(13, 13, 13);
      assertEquals("id=13  modelOptComp=13.0", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin(13, 13, "", "");
      assertEquals("MsgId=13 :: MsgType=13 :: Origin= :: Message=", string1);
      
      String string2 = EWrapperMsgGenerator.execDetailsEnd(13);
      assertEquals("reqId = 13 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.historicalData(3789, "id=13  modelOptComp=13.0", 1.0, 1323.0, 1323.0, 1.0, 1881, 3789, (-567.124590586), false);
      assertEquals("id=3789 date = id=13  modelOptComp=13.0 open=1.0 high=1323.0 low=1323.0 close=1.0 volume=1881 count=3789 WAP=-567.124590586 hasGaps=false", string3);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "X", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "X", "j-I>pW36=vY<A$");
      vector0.add("");
      Order order0 = new Order();
      contract0.m_comboLegs = null;
      OrderState orderState0 = new OrderState();
      orderState0.m_equityWithLoan = "n^L_";
      orderState0.m_initMargin = "com.ib.client.Execution";
      EWrapperMsgGenerator.openOrder(4887, contract0, order0, orderState0);
      String string0 = EWrapperMsgGenerator.tickGeneric(0, 10, (-3109.7135139));
      assertEquals("id=0  bidOptComp=-3109.7135139", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2(Integer.MAX_VALUE, (-434), "", 0, 0, 1.7976931348623157E308, Integer.MAX_VALUE);
      assertEquals("updateMktDepth: 2147483647 -434  0 0 1.7976931348623157E308 2147483647", string1);
      
      Contract contract1 = new Contract();
      Execution execution0 = new Execution();
      contract1.m_expiry = "$]fxF1%<,Si:H8:S";
      EWrapperMsgGenerator.openOrder(0, contract1, order0, orderState0);
      String string2 = EWrapperMsgGenerator.tickSize(0, 2147483646, 0);
      assertEquals("id=0  unknown=0", string2);
      
      String string3 = EWrapperMsgGenerator.scannerParameters((String) null);
      assertEquals("SCANNER PARAMETERS:\nnull", string3);
      
      String string4 = EWrapperMsgGenerator.updateMktDepth(0, 0, 2534, 27, 0.0, (-2078));
      assertEquals("updateMktDepth: 0 0 2534 27 0.0 -2078", string4);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(1808, "cBc8Ybo/$V9F7{", (-2572.2717693), 1.7976931348623157E308, 0, 1323.0, 2543, 1501, 0, false);
      assertEquals("id=1808 date = cBc8Ybo/$V9F7{ open=-2572.2717693 high=1.7976931348623157E308 low=0.0 close=1323.0 volume=2543 count=1501 WAP=0.0 hasGaps=false", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract((-1256), "updateMktDepth: 0 0 u(:V+xNk 4887 1680 0.0 1", "", "K", (-2092.2993), " referencePriceType=", "bidOptComp", "j-I>pW36=vY<A$", "g+_f;t*", "updateMktDepth: 0 0 u(:V+xNk 4887 1680 0.0 1", vector0, "uf!ue=::[(KsZBTb<D0", false, "updateMktDepth: 0 0 u(:V+xNk 4887 1680 0.0 1", "n^L_");
      vector0.add(" referencePriceType=");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.tickSize(0, 'm', (-69));
      assertEquals("id=0  unknown=-69", string0);
      
      orderState0.m_status = "zxeug9$S%hRaY|S{";
      String string1 = EWrapperMsgGenerator.tickOptionComputation((-1), 0, Integer.MAX_VALUE, 0.0, (-529.0), Integer.MAX_VALUE);
      assertEquals("id=-1  bidSize: vol = 2.147483647E9 delta = 0.0", string1);
      
      String string2 = EWrapperMsgGenerator.tickString(2628, 1, (String) null);
      assertEquals("id=2628  bidPrice=null", string2);
      
      String string3 = EWrapperMsgGenerator.receiveFA(Integer.MAX_VALUE, "-!{w'!#Zu&d^ u/~g");
      assertEquals("FA: null -!{w'!#Zu&d^ u/~g", string3);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.nextValidId((-422));
      assertEquals("Next Valid Order ID: -422", string0);
      
      String string1 = EWrapperMsgGenerator.tickSize(15, 13, (-2147483646));
      assertEquals("id=15  modelOptComp=-2147483646", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(1564, 13, (-714.1709343), 3176.56995876979, 1.7976931348623157E308, (-2437.27958));
      assertEquals("id=1564  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string2);
      
      Contract contract0 = new Contract(13, (String) null, (String) null, "3z} HHP-} &A](`8J;n", (-3920.346758), (String) null, "AlXFZ|IlZv3A", "isCQ18y+", (String) null, "id=15  modelOptComp=-2147483646", vector0, "Y{<+\"a-[ _,.|E^", false, (String) null, (String) null);
      Execution execution1 = new Execution();
      String string3 = EWrapperMsgGenerator.execDetails(373, contract0, execution1);
      assertEquals(" ---- Execution Details begin ----\nreqId = 373\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = 3z} HHP-} &A](`8J;n\nstrike = -3920.346758\nright = null\ncontractExchange = isCQ18y+\ncurrency = null\nlocalSymbol = id=15  modelOptComp=-2147483646\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string3);
      
      String string4 = EWrapperMsgGenerator.tickGeneric((-422), (-761), 0);
      assertEquals("id=-422  unknown=0.0", string4);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.removeFirstOccurrence("7rLSD;s.zJ>`");
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      String string0 = EWrapperMsgGenerator.execDetailsEnd(2144817266);
      assertEquals("reqId = 2144817266 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.updateMktDepthL2(13, 63, "7rLSD;s.zJ>`", Integer.MAX_VALUE, 19, 960.793384, (-4631));
      assertEquals("updateMktDepth: 13 63 7rLSD;s.zJ>` 2147483647 19 960.793384 -4631", string1);
      
      String string2 = EWrapperMsgGenerator.tickOptionComputation(13, (-1256), (-6733.122), (-1256), 960.793384, (-4631));
      assertEquals("id=13  unknown: vol = N/A delta = N/A", string2);
      
      String string3 = EWrapperMsgGenerator.accountDownloadEnd("BAG");
      assertEquals("accountDownloadEnd: BAG", string3);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(13, 13, 13);
      assertEquals("id=13  modelOptComp=13.0", string0);
      
      Vector<String> vector0 = new Vector<String>();
      vector0.add("Rn8`k\"*atU~ BT>D");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Order order1 = new Order();
      order1.m_whatIf = false;
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, Integer.MAX_VALUE, 682.0841106, 0, (-794.4818629932694), 1935.0178802399);
      assertEquals("id=0  unknown: vol = 682.0841106 delta = 0.0", string1);
      
      String string2 = EWrapperMsgGenerator.tickEFP(13, 2833, 2438.330206938721, (String) null, 513.164259398, 56, "", 1935.0178802399, 1582.318943);
      assertEquals("id=13  unknown: basisPoints = 2438.330206938721/null impliedFuture = 513.164259398 holdDays = 56 futureExpiry =  dividendImpact = 1935.0178802399 dividends to expiry = 1582.318943", string2);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(1, 0, 3119, (-1320), 0, (-1320));
      assertEquals("updateMktDepth: 1 0 3119 -1320 0.0 -1320", string0);
      
      String string1 = EWrapperMsgGenerator.updateAccountValue("Qunfw/x6", (String) null, "NMi}uMk`\"Bp6\"h{", "updateMktDepth: 1 0 3119 -1320 0.0 -1320");
      assertEquals("updateAccountValue: Qunfw/x6 null NMi}uMk`\"Bp6\"h{ updateMktDepth: 1 0 3119 -1320 0.0 -1320", string1);
      
      Contract contract0 = new Contract();
      String string2 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string2);
      
      ContractDetails contractDetails0 = new ContractDetails(contract0, "", "wG!fP%", 1.0, " commissionCurrency=", (String) null, (-767), " benchmark=", "conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", (String) null, "Ro%#B/", "updateMktDepth: 1 0 3119 -1320 0.0 -1320", "wG!fP%", "NMi}uMk`\"Bp6\"h{", (String) null);
      String string3 = EWrapperMsgGenerator.scannerData(3119, 2129735849, contractDetails0, "validExchanges = ", (String) null, "wG!fP%", ".o6$dy&q");
      assertEquals("id = 3119 rank=2129735849 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName= tradingClass=wG!fP% distance=validExchanges =  benchmark=null projection=wG!fP% legsStr=.o6$dy&q", string3);
      
      String string4 = EWrapperMsgGenerator.scannerData((-1), 0, contractDetails0, "Qunfw/x6", "TZ:y|9^6=(:", "price = ", (String) null);
      assertEquals("id = -1 rank=0 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName= tradingClass=wG!fP% distance=Qunfw/x6 benchmark=TZ:y|9^6=(: projection=price =  legsStr=null", string4);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.042632211710285
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric((-1859), (-1859), 0L);
      assertEquals("id=-1859  unknown=0.0", string0);
      
      String string1 = EWrapperMsgGenerator.updateNewsBulletin((-4668), (-1622492159), "", "");
      assertEquals("MsgId=-4668 :: MsgType=-1622492159 :: Origin= :: Message=", string1);
      
      String string2 = EWrapperMsgGenerator.execDetailsEnd((-1073741824));
      assertEquals("reqId = -1073741824 =============== end ===============", string2);
      
      String string3 = EWrapperMsgGenerator.updateMktDepthL2((-750), 1, "wG!fP%", 2773, (-1859), 3962.578903295, 2147044220);
      assertEquals("updateMktDepth: -750 1 wG!fP% 2773 -1859 3962.578903295 2147044220", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation(2147044220, (-4631), 397, (-1.0), 0, 1168.093252);
      assertEquals("id=2147044220  unknown: vol = 397.0 delta = -1.0", string4);
      
      UnderComp underComp0 = new UnderComp();
      String string5 = EWrapperMsgGenerator.deltaNeutralValidation((-1622492159), underComp0);
      assertEquals("id = -1622492159 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string5);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(2552);
      linkedList0.add(integer0);
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      EWrapperMsgGenerator.contractDetailsEnd((-1256));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation((-1256), (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(4887, "wG!fP%", "wG!fP%", "wG!fP%", 4887, "X", "j-I>pW36=vY<A$", "n^L_", "g+_f;t*", "g+_f;t*", vector0, "g+_f;t*", false, "X", "j-I>pW36=vY<A$");
      vector0.add("");
      Order order0 = new Order();
      contract0.m_comboLegs = null;
      OrderState orderState0 = new OrderState();
      orderState0.m_equityWithLoan = "n^L_";
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(1769);
      assertEquals("reqId = 1769 =============== end ===============", string0);
      
      Order order1 = new Order();
      String string1 = EWrapperMsgGenerator.tickSnapshotEnd(Integer.MAX_VALUE);
      assertEquals("id=2147483647 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.scannerDataEnd(5360);
      assertEquals("id = 5360 =============== end ===============", string2);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      String string0 = EWrapperMsgGenerator.tickSize(32, 1170, (-1256));
      assertEquals("id=32  unknown=-1256", string0);
      
      String string1 = EWrapperMsgGenerator.tickGeneric(1275, 51, (-1954.38));
      assertEquals("id=1275  unknown=-1954.38", string1);
      
      String string2 = EWrapperMsgGenerator.managedAccounts("id=1275  unknown=-1954.38");
      assertEquals("Connected : The list of managed accounts are : [id=1275  unknown=-1954.38]", string2);
      
      String string3 = EWrapperMsgGenerator.orderStatus(2146205383, "id=1275  unknown=-1954.38", (-1256), 1170, (-866.537), (-3079), (-3079), 1787.031929237, 1, "id=32  unknown=-1256");
      assertEquals("order status: orderId=2146205383 clientId=1 permId=-3079 status=id=1275  unknown=-1954.38 filled=-1256 remaining=1170 avgFillPrice=-866.537 lastFillPrice=1787.031929237 parent Id=-3079 whyHeld=id=32  unknown=-1256", string3);
      
      String string4 = EWrapperMsgGenerator.tickPrice((-2121331987), 10, 0L, 9);
      assertEquals("id=-2121331987  bidOptComp=0.0  canAutoExecute", string4);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "BAG", 0, "wG!fP%", "A{A</]N`7/B_c[ T%Q", 110, "wG!fP%", (String) null, "  It does not support fundamental data requests.", (String) null, (String) null, (String) null, "BAG", "7rLSD;s.zJ>`");
      String string0 = EWrapperMsgGenerator.bondContractDetails((-1256), contractDetails0);
      assertEquals("reqId = -1256 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = BAG\nconid = 0\nminTick = 0.0\norderTypes = wG!fP%\nvalidExchanges = A{A</]N`7/B_c[ T%Q\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = wG!fP%\n ---- Bond Contract Details End ----\n", string0);
      
      String string1 = EWrapperMsgGenerator.contractDetailsEnd((-1256));
      assertEquals("reqId = -1256 =============== end ===============", string1);
      
      String string2 = EWrapperMsgGenerator.nextValidId((-422));
      assertEquals("Next Valid Order ID: -422", string2);
      
      String string3 = EWrapperMsgGenerator.tickSize((-422), 834, 834);
      assertEquals("id=-422  unknown=834", string3);
      
      String string4 = EWrapperMsgGenerator.tickOptionComputation(110, 0, 1.7976931348623157E308, 704.712, 32, 1.7976931348623157E308);
      assertEquals("id=110  bidSize: vol = N/A delta = N/A", string4);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      Execution execution1 = new Execution();
      String string0 = EWrapperMsgGenerator.tickSize(0, (-2147164752), 0);
      assertEquals("id=0  unknown=0", string0);
      
      execution1.m_avgPrice = 1.7976931348623157E308;
      String string1 = EWrapperMsgGenerator.tickOptionComputation(0, 1258, 0, 0, (-529.0), (-1.0));
      assertEquals("id=0  unknown: vol = 0.0 delta = 0.0", string1);
      
      String string2 = EWrapperMsgGenerator.updateAccountValue((String) null, "Qunfw/x6", "gb.", "g+_f;t*");
      assertEquals("updateAccountValue: null Qunfw/x6 gb. g+_f;t*", string2);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-72), 0, 0.0, 1267.336740920206, 1.0, (-4079.894921355));
      assertEquals("id=-72  bidSize: vol = 0.0 delta = N/A", string0);
  }
}
