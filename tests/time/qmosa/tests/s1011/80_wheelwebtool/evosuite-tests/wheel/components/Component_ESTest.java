/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:14:51 GMT 2019
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.XmlSerializerWrapper;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Image;
import wheel.components.Link;
import wheel.components.Radio;
import wheel.components.RadioGroup;
import wheel.components.Select;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "LcJ6)Yzb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("LcJ6)Yzb");
      String string1 = "caQV(D";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "caQV(D";
      // Undeclared exception!
      try { 
        xmlEntityRef0.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "LcJ6)Yzb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("LcJ6)Yzb");
      String string1 = "caQV(D";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "caQV(D";
      String string2 = "I(|](@M2}Ly2";
      stringArray0[1] = "I(|](@M2}Ly2";
      xmlEntityRef0._setComponentId("caQV(D");
      // Undeclared exception!
      try { 
        xmlEntityRef0.base("caQV(D");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.9021600502388347
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "kf7A{~O~Jv6aiIhYj1";
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Object object0 = null;
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string1 = "h";
      DateInput dateInput0 = new DateInput(component0, "h", "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      String string2 = "org.mvel.conversion.ShortCH$10";
      // Undeclared exception!
      try { 
        textInput0.img("org.mvel.conversion.ShortCH$10", "^roi");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0443058944101313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      ActionExpression actionExpression0 = new ActionExpression("");
      Short.compare((short) (-1382), (short)879);
      ElExpression elExpression0 = new ElExpression("");
      Table table0 = new Table(link0, "[MVEL JIT Completed Optimization <<");
      Table table1 = table0.renderHint("");
      TableBlock tableBlock0 = table1.colgroup();
      tableBlock0.create();
      TableRow tableRow0 = tableBlock0.tr();
      ActionExpression actionExpression1 = actionExpression0.submissible(false);
      tableBlock0.kbd();
      // Undeclared exception!
      try { 
        tableRow0.numberInput("", (CharSequence) actionExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "LcJ6)Yzb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("LcJ6)Yzb");
      String string1 = "caQV(D";
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        xmlEntityRef0.h2((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "LcJ6)Yzb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("LcJ6)Yzb");
      String string1 = "caQV(D";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "caQV(D";
      String string2 = "I(|](@M2}Ly2";
      // Undeclared exception!
      try { 
        xmlEntityRef0.reset("caQV(D");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3666249293157033
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      Component component1 = component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, errorPage0);
      Component component2 = errorPage0.abbr((Object) dateInput0);
      Long long0 = new Long(595L);
      Component component3 = errorPage0.abbr((Object) component2);
      Component component4 = errorPage0.remove(component3);
      Table table0 = new Table(textInput0, "k");
      Table table1 = table0.renderHint("h5");
      TableBlock tableBlock0 = table1.colgroup();
      table1._applyFormat(errorPage0);
      Any any0 = tableBlock0.col();
      component4.h3((Object) any0);
      ActionExpression actionExpression0 = new ActionExpression("~R_`?r0{aI?!`1>M");
      Form form0 = new Form(dateInput0, "vIzZm(MT", actionExpression0);
      Form form1 = form0.addFormElement(dateInput0);
      form1.addFormValidationError("h5");
      Checkbox checkbox0 = new Checkbox(component1, "kf7A{~O~Jv6aiIhYj1", "y;X#LYmqFDplc");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9245302597265255
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "kf7A{~O~Jv6aiIhYj1";
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string1 = "wW7";
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      int int0 = 46;
      // Undeclared exception!
      try { 
        text0.remove((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1874134059453176
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("'.");
      // Undeclared exception!
      try { 
        xmlEntityRef0.blockquote();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.3628386488416293
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "kf7A{~O~Jv6aiIhYj1";
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string1 = "h5";
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      FormElement formElement0 = textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      formElement0.addValidationError("~>_");
      Text text1 = new Text(dateInput0, "h5");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(53, 95, 46, (-22), 46);
      errorPage0.table();
      component0.tt((Object) formElement0);
      Image image0 = new Image(text1, "~>_", "wW7");
      Table table0 = new Table(textInput0, "wW7");
      Table table1 = table0.id("%|8tH.");
      table1.renderHint("wW7");
      table0._clear();
      // Undeclared exception!
      try { 
        component0.radio("l6");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9815469325060207
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      ActionExpression actionExpression0 = new ActionExpression("");
      Any any0 = new Any(link0, actionExpression0);
      String string0 = "";
      Submit submit0 = new Submit(any0, "", "");
      link0.b((Object) null);
      String string1 = ")D=Z,\"K9<`E";
      // Undeclared exception!
      try { 
        any0.script();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9344632846636514
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "C/lJ'Fs=KG=u", "C/lJ'Fs=KG=u");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string0 = "h5";
      String string1 = "yL7";
      DateInput dateInput0 = new DateInput(component0, "h5", "yL7", "C/lJ'Fs=KG=u");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      String string2 = null;
      Float float0 = new Float((-1.0F));
      Text text0 = new Text(dateInput0, float0);
      // Undeclared exception!
      try { 
        text0.ol();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2430649564004224
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "C/lJ'Fs=KG=u", "C/lJ'Fs=KG=u");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "C/lJ'Fs=KG=u");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-22), 46, 46, 46, (-22));
      Component component1 = component0.tt((Object) mockGregorianCalendar0);
      Image image0 = new Image(text0, "C/lJ'Fs=KG=u", "C/lJ'Fs=KG=u");
      Table table0 = new Table(component1, "em");
      assertEquals("em", table0.getComponentId());
      
      Table table1 = table0.id("Caused by: ");
      Table table2 = table1.renderHint("C/lJ'Fs=KG=u");
      table2._clear();
      table0.h3();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.934124907905301
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "", "");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      String string0 = "KfvZAVHtG9,U@";
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      xmlPullWrapperFactory0.newSerializerWrapper((XmlSerializer) null);
      ActionExpression actionExpression0 = new ActionExpression("");
      String string1 = "u+qk;nKy 0L'6Wjn";
      // Undeclared exception!
      try { 
        dateInput0.button();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.024170530190766
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("L)cJ6)dYzb");
      errorPage0.acronym((Object) null);
      errorPage0._getForm(true);
      Select select0 = new Select(errorPage0, "h5", "br", (ISelectModel) null, "h5");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "h5";
      select0._setSubmitValue(stringArray0);
      DateInput dateInput0 = new DateInput(errorPage0, "gEg=Y0p/G-(_st", "", (CharSequence) null);
      String[] stringArray1 = new String[9];
      stringArray1[0] = null;
      stringArray1[1] = "gEg=Y0p/G-(_st";
      stringArray1[2] = "L)cJ6)dYzb";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "h5";
      stringArray1[6] = "gEg=Y0p/G-(_st";
      stringArray1[7] = "br";
      stringArray1[8] = "br";
      // Undeclared exception!
      try { 
        xmlEntityRef0.attributes(stringArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.883156133298659
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "gKL'Xwlr>w^#`#i";
      String string1 = null;
      Table table0 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table0.tr();
      TextArea textArea0 = new TextArea(tableRow0, "gKL'Xwlr>w^#`#i", "gKL'Xwlr>w^#`#i");
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "gKL'Xwlr>w^#`#i";
      textArea0.attributes(stringArray0);
      FormElement formElement0 = textArea0.value("gKL'Xwlr>w^#`#i");
      // Undeclared exception!
      try { 
        formElement0.sup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.21535673099974
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-22), 46, 46, 46, (-22));
      Component component1 = component0.tt((Object) mockGregorianCalendar0);
      Image image0 = new Image(text0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Table table0 = new Table(component1, "em");
      TableBlock tableBlock0 = table0.tbody();
      TableRow tableRow0 = tableBlock0.tr();
      Image image1 = new Image(dateInput0, "kf7A{~O~Jv6aiIhYj1", "wW7");
      tableBlock0.cite((Object) image1);
      // Undeclared exception!
      try { 
        tableRow0.numberInput("em", (CharSequence) "em");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0811663283110775
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("L)cJ6)dYzb");
      errorPage0.acronym((Object) null);
      errorPage0._getForm(true);
      Select select0 = new Select(errorPage0, "h5", "br", (ISelectModel) null, "h5");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "h5";
      select0._setSubmitValue(stringArray0);
      DateInput dateInput0 = new DateInput(errorPage0, "gEg=Y0p/G-(_st", "", (CharSequence) null);
      dateInput0._clear();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-4313), (-4313), 2012);
      // Undeclared exception!
      try { 
        dateInput0.pre((Object) mockGregorianCalendar0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.981961912273764
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      ActionExpression actionExpression0 = new ActionExpression("");
      Hidden hidden0 = new Hidden(errorPage0, "R'(hEa2]dF|@!*/%,7Y", "");
      FormElement formElement0 = hidden0.value("");
      ActionExpression actionExpression1 = new ActionExpression("");
      ActionExpression actionExpression2 = actionExpression0.javascript("");
      Form form0 = new Form(formElement0, "Ze>", actionExpression2);
      Form form1 = form0.renderHint("");
      Form form2 = form1.renderHint((CharSequence) null);
      form1.addFormValidationError("");
      hidden0.value("CgkXH3.nSt}");
      form0.addFormElement(hidden0);
      ErrorPage errorPage1 = new ErrorPage();
      Text text0 = (Text)errorPage1.htmlText(form2);
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertTrue(text0.isHtml());
      assertTrue(formElement0._isGeneratedId());
      assertEquals("Ze>", form2.getComponentId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.903575709890132
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "q", "q");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string0 = "h5";
      errorPage0.rawText("h5");
      String string1 = "wW7";
      String string2 = "t Kot>OBG";
      Submit submit0 = new Submit(component0, "h5", "t Kot>OBG");
      MXSerializer mXSerializer0 = new MXSerializer();
      String string3 = "src";
      Checkbox checkbox0 = new Checkbox(errorPage0, "src", "wW7");
      // Undeclared exception!
      try { 
        checkbox0.i();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3545708168383306
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string0 = "h5";
      String string1 = "wW7";
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      String string2 = null;
      FormElement formElement0 = textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      Component component1 = errorPage0.abbr((Object) dateInput0);
      Long long0 = new Long(595L);
      Component component2 = errorPage0.abbr((Object) component1);
      Component component3 = errorPage0.remove(component2);
      Table table0 = new Table(textInput0, "k");
      component1.h1((Object) long0);
      Table table1 = table0.renderHint("h5");
      TableBlock tableBlock0 = table1.colgroup();
      Any any0 = tableBlock0.col();
      component3.h3((Object) any0);
      ActionExpression actionExpression0 = new ActionExpression("~R_`?r0{aI?!`1>M");
      Form form0 = new Form(dateInput0, "vIzZm(MT", actionExpression0);
      Form form1 = form0.addFormElement(dateInput0);
      Form form2 = form1.addFormValidationError("h5");
      form2.rawText("kf7A{~O~Jv6aiIhYj1");
      // Undeclared exception!
      try { 
        formElement0.samp((Object) form2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("6L)cJ6)`Yzb");
      String string0 = "caQV(D";
      ElExpression elExpression0 = new ElExpression("caQV(D");
      String string1 = null;
      String string2 = ",Z";
      TextInput textInput0 = new TextInput(xmlEntityRef0, (String) null, ",Z");
      String string3 = null;
      // Undeclared exception!
      try { 
        xmlEntityRef0.em();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.00710113041656
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.colgroup();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) table0;
      objectArray0[1] = (Object) tableBlock0;
      objectArray0[2] = (Object) tableBlock0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) tableBlock0;
      Object object1 = new Object();
      table0.em();
      objectArray0[5] = object1;
      Object object2 = new Object();
      objectArray0[7] = (Object) errorPage0;
      tableBlock0.button();
      // Undeclared exception!
      try { 
        table0.message((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0225091318968014
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "kf7A{~O~Jv6aiIhYj1";
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string1 = "h5";
      String string2 = "wW7";
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      String string3 = null;
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      // Undeclared exception!
      try { 
        textInput0.base("h5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9853993263584178
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      Component component1 = component0.h3((Object) dateInput0);
      String string0 = null;
      FormElement formElement0 = textInput0.addValidationError((String) null);
      String string1 = "KfvZAVHtG9,U@";
      Class<Select> class0 = Select.class;
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      dateInput0.getEngine();
      dateInput0.validate();
      Object object0 = new Object();
      component1.h3(object0);
      textInput0.addValidationError("KfvZAVHtG9,U@");
      String string2 = "h4";
      Checkbox checkbox0 = new Checkbox(errorPage0, "!l9nhs!'2J#", "h4");
      Text text0 = new Text(formElement0, checkbox0);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0, 0, 46);
      // Undeclared exception!
      try { 
        dateInput0.tt((Object) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1875799075806377
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      TextArea textArea0 = new TextArea(text0, "wW", "org.mvel.conversion.BooleanCH$9");
      errorPage0.tt((Object) textArea0);
      Image image0 = new Image(dateInput0, "kf7A{~O~Jv6aiIhYj1", "wW");
      Table table0 = new Table(component0, "V>*");
      assertEquals("V>*", table0.getComponentId());
      
      Table table1 = table0.id("wW");
      TableBlock tableBlock0 = new TableBlock(table1, "o6]6&*qNO}S=+Dt$A");
      tableBlock0.tr();
      Checkbox checkbox0 = new Checkbox(image0, "p", "kf7A{~O~Jv6aiIhYj1");
      checkbox0.defaultDomEvent();
      textArea0.addInternalRenderHint("*()w\rP0");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9021959023223447
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = null;
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.colgroup();
      Component component0 = table0.var();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) table0;
      objectArray0[1] = (Object) tableBlock0;
      objectArray0[2] = (Object) tableBlock0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) tableBlock0;
      Object object1 = new Object();
      errorPage0.addFirst(component0);
      objectArray0[5] = object1;
      Object object2 = new Object();
      objectArray0[6] = object2;
      objectArray0[7] = (Object) errorPage0;
      table0.strong();
      // Undeclared exception!
      try { 
        component0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      short short0 = (short)1110;
      Short short1 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short1);
      String string0 = ".";
      ActionExpression actionExpression0 = new ActionExpression(".");
      ElExpression elExpression0 = new ElExpression("");
      elExpression0.expression = "";
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(link0, ".", "'(hEa2]dF|@*/%,Y", (ISelectModel) null, elExpression0);
      // Undeclared exception!
      try { 
        checkboxGroup0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7704619570778912
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "ca?VY(D";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("ca?VY(D");
      Component component0 = errorPage0.sup((Object) xmlEntityRef0);
      component0.action("class=\"");
      String string1 = "-5XsI>FIzbx!.~M";
      String string2 = null;
      ElExpression elExpression0 = new ElExpression("ca?VY(D");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9504736048919575
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      component0.span((Object) null);
      String string0 = "'DV";
      DateInput dateInput0 = new DateInput(component0, "'DV", "wW7", "kf7A{~O~Jv6aiIhYj1");
      // Undeclared exception!
      try { 
        dateInput0.htmlText((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("'.");
      ElExpression elExpression0 = new ElExpression((String) null);
      // Undeclared exception!
      try { 
        xmlEntityRef0.dd((Object) elExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.692287897002946
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Byte byte0 = new Byte((byte)8);
      errorPage0.u((Object) byte0);
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9530151381190843
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = null;
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.colgroup();
      Any any0 = tableBlock0.col();
      errorPage0.h2();
      // Undeclared exception!
      try { 
        any0.small((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.180361838857365
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      Component component1 = component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      errorPage0.abbr((Object) dateInput0);
      ActionExpression actionExpression0 = new ActionExpression((String) null);
      ActionExpression actionExpression1 = actionExpression0.javascript("");
      ActionExpression actionExpression2 = actionExpression1.submissible(false);
      Object[] objectArray0 = new Object[0];
      ActionExpression actionExpression3 = actionExpression2.parameters(objectArray0);
      Form form0 = new Form(component1, "h5", actionExpression3);
      Form form1 = form0.id("h5");
      actionExpression2.parameters(objectArray0);
      Form form2 = form0.addFormElement(dateInput0);
      form2.renderHint(actionExpression3);
      // Undeclared exception!
      try { 
        form1._buildFromSerializedString((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Form", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.2823490346375674
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      Text text0 = new Text(textInput0, (Object) null);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(46, (-22), (-22), 19, 19);
      TextArea textArea0 = new TextArea(text0, "wW7", "org.mvel.conversion.BooleanCH$9");
      errorPage0.tt((Object) textArea0);
      Image image0 = new Image(dateInput0, "kf7A{~O~Jv6aiIhYj1", "wW7");
      Table table0 = new Table(component0, "V>*");
      Table table1 = table0.id("wW7");
      TableBlock tableBlock0 = new TableBlock(table1, "o6]6&*qNO}S=+Dt$A");
      tableBlock0.tr();
      Table table2 = table0.renderHint((CharSequence) null);
      TableRow tableRow0 = new TableRow(table2);
      String string0 = "s27)-~^!q>r;I]";
      // Undeclared exception!
      try { 
        tableRow0.submit("s27)-~^!q>r;I]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.1760728176322193
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      String string0 = "L)cJ6)dYzb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("L)cJ6)dYzb");
      errorPage0._getForm(true);
      TableBlock tableBlock0 = table0.colgroup();
      tableBlock0.col();
      String string1 = "4v-IKIlzF3unJje";
      tableBlock0.id("4v-IKIlzF3unJje");
      TableBlock tableBlock1 = null;
      try {
        tableBlock1 = new TableBlock(xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.102924968907771
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "h5", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      String string0 = "KfvZAVHtG9,U@";
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      XmlSerializerWrapper xmlSerializerWrapper0 = xmlPullWrapperFactory0.newSerializerWrapper((XmlSerializer) null);
      ActionExpression actionExpression0 = new ActionExpression("kf7A{~O~Jv6aiIhYj1");
      Form form0 = new Form(component0, "org.xmlpull.v1.XmlPullParserFactory", actionExpression0);
      Form form1 = form0.addFormValidationError("u+qk;nKy 0L'6Wjn");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "kf7A{~O~Jv6aiIhYj1";
      stringArray0[0] = null;
      Form form2 = form1._buildFromSerializedString(stringArray0);
      Class<RadioGroup> class0 = RadioGroup.class;
      XmlPullWrapperFactory.newInstance("Label_1", class0);
      Form form3 = form2.addFormValidationRule("{4O?Hc", "D7!A ");
      // Undeclared exception!
      try { 
        form3._render(xmlSerializerWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1506719848487332
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.toString();
      // Undeclared exception!
      try { 
        errorPage0._getTopLevelComponent(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.9108162837837908
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "q", "q");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string0 = "t Kot>OBG";
      Checkbox checkbox0 = new Checkbox(errorPage0, "src", "wW7");
      DateInput dateInput0 = new DateInput(textInput0, "t Kot>OBG", "wW7", "h5");
      dateInput0.validate();
      Image image0 = new Image(component0, "h5", "h5");
      Form form0 = new Form("wW7");
      form0.getAction();
      // Undeclared exception!
      try { 
        image0.h3((Object) dateInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.481240517964154
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("L)cJ6)dY%zb");
      String string0 = "caQ(";
      Form form0 = new Form("caQ(");
      String string1 = "6$[}rk>Gx";
      xmlEntityRef0.actionBinding("6$[}rk>Gx");
      // Undeclared exception!
      try { 
        xmlEntityRef0.iframe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "'.";
      ElExpression elExpression0 = new ElExpression("'.");
      ElExpression elExpression1 = new ElExpression("'.");
      String string1 = "";
      ActionExpression actionExpression0 = new ActionExpression("");
      boolean boolean0 = false;
      Checkbox checkbox0 = new Checkbox((Component) null, "Ci^y).RjhV6|#G", ",v&10{TC+*1m- s");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.1126471028523963
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table0.tr();
      errorPage0._setSubmitTarget("_qh;9Bem?");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      TableBlock tableBlock0 = new TableBlock(table0, (String) null);
      TableBlock tableBlock1 = tableBlock0.id("~%L7roT}l");
      TableBlock tableBlock2 = new TableBlock(tableBlock1);
      tableBlock2.tr();
      tableRow0.createTd();
      tableBlock2.div();
      FileInput fileInput0 = new FileInput(tableBlock2, "9~8Wi*7@G", "");
      fileInput0.getMaxRequestSize();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9~8Wi*7@G");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "text/html;charset=";
      stringArray0[1] = "9~8Wi*7@G";
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Form form0 = new Form("samp");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "samp";
      Form form1 = form0._buildFromSerializedString(stringArray0);
      String string0 = "&^,(+J";
      ElExpression elExpression0 = new ElExpression("&^,(+J");
      DateInput dateInput0 = new DateInput(form1, "", "CHECKCAST java/lang/Float", elExpression0);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1714), 119, (-4313));
      // Undeclared exception!
      try { 
        dateInput0.pre((Object) mockGregorianCalendar0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.1233283415447226
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      ActionExpression actionExpression0 = new ActionExpression("");
      String string0 = "R'(hEa2]dF|@!*/%,7Y";
      String string1 = "org.xmlpull.mxp1_serializer.MXSerializer";
      Table table0 = new Table(link0, "org.xmlpull.mxp1_serializer.MXSerializer");
      TableBlock tableBlock0 = table0.tfoot();
      TableBlock tableBlock1 = tableBlock0.id("");
      TableRow tableRow0 = tableBlock1.tr();
      Block block0 = tableRow0.createTd();
      Any any0 = new Any(block0, (CharSequence) null);
      String string2 = "";
      // Undeclared exception!
      try { 
        any0.script();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.025500435751188
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      ActionExpression actionExpression0 = new ActionExpression("");
      Any any0 = new Any(link0, actionExpression0);
      String string0 = "";
      Submit submit0 = new Submit(any0, "", "");
      String string1 = "option";
      String string2 = "map";
      Table table0 = new Table(link0, "map");
      Table table1 = table0.renderHint("");
      TableRow tableRow0 = table1.tr();
      link0.pre((Object) tableRow0);
      String string3 = null;
      TextInput textInput0 = new TextInput(link0, "option", (String) null);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.h1((Object) submit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "L)cJ6)dYzb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("L)cJ6)dYzb");
      String string1 = "caQV(D";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "caQV(D";
      String string2 = "I(|](@M2}Ly2";
      stringArray0[1] = "I(|](@M2}Ly2";
      // Undeclared exception!
      try { 
        xmlEntityRef0.area(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      String string1 = "ca?VYD";
      // Undeclared exception!
      try { 
        xmlEntityRef0.map("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9354046201849306
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "C/lJ'Fs=KG=u";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("C/lJ'Fs=KG=u");
      String string1 = "r>^w\\n^b&lAB#/j-]";
      ElExpression elExpression0 = new ElExpression("r>^w\n^b&lAB#/j-]");
      errorPage0.isPageRewinding();
      String string2 = null;
      // Undeclared exception!
      try { 
        xmlEntityRef0.title((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9908052790563815
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string0 = "h5";
      DateInput dateInput0 = new DateInput(component0, "h5", "xu?", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError("kf7A{~O~Jv6aiIhYj1");
      Text text0 = new Text(textInput0, (Object) null);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-355), (-355), 0);
      Component component1 = component0.tt((Object) mockGregorianCalendar0);
      Image image0 = new Image(text0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      String string1 = "g";
      TableBlock tableBlock0 = new TableBlock(dateInput0);
      tableBlock0.tr();
      String string2 = "\\b";
      component1.dl();
      int int0 = (-4625);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-4625));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5411128325795946
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      Short.compare((short) (-1382), (short)879);
      ElExpression elExpression0 = new ElExpression("GR");
      String string0 = "*?nKjId}`.9m!Pc};>*";
      Radio radio0 = new Radio(link0, "R'(hEa2]dF@!*/%,7Y", "(Ljava/lang/Object;)Ljava/lang/String;");
      radio0.value("&amp;");
      // Undeclared exception!
      try { 
        errorPage0.remove((Component) link0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      String string1 = "caQV(D";
      // Undeclared exception!
      try { 
        xmlEntityRef0.base("caQV(D");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0447969209589383
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      xmlPullWrapperFactory0.newPullParserWrapper();
      XmlPullWrapperFactory xmlPullWrapperFactory1 = XmlPullWrapperFactory.newInstance();
      xmlPullWrapperFactory1.newPullParserWrapper();
      xmlPullWrapperFactory1.newSerializerWrapper();
      xmlPullWrapperFactory0.newPullParserWrapper();
      xmlPullWrapperFactory0.setValidating(false);
      // Undeclared exception!
      try { 
        errorPage0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9844935290697798
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "ca?VY(D";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("ca?VY(D");
      // Undeclared exception!
      try { 
        xmlEntityRef0.ul();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("6L)cJ6)`Yzb");
      String string0 = "caQV(D";
      ElExpression elExpression0 = new ElExpression("caQV(D");
      String string1 = null;
      TextInput textInput0 = new TextInput(xmlEntityRef0, (String) null, ",Z");
      // Undeclared exception!
      try { 
        xmlEntityRef0.h1((Object) textInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0913530610067337
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "kf7A{~O~Jv6aiIhYj1";
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      String string1 = null;
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      String string2 = "%_Muo)";
      TextArea textArea0 = new TextArea(component0, "h5", "%_Muo)");
      // Undeclared exception!
      try { 
        textArea0.find("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id  on the page.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = "character ";
      String string1 = "L)cJ6)dYzb";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("L)cJ6)dYzb");
      String string2 = "ca?VY(D";
      // Undeclared exception!
      try { 
        xmlEntityRef0.map("L)cJ6)dYzb");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "|A";
      Form form0 = new Form("|A");
      Double double0 = new Double((-1794.40267));
      // Undeclared exception!
      try { 
        form0.i((Object) double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1523, 1523, 0);
      String string0 = "";
      String string1 = "g";
      ActionExpression actionExpression0 = new ActionExpression("EMs`jco?2(");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "g";
      stringArray0[1] = "kf7A{~O~Jv6aiIhYj1";
      stringArray0[2] = "";
      String string2 = null;
      // Undeclared exception!
      try { 
        errorPage0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.081407456341657
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "gKL'XwlWr>w^#`#i");
      errorPage0._setSubmitTarget("_qh;9Bem?");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      Select select0 = new Select(table0, "_qh;9Bem?", "FL ,71g0}", "FL ,71g0}", stringSelectModel0, true);
      select0.defaultTagName();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ElExpression elExpression0 = new ElExpression((String) null);
      elExpression0.errorMessage("#</XM{OrB");
      Component component0 = table0.thead();
      Submit submit0 = new Submit(component0, "#</XM{OrB", (String) null);
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.useXhtml = false;
      TableBlock tableBlock1 = tableBlock0.id("d]Ql{ax0lkWdH +{2");
      submit0._setParent(tableBlock1);
      submit0.defaultTagName();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5738975033100724
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      String string0 = "";
      ActionExpression actionExpression0 = new ActionExpression("");
      String string1 = "R'(hEa2]dF|@!*/%,7Y";
      ISelectModel iSelectModel0 = null;
      Short.compare((short) (-1367), (short)879);
      // Undeclared exception!
      try { 
        link0.get("Label_1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id 'Label_1'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = "|A";
      Form form0 = new Form("|A");
      // Undeclared exception!
      try { 
        form0.h2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.011622802423357
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      ActionExpression actionExpression0 = new ActionExpression("");
      Any any0 = new Any(link0, actionExpression0);
      Submit submit0 = new Submit(any0, "", "");
      Table table0 = new Table(submit0, "s)D=Z\"K9<`E%");
      TableBlock tableBlock0 = table0.colgroup();
      tableBlock0.u();
      assertEquals("s)D=Z\"K9<`E%", table0.getComponentId());
      assertEquals("Any_1", any0.getComponentId());
      assertTrue(submit0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.918086997983172
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      String string1 = "(-ZBkS0 6";
      ElExpression elExpression0 = new ElExpression("");
      ElExpression elExpression1 = elExpression0.errorMessage("");
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.var((Object) xmlEntityRef0);
      // Undeclared exception!
      try { 
        xmlEntityRef0.fileInput("(-ZBkS0 6", elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.9341774206396387
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      TextInput textInput0 = new TextInput(errorPage0, "", "");
      Component component0 = errorPage0.kbd((Object) textInput0);
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      String string1 = "KfvZAVHtG9,U@";
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      xmlPullWrapperFactory0.newSerializerWrapper((XmlSerializer) null);
      // Undeclared exception!
      try { 
        dateInput0.var((Object) "h5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Form form0 = new Form("samp");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "samp";
      form0._buildFromSerializedString(stringArray0);
      String string0 = "&^,(+J";
      ElExpression elExpression0 = new ElExpression("&^,(+J");
      ElExpression elExpression1 = elExpression0.errorMessage("D56");
      // Undeclared exception!
      try { 
        form0.s((Object) elExpression1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7829173519186177
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "C/lJ'Fs=KG=u";
      Radio radio0 = new Radio(errorPage0, "$=`2]!a')SbbD'\u0005qWO", "$=`2]!a')SbbD'\u0005qWO");
      StandaloneComponent standaloneComponent0 = radio0._getTopLevelComponent(true);
      standaloneComponent0.a();
      StringWriter stringWriter0 = new StringWriter(49);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "$=`2]!a')SbbD'\u0005qWO", 407, 91);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      String string0 = "(-ZBkS 6";
      // Undeclared exception!
      try { 
        xmlEntityRef0.abbr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.285149829679032
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "!1";
      Form form0 = new Form("!1");
      Checkbox checkbox0 = new Checkbox(form0, "!1", "Label_4");
      String string1 = "B~#/IeL-]}`Q";
      FormElement formElement0 = checkbox0.fieldBinding("B~#/IeL-]}`Q");
      // Undeclared exception!
      try { 
        form0.addFormElement(formElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Form form0 = new Form((String) null);
      String string0 = "processing instruction started on line ";
      Form form1 = form0.addFormValidationRule((String) null, "processing instruction started on line ");
      ElExpression elExpression0 = new ElExpression("vtUS63Z");
      ElExpression elExpression1 = elExpression0.errorMessage((String) null);
      elExpression1.expression = null;
      // Undeclared exception!
      try { 
        form1.fileInput("processing instruction started on line ", elExpression1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = "JTY\"H6?Ds\"f -";
      Form form0 = new Form("JTY\"H6?Ds\"f -");
      Form form1 = form0.addFormValidationRule("JTY\"H6?Ds\"f -", "JTY\"H6?Ds\"f -");
      form1.getAction();
      String string1 = "Hr`uH+)C";
      // Undeclared exception!
      try { 
        form0.imageSubmit("Hr`uH+)C", "lGI@V+@Q&a)A.,fKfF.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.imageSubmit("~%L7roT}l", "igKL'Xwlr>w^#`#i");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7107869861135443
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)3477);
      Checkbox checkbox0 = new Checkbox(errorPage0, "#p\"#Y-CS$+F3M/|", "#p\"#Y-CS$+F3M/|");
      Link link0 = new Link(checkbox0, checkbox0);
      ActionExpression actionExpression0 = new ActionExpression("");
      Short.compare((short)1110, (short)17);
      ElExpression elExpression0 = new ElExpression("#p\"#Y-CS$+F3M/|");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("q");
      // Undeclared exception!
      try { 
        xmlEntityRef1.fileInput("#p\"#Y-CS$+F3M/|", elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.samp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("parser must be on START_TAG to check for empty element");
      dynamicSelectModel1.getComponent();
      Checkbox checkbox0 = new Checkbox((Component) null, "1F2[SCA,;P", "parser must be on START_TAG to check for empty element");
      // Undeclared exception!
      try { 
        checkbox0.label("1F2[SCA,;P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.FormElement", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.167913045343784
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.colgroup();
      Component component0 = tableBlock0.h6();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("L)cJ6)dYzb");
      errorPage0._setSubmitTarget((String) null);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Any any0 = tableBlock0.col();
      tableBlock0.id((String) null);
      TableBlock tableBlock1 = new TableBlock(any0);
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef((String) null);
      Table table1 = new Table(component0, (String) null);
      table1.id((String) null);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1937), 804, 804);
      Boolean boolean0 = Boolean.FALSE;
      TableBlock tableBlock2 = tableBlock0.id("");
      TableRow tableRow0 = tableBlock2.tr();
      tableRow0.td();
      assertFalse(tableBlock0._isGeneratedId());
      assertTrue(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.854473014477357
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-22), 46, 46, 46, (-22));
      Component component0 = errorPage0.dt();
      component0.q((Object) null);
      assertEquals("Block_1", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.922077819825485
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string0 = "h5";
      String string1 = "wW7";
      DateInput dateInput0 = new DateInput(component0, "h5", "wW7", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      component0.h3((Object) dateInput0);
      String string2 = null;
      Form form0 = new Form("N:[ilhH7d;>pWZ");
      // Undeclared exception!
      try { 
        form0.addFormElement(textInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.1390864049144813
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "kf7A{~O~Jv6aiIhYj1";
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      Component component0 = errorPage0.kbd((Object) textInput0);
      String string1 = "h";
      DateInput dateInput0 = new DateInput(component0, "h", "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      dateInput0.validate();
      Component component1 = component0.h3((Object) dateInput0);
      textInput0.addValidationError((String) null);
      Text text0 = new Text(textInput0, (Object) null);
      text0._getRenderableChildren();
      text0.clasS("h");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-22), 46, 46, 46, (-22));
      component0.tt((Object) mockGregorianCalendar0);
      Image image0 = new Image(text0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      String string2 = "em";
      // Undeclared exception!
      try { 
        component1.encode("em");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.8854285593809506
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "gKL'Xwlr>w^#`#i";
      Table table0 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table0.tr();
      TextArea textArea0 = new TextArea(tableRow0, "gKL'Xwlr>w^#`#i", "gKL'Xwlr>w^#`#i");
      textArea0.value("gKL'Xwlr>w^#`#i");
      String string1 = "wW7";
      DateInput dateInput0 = new DateInput(tableRow0, (String) null, " to translate value ' ", (CharSequence) null);
      dateInput0.validate();
      Integer integer0 = new Integer(10);
      Component component0 = tableRow0.h3((Object) integer0);
      String string2 = "";
      TextInput textInput0 = new TextInput(errorPage0, "", (String) null);
      textInput0.addValidationError("xmlns");
      Integer integer1 = new Integer(10);
      Text text0 = new Text(component0, integer1);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-22), 46, 1, 2372, 3303);
      // Undeclared exception!
      try { 
        dateInput0.tt((Object) textArea0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.9111191076160265
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      errorPage0.kbd((Object) textInput0);
      textInput0.addValidationError("kf7A{~O~Jv6aiIhYj1");
      Text text0 = new Text(textInput0, (Object) null);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.setFirstDayOfWeek(13);
      Image image0 = new Image(text0, "kf7A{~O~Jv6aiIhYj1", "kf7A{~O~Jv6aiIhYj1");
      // Undeclared exception!
      try { 
        image0.s();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.735575538805105
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "h5";
      String string1 = "xu?";
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1523, 1523, 1523);
      String string2 = "";
      String string3 = "";
      DateInput dateInput0 = new DateInput(errorPage0, "xu?", "", "");
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        dateInput0.pre((Object) mockGregorianCalendar0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.9193579408287578
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Component component0 = link0.meta();
      // Undeclared exception!
      try { 
        component0.dl();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.2377832330857923
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Form form0 = new Form("samp");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "samp";
      Form form1 = form0._buildFromSerializedString(stringArray0);
      ElExpression elExpression0 = new ElExpression("&^,(+J");
      elExpression0.errorMessage("D56");
      Checkbox checkbox0 = new Checkbox(form1, "&^,(+J", "samp");
      // Undeclared exception!
      try { 
        form1.dl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5446079485915685
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "^*Ep", (String) null, "^*Ep");
      TextInput textInput0 = new TextInput(dateInput0, (String) null, "");
      FormElement formElement0 = textInput0.value("");
      ActionExpression actionExpression0 = new ActionExpression("g0]5");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) formElement0;
      objectArray0[1] = (Object) formElement0;
      objectArray0[2] = (Object) formElement0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      ActionExpression actionExpression2 = actionExpression1.event((String) null);
      Form form0 = new Form(formElement0, "%", actionExpression2);
      DynamicSelectModel dynamicSelectModel0 = dateInput0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("PA");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("PA");
      Select select0 = null;
      try {
        select0 = new Select(form0, "g0]5", "", "g0]5", dynamicSelectModel2, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.id((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      Table table0 = null;
      try {
        table0 = new Table((Component) null, ".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Form form0 = new Form((String) null);
      form0.hashCode();
      assertEquals("wheel_components_Form", form0.getComponentId());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.395709426084936
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      String string0 = "_P:$PV])[ h;TW{|";
      Checkbox checkbox0 = new Checkbox((Component) null, "_P:$PV])[ h;TW{|", "_P:$PV])[ h;TW{|");
      String string1 = null;
      FormElement formElement0 = checkbox0.validationRule("_P:$PV])[ h;TW{|", (String) null);
      formElement0._isGeneratedId();
      // Undeclared exception!
      try { 
        checkbox0.bdo("_P:$PV])[ h;TW{|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.0053227235710303
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short)1110);
      Link link0 = new Link(errorPage0, short0);
      ActionExpression actionExpression0 = new ActionExpression("");
      Short.compare((short) (-1382), (short)879);
      ElExpression elExpression0 = new ElExpression("");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(link0, "", "R'(hEa2]dF|@!*/%,7Y", (ISelectModel) null, elExpression0);
      // Undeclared exception!
      try { 
        checkboxGroup0.frame("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.6905784952935443
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1523, 1523, 0);
      Component component0 = errorPage0.h1();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.1123229474816387
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      String string0 = null;
      String string1 = "n:W8Kh<_aH<d;IG /T";
      Checkbox checkbox0 = new Checkbox((Component) null, (String) null, "n:W8Kh<_aH<d;IG /T");
      FormElement formElement0 = checkbox0.setFormElementName((String) null);
      String string2 = "img";
      TextArea textArea0 = new TextArea(formElement0, (String) null, "img");
      // Undeclared exception!
      try { 
        textArea0.body();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      String[] stringArray0 = new String[3];
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("R]-w]Cu");
      DateInput dateInput0 = null;
      try {
        dateInput0 = new DateInput(xmlEntityRef0, "", "", stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
