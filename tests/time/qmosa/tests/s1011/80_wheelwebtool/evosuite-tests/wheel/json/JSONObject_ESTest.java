/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 22:28:11 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.327365674207584
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      String string0 = "+";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      Boolean boolean0 = Boolean.valueOf(true);
      JSONObject.getNames((Object) boolean0);
      JSONObject.quote("+");
      Long long0 = new Long(772L);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Boolean boolean1 = Boolean.TRUE;
      JSONObject jSONObject1 = new JSONObject(boolean1);
      JSONObject jSONObject2 = jSONObject1.put("Null key.", (Map) hashMap0);
      try { 
        jSONObject2.getBoolean("&R\"rK;.$!SgUP}'!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"&R\\\"rK;.$!SgUP}'!\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject.numberToString(double0);
      Byte byte0 = new Byte((byte)58);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.Double@0000000001";
      String string0 = "\\u";
      stringArray0[1] = string0;
      stringArray0[2] = "java.lang.Double@0000000001";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      Double.max(0.0, 0.0);
      try { 
        jSONObject0.put((String) null, 1672);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      jSONObject0.optBoolean("", false);
      String string0 = "";
      stringArray0[1] = "";
      JSONObject.getNames(jSONObject0);
      Integer integer0 = new Integer(5);
      String string1 = "\\Nr<wI~jzleC7<+";
      JSONTokener jSONTokener0 = new JSONTokener("Nr<wI~jzleC7<+");
      JSONTokener jSONTokener1 = new JSONTokener("nz%1H");
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(jSONTokener1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of nz%1H
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.114004364796715
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ";IG /TWLQP~))b9";
      String string0 = "toS";
      Float.min((-762), 0.0F);
      Float.sum(997.81F, 0.0F);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("toS", (-1L));
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      jSONObject0.put("VH<4^/", (Collection) linkedList0);
      Float float0 = new Float((double) 0L);
      Long long0 = new Long(1L);
      Float float1 = new Float(997.81F);
      try { 
        jSONObject0.append((String) null, float1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8096889066472377
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      Double.isFinite(0.0);
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "Expected '";
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("qZ|@]h`", 2321L);
      JSONObject jSONObject2 = jSONObject0.put("0", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('J');
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString("] is not a Boolean.");
      Float float0 = new Float(4444.4115849247);
      Double double1 = new Double(2321L);
      jSONObject2.append("", double1);
      jSONObject1.toString(62, 41);
      HashMap<String, JSONObject> hashMap1 = new HashMap<String, JSONObject>();
      jSONObject1.write(stringWriter0);
      jSONObject0.remove("0");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-762));
      JSONObject.doubleToString((double) integer0);
      Long long0 = new Long((-762));
      Long.divideUnsigned((long) integer0, (long) integer0);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-762));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7173359831537556
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      jSONObject0.put("/VeBY)_S1nSvRf", (Collection) null);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(" Yb]o0vq");
      Float float0 = new Float((-997.37801));
      jSONObject1.append("/VeBY)_S1nSvRf", jSONObject1);
      // Undeclared exception!
      jSONObject0.toString((int) (byte)16, 41);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.018203950918701
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = " of ";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put(" of ", (-4230.69));
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 0L);
      jSONObject1.put(" Yb]o0vq", 734.87);
      try { 
        jSONObject1.put((String) null, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.556554370493185
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Float float0 = new Float(0.0);
      JSONObject jSONObject0 = new JSONObject(float0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "flo";
      stringArray0[1] = "flo";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.putOpt("flo", "flo");
      StringWriter stringWriter0 = new StringWriter();
      JSONObject.getNames(jSONObject0);
      jSONObject1.optString("flo");
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.545592279342673
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put("", 0.0);
      jSONObject1.optBoolean("");
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject2 = jSONObject0.putOpt("'{", "'{");
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = new Long(1L);
      linkedList0.add(long0);
      Long long1 = new Long((-5803L));
      Long.sum(2390L, 2390L);
      linkedList0.removeFirstOccurrence(long1);
      linkedList0.remove();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Byte byte0 = new Byte((byte)92);
      Byte.compare((byte)92, (byte)92);
      JSONObject.quote("'{");
      Long long2 = new Long((-1132L));
      Short.valueOf((short) (byte)92);
      jSONObject2.length();
      jSONObject2.opt("'{");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1499133822558973
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double.isFinite(0.0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Long long0 = new Long((-78L));
      LinkedList<Long> linkedList1 = new LinkedList<Long>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList2);
      Double double1 = new Double((-548.662597673971));
      String[] stringArray0 = JSONObject.getNames((Object) double1);
      String string0 = "java.lang.Long@0000000005.";
      JSONObject.quote("java.lang.Long@0000000005.");
      Long long1 = new Long((-78L));
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      try { 
        jSONObject0.getLong("java.lang.Long@0000000005.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Long@0000000005.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.139487982288272
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.doubleToString((-3285.225024));
      jSONObject0.optBoolean("-3285.225024");
      String string0 = "[";
      jSONObject0.optLong("[", 1L);
      try { 
        jSONObject0.getDouble("[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"[\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1356219397587948
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      Double.isFinite(0.0);
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "Expected '";
      stringArray0[4] = "";
      stringArray0[5] = "] not found.";
      stringArray0[6] = "{wBVb)h7~qW5mL@";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{wBVb)h7~qW5mL@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 15 of {wBVb)h7~qW5mL@
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.923802117403517
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\u0000jvH&5N_cpNX";
      stringArray0[1] = "";
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject1 = jSONObject0.put("Expected a ',' or '}'", 0L);
      jSONObject0.toString((-2931));
      Long long0 = new Long(3728L);
      JSONObject.quote("Expected a ',' or '}'");
      Boolean boolean0 = new Boolean(false);
      Boolean.logicalAnd(false, true);
      JSONObject jSONObject2 = jSONObject1.putOpt("7y5gCSHoBP", "7y5gCSHoBP");
      jSONObject0.optBoolean("\"Expected a ',' or '}'\"");
      JSONObject.valueToString(jSONObject0, (-1265), 699);
      JSONObject.valueToString(jSONObject2);
      Object object0 = JSONObject.NULL;
      Object object1 = JSONObject.NULL;
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject(boolean0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long long0 = 1696L;
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString((-438));
      long long1 = 3110L;
      Long long2 = new Long(3110L);
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray1 = JSONObject.getNames((Object) jSONArray0);
      assertNull(stringArray1);
      
      String string0 = JSONObject.quote(stringArray0[0]);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2865071652616695
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      jSONObject0.put("/VVBY)_S1nSvRf", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('\'');
      String[] stringArray1 = new String[6];
      stringArray1[0] = "/VVBY)_S1nSvRf";
      stringArray1[1] = "+";
      stringArray1[2] = ",:]}/\"[{;=#";
      stringArray1[3] = "+";
      stringWriter0.append('');
      stringArray1[4] = ",:]}/\"[{;=#";
      int int0 = jSONObject1.length();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9791594067398561
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put(" of ", (-4230.69));
      Object object0 = JSONObject.NULL;
      JSONObject.getNames(object0);
      JSONObject.quote("+");
      Long long0 = new Long((-1044L));
      Long long1 = new Long((-1044L));
      JSONObject jSONObject1 = new JSONObject(long1, stringArray0);
      int int0 = jSONObject1.length();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      Double.isFinite(0.0);
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      String string0 = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      JSONArray jSONArray0 = new JSONArray();
      try { 
        jSONArray0.getJSONObject(6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[6] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9383776845093017
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      Double.isFinite(0.0);
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      stringArray0[5] = "] not found.";
      JSONObject jSONObject0 = new JSONObject("] is not a Boolean.", stringArray0);
      String string0 = "to";
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject1 = jSONObject0.put("] not found.", (Map) hashMap0);
      try { 
        jSONObject1.get("E]rYI");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"E]rYI\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5634601642639048
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      JSONObject jSONObject2 = jSONObject0.put(",:]}/\"[{;=#", 0L);
      jSONObject0.put("/VVBY)_S1nSvRf", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('\'');
      String[] stringArray1 = new String[6];
      stringArray1[0] = "/VVBY)_S1nSvRf";
      stringArray1[1] = "+";
      stringArray1[2] = ",:]}/\"[{;=#";
      Float.max((-585.5731F), (-585.5731F));
      jSONObject1.optInt("\"\"", 0);
      boolean boolean0 = jSONObject2.isNull(",\n");
      assertEquals(3, jSONObject2.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = " of ";
      byte byte0 = (byte)0;
      Byte.compare((byte)0, (byte)0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "+";
      Float float0 = new Float((float) 0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      String string1 = "/VD,jPew-*h|n[kw";
      try { 
        jSONObject0.put("/VD,jPew-*h|n[kw", Double.NaN);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9183101504445133
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Byte.compare((byte)0, (byte)0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Byte byte0 = new Byte((byte)0);
      String[] stringArray0 = JSONObject.getNames((Object) byte0);
      assertNotNull(stringArray0);
      
      Float float0 = new Float((float) 0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.553468931321066
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "i|eK)W[lO/GuM59h`L";
      stringArray0[1] = "[";
      stringArray0[2] = "XOt6,P0#EU";
      stringArray0[3] = "";
      Double.isFinite(0.0);
      stringArray0[4] = "";
      stringArray0[5] = "'";
      stringArray0[6] = "_^(}[CN'G_Z";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      boolean boolean0 = jSONObject0.optBoolean("_^(}[CN'G_Z", true);
      assertTrue(boolean0);
      
      double double1 = jSONObject0.optDouble("[", (-174.35360943868));
      assertEquals((-174.35360943868), double1, 0.01);
      
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      String string0 = JSONObject.quote("xDkn");
      assertEquals("\"xDkn\"", string0);
      
      String string1 = jSONObject1.optString("d", "");
      assertEquals("", string1);
      
      jSONObject0.opt("F");
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
      
      JSONObject jSONObject2 = new JSONObject(jSONObject0, stringArray0);
      String[] stringArray1 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray1);
      assertEquals((double)double0, (double)double1, 0.01);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7887589334965943
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\u0000jvH&5N_cpNX";
      stringArray0[1] = "";
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject1 = jSONObject0.put("Expected a ',' or '}'", 0L);
      jSONObject0.toString((-2931));
      Long long0 = new Long(3728L);
      JSONObject.quote("Expected a ',' or '}'");
      Boolean boolean0 = new Boolean(false);
      Boolean.logicalAnd(false, true);
      JSONObject jSONObject2 = jSONObject1.putOpt("7y5gCSHoBP", "7y5gCSHoBP");
      jSONObject0.optBoolean("\"Expected a ',' or '}'\"");
      JSONObject.valueToString(jSONObject0, (-1265), 699);
      try { 
        jSONObject2.getJSONObject("toS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"toS\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7547674035225214
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\u0000jvH&5N_cpNX";
      stringArray0[1] = "";
      hashMap0.put("D9u", jSONObject0);
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject1 = jSONObject0.put("Expected a ',' or '}'", 0L);
      jSONObject0.toString((-2931));
      Long long0 = new Long(3728L);
      JSONObject jSONObject2 = jSONObject0.put("\u0000jvH&5N_cpNX", (double) 0L);
      jSONObject1.put("true", (long) (-2931));
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject4 = jSONObject3.put(",:]}/\"[{;=#", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('\'');
      jSONObject1.optJSONArray("");
      jSONObject2.toJSONArray((JSONArray) null);
      jSONObject4.toString(0);
      assertEquals(2, jSONObject3.length());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0505627431531144
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "+";
      stringArray0[1] = " Yb]o0vq";
      stringArray0[2] = " of ";
      stringArray0[3] = " of ";
      stringArray0[4] = " Yb]o0vq";
      stringArray0[5] = " of ";
      stringArray0[6] = "+";
      JSONObject jSONObject0 = new JSONObject("+", stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("/VD,jPew-*h|n[kw", (-1.0));
      JSONObject jSONObject2 = jSONObject1.put("/VVBY)_S1nSvRf", 0L);
      int int0 = 1;
      try { 
        jSONObject2.getJSONArray("/VVBY)_S1nSvRf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"/VVBY)_S1nSvRf\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.212703444526705
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "';IG /TWLQP~))b9";
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Long.getLong("';IG /TWLQP~))b9");
      LinkedList<Long> linkedList1 = new LinkedList<Long>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      JSONObject.getNames((Object) linkedList1);
      JSONObject.quote("';IG /TWLQP~))b9");
      Long long0 = new Long((-1132L));
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject0 = new JSONObject((Object) "\"';IG /TWLQP~))b9\"");
      jSONObject0.put("A JSONObject text must end with '}'", (Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject(hashMap0, stringArray0);
      try { 
        jSONObject1.get("';IG /TWLQP~))b9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"';IG /TWLQP~))b9\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.024456394907416
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      String string0 = " of ";
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      byte byte1 = (byte)0;
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put(" of ", (-4230.69));
      try { 
        jSONObject0.getInt("6sR[njjeH=H9T5Whw");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"6sR[njjeH=H9T5Whw\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = ";IG TWLQP~))b9";
      stringArray0[0] = ";IG TWLQP~))b9";
      Integer.toUnsignedLong((-762));
      JSONObject.doubleToString(4294966534L);
      Long long0 = new Long((-762));
      JSONObject jSONObject0 = new JSONObject();
      Long.divideUnsigned(4294966534L, 4294966534L);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-762));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ";IG /TWLQP~))b9";
      Float.min((-762), 0.0F);
      Float.sum(997.81F, 0.0F);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      Integer.getInteger("toS", (Integer) null);
      jSONObject0.putOpt("'", (Object) null);
      try { 
        Integer.parseUnsignedInt(";IG /TWLQP~))b9");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \";IG /TWLQP~))b9\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.55425309083331
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("] is not a JSONArray.");
      Double double0 = new Double(629.589280205469);
      JSONObject jSONObject1 = jSONObject0.append(" 1|@#Z;3&", double0);
      Double.min(629.589280205469, 629.589280205469);
      Double.isFinite((-2030.940616));
      JSONObject.quote(" 1|@#Z;3&");
      HashMap<String, Boolean> hashMap0 = new HashMap<String, Boolean>();
      hashMap0.values();
      jSONObject0.put("", (Map) hashMap0);
      JSONObject jSONObject2 = jSONObject1.put("x2Iiy+K|nli.", (Map) hashMap0);
      jSONObject2.optDouble(" 1|@#Z;3&");
      jSONObject2.optString("", "null");
      jSONObject2.has("x2Iiy+K|nli.");
      String[] stringArray0 = JSONObject.getNames(jSONObject1);
      assertEquals(3, jSONObject0.length());
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9340565718353626
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      Byte.compare((byte)16, (byte)16);
      Float float0 = new Float((double) (byte)16);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("getnotifyAll", (-4230.69));
      JSONObject jSONObject2 = jSONObject1.put("/VeBY)_S1nSvRf", (long) (byte)16);
      jSONObject2.put("getnotifyAll", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('\'');
      stringWriter0.flush();
      stringWriter0.append('');
      JSONObject jSONObject3 = new JSONObject(jSONObject1, stringArray0);
      jSONObject1.write(stringWriter1);
      jSONObject2.optJSONArray(stringArray0[1]);
      double double0 = jSONObject0.optDouble("getnotifyAll");
      assertEquals(2, jSONObject0.length());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4459281667154507
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      long long0 = 1696L;
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(3757);
      long long1 = 3110L;
      Long long2 = new Long(3110L);
      JSONObject.numberToString(long2);
      jSONObject0.toString();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "java.lang.Long@0000000002");
      jSONObject0.optString("{}", "{}");
      jSONObject0.write(stringWriter1);
      try { 
        jSONObject0.getJSONObject("_ysGvAzFx#o");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"_ysGvAzFx#o\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.667688703959922
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      Double.isFinite(0.0);
      Integer integer0 = new Integer(8);
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      jSONObject0.optBoolean("-`?tN(`yJ(", true);
      Integer.compareUnsigned(45, 774);
      jSONObject0.optDouble("Bad value from toJSONString: ", 0.0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Integer.valueOf((-677));
      Double double1 = new Double(396.3314868292);
      JSONObject jSONObject2 = jSONObject1.put("'", (Object) double1);
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject3 = jSONObject1.put("", (Map) hashMap0);
      JSONObject jSONObject4 = new JSONObject(jSONObject2, stringArray0);
      jSONObject4.has("XOt6,P0#EU");
      try { 
        jSONObject3.getDouble("XOt6,P0#EU");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"XOt6,P0#EU\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.628003745898036
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(19);
      String string0 = "";
      Boolean boolean0 = Boolean.valueOf("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "_^(}[CN'G_Z";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      jSONObject0.optBoolean("", true);
      jSONObject0.optDouble("getwait", (double) 19);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Integer.valueOf(19);
      JSONObject jSONObject2 = jSONObject1.put("#687! *pn`*G", (Object) "_^(}[CN'G_Z");
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      JSONObject jSONObject3 = jSONObject2.put("_^(}[CN'G_Z", (Map) hashMap0);
      jSONObject2.has("#687! *pn`*G");
      try { 
        jSONObject3.getDouble(":].1Gnml_BI}.Ipz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\":].1Gnml_BI}.Ipz\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4734737883576816
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "i|eK)W[lO/GuM59h`L";
      stringArray0[1] = "[";
      stringArray0[2] = "XOt6,P0#EU";
      stringArray0[3] = "";
      Double.isFinite(0.0);
      stringArray0[4] = "i|eK)W[lO/GuM59h`L";
      stringArray0[5] = "'";
      stringArray0[6] = "_^(}[CN'G_Z";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      jSONObject0.put("[", 1992L);
      jSONObject0.optBoolean("_^(}[CN'G_Z", true);
      jSONObject0.optDouble("[", (-174.35360943868));
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Integer integer0 = Integer.valueOf(2263);
      jSONObject0.put("[", (Object) integer0);
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      Integer integer1 = new Integer(2);
      Integer integer2 = new Integer(2263);
      JSONObject jSONObject2 = new JSONObject(integer2, stringArray0);
      assertFalse(jSONObject2.equals((Object)jSONObject1));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9193618394362675
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = null;
      try { 
        jSONObject0.accumulate((String) null, hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.599187091895453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Float float0 = new Float(1.0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Qc";
      stringArray0[1] = "";
      stringArray0[2] = "YNlO";
      stringArray0[3] = "H";
      Float.min(0.0F, 0.0F);
      stringArray0[4] = "";
      stringArray0[5] = "' and instead saw '";
      Float.sum(997.81F, 0.0F);
      stringArray0[6] = "";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.names();
      JSONObject jSONObject1 = jSONObject0.putOpt("!vO'l|l;e]", "' and instead saw '");
      jSONObject0.opt("' and instead saw '");
      JSONObject.valueToString("");
      jSONObject1.optInt("2)C6g4>nLl|NP>-I(u", 91);
      boolean boolean0 = jSONObject0.isNull("' and instead saw '");
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.053917278761676
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "R^]j{glgw";
      jSONObject0.optLong("p^!els/0lr}", (-1L));
      jSONObject0.optString("R^]j{glgw");
      jSONObject0.append("R^]j{glgw", "R^]j{glgw");
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6873337410682425
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("] is not a JSONArray.");
      Double double0 = new Double(629.589280205469);
      jSONObject0.append(" 1|@#Z;3&", double0);
      Double.min(629.589280205469, 629.589280205469);
      Double.isFinite((-2030.940616));
      jSONObject0.toString();
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalAnd(true, true);
      jSONObject0.optBoolean("{\"java.lang.String@0000000003\":wheel.json.JSONArray@0000000002}");
      JSONObject.valueToString(boolean0);
      String string0 = "{wBVb)h7~qW5mL@";
      JSONObject jSONObject1 = new JSONObject("{\"java.lang.String@0000000003\":wheel.json.JSONArray@0000000002}");
      String string1 = "to";
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      jSONObject0.put("q34D!\"SCciE\"", (Map) hashMap0);
      String string2 = "kbde^\\bS`k\"q&";
      try { 
        jSONObject1.get("kbde^\bS`k\"q&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"kbde^\\bS`k\\\"q&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4561245307293214
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("] is not a JSONArray.");
      Double double0 = new Double(629.589280205469);
      JSONObject jSONObject1 = jSONObject0.append(" 1|@#Z;3&", double0);
      Double.min(629.589280205469, 629.589280205469);
      Double.isFinite((-2030.940616));
      JSONObject.quote(" 1|@#Z;3&");
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalAnd(true, true);
      jSONObject0.putOpt("7y5gCSHoBP", "\" 1|@#Z;3&\"");
      jSONObject1.keys();
      jSONObject0.optBoolean("\" 1|@#Z;3&\"");
      JSONObject.valueToString("] is not a JSONArray.", 2203, 2203);
      jSONObject0.put(" 1|@#Z;3&", (Object) "7y5gCSHoBP");
      try { 
        jSONObject1.getJSONObject("toS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"toS\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4034125338418937
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      JSONObject jSONObject2 = jSONObject0.put("/VeBY)_S1nSvRf", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('\'');
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(" Yb]o0vq");
      Float float0 = new Float((-997.37801));
      jSONObject1.append("/VeBY)_S1nSvRf", (Object) null);
      jSONObject1.optJSONArray("toS");
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      jSONObject2.put("gUy][,O~#eJaN=bsS", (Collection) null);
      assertEquals(4, jSONObject2.length());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      Double.isFinite(0.0);
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "Expected '";
      stringArray0[4] = "";
      stringArray0[5] = "] not found.";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(stringArray0[6]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5370959328643243
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      int int0 = 1129;
      int int1 = 1251;
      JSONObject.valueToString(jSONArray0, 1129, 1251);
      JSONObject jSONObject0 = new JSONObject((Object) "[]");
      jSONObject0.optInt("[]");
      JSONObject.getNames((Object) null);
      jSONObject0.remove("[]");
      JSONObject.valueToString((Object) null);
      short short0 = (short)0;
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.890183382239818
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put(" of ", (-4230.69));
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 0L);
      JSONObject jSONObject2 = jSONObject0.put("/VeBY)_S1nSvRf", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('\'');
      String[] stringArray1 = new String[6];
      stringArray1[0] = "/VeBY)_S1nSvRf";
      stringArray1[1] = "+";
      stringWriter1.flush();
      stringArray1[2] = ",:]}/\"[{;=#";
      stringArray1[3] = "+";
      stringWriter0.append('');
      stringArray1[4] = ",:]}/\"[{;=#";
      stringArray1[5] = "flo";
      JSONObject jSONObject3 = new JSONObject(jSONObject1, stringArray1);
      jSONObject3.write(stringWriter1);
      jSONObject2.optJSONArray((String) null);
      jSONObject2.remove((String) null);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7769572789826635
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("] is not a JSONArray.");
      Double double0 = new Double(629.589280205469);
      JSONObject jSONObject1 = jSONObject0.append(" 1|@#Z;3&", double0);
      Double.min(629.589280205469, 629.589280205469);
      Double.isFinite((-2030.940616));
      JSONObject.quote(" 1|@#Z;3&");
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalAnd(true, true);
      Object object0 = new Object();
      jSONObject1.append("Jg@-4U/E&dX6^cb~", object0);
      Object object1 = new Object();
      JSONObject jSONObject2 = new JSONObject(object1);
      jSONObject2.toString(2203, (-1));
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      hashMap0.put("] is not a JSONObject.", jSONObject0);
      JSONObject.valueToString(boolean0);
      JSONObject.quote("}oMe(r~,+");
      JSONObject jSONObject3 = new JSONObject();
      jSONObject3.optString("\"] is not a JSONArray.\"", "T,YL]Pmf");
      jSONObject2.opt("So~abx");
      jSONObject0.names();
      Long long0 = new Long(2203);
      JSONObject.getNames((Object) null);
      jSONObject1.accumulate("", boolean0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5952629603288853
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 0);
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.put("", 0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.738804194339971
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Map<Byte, String> map0 = null;
      JSONObject jSONObject0 = new JSONObject((Map) null);
      String string0 = "] is not a JSONObject.";
      double double0 = 0.0;
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONObject.", 0.0);
      jSONObject1.optBoolean("] is not a JSONObject.");
      JSONObject.getNames(jSONObject0);
      String string1 = "{";
      JSONObject jSONObject2 = jSONObject0.putOpt("{", "{");
      jSONObject2.names();
      String string2 = "";
      try { 
        jSONObject2.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.797645213266123
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Float float0 = new Float(1.0);
      Float.isFinite(2089.3F);
      Float.min(4659.376F, 1.0F);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Qc";
      stringArray0[1] = "";
      stringArray0[2] = "Qc";
      stringArray0[3] = "H";
      Float.min(0.0F, 0.0F);
      stringArray0[4] = "";
      Float.sum(997.81F, 0.0F);
      stringArray0[6] = "";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.names();
      jSONObject0.optBoolean("gettoString");
      JSONObject jSONObject1 = jSONObject0.putOpt("!vO'l|l;e]", "' and instead saw '");
      jSONObject0.opt(stringArray0[5]);
      JSONObject.valueToString("");
      Float.max((-585.5731F), (-780.712F));
      jSONObject1.optInt("2)C6g4>nLl|NP>-I(u", 91);
      boolean boolean0 = jSONObject0.isNull("' and instead saw '");
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.4528887279606404
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "z";
      stringArray0[1] = "] is not a number.";
      stringArray0[2] = "getparseFloat";
      stringArray0[3] = "z";
      stringArray0[4] = "MeT:X}$Q3RcM,s:R";
      stringArray0[5] = "mi";
      JSONObject jSONObject1 = new JSONObject();
      Long long0 = new Long((-78L));
      jSONObject0.accumulate("] is not a number.", "z");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "getparseFloat");
      StringWriter stringWriter1 = stringWriter0.append('F');
      stringWriter1.append('/');
      Writer writer0 = jSONObject1.write(stringWriter0);
      assertEquals("getparseFloatF/{}", stringWriter0.toString());
      assertEquals("getparseFloatF/{}", writer0.toString());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0758022499025306
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("d7^X}", 0L);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "d7^X}";
      stringArray0[1] = "d7^X}";
      stringArray0[2] = "d7^X}";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Long long0 = new Long((-78L));
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "d7^X}");
      stringWriter0.append('V');
      stringWriter1.append('\'');
      Boolean boolean0 = new Boolean((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.464976054654752
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      jSONObject0.put(" of ", (-4230.69));
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      JSONObject jSONObject1 = jSONObject0.put("/VVBY)_S1nSvRf", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('\'');
      String[] stringArray1 = new String[6];
      stringArray1[0] = "/VVBY)_S1nSvRf";
      stringArray1[1] = "+";
      stringArray1[2] = ",:]}/\"[{;=#";
      stringArray1[3] = "+";
      jSONObject0.put(" Yb]o0vq", 0);
      stringWriter0.append('');
      jSONObject1.put("+", 0.0);
      boolean boolean0 = jSONObject1.optBoolean("getequals");
      assertEquals(5, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.19759279820448
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      JSONArray jSONArray0 = jSONObject1.names();
      Integer.getInteger("\r", (Integer) null);
      jSONArray0.toJSONObject(jSONArray0);
      try { 
        Integer.parseUnsignedInt((String) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4699913100731523
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Map<Byte, String> map0 = null;
      JSONObject jSONObject0 = new JSONObject((Map) null);
      String string0 = "] is not a JSONObject.";
      jSONObject0.put("] is not a JSONObject.", 0.0);
      boolean boolean0 = new Boolean("] is not a JSONObject.");
      JSONObject.getNames(jSONObject0);
      JSONObject jSONObject1 = jSONObject0.putOpt("] is not a JSONObject.", "] is not a JSONObject.");
      jSONObject1.names();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Byte byte0 = new Byte((byte)92);
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray(byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.813522950555589
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Float float0 = new Float(1.0);
      Float.isFinite(2089.3F);
      Float.min(4659.376F, 1.0F);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "JSONObject[";
      stringArray0[1] = "";
      stringArray0[2] = "JSONObject[";
      stringArray0[3] = "H";
      Float.min(0.0F, 0.0F);
      stringArray0[4] = "";
      Float.sum(997.81F, 0.0F);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.names();
      jSONObject0.optBoolean("gettoString");
      JSONObject jSONObject1 = jSONObject0.putOpt("!vO'l|l;e]", "' and instead saw '");
      jSONObject0.opt(stringArray0[5]);
      JSONObject.valueToString(stringArray0[6]);
      Float.max((-585.5731F), 0.0F);
      jSONObject1.optInt("2)C6g4>nLl|NP>-I(u", 91);
      boolean boolean0 = jSONObject0.isNull("' and instead saw '");
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7424873191022137
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      stringArray0[5] = "] not found.";
      stringArray0[6] = "{wBVb)h7~qW5mL@";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      int int0 = jSONObject0.optInt("Bad value from toJSONString: ");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5474633353855793
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      double double0 = 0.0;
      Double double1 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double1, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.put("", 0L);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      jSONObject1.names();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.containsAll(linkedList1);
      try { 
        jSONObject1.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5407108604577937
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (double) (byte)0);
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('\'');
      jSONObject1.optJSONArray((String) null);
      jSONObject1.toJSONArray((JSONArray) null);
      try { 
        jSONObject0.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.786964471292598
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      JSONObject jSONObject2 = jSONObject0.put("/VeBY)_S1nSvRf", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('\'');
      jSONObject2.optJSONArray((String) null);
      jSONObject1.toJSONArray((JSONArray) null);
      jSONObject1.toString((-1092));
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.0069519360955264
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      jSONObject0.toString();
      JSONObject jSONObject2 = jSONObject0.put(",:]}/\"[{;=#", 0L);
      JSONObject jSONObject3 = jSONObject0.put("/VeBY)_S1nSvRf", (Collection) null);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter((byte)0);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(" Yb]o0vq");
      Float float0 = new Float((-997.37801));
      jSONObject1.append("/VeBY)_S1nSvRf", (Object) null);
      jSONObject0.toString((int) (byte)16, 41);
      stringWriter1.append('o');
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      jSONObject3.write(stringWriter1);
      JSONObject jSONObject4 = jSONObject2.accumulate("+", jSONObject1);
      assertEquals(4, jSONObject0.length());
      assertEquals(4, jSONObject4.length());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.071689836654046
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JSONObject.quote("");
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      JSONObject jSONObject1 = jSONObject0.put("", 1L);
      try { 
        jSONObject1.getInt("A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"A\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.972436007854526
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HashMap<String, Double> hashMap0 = new HashMap<String, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("\r", 3410L);
      jSONObject0.put("k#w", (-2956L));
      jSONObject0.put("SKHv-(:hI&n.3.", (Map) hashMap0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "IGZ /TWLQP~)b9";
      Float.min((-762), 0.0F);
      Float.sum(997.81F, 0.0F);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      Integer integer0 = new Integer(1691);
      Boolean boolean0 = new Boolean("is");
      Boolean boolean1 = Boolean.valueOf("t`xL");
      hashMap0.put(integer0, boolean1);
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.036141640986104
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Double double0 = new Double((-0.019293833931763624));
      String[] stringArray0 = new String[6];
      Double.isFinite((-0.019293833931763624));
      stringArray0[1] = "hzV4b'~6?y(";
      String string0 = "] is not a Boolean.";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      stringArray0[5] = "J!PiXxv_^0";
      JSONObject jSONObject0 = new JSONObject("] is not a Boolean.", stringArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject1 = jSONObject0.put("J!PiXxv_^0", (Map) hashMap0);
      try { 
        jSONObject1.getJSONObject(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      JSONArray jSONArray1 = new JSONArray();
      jSONArray0.toJSONObject(jSONArray1);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "t=mep<D[\"w";
      stringArray0[1] = ",:]}/\"[{;=#";
      stringArray0[2] = "t^M]}";
      stringArray0[3] = "o2@Qj8<u8B<QKT{c@2";
      stringArray0[4] = "";
      stringArray0[5] = "/2V";
      stringArray0[6] = "k<";
      stringArray0[7] = "knZt%!JFy";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7710463348011367
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      String string0 = " of ";
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(" of ", (-4230.69));
      jSONObject0.put(",:]}/\"[{;=#", 0L);
      jSONObject0.put("/VeBY)_S1nSvRf", (Collection) null);
      Float float0 = new Float((-462.779014947851));
      Long long0 = new Long((byte)0);
      jSONObject1.append("+", long0);
      jSONObject0.toString(0, 83);
      try { 
        jSONObject1.getJSONArray("Jdvt20I8QKT^I=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Jdvt20I8QKT^I=\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.578049229751225
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "i|eK)W[lO/GuM59h`L";
      stringArray0[1] = "[";
      stringArray0[2] = "XOt6,P0#EU";
      String string0 = "";
      stringArray0[3] = "";
      Double.isFinite(0.0);
      stringArray0[4] = "";
      stringArray0[5] = "'";
      stringArray0[6] = "_^(}[CN'G_Z";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      String string1 = "\"\"";
      try { 
        jSONObject0.getJSONArray("\"\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      String string0 = "i|eK)W[lO/GuM59h`L";
      stringArray0[0] = "i|eK)W[lO/GuM59h`L";
      stringArray0[1] = "[";
      stringArray0[2] = "XOt6,P0#EU";
      stringArray0[3] = "";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("i|eK)W[lO/GuM59h`L");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of i|eK)W[lO/GuM59h`L
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.201684025007616
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Double double0 = new Double((-0.019293833931763624));
      String[] stringArray0 = new String[6];
      Double.isFinite((-0.019293833931763624));
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      stringArray0[5] = "J!PiXxv_^0";
      JSONObject jSONObject0 = new JSONObject("] is not a Boolean.", stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      jSONArray1.toJSONObject(jSONArray0);
      JSONObject jSONObject1 = jSONObject0.put("] is not a Boolean.", (Object) jSONArray0);
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      Integer integer0 = new Integer(45);
      Boolean boolean0 = new Boolean(" at character ");
      Boolean boolean1 = new Boolean("\"\"");
      hashMap0.put(integer0, boolean1);
      jSONObject1.put("tYhKnTB5,p4t}6k3", (Map) hashMap0);
      jSONObject1.has("6HAsB| o");
      String string0 = "getvalueOf";
      try { 
        jSONObject0.getDouble("getvalueOf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getvalueOf\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.4574653869995418
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[1] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.getNames(jSONObject1);
      Integer integer0 = new Integer(5);
      JSONTokener jSONTokener0 = new JSONTokener("Nr<wI~jzleC7<+");
      JSONTokener jSONTokener1 = new JSONTokener("nz%1H");
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONTokener1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of nz%1H
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5802615437584318
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      Double.isFinite(0.0);
      stringArray0[0] = "1T[";
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      stringArray0[5] = "] not found.";
      stringArray0[6] = "{wBVb)h7~qW5mL@";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Double.sum((-99.1876818771566), 0.0);
      jSONObject0.put("to", (Map) hashMap0);
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.6594832151493724
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "i|eK)W[lO/GuM59h`L";
      stringArray0[1] = "[";
      stringArray0[2] = "XOt6,P0#EU";
      stringArray0[3] = "";
      Double.isFinite(0.0);
      stringArray0[4] = "i|eK)W[lO/GuM59h`L";
      stringArray0[5] = "'";
      stringArray0[6] = "_^(}[CN'G_Z";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      jSONObject0.optBoolean("_^(}[CN'G_Z", true);
      jSONObject0.optDouble("[", (-174.35360943868));
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Integer integer0 = Integer.valueOf(2263);
      JSONObject jSONObject2 = jSONObject0.put("[", (Object) integer0);
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      Integer integer1 = new Integer(2);
      Boolean boolean0 = new Boolean("for");
      hashMap0.put(integer1, boolean0);
      jSONObject2.put("", (Map) hashMap0);
      jSONObject1.has("i|eK)W[lO/GuM59h`L");
      try { 
        jSONObject1.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.20407351126807
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Double double0 = new Double((-0.019293833931763624));
      String[] stringArray0 = new String[6];
      Double.isFinite((-0.019293833931763624));
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "J!PiXxv_^0";
      stringArray0[4] = "";
      stringArray0[5] = "J!PiXxv_^0";
      JSONObject jSONObject0 = new JSONObject("] is not a Boolean.", stringArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JSONObject jSONObject1 = jSONObject0.put("J!PiXxv_^0", (Map) hashMap0);
      HashMap<Integer, Boolean> hashMap1 = new HashMap<Integer, Boolean>();
      Integer integer0 = new Integer((-1262));
      Integer integer1 = Integer.getInteger("J!PiXxv_^0", integer0);
      Boolean boolean0 = new Boolean((String) null);
      hashMap1.put(integer1, boolean0);
      JSONObject jSONObject2 = jSONObject1.put("PVBmzQ4*(On;R) ", (Map) hashMap1);
      jSONObject0.has("to");
      try { 
        jSONObject2.getDouble("wheel.json.JSONObject");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONObject\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Double double0 = new Double(0.0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = new Long(0L);
      linkedList0.add(long0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.containsAll(linkedList1);
      Double.valueOf(0.0);
      Object object0 = JSONObject.NULL;
      JSONObject.testValidity(object0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.964763373583426
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      stringArray0[0] = " of ";
      stringArray0[1] = "+";
      stringArray0[2] = " Yb]o0vq";
      Byte.compare((byte)0, (byte)0);
      HashMap<Float, Object> hashMap0 = new HashMap<Float, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("2~Ws4;", false);
      HashMap<String, Float> hashMap1 = new HashMap<String, Float>();
      jSONObject0.put("i{NFl&g", (Map) hashMap1);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = null;
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.2528858195836596
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "';IG /TWLQP~))b9";
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Long long0 = new Long((-78L));
      Double double0 = new Double((-1.0));
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      Double.max((-78L), (-1296.1286));
      Float float0 = new Float(0.0);
      JSONObject jSONObject1 = jSONObject0.accumulate("jTZmr|!'<N3", float0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "';IG /TWLQP~))b9");
      stringWriter1.append('a');
      Float.max((-780.712F), 0.0F);
      jSONObject0.optInt("';IG /TWLQP~))b9", 128);
      boolean boolean0 = jSONObject1.isNull("W");
      assertEquals(1, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.47988145437987
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "L=^63b.qd/*";
      stringArray0[1] = "[?uJL";
      stringArray0[2] = "?mTa8Q12=f 9n'X";
      stringArray0[3] = "@d-i";
      stringArray0[4] = ":,$XpH$8mdh;c,Gh6B1";
      stringArray0[5] = "~Ue4XI!Ve;(T,du76j1";
      stringArray0[6] = "]:tc6#=>=^mowdxgs";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      HashMap<Long, Double> hashMap0 = new HashMap<Long, Double>();
      jSONObject1.put("-2048.1118372622460", (Map) hashMap0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.1753883477247387
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Float float0 = new Float(0.0);
      JSONObject jSONObject0 = new JSONObject(float0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "flo";
      stringArray0[1] = "flo";
      stringArray0[2] = "flo";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject1.write(stringWriter0);
      assertEquals("{}", stringWriter0.toString());
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9729348368424018
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      int int0 = (-762);
      Integer integer0 = new Integer((-762));
      String[] stringArray0 = new String[1];
      stringArray0[0] = ";IG /TWLQP~))b9";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      jSONObject0.toString();
      jSONObject0.optLong("{}");
      try { 
        jSONObject0.getString(";IG /TWLQP~))b9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\";IG /TWLQP~))b9\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7424873191022137
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "hzV4b'~6?y(";
      stringArray0[2] = "] is not a Boolean.";
      stringArray0[3] = "1T[";
      stringArray0[4] = "";
      stringArray0[5] = "] not found.";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      int int0 = jSONObject0.optInt("Bad value from toJSONString: ");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "';IG /TWLQP~))b9";
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject.getNames((Object) "';IG /TWLQP~))b9");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
