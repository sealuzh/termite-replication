/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 23:15:12 GMT 2020
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = JSONObject.valueToString(jSONObject0, (-649), 2206);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9879297828722717
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("IO", 0.0);
      JSONObject jSONObject2 = jSONObject1.put("] is not a number.", (Collection) null);
      String string0 = jSONObject2.toString((-12));
      assertNotNull(string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.730030621680318
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Long long0 = new Long((-2399L));
      jSONObject0.put("[]", (Object) long0);
      String string0 = jSONObject0.toString(0, (-621));
      assertNotNull(string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~]`#^t");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ~]`#^t
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9736489231972635
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 0.0);
      double double0 = jSONObject1.optDouble(",:]}/\"[{;=#");
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Iterator iterator0 = jSONObject0.keys();
      assertNotNull(iterator0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 2.181576716315917);
      long long0 = jSONObject1.getLong(",:]}/\"[{;=#");
      assertEquals(2L, long0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null, 0, (-2931));
      assertEquals("null", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      String string0 = jSONObject0.toString(34, 34);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JSONObject.testValidity((Object) null);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Integer integer0 = new Integer(13);
      JSONObject.testValidity(integer0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      Object object0 = jSONObject0.remove("Y");
      assertNull(object0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Float float0 = new Float(1.0);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt(stringArray0[1], stringArray0[0]);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5571130980576455
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      jSONObject0.putOpt("", "");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<JSONArray, JSONArray> hashMap0 = new HashMap<JSONArray, JSONArray>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      hashMap0.put(jSONArray0, jSONArray0);
      JSONObject jSONObject1 = jSONObject0.put(": ", (Map) hashMap0);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject1 = jSONObject0.put("'x%]\"ObMRT-!+M*kM`(", (Map) hashMap0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("[", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Short short0 = new Short((short) (-2112));
      HashMap<Float, Boolean> hashMap0 = new HashMap<Float, Boolean>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("", (Object) short0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HashMap<JSONArray, String> hashMap0 = new HashMap<JSONArray, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("d\"R)z0,bp", (-1L));
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("", 0L);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HashMap<String, Double> hashMap0 = new HashMap<String, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("Unterminated string", (-1845));
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.put("", 0.0);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2337380151460802
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Double double0 = new Double(0.0F);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.optString((String) null, (String) null);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString((String) null, "get");
      assertEquals("get", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString((String) null);
      assertEquals("", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1464631760614805
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      long long0 = jSONObject0.optLong("+", (long) 0);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      long long0 = jSONObject0.optLong("Null key.", 516L);
      assertEquals(516L, long0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject("{wBVb)h7~qW5mL@", stringArray0);
      long long0 = jSONObject0.optLong((String) null);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject((String) null);
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt((String) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.271899083808096
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      int int0 = jSONObject0.optInt(" Yb]o0vq");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject("'", stringArray0);
      double double0 = jSONObject0.optDouble("'", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject("1716.8", stringArray0);
      double double0 = jSONObject0.optDouble((String) null, 1716.8);
      assertEquals(1716.8, double0, 0.01);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      double double0 = jSONObject0.optDouble("", (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject("'", stringArray0);
      boolean boolean0 = jSONObject0.optBoolean("", true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8261674308051872
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      boolean boolean0 = jSONObject0.optBoolean("");
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6829081047004717
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Double double0 = new Double(0.0);
      String string0 = JSONObject.numberToString(double0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.has((String) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.getString("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Short short0 = new Short((short) (-689));
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      try { 
        jSONObject0.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Double double0 = new Double((-174.35360943868));
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getDouble("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-122.29999F));
      assertEquals("-122.29998779296875", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.append("-|T'}W6>juHsy8y", (Object) null);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6674619334292948
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Float float0 = new Float(1.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      try { 
        jSONObject0.append((String) null, "getgetBytes");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.3097558619082146
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      String[] stringArray0 = new String[5];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      try { 
        jSONObject0.put(stringArray0[2], false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Float float0 = new Float(1.0);
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      HashMap<Integer, Boolean> hashMap0 = new HashMap<Integer, Boolean>();
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(0);
      try { 
        jSONObject0.put((String) null, (Object) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      try { 
        jSONObject0.put(stringArray0[0], (-4230.69));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0116009116784799
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject("1716.8", stringArray0);
      try { 
        jSONObject0.getInt("1716.8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"1716.8\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.9320738874454946
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Double double0 = new Double((-1.5877285378163288));
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      try { 
        jSONObject0.getDouble("isparseFloat");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isparseFloat\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.getBoolean("wheel.json.JSONTokener");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONTokener\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject("'", stringArray0);
      try { 
        jSONObject0.get("i|eK)W[lO/GuM59h`L");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"i|eK)W[lO/GuM59h`L\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.464816384890813
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Boolean boolean0 = Boolean.valueOf(true);
      try { 
        jSONObject0.accumulate((String) null, boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(object0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.878515856263913
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put(",ltK/+rT", true);
      JSONObject jSONObject1 = jSONObject0.accumulate("A}HJow5fY:H'mr.K=)S", hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject1.write(stringWriter0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0, 58, 8192);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      Set<String> set0 = hashMap0.keySet();
      String string0 = JSONObject.valueToString(set0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.666278442414676
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = JSONObject.valueToString("i|eK)W[lO/GuM59h`L");
      assertNotNull(string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HashMap<Object, JSONArray> hashMap0 = new HashMap<Object, JSONArray>(160);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = JSONObject.valueToString(jSONObject0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.0386381250870387
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("iL|<:SHL.9w^F6H<", 1L);
      jSONObject1.put("java.lang.Boolean@0000000006", (Collection) null);
      String string0 = jSONObject0.toString(94);
      assertNotNull(string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject("i|eK)W[lO/GuM59h`L", stringArray0);
      String string0 = jSONObject0.toString(11, 0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9211256026399135
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("iL|<:SHL.9w^F6H<", 1L);
      jSONObject1.put("java.lang.Boolean@0000000006", (Collection) null);
      String string0 = jSONObject0.toString();
      assertNotNull(string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[5];
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertNull(jSONArray1);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = JSONObject.quote("\u0000jvH&5N_cpNX");
      assertEquals("\"\\u0000jvH&5N_cpNX\"", string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = JSONObject.quote("/,");
      assertEquals("\"/,\"", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.7031315809655684
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONArray("{\n\"java.lang.String@0000000003\": java.lang.Double@0000000004,\n\"java.lang.String@0000000006\": []\n}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\n\\\"java.lang.String@0000000003\\\": java.lang.Double@0000000004,\\n\\\"java.lang.String@0000000006\\\": []\\n}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "FMB#| *#";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.put((String) null, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("] is not a number.", (Collection) null);
      String string0 = jSONObject0.optString("] is not a number.", "] is not a number.");
      assertNotNull(string0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject("");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONArray jSONArray0 = jSONObject0.optJSONArray("wheel.json.JSONException");
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7326587201992076
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Double double0 = new Double((-1.5877285378163288));
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      Float float0 = new Float((-1250.0));
      JSONObject jSONObject1 = jSONObject0.accumulate("{\"java.lang.String@0000000010\": [\"java.lang.String@0000000010\"]}", float0);
      double double1 = jSONObject1.optDouble("{\"java.lang.String@0000000010\": [\"java.lang.String@0000000010\"]}", (double) 94);
      assertEquals(1, jSONObject0.length());
      assertEquals((-1250.0), double1, 0.01);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.9399110416456438
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "+");
      jSONObject0.toString(0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.844621476365503
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject("", stringArray0);
      jSONObject0.put(";wa&\u0005zHdD+G3", 0L);
      JSONArray jSONArray0 = jSONObject0.names();
      assertEquals(1, jSONArray0.length());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = JSONObject.getNames((Object) jSONObject0);
      assertEquals(1, stringArray0.length);
      assertNotNull(stringArray0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = JSONObject.getNames(object0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.7782333057997077
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      jSONObject0.put(",:]}/\"[{;=#", 0.0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNotNull(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 0.0);
      long long0 = jSONObject1.getLong(",:]}/\"[{;=#");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.4280648236309732
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Byte byte0 = new Byte((byte)0);
      JSONObject jSONObject1 = jSONObject0.putOpt("gethashCode", byte0);
      try { 
        jSONObject1.getJSONObject("gethashCode");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"gethashCode\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.979204517434325
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[8];
      JSONObject jSONObject0 = new JSONObject(" Yb]o0vq", stringArray0);
      jSONObject0.put("get", (Collection) null);
      JSONArray jSONArray0 = jSONObject0.getJSONArray("get");
      assertEquals(0, jSONArray0.length());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3961001489141087
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("IO", 0.0);
      try { 
        jSONObject0.getJSONArray("IO");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"IO\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6283356526043842
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Object object0 = new Object();
      JSONObject jSONObject1 = jSONObject0.accumulate("[]", object0);
      int int0 = jSONObject1.optInt("[]", 0);
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.581573107414146
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Long long0 = new Long((-2399L));
      jSONObject0.put("[]", (Object) long0);
      boolean boolean0 = jSONObject0.optBoolean("[]");
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.0981473891350673
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[5];
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      jSONObject0.put("va", false);
      boolean boolean0 = jSONObject0.optBoolean("va", false);
      assertEquals(1, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.8343719702816235
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Long long0 = new Long((-2399L));
      JSONObject jSONObject1 = jSONObject0.put("[]", (Object) long0);
      int int0 = jSONObject1.optInt("[]", 0);
      assertEquals(1, jSONObject0.length());
      assertEquals((-2399), int0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = JSONObject.doubleToString(0.0);
      assertEquals("0", string0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = JSONObject.doubleToString(1716.8);
      assertEquals("1716.8", string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.7201934592198251
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Long long0 = new Long((-2399L));
      jSONObject0.put("[]", (Object) long0);
      Object object0 = new Object();
      JSONObject jSONObject1 = jSONObject0.accumulate("[]", object0);
      Byte byte0 = new Byte((byte) (-79));
      jSONObject1.append("[]", byte0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Long long0 = new Long((-2399L));
      jSONObject0.put("[]", (Object) long0);
      Byte byte0 = new Byte((byte) (-79));
      try { 
        jSONObject0.append("[]", byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[[]] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8636799873410004
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      jSONObject0.put("", (Collection) linkedList0);
      jSONObject0.accumulate("", jSONObject0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HashMap<JSONArray, String> hashMap0 = new HashMap<JSONArray, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.accumulate("", jSONArray0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.890214110478029
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Long long0 = new Long(0L);
      String[] stringArray0 = new String[5];
      JSONObject jSONObject0 = new JSONObject(long0, stringArray0);
      jSONObject0.put("va", false);
      jSONObject0.accumulate("va", "FMB#| *#");
      StringWriter stringWriter0 = new StringWriter();
      jSONObject0.write(stringWriter0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("5Z2!71{PxC)lDRQKZE");
      jSONTokener0.nextValue();
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 19 of 5Z2!71{PxC)lDRQKZE
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{}");
      assertEquals(0, jSONObject0.length());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("is");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of is
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HashMap<String, Double> hashMap0 = new HashMap<String, Double>();
      Double double0 = new Double(0.0);
      hashMap0.put("Unterminated string", double0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.isNull("Unterminated string");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject("i|eK)W[lO/GuM59h`L", stringArray0);
      int int0 = jSONObject0.optInt("");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.6414480415035768
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Integer integer0 = new Integer(19);
      JSONObject jSONObject0 = new JSONObject(integer0);
      long long0 = jSONObject0.optLong("kC5~%L7r");
      assertEquals(1, jSONObject0.length());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.551051583822962
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "+");
      int int0 = jSONObject0.optInt("'", 256);
      assertEquals(3, jSONObject0.length());
      assertEquals(256, int0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.1285962936622185
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 0);
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.put("", 0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0746142917293842
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Double double0 = new Double((-1.5877285378163288));
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      long long0 = jSONObject0.optLong("isparseFloat", (-1836L));
      assertEquals((-1836L), long0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HashMap<Object, JSONArray> hashMap0 = new HashMap<Object, JSONArray>(160);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.optString("wheel.json.JSONObject@0000000001");
      assertEquals("", string0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HashMap<Byte, JSONArray> hashMap0 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.isNull("");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.2033320406994705
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject("{\"java.lang.String@0000000004\": java.lang.Long@0000000005}");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.2706817223249798
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Integer integer0 = new Integer(19);
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.put("", (Map) null);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.accumulate("{\"java.lang.String@0000000004\": java.lang.Long@0000000005}", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.9526493537212233
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Double double0 = new Double(0.0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      jSONObject0.put("iL|<:SHL.9w^F6H<", 1L);
      String string0 = jSONObject0.toString(94);
      assertNotNull(string0);
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      try { 
        jSONObject0.getString("getoptLong");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getoptLong\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.804318488804226
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Double double0 = new Double((-1.5877285378163288));
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject0.put("iL|<:SHL.9w^F6H<", (Collection) linkedList0);
      jSONObject0.toString(94);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      String[] stringArray0 = new String[3];
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      double double0 = jSONObject0.optDouble("");
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HashMap<String, JSONObject> hashMap0 = new HashMap<String, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.has("gethashCode");
      assertFalse(boolean0);
  }
}
