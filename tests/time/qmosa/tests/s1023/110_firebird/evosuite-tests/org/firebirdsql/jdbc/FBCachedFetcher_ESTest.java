/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:10:03 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.SynchronousQueue;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.firebirdsql.jdbc.field.FBCachedLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.500024685003315
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1599));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((-1895));
      Integer integer3 = new Integer((byte)74);
      Integer.getInteger("ei7t]'*PL(", 2337);
      linkedList1.add(integer3);
      Integer integer4 = new Integer(100);
      Integer.getInteger("xET_?WM[", (int) (byte)74);
      linkedList1.add(integer4);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      byte[][] byteArray2 = new byte[4][6];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)94);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3628384609307482
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1629));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((-1460));
      linkedList1.add(integer2);
      Integer integer3 = new Integer((-1895));
      Integer integer4 = new Integer((byte)74);
      linkedList1.add(integer4);
      Integer integer5 = new Integer(100);
      Integer.getInteger("xET_?WM[", (int) (byte)74);
      linkedList1.add(integer5);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      byte[][] byteArray2 = new byte[4][6];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      linkedList0.add(byteArray2);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)94);
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(3, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4219064947961786
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1629));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((-1895));
      Integer integer3 = new Integer((byte)74);
      linkedList1.add(integer3);
      Integer integer4 = new Integer(100);
      Integer.max(5173, (byte)74);
      Integer.getInteger("xET_?WM[", (int) (byte)74);
      linkedList1.add(integer4);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      byte[][] byteArray2 = new byte[4][6];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      linkedList0.add(byteArray2);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)94);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.last();
      fBCachedFetcher0.updateRow(byteArray2);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.574631651232375
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[13];
      byteArray1[1] = (byte)94;
      byteArray1[3] = (byte)23;
      byteArray1[3] = (byte)74;
      Integer integer0 = new Integer((-1629));
      Integer integer1 = new Integer((byte)74);
      Integer integer2 = new Integer((byte)74);
      Integer.toUnsignedLong((byte)74);
      Integer integer3 = new Integer((byte)94);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.last();
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((-1629));
      fBCachedFetcher0.relative((byte)94);
      fBCachedFetcher0.absolute((byte)74);
      fBCachedFetcher0.updateRow(byteArray0);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1468025731695666
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)94;
      byteArray1[2] = (byte)23;
      Integer integer0 = new Integer((-1629));
      Integer.getInteger("");
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer1 = new Integer((byte)0);
      linkedList1.add(integer1);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertEquals(0, fBResultSet0.getRow());
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1468025731695666
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)94;
      byteArray1[3] = (byte)23;
      byteArray1[3] = (byte)74;
      Integer integer0 = new Integer((-1629));
      Integer integer1 = new Integer((byte)74);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((byte)74);
      linkedList1.add(integer2);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(400);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3112777942845195
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)94;
      byteArray1[3] = (byte)23;
      byteArray1[3] = (byte)74;
      Integer integer0 = new Integer((-1629));
      Integer integer1 = new Integer((byte)74);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((byte)74);
      linkedList1.add(integer2);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.last();
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((-1629));
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][7];
      linkedList0.add(byteArray0);
      linkedList0.parallelStream();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isLast();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.361726113878468
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1629));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((-1895));
      Integer integer3 = new Integer((byte)74);
      Integer.getInteger("ei7t]'*PL(", 2337);
      linkedList1.add(integer3);
      Integer integer4 = new Integer(100);
      Integer.getInteger("xET_?WM[", (int) (byte)74);
      linkedList1.add(integer4);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      byte[][] byteArray2 = new byte[4][6];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      linkedList0.add(byteArray2);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)94);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.deleteRow();
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4126329916283047
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[23];
      byteArray1[0] = (byte) (-16);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      byte[][] byteArray2 = linkedList0.remove();
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.add(byteArray2);
      fBCachedFetcher0.last();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList2, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.absolute((-1));
      fBCachedFetcher0.previous();
      fBCachedFetcher1.isBeforeFirst();
      assertTrue(fBCachedFetcher1.isLast());
      
      fBCachedFetcher1.insertRow(byteArray0);
      boolean boolean1 = fBCachedFetcher0.relative((byte)0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.093380419625629
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      byte[] byteArray0 = new byte[10];
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      byteArray0[1] = (byte) (-44);
      linkedList0.remove();
      byteArray0[2] = (byte)0;
      byte[][] byteArray2 = new byte[3][3];
      byteArray2[0] = byteArray0;
      byteArray2[1] = byteArray0;
      byteArray2[2] = byteArray0;
      linkedList0.add(byteArray2);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.last();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      try { 
        fBCachedFetcher1.absolute((byte)0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.567818378896085
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[10];
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)0;
      byte[][] byteArray2 = new byte[3][3];
      byteArray2[0] = byteArray0;
      byteArray2[1] = byteArray0;
      byteArray2[2] = byteArray0;
      linkedList0.add(byteArray2);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute((-95));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.relative(1007);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.400727914940439
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1629));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((-1895));
      Integer integer3 = new Integer((byte)74);
      linkedList1.add(integer3);
      Integer integer4 = new Integer(100);
      Integer.getInteger("xET_?WM[", (int) (byte)74);
      linkedList1.add(integer4);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      byte[][] byteArray2 = new byte[4][6];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      linkedList0.add(byteArray2);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)94);
      fBCachedFetcher0.previous();
      System.setCurrentTimeMillis(2477L);
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5247485752006944
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1599));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer2 = new Integer((-1895));
      Integer integer3 = new Integer((byte)74);
      Integer.getInteger("ei7t]'*PL(", 2337);
      linkedList1.add(integer3);
      linkedList1.spliterator();
      Integer integer4 = new Integer(100);
      Integer.getInteger("xET_?WM[", (int) (byte)74);
      linkedList1.add(integer4);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      byte[][] byteArray2 = new byte[4][6];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)94);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.deleteRow();
      assertEquals(1, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.isLast();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      fBCachedFetcher0.isAfterLast();
      int int0 = 219;
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher2 = null;
      try {
        fBCachedFetcher2 = new FBCachedFetcher((GDSHelper) null, 8192, 219, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3113369638633987
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      linkedList1.replaceAll(unaryOperator0);
      Integer integer0 = new Integer(1434);
      Integer.getInteger("@M(}u`f8*J<w7ll'");
      linkedList1.add(integer0);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      byte[][] byteArray0 = new byte[3][7];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-32);
      byteArray1[1] = (byte)21;
      byteArray1[2] = (byte) (-4);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)21;
      byteArray2[1] = (byte) (-32);
      byteArray2[2] = (byte)21;
      byteArray2[3] = (byte)107;
      byteArray2[4] = (byte) (-32);
      byteArray2[5] = (byte) (-4);
      byteArray2[6] = (byte)21;
      byteArray2[7] = (byte)21;
      byteArray2[8] = (byte)21;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      byte[][] byteArray4 = new byte[1][2];
      linkedList0.add(byteArray4);
      linkedList0.add(byteArray4);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1434);
      Integer.getInteger("@M(}u`f8*J<w7ll'");
      linkedList1.add(integer0);
      linkedList1.remove();
      linkedList0.containsAll(linkedList1);
      byte[][] byteArray0 = new byte[1][2];
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.absolute((-328));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1468025731695666
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte) (-9);
      byteArray1[2] = (byte) (-89);
      byteArray1[3] = (byte) (-14);
      linkedList0.add(byteArray0);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.setFetchSize(0);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.close();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.599650423957912
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      byte[] byteArray0 = new byte[10];
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      byteArray0[1] = (byte) (-44);
      linkedList0.remove();
      byteArray0[2] = (byte)0;
      byte[][] byteArray2 = new byte[3][3];
      byteArray2[0] = byteArray0;
      byteArray2[1] = byteArray0;
      byteArray2[2] = byteArray0;
      linkedList0.add(byteArray2);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.last();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.absolute((-95));
      fBCachedFetcher1.previous();
      boolean boolean0 = fBCachedFetcher1.isBeforeFirst();
      fBCachedFetcher1.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher1.isBeforeFirst());
      
      boolean boolean1 = fBCachedFetcher1.relative((-1520));
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3533955107654396
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.spliterator();
      linkedList0.pollLast();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      LinkedHashSet<byte[][]> linkedHashSet0 = new LinkedHashSet<byte[][]>();
      linkedList0.containsAll(linkedHashSet0);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.previous();
      boolean boolean1 = fBCachedFetcher0.next();
      assertTrue(boolean1 == boolean0);
      
      System.setCurrentTimeMillis(3302L);
      boolean boolean2 = fBCachedFetcher0.isBeforeFirst();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      
      boolean boolean3 = fBCachedFetcher0.last();
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte)22;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      linkedList0.removeIf(predicate3);
      byteArray1[2] = (byte) (-89);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.203246955493325
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.isLast();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      GDSType.getType("1PI%Axn#;,i}M)2");
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1982020749289486
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(2831);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1629));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[7];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      linkedList1.toArray(fBCachedBlobFieldArray0);
      Integer integer2 = new Integer((-1859));
      Integer integer3 = new Integer((byte)74);
      Integer.min(32, (-2));
      linkedList1.add(integer3);
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[4][6];
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.offerFirst(byteArray0);
      linkedList0.add(byteArray1);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      byte[][] byteArray2 = new byte[2][2];
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)74;
      byteArray3[1] = (byte)74;
      byteArray3[2] = (byte)74;
      byteArray3[3] = (byte)74;
      byteArray3[4] = (byte)74;
      byteArray3[5] = (byte)74;
      byteArray3[6] = (byte)74;
      byteArray3[7] = (byte)74;
      byteArray3[8] = (byte)74;
      byteArray2[0] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)74;
      byteArray4[1] = (byte)74;
      byteArray4[2] = (byte)74;
      byteArray4[3] = (byte)74;
      byteArray2[1] = byteArray4;
      linkedList3.add(byteArray2);
      linkedList2.spliterator();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.921716231186081
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)94;
      byteArray1[2] = (byte)23;
      byteArray1[3] = (byte)74;
      byteArray1[4] = (byte)21;
      byteArray1[5] = (byte)52;
      byteArray1[6] = (byte)0;
      byteArray1[7] = (byte) (-112);
      byteArray1[8] = (byte) (-118);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte) (-118);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[1] = (byte)0;
      byteArray4[2] = (byte)52;
      byteArray4[3] = (byte)23;
      byteArray4[4] = (byte)0;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[18];
      byteArray5[0] = (byte)74;
      byteArray5[1] = (byte)23;
      byteArray5[2] = (byte)32;
      byteArray5[3] = (byte)52;
      byteArray5[4] = (byte)74;
      byteArray5[5] = (byte)94;
      byteArray5[6] = (byte)94;
      byteArray5[7] = (byte) (-62);
      byteArray0[4] = byteArray5;
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.getMetaData();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(2213);
      assertEquals(2, fBCachedFetcher0.getRowNum());
      
      boolean boolean0 = fBCachedFetcher0.absolute((byte) (-62));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][6];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)87;
      byteArray1[1] = (byte) (-12);
      byteArray1[2] = (byte) (-37);
      byteArray1[3] = (byte)6;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-12);
      byteArray2[1] = (byte)87;
      byteArray2[2] = (byte)6;
      byteArray2[3] = (byte)87;
      byteArray2[4] = (byte) (-12);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte) (-37);
      byteArray3[1] = (byte) (-12);
      byteArray3[2] = (byte)87;
      byteArray3[3] = (byte) (-12);
      byteArray3[4] = (byte)87;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte)6;
      byteArray4[1] = (byte)6;
      byteArray4[2] = (byte) (-12);
      byteArray4[3] = (byte) (-37);
      byteArray4[4] = (byte) (-37);
      byteArray4[5] = (byte) (-37);
      byteArray4[6] = (byte)6;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte)6;
      byteArray5[1] = (byte)6;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte)87;
      byteArray6[1] = (byte) (-12);
      byteArray6[2] = (byte) (-71);
      byteArray6[3] = (byte) (-37);
      byteArray6[4] = (byte)6;
      byteArray6[5] = (byte)6;
      byteArray6[6] = (byte)87;
      byteArray6[7] = (byte) (-12);
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.351930309300238
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte)38;
      fBCachedFetcher0.beforeFirst();
      byteArray0[2] = (byte) (-8);
      fBCachedFetcher0.first();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.relative((byte) (-16));
      boolean boolean0 = fBCachedFetcher0.absolute((byte)38);
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][6];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)87;
      byteArray1[2] = (byte) (-37);
      SynchronousQueue<FBCachedLongVarCharField> synchronousQueue0 = new SynchronousQueue<FBCachedLongVarCharField>();
      linkedList0.retainAll(synchronousQueue0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      linkedList0.addLast(byteArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][0];
      Integer integer0 = new Integer(2337);
      Integer integer1 = new Integer((-1629));
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[7];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      linkedList1.toArray(fBCachedBlobFieldArray0);
      Integer integer2 = new Integer((-1859));
      Integer integer3 = new Integer((byte)74);
      Integer.min(32, (-2));
      linkedList1.add(integer3);
      linkedList0.containsAll(linkedList1);
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[4][6];
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.offerFirst(byteArray0);
      linkedList0.add(byteArray1);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList2.spliterator();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)94;
      byteArray1[2] = (byte)23;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList0.removeAll(linkedList1);
      linkedList1.addFirst(byteArray0);
      linkedList1.offer(byteArray0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }
}
