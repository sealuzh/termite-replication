/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:17:02 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5667687549639204
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = ",\n";
      Long long0 = new Long((-476L));
      Long long1 = new Long((-1L));
      Long.compareUnsigned((-476L), (-1L));
      JSONObject jSONObject1 = jSONObject0.accumulate("1+mS|T", long0);
      String[] stringArray0 = JSONObject.getNames((Object) long0);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject2 = new JSONObject(object0, stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.toString();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      jSONObject0.toJSONArray(jSONArray1);
      try { 
        jSONObject1.put((String) null, 3222L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long long0 = 1544L;
      Long.compareUnsigned((short)0, (-1081L));
      JSONObject.doubleToString((-1));
      Long.valueOf("-1");
      Long.getLong("Missing value");
      Long.min((-1081L), (-1081L));
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2365079092967104
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "gettoString";
      JSONObject jSONObject1 = jSONObject0.append("gettoString", "gettoString");
      String string1 = "$c}l2,%q06FP@I";
      int int0 = new Integer(102);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject1.write(stringWriter0);
      JSONObject jSONObject2 = jSONObject1.put("gettoString", (Object) stringWriter0);
      try { 
        jSONObject2.append("gettoString", jSONObject1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[gettoString] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8038381373618506
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONObject.getNames(jSONObject1);
      JSONObject jSONObject2 = jSONObject0.accumulate("", jSONObject1);
      jSONObject1.optInt("");
      jSONObject2.toString(4);
      String string0 = "Wb`#U](K6$oil";
      jSONObject0.put("Wb`#U](K6$oil", 0);
      jSONObject0.getInt("Wb`#U](K6$oil");
      try { 
        jSONObject0.getString("rve*O[asy\"w$P");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"rve*O[asy\\\"w$P\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7277220288438895
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Short short0 = new Short((short) (-28));
      Short.toUnsignedInt((short)528);
      String string0 = "P&~Ao>,TLeGVd_$";
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("P&~Ao>,TLeGVd_$", (Object) "P&~Ao>,TLeGVd_$");
      jSONObject1.opt("P&~Ao>,TLeGVd_$");
      try { 
        jSONObject0.getJSONArray("P&~Ao>,TLeGVd_$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"P&~Ao>,TLeGVd_$\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "UncloseM -v4mmen";
      JSONObject.quote((String) null);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("\"\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of \"\"
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.630843889950168
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Short short0 = new Short((short)0);
      Short.toUnsignedLong((short)1);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.toString();
      Integer integer0 = new Integer(91);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "[]";
      stringArray1[1] = "[]";
      JSONObject jSONObject1 = new JSONObject("[]", stringArray1);
      Float float0 = new Float((float) (short)1);
      JSONObject.getNames((Object) float0);
      JSONObject jSONObject2 = jSONObject0.putOpt(">7CpL^RFg%5pe", "[]");
      jSONObject2.optJSONArray(",:]}/\"[{;=#");
      jSONObject2.toString();
      assertEquals(6, jSONObject0.length());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = null;
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.070612482516087
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 2979;
      HashMap<Boolean, JSONObject> hashMap0 = new HashMap<Boolean, JSONObject>(2979);
      String string0 = "$";
      String string1 = "get";
      HashMap<String, JSONArray> hashMap1 = new HashMap<String, JSONArray>();
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = new JSONArray();
      String string2 = null;
      jSONArray0.put(2979, (double) 2979);
      jSONArray0.optLong(2979, 0L);
      jSONObject0.optBoolean("get");
      jSONObject0.toJSONArray(jSONArray0);
      try { 
        jSONObject0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.336724853660327
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<Boolean, JSONObject> hashMap0 = new HashMap<Boolean, JSONObject>(2979);
      HashMap<String, JSONArray> hashMap1 = new HashMap<String, JSONArray>();
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = new JSONArray();
      jSONArray1.put(2979, (Object) jSONArray0);
      jSONArray1.optBoolean(92, true);
      Long.compareUnsigned(92, 0L);
      JSONObject.valueToString(hashMap0, 2979, 1);
      try { 
        Long.valueOf("{}");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"{}\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.092447766411238
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[8];
      stringArray0[7] = "null";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "";
      stringArray0[7] = "null";
      stringArray0[5] = "null";
      stringArray0[6] = "null";
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      jSONObject0.put("", (Collection) linkedList0);
      stringArray0[7] = "P&~Ao>,TLeGVd_$";
      jSONObject0.remove("");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.148572525796046
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      Float float0 = new Float(0.0F);
      JSONObject.valueToString(float0, 47, 47);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.accumulate("bSm=8.J`nC.1ulUx", boolean0);
      jSONObject0.optString("Unclosed comment", "Unclosed comment");
      Byte byte0 = new Byte((byte)34);
      Byte.toUnsignedInt((byte)34);
      Byte.toUnsignedInt((byte) (-7));
      jSONObject1.optBoolean("java.lang.Short@00000000090");
      JSONObject.numberToString(byte0);
      jSONObject1.optInt("isvalueOf", (int) (byte)34);
      String string0 = "<@F6&F_$QI";
      jSONObject0.optDouble("<@F6&F_$QI", (double) 34);
      JSONObject.getNames((Object) null);
      jSONObject1.optInt("Unclosed comment", 47);
      jSONObject0.toString((int) (byte)34);
      JSONObject jSONObject2 = jSONObject1.append("java.lang.Long@0000000007.", "Unclosed comment");
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      try { 
        jSONObject2.getString("2l9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"2l9\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Long long0 = new Long((-476L));
      Long.compareUnsigned((-476L), (-1L));
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.toString(1634, 1714);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONArray0.toJSONObject(jSONArray0);
      jSONObject0.optDouble("{}", (double) (-1L));
      JSONObject jSONObject1 = jSONObject0.optJSONObject(")=ON)*;R&\"I(mg^_RV");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5683251514814307
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-1045));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "gat character ";
      stringArray0[1] = "";
      Integer.compareUnsigned((-1045), (-24668172));
      stringArray0[2] = "2Ocr</ qO";
      Integer.max((-2517), (-1045));
      stringArray0[3] = "dO5nZ; s_";
      stringArray0[4] = ",\n";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      Float float0 = new Float((double) (-1045));
      JSONObject.valueToString(float0, (-2517), 3608);
      Integer.getInteger("dOnW?@W", (-1045));
      JSONObject jSONObject1 = jSONObject0.put("gat character ", (double) (-1045));
      try { 
        jSONObject1.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6061920506332319
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("Y\"*v%y`sl)aW");
      String string0 = null;
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = null;
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9249316768191247
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Short short0 = new Short((short)0);
      short short1 = (short)528;
      Short.toUnsignedLong((short)1);
      Short.toUnsignedInt((short)528);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      JSONArray jSONArray1 = new JSONArray();
      jSONArray0.toString();
      jSONObject0.toJSONArray(jSONArray1);
      String string0 = "z_@7.";
      JSONObject jSONObject1 = jSONObject0.put("z_@7.", (long) (short)528);
      jSONArray1.optBoolean((-666), false);
      int int0 = 1784;
      JSONObject jSONObject2 = new JSONObject();
      jSONObject1.toString();
      int int1 = 1624;
      jSONObject0.toString(1784, 1624);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      linkedList0.iterator();
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject("a}+_Em`1l]XepSUH");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of a}+_Em`1l]XepSUH
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4477688673683726
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString();
      try { 
        jSONObject0.getDouble(")D8[nxYm$2gS[&Xw/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\")D8[nxYm$2gS[&Xw/\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8594434503604251
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      int int0 = 0;
      String string0 = "getgetChars";
      JSONObject jSONObject1 = new JSONObject();
      JSONObject jSONObject2 = jSONObject0.put("Az#2bBR", (double) 0);
      double double0 = new Integer(0);
      jSONObject0.put("Az#2bBR", 0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      String string1 = null;
      try { 
        jSONObject2.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5664483349643405
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("LNBb(K2xEnCj@hSV", 0);
      jSONObject1.optLong("C", (-1L));
      jSONObject0.optInt("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = Integer.getInteger("C", 0);
      linkedList0.add(integer0);
      jSONObject0.put(".nx~iR\"Fg.[l1", (Collection) linkedList0);
      String string0 = null;
      jSONObject0.optJSONObject((String) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = ".nx~iR\"Fg.[l1";
      stringArray0[3] = ".nx~iR\"Fg.[l1";
      stringArray0[4] = ".nx~iR\"Fg.[l1";
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Float float0 = new Float(0.0F);
      Float.min(0.0F, 0.0F);
      JSONObject jSONObject0 = null;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "getnotifyAll";
      stringArray0[1] = "K@kRGE1J%eIl";
      stringArray0[2] = "ZIGDc8V`";
      stringArray0[3] = "P|Ay";
      String string0 = "zs136%;R\\ ";
      stringArray0[4] = "zs136%;R ";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0000481389292233
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "null";
      String string0 = "jC3^W YO>;VL<l";
      jSONObject0.put("null", (Object) null);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of null
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      String string0 = "_";
      hashMap0.put("_", "^}#s: A<FX.j2n2");
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string1 = null;
      JSONObject jSONObject1 = jSONObject0.putOpt((String) null, (Object) null);
      hashMap0.put((Object) null, "Expected a ',' or '}'");
      try { 
        jSONObject1.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5076268759892817
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "Az#2bBR";
      String string1 = "C";
      jSONObject0.optLong("C", 15L);
      String string2 = "";
      jSONObject0.optInt("");
      jSONObject0.optBoolean("&KQ&ywem2&dccCLJO", false);
      Object object1 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.put("", (Object) jSONObject0);
      try { 
        jSONObject1.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.545689500759012
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("Az#2bBR", 0);
      jSONObject1.optLong("C", (-1L));
      int int0 = jSONObject0.optInt("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = Integer.getInteger("C", 0);
      linkedList0.add(integer0);
      JSONObject jSONObject2 = jSONObject0.put(".nx~iR\"Fg.[l1", (Collection) linkedList0);
      Float float0 = new Float((-1147.25F));
      Long long0 = new Long(0L);
      JSONObject.numberToString(long0);
      jSONObject2.put(".nx~iR\"Fg.[l1", (-2073));
      assertTrue(linkedList0.contains(int0));
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Long long0 = new Long(0L);
      Long.sum(0L, 396L);
      JSONArray jSONArray0 = new JSONArray();
      Short short0 = new Short((short) (-492));
      StringWriter stringWriter0 = new StringWriter(51);
      JSONObject.getNames((Object) null);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.092809403309128
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Short short0 = new Short((short)0);
      Short.toUnsignedLong((short)1);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.toString();
      jSONObject0.toJSONArray(jSONArray0);
      JSONObject jSONObject1 = jSONObject0.put("[]", 1L);
      jSONObject0.toString((-649), (int) (short)528);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      linkedList0.iterator();
      JSONObject jSONObject2 = jSONObject0.put("[]", (Collection) linkedList0);
      jSONObject1.optInt("[]");
      jSONObject1.toString(1022);
      jSONObject2.optLong("[]");
      jSONObject2.optJSONObject("[]");
      try { 
        jSONObject2.getDouble("{\n\"java.lang.String@0000000002\": java.lang.Integer@0000000003,\n\"java.lang.String@0000000013\": java.lang.Long@0000000014,\n\"java.lang.String@0000000004\": java.lang.Integer@0000000005,\n\"java.lang.String@0000000008\": java.lang.Short@0000000009,\n\"java.lang.String@0000000010\": java.lang.Short@0000000011,\n\"java.lang.String@0000000006\": \"java.lang.Class@0000000007\"\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\n\\\"java.lang.String@0000000002\\\": java.lang.Integer@0000000003,\\n\\\"java.lang.String@0000000013\\\": java.lang.Long@0000000014,\\n\\\"java.lang.String@0000000004\\\": java.lang.Integer@0000000005,\\n\\\"java.lang.String@0000000008\\\": java.lang.Short@0000000009,\\n\\\"java.lang.String@0000000010\\\": java.lang.Short@0000000011,\\n\\\"java.lang.String@0000000006\\\": \\\"java.lang.Class@0000000007\\\"\\n}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7665487065406067
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Short short0 = new Short((short)0);
      Short.toUnsignedLong((short)1);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.toString();
      jSONObject0.toJSONArray(jSONArray0);
      jSONObject0.put("[]", 1L);
      jSONObject0.toString((-649), (int) (short)528);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      linkedList0.iterator();
      JSONObject jSONObject1 = jSONObject0.put("[]", (Collection) linkedList0);
      String[] stringArray1 = JSONObject.getNames(jSONObject1);
      assertEquals(6, jSONObject0.length());
      assertEquals(6, stringArray1.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Short short0 = new Short((short)1);
      Short.toUnsignedInt((short)0);
      Short.toUnsignedLong((short)1387);
      JSONArray jSONArray0 = new JSONArray();
      String string0 = JSONObject.doubleToString(3521.23);
      assertEquals("3521.23", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.054071868040543
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.get("9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"9\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9766893090132731
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Short.toUnsignedLong((short)1);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.toString();
      JSONObject.quote("[e1msIdgGr&/U!L<qYL");
      String string0 = "F5v]L^f\"7k#u";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("F5v]L^f\"7k#u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of F5v]L^f\"7k#u
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.486820765044318
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "null";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "";
      stringArray0[4] = "null";
      stringArray0[5] = "null";
      jSONObject0.optJSONObject("null");
      HashMap<Double, String> hashMap0 = new HashMap<Double, String>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject1.optBoolean("", false);
      JSONObject.valueToString(jSONObject0);
      jSONObject1.optBoolean(":0W!v[wHUIm8e", false);
      try { 
        jSONObject1.getDouble(".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6196974987271147
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optLong("");
      jSONObject0.opt(",-?s0`w@Mp+_*");
      jSONObject0.put("", 1583);
      StringWriter stringWriter0 = new StringWriter(59);
      Short.toUnsignedInt((short)60);
      Short.toUnsignedLong((short)60);
      JSONObject.getNames((Object) "");
      jSONObject0.has("wa");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONObject.quote("");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("\"\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of \"\"
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.613129842728147
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 2979;
      HashMap<Boolean, JSONObject> hashMap0 = new HashMap<Boolean, JSONObject>(2979);
      String string0 = "$";
      HashMap<String, JSONArray> hashMap1 = new HashMap<String, JSONArray>();
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      try { 
        jSONObject0.getString("$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"$\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Byte byte0 = new Byte((byte)79);
      JSONTokener jSONTokener0 = new JSONTokener("%Z7u\"eg2i>(");
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      jSONObject0.accumulate("000", (Object) null);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of %Z7u\"eg2i>(
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "true";
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9784318722061216
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optLong("");
      jSONObject0.opt(",-?s0`w@Mp+_*");
      JSONObject jSONObject1 = jSONObject0.put("", 1583);
      jSONObject1.optBoolean(",-?s0`w@Mp+_*");
      jSONObject1.optInt("`R*.c=>");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(3);
      linkedList0.add(integer0);
      JSONObject jSONObject2 = jSONObject1.put("", (Collection) linkedList0);
      JSONObject jSONObject3 = jSONObject2.put("java.lang.Short@00000000090", 0);
      Float float0 = new Float(0.0F);
      Long long0 = new Long(0);
      JSONObject.numberToString(long0);
      jSONObject0.put("ZiQv@\":<", 1583);
      jSONObject3.toString(8, 32);
      assertEquals(4, jSONObject3.length());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6248598779839436
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Long long0 = new Long((-476L));
      Long.compareUnsigned((-476L), (-1L));
      JSONObject jSONObject1 = jSONObject0.accumulate("1+mS|T", long0);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject.valueToString(jSONArray0, 1634, 1634);
      JSONArray jSONArray1 = new JSONArray();
      jSONObject1.toJSONArray(jSONArray1);
      jSONObject0.toString(1634, 1714);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject1.put("{\"java.lang.String@0000000002\": java.lang.Long@0000000003}", (Collection) linkedList0);
      JSONObject jSONObject2 = jSONObject1.append("Od8Jin){0|lOYDrL", "1+mS|T");
      assertSame(jSONObject2, jSONObject0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8038381373618506
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONObject.getNames(jSONObject1);
      JSONObject jSONObject2 = jSONObject0.accumulate("", jSONObject1);
      jSONObject1.optInt("");
      int int0 = 4;
      jSONObject2.toString(4);
      int int1 = 101;
      jSONObject0.put("Wb`#U](K6$oil", 101);
      String string0 = "UBhl";
      jSONObject0.getInt("Wb`#U](K6$oil");
      try { 
        jSONObject0.getString("rve*O[asy\"w$P");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"rve*O[asy\\\"w$P\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.657105086859502
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      HashMap<Object, JSONObject> hashMap0 = new HashMap<Object, JSONObject>();
      JSONObject jSONObject1 = jSONObject0.accumulate("", jSONObject0);
      jSONObject0.optInt("");
      int int0 = 4;
      jSONObject1.toString(int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4827707570906083
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(125);
      JSONObject jSONObject0 = new JSONObject(integer0);
      int int0 = 261;
      JSONObject jSONObject1 = jSONObject0.put("Az#2bBR", 261);
      String string0 = "C";
      jSONObject1.optLong("1.P*uuaIL", (long) 0);
      String string1 = "fl";
      jSONObject0.optInt("fl");
      String string2 = "&KQ&ywem2&dccCLJO";
      Integer.toUnsignedString(125);
      jSONObject1.optBoolean("C", true);
      try { 
        jSONObject0.getLong("fl");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"fl\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6090421477748125
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("Az#2bBR", 0);
      jSONObject1.optLong("C", (-1L));
      jSONObject0.optInt("");
      jSONObject1.optBoolean("&KQ&ywem2&dccCLJO", true);
      JSONObject.quote("Az#2bBR");
      jSONObject0.optString((String) null);
      jSONObject0.optString("Az#2bBR", ",:]}/\"[{;=#");
      try { 
        jSONObject1.getBoolean("\"Az#2bBR\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"Az#2bBR\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7834400724345305
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "Az#2bBR";
      int int0 = 0;
      jSONObject0.put("Az#2bBR", 0);
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(object0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5076268759892817
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "Az#2bBR";
      String string1 = "C";
      jSONObject0.optLong("C", (-1L));
      String string2 = "";
      jSONObject0.optInt("");
      jSONObject0.optBoolean("&KQ&ywem2&dccCLJO", false);
      Object object1 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.put("", (Object) jSONObject0);
      try { 
        jSONObject1.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2016749407013068
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Short short0 = new Short((short)1);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("P&~Ao>,TLeGVd_$", (Object) "P&~Ao>,TLeGVd_$");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "P&~Ao>,TLeGVd_$";
      stringArray0[1] = "P&~Ao>,TLeGVd_$";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(1, jSONObject0.length());
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.855048691206754
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("Az#2bdR", 0);
      jSONObject1.optLong("C", (-1L));
      JSONArray jSONArray0 = new JSONArray();
      jSONObject1.optInt("_t(");
      JSONObject.valueToString(jSONObject1, 1617, 59);
      jSONObject1.keys();
      jSONObject0.optDouble("java.lang.Long@0000000014.");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSONObject.valueToString((Object) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6478765745666073
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      JSONObject jSONObject0 = new JSONObject(object0);
      Double double0 = new Double(0.0);
      Byte byte0 = new Byte((byte)48);
      JSONObject.valueToString(byte0, 23, (byte)48);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "null";
      stringArray0[1] = "null";
      stringArray0[2] = ",";
      stringArray0[3] = "null";
      stringArray0[4] = "java.lang.Byte@0000000004";
      stringArray0[5] = "java.lang.Byte@0000000004";
      stringArray0[6] = "";
      stringArray0[7] = "null";
      JSONObject jSONObject1 = new JSONObject(double0, stringArray0);
      Object object1 = JSONObject.NULL;
      Integer integer0 = new Integer(23);
      Integer integer1 = new Integer(128);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer2 = new Integer(8);
      linkedList0.push(integer2);
      JSONArray jSONArray0 = new JSONArray();
      jSONArray0.put((Collection) linkedList0);
      JSONObject jSONObject2 = new JSONObject(double0, stringArray0);
      Integer integer3 = new Integer(128);
      jSONObject2.putOpt("_/-d7D=P6", integer3);
      jSONObject2.optJSONArray("gettoUpperCase");
      assertEquals(1, jSONObject2.length());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.2719399977629284
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "");
      jSONObject0.optLong("", 0L);
      jSONObject0.putOpt("", "");
      jSONObject0.putOpt("WHGM,u?l1ggz}s", "");
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.2322067503076204
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "true";
      try { 
        jSONObject0.getJSONObject("true");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"true\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.154965944642929
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.isNull("'r/.[Y^-GO*.!>");
      int int0 = 34;
      jSONObject0.optInt("'r/.[Y^-GO*.!>", 34);
      String string0 = "xa)SF`;s}\"";
      JSONObject jSONObject1 = jSONObject0.putOpt("xa)SF`;s}\"", "xa)SF`;s}\"");
      try { 
        jSONObject1.getJSONArray("`.$lisW}WS,WB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"`.$lisW}WS,WB\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4707674736189005
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Short short0 = new Short((short)0);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.toJSONArray(jSONArray0);
      JSONArray jSONArray1 = new JSONArray();
      JSONArray jSONArray2 = jSONObject0.toJSONArray(jSONArray1);
      assertNull(jSONArray2);
      
      JSONArray jSONArray3 = jSONObject0.names();
      assertNotNull(jSONArray3);
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7230174872664556
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optLong("");
      jSONObject0.opt(",-?s0`w@Mp+_*");
      String string0 = "";
      JSONObject jSONObject1 = jSONObject0.put("", 1583);
      jSONObject1.optBoolean("");
      int int0 = (-525);
      String string1 = "Waq>";
      try { 
        Integer.valueOf("Waq>", (-525));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -525 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.359199481509813
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
      
      JSONObject jSONObject0 = new JSONObject(object0);
      String[] stringArray0 = new String[8];
      stringArray0[7] = "null";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "";
      stringArray0[4] = "null";
      stringArray0[5] = "null";
      stringArray0[6] = "null";
      stringArray0[7] = "P&~Ao>,TLeGVd_$";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8125562638411816
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(39);
      linkedList0.add(integer0);
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject((Object) hashMap0);
      Float float0 = new Float((-1.0F));
      Long long0 = new Long((-2047L));
      String string0 = JSONObject.numberToString(integer0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4799245167137096
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Short short0 = new Short((short)0);
      Short.toUnsignedLong((short)1);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      assertNotNull(stringArray0);
      
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(5, jSONObject1.length());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object object0 = new Object();
      JSONObject.testValidity(object0);
      Double double0 = new Double(0.0);
      JSONObject.testValidity(double0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.177076192208725
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "Az#2bBR";
      int int0 = 0;
      String string1 = "getgetChars";
      JSONObject jSONObject1 = jSONObject0.put("getgetChars", false);
      jSONObject1.put("getgetChars", (Object) jSONObject0);
      jSONObject0.put("Az#2bBR", (double) 0);
      try { 
        jSONObject0.getDouble("getgetChars");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getgetChars\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = "}f|NxL_wD9Qd)\"[\\";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("}f|NxL_wD9Qd)\"[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of }f|NxL_wD9Qd)\"[
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("Zo1Y.PVU*`D-");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of Zo1Y.PVU*`D-
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Short short0 = new Short((short)1);
      StringWriter stringWriter0 = new StringWriter((short)0);
      JSONObject.getNames((Object) stringWriter0);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(object0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.0093184407685056
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "";
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optInt("", 43);
      JSONObject jSONObject1 = jSONObject0.putOpt("", "");
      try { 
        jSONObject1.getJSONArray("xa)SF`;s}\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"xa)SF`;s}\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.1938287219663293
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = ",\n";
      long long0 = (-476L);
      Long long1 = new Long((-476L));
      long long2 = (-1L);
      Long long3 = new Long((-1L));
      Long.compareUnsigned((-476L), (-1L));
      JSONObject jSONObject1 = jSONObject0.accumulate("1+mS|T", long1);
      String string1 = "no";
      jSONObject1.putOpt("no", (Object) null);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject.valueToString(jSONArray0, 1634, 1634);
      try { 
        jSONObject0.getString(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.263772669324549
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "Ki9>Y`}?9m(J(Z9f1";
      JSONObject jSONObject1 = jSONObject0.put("Ki9>Y`}?9m(J(Z9f1", 62);
      String string1 = "C";
      jSONObject1.optLong(",\n", (long) 62);
      jSONObject1.optInt("Az#2bBR");
      boolean boolean0 = false;
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(object0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HashMap<JSONArray, Byte> hashMap0 = new HashMap<JSONArray, Byte>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("]nG(&\\Q", (-1372L));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.840827283190615
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HashMap<Boolean, JSONObject> hashMap0 = new HashMap<Boolean, JSONObject>(2979);
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject((Object) "$");
      double double0 = jSONObject0.optDouble("BO~");
      assertEquals(3, jSONObject0.length());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1359777750647915
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "}f|NxL_wD9Qd)\"[";
      JSONObject jSONObject0 = new JSONObject();
      HashMap<JSONObject, JSONArray> hashMap0 = new HashMap<JSONObject, JSONArray>();
      jSONObject0.put("JSONObject[", (Map) hashMap0);
      int int0 = 1758;
      jSONObject0.optInt("}f|NxL_wD9Qd)\"[", 1758);
      jSONObject0.getString("JSONObject[");
      try { 
        jSONObject0.getInt("}f|NxL_wD9Qd)\"[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"}f|NxL_wD9Qd)\\\"[\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.656280285926605
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.put("Az#2bBR", 0);
      jSONObject1.optLong("C", (-1L));
      int int0 = jSONObject0.optInt("");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = Integer.getInteger("C", 0);
      linkedList0.add(integer0);
      jSONObject0.put("", true);
      JSONObject jSONObject2 = jSONObject0.put(".nx~iR\"Fg.[l1", (Collection) linkedList0);
      Float float0 = new Float((float) 0);
      jSONObject2.optDouble((String) null, (double) 0);
      Long long0 = new Long(0L);
      jSONObject0.optInt("C");
      long long1 = jSONObject2.optLong("Az#2bBR");
      assertTrue(linkedList0.contains(int0));
      assertEquals(0L, long1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.248985319836133
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.remove("Wf");
      Short short0 = new Short((short)87);
      jSONObject0.accumulate("false", short0);
      jSONObject0.optLong("Wf", 0L);
      jSONObject0.putOpt("Wf", "Wf");
      jSONObject0.putOpt("WHGM,u?l1ggz}s", "Wf");
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HashMap<JSONObject, JSONArray> hashMap0 = new HashMap<JSONObject, JSONArray>();
      JSONTokener jSONTokener0 = new JSONTokener("{UM@qH7");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a ':' after a key at character 7 of {UM@qH7
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9160175838494786
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Short short0 = new Short((short)1);
      Short.toUnsignedInt((short)528);
      Short.toUnsignedLong((short)1);
      JSONArray jSONArray0 = new JSONArray();
      Short.compare((short)528, (short)528);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "] is not a JSONArray.";
      stringArray0[1] = "Expected a ',' or ']'";
      stringArray0[2] = ")1sr]V";
      stringArray0[3] = "B_$}1";
      stringArray0[4] = "xKS";
      stringArray0[5] = "8!C8E8}Y:$W{G@eMt?2";
      stringArray0[6] = "mxl*5M?3jx";
      stringArray0[7] = ",\n";
      stringArray0[8] = "isequals";
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      Short short1 = new Short((short)1);
      Short.toUnsignedInt((short)1);
      JSONObject.valueToString(short1, (short)528, 12);
      JSONArray jSONArray1 = new JSONArray();
      assertEquals(0, jSONArray1.length());
  }
}
