/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:27:21 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.sql.BatchUpdateException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLRecoverableException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLTransientConnectionException;
import java.util.ArrayList;
import messages.global.GlobalStateMsg;
import messages.global.ScoreMsg;
import messages.round.PowerUpHitMsg;
import org.apache.log4j.spi.RepositorySelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ArrayList<ScoreMsg> arrayList0 = new ArrayList<ScoreMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      ArrayList<ScoreMsg> arrayList1 = new ArrayList<ScoreMsg>();
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(0);
      GlobalStateMsg[] globalStateMsgArray0 = new GlobalStateMsg[8];
      globalStateMsgArray0[0] = globalStateMsg0;
      globalStateMsgArray0[3] = globalStateMsg0;
      globalStateMsgArray0[4] = globalStateMsg0;
      globalStateMsgArray0[5] = globalStateMsg0;
      globalStateMsgArray0[7] = globalStateMsg0;
      arrayList0.toArray(globalStateMsgArray0);
      ScoreMsg scoreMsg1 = new ScoreMsg(arrayList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsgArray0[6]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = 0;
      MockSocket mockSocket0 = new MockSocket();
      // Undeclared exception!
      try { 
        BomberClient.getInstance();
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.BomberClient", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      PowerUpHitMsg powerUpHitMsg0 = new PowerUpHitMsg(18, 9001, 18);
      ArrayList<ScoreMsg> arrayList0 = new ArrayList<ScoreMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      ArrayList<ScoreMsg> arrayList1 = new ArrayList<ScoreMsg>();
      GlobalStateMsg[] globalStateMsgArray0 = new GlobalStateMsg[1];
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg((-747));
      globalStateMsgArray0[0] = globalStateMsg0;
      arrayList1.toArray(globalStateMsgArray0);
      ScoreMsg scoreMsg1 = new ScoreMsg(arrayList1);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsgArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      RepositorySelector repositorySelector0 = mock(RepositorySelector.class, new ViolatedAssumptionAnswer());
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      PowerUpHitMsg powerUpHitMsg0 = new PowerUpHitMsg(1, 1, 0);
      ArrayList<ScoreMsg> arrayList0 = new ArrayList<ScoreMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      ArrayList<ScoreMsg> arrayList1 = new ArrayList<ScoreMsg>();
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(0);
      GlobalStateMsg[] globalStateMsgArray0 = new GlobalStateMsg[8];
      globalStateMsgArray0[0] = globalStateMsg0;
      globalStateMsgArray0[2] = globalStateMsg0;
      globalStateMsgArray0[3] = globalStateMsg0;
      globalStateMsgArray0[4] = globalStateMsg0;
      globalStateMsgArray0[5] = globalStateMsg0;
      globalStateMsgArray0[6] = globalStateMsg0;
      globalStateMsgArray0[7] = globalStateMsg0;
      arrayList0.toArray(globalStateMsgArray0);
      ScoreMsg scoreMsg1 = new ScoreMsg(arrayList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis((-3587L));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      mockSocket0.setOOBInline(false);
      System.setCurrentTimeMillis((-3688L));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      mockSocket0.getRemoteSocketAddress();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("database alias does not exist", "]+C=C&&?fiqoI9Wt?k=");
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("w7tw#", "");
      SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException("w7tw#", sQLTransientConnectionException0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException((String) null);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(";.5q)5", "");
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(sQLIntegrityConstraintViolationException1);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("", "CONNECTION LOST", (-1), sQLFeatureNotSupportedException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException((String) null, (String) null, (-3294), sQLInvalidAuthorizationSpecException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLFeatureNotSupportedException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "K-^t^F6");
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      mockSocket0.setTcpNoDelay(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis((-1L));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      mockSocket0.setOOBInline(false);
      byte byte0 = (byte) (-102);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte) (-102);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }
}
