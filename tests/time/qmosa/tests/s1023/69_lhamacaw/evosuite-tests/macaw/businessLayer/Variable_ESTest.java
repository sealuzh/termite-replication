/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:17:00 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList3);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("ontologyTerm.nameSpace7label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("ontologyTerm.nameSpace7label", rawVariable0.getForm());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.spliterator();
      ontologyTerm0.setNameSpace("Zm0(vF:X>0:E");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument3);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4530014063936125
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaningDescription("%s");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("jACB6\"");
      supportingDocument2.clone();
      supportingDocument1.setFileName("S~2RNKx7");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setIdentifier(1794);
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      derivedVariable0.setCleaningDescription(" ");
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      assertEquals(" ", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.7822912331417218
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("user.city.label");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList0.addAll((Collection<? extends ValueLabel>) arrayList1);
      rawVariable1.setValueLabels(arrayList0);
      User user0 = new User("[\"VR", "}d{A2$0di9*2MM");
      user0.setEmail("mX<uAD'vyLNZNm:$~");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      User user1 = new User("}d{A2$0di9*2MM", "user.city.label");
      user1.setAddressLine1("user.city.label");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCleaned();
      rawVariable1.clone();
      assertEquals("user.city.label", rawVariable1.getYear());
      
      derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.795705399097318
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1908874351));
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-920L));
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.6890817293679192
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.clone();
      rawVariable1.addOntologyTerm((OntologyTerm) null);
      rawVariable0.getAvailability();
      // Undeclared exception!
      try { 
        rawVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7524682021065376
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.setAlias("[x%_Te/o_xCWV94C<n");
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0421222661145944
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("QMK9?H=[", "g0 p");
      user0.setIdentifier(1);
      user0.setIdentifier(1);
      Variable.validateFields(rawVariable0);
      user0.setCounty("user.addressLine1.label");
      user0.setAddressLine2("supportingDocument.filePath.saveChanges");
      User user1 = new User("Unknown", "g0 p");
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      user0.setPassword("fDB#uNG_%pf#-l Q}$");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setQuestionNumber("fNI[nM&#");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, derivedVariable0);
      User user2 = new User();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable3, rawVariable2);
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      assertEquals("fNI[nM&#", rawVariable2.getQuestionNumber());
      
      rawVariable1.getOntologyTerms();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8051063440149733
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("");
      derivedVariable0.setCodeBookNumber("88icu@KqB0W$%8Rk");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setFilePath("88icu@KqB0W$%8Rk");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      arrayList0.add((Variable) derivedVariable0);
      ArrayList<DerivedVariable> arrayList2 = new ArrayList<DerivedVariable>(arrayList1);
      arrayList2.add(derivedVariable0);
      arrayList0.addAll((Collection<? extends Variable>) arrayList2);
      derivedVariable0.setSourceVariables(arrayList0);
      arrayList2.add(derivedVariable0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "88icu@KqB0W$%8Rk";
      stringArray0[1] = "ud2E<<(fvb7";
      stringArray0[2] = "88icu@KqB0W$%8Rk";
      arrayList1.add(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      stringArray0[3] = "88icu@KqB0W$%8Rk";
      stringArray0[4] = "88icu@KqB0W$%8Rk";
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        arrayList2.toArray(stringArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.717624218412938
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      User user0 = new User();
      user0.setAddressLine2("|K(XOqZ;$I");
      User user1 = new User("UNABLE_TO_GET_ORIGINAL_USER", "|K(XOqZ;$I");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      User user2 = new User("variable.category.label", "variable.category.label");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.detectFieldChanges(user2, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      User user3 = new User();
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectFieldChanges(user3, rawVariable3, derivedVariable0);
      rawVariable0.clone();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("variable.alias.label");
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      assertEquals("variable.alias.label", rawVariable0.getForm());
      
      ontologyTerm0.setOntologyName("variable.alias.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("A");
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9495499810681953
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("A");
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.701780554508602
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("user.city.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(true);
      rawVariable1.getCleaningDescription();
      rawVariable0.setYear(">#-JL#4L6JpRdpL;)");
      User user0 = new User("general.fieldValue.unknown", "");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable1.clone();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCleaningDescription((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaningDescription("variable.category.label");
      supportingDocument1.clone();
      supportingDocument0.setFileName("");
      supportingDocument1.setIdentifier(1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable2.getCategory();
      assertEquals("variable.category.label", derivedVariable2.getCleaningDescription());
      
      derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9721987111105235
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getValueLabels();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getForm();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("5M=FIu,<7|]fy8 ");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.createVariableSummary();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.7331208640563642
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setFilePath("");
      rawVariable0.notes = "user.addressLine1.saveChanges";
      rawVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.setColumnStart("IoOPGW7kBj");
      derivedVariable0.setCodeBookNumber("user.addressLine1.saveChanges");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getYear();
      assertEquals("user.addressLine1.saveChanges", derivedVariable0.getCodeBookNumber());
      
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.896934599451277
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setYear("g-Vf");
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getAlternativeVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.getName();
      rawVariable0.getName();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.671132319610086
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "A";
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.notes = "uF{e";
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.clone();
      assertEquals("A", rawVariable0.getQuestionNumber());
      
      derivedVariable0.getNotes();
      String string0 = derivedVariable0.getLabel();
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("0V'c|");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("0V'c|");
      derivedVariable0.setQuestionNumber("1@X-buQ93lVmXufJVC{");
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      assertEquals("1@X-buQ93lVmXufJVC{", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.6407802487948633
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      rawVariable0.setNotes("variable.cleaningStatus.label");
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.774642508036917
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("variable.alias.label");
      rawVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.iterator();
      User user0 = new User("variable.alias.label", "I[CI-sap?ePxD");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      user0.setPassword("");
      user0.setCity("I[CI-sap?ePxD");
      user0.clone();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getIdentifier();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setYear("variable.questionNumber.label");
      rawVariable0.getValueLabels();
      user0.setPhone("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.getCodeBookNumber();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      arrayList1.add(0, valueLabel0);
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals("variable.questionNumber.label", rawVariable0.getYear());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.8395618757739207
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(true);
      supportingDocument0.setFilePath("");
      supportingDocument0.setFileName("`R20rAb|t!B");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.codeBookNumber = "ERROR #";
      rawVariable0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.setCleaningStatus("$VALUES");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setIdentifier(2416);
      derivedVariable0.setQuestionNumber("LIST_CHOICE");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("$VALUES");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.7877762104634773
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.clone();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      derivedVariable0.getAlias();
      derivedVariable0.getColumnEnd();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.77160442326515
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaningDescription("%s");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user0 = new User();
      user0.setEmail("%s");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      User user1 = new User("{EC", "{EC");
      user0.setAddressLine1("MU]j@y:");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable1);
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.getColumnEnd();
      derivedVariable1.isCleaned();
      rawVariable0.clone();
      derivedVariable0.clone();
      assertEquals("%s", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.6749426427634164
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setLabel("variable.codeBookNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User("variable.alias.label", (String) null);
      user0.setEmail("");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.cleaningStatus.label");
      derivedVariable2.removeSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getFilePath());
      
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      arrayList0.parallelStream();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.9122040698981597
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.spliterator();
      ontologyTerm0.setNameSpace("Hx)nG&W{3r");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList3);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = derivedVariable0.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList5);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument1);
      rawVariable1.getAvailability();
      rawVariable1.getYear();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getAvailability();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.0231188006092307
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.columnStart = "R<";
      rawVariable0.setForm("");
      rawVariable0.getOntologyTerms();
      rawVariable0.getFilePath();
      User user1 = new User("general.fieldValue.unknown", "R<");
      user1.setAddressLine2("");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getValueLabels();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("R<", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("A");
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm1.setOntologyName("A");
      derivedVariable0.setForm("A");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      System.setCurrentTimeMillis((-110L));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setYear("g-Vf");
      assertEquals("g-Vf", rawVariable0.getYear());
      
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setFileName("p=gcxc");
      arrayList0.add(supportingDocument4);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS");
      derivedVariable1.setQuestionNumber("");
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      arrayList0.add(supportingDocument6);
      derivedVariable0.setSupportingDocuments(arrayList2);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setQuestionNumber("`nk)rz|O_IqbzvIN");
      User user0 = new User("", "vKkj$?](P");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      try { 
        User.checkValidUserIDField("vKkj$?](P");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"vKkj$?](P\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.79120322794263
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("Hx)nG&W{3r");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.665925868143944
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ontologyTerm0.getDisplayName();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.702199744081923
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      rawVariable0.setYear("g-Vf");
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setFileName("p=gcxc");
      arrayList0.add(supportingDocument4);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument5);
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCleaned();
      rawVariable0.clone();
      assertEquals("g-Vf", rawVariable0.getYear());
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.7653032875863626
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("user.city.label");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.add(valueLabel0);
      arrayList0.addAll((Collection<? extends ValueLabel>) arrayList1);
      rawVariable1.setValueLabels(arrayList0);
      User user0 = new User("[\"VR", "supportingDocument.filePath.saveChanges");
      user0.setEmail("mX<uAD'vyLNZNm:$~");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      User user1 = new User("supportingDocument.filePath.saveChanges", "user.city.label");
      user1.setAddressLine1("user.city.label");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.addSourceVariable(rawVariable1);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCleaned();
      rawVariable1.clone();
      assertEquals("user.city.label", rawVariable1.getYear());
      
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.708665825820528
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.setYear("");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setName("Unknown");
      derivedVariable0.clone();
      derivedVariable0.getCleaningStatus();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.isNewRecord();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertEquals("Unknown", derivedVariable0.getName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user0 = new User("variable.alternativeVariable.label", "variable.alternativeVariable.label");
      user0.setIdentifier(0);
      user0.setIdentifier(2885);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(arrayList0.contains(ontologyTerm1));
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.8086930517969533
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("QMK9?H=[", "g0 p");
      user0.setIdentifier(1);
      user0.setIdentifier(1);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList1.addAll((Collection<? extends ValueLabel>) arrayList2);
      rawVariable0.setValueLabels(arrayList1);
      User user1 = new User("QMK9?H=[", "user.addressLine1.label");
      user0.setEmail("user.addressLine1.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList3 = DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList3.size());
      
      User user2 = new User("variable.isCoded.label", "g0 p");
      user1.setAddressLine1("[\"VR");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCleaned();
      rawVariable0.clone();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.682309130516031
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setColumnStart("");
      assertFalse(rawVariable0.isCoded());
      
      User user0 = new User();
      user0.setEmail("");
      user0.setEmail("");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.setCoded(true);
      rawVariable0.createVariableSummary();
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.84376882580218
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setYear("g-Vf");
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setFileName("UNABLE_TO_CHECK_DATABASE_EXISTS");
      arrayList0.add(supportingDocument4);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument5);
      rawVariable0.getAvailability();
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getAvailability();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getCodeBookNumber();
      rawVariable0.getCodeBookNumber();
      assertEquals("g-Vf", rawVariable0.getYear());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier(172);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals(172, derivedVariable0.getIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      derivedVariable1.createVariableSummary();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.688514447186191
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1282);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.setColumnStart("(Q;C)=GbY(QZo1Y");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getCodeBookNumber();
      assertEquals("(Q;C)=GbY(QZo1Y", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCleaningStatus("");
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9122728103597133
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.parallelStream();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.9173385067639175
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setCategory("uF{e");
      User user0 = new User("u'Jm", "variable.alias.label");
      user0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.addSupportingDocuments(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getIdentifier();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.trimToSize();
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.setSupportingDocuments(arrayList1);
      assertEquals("uF{e", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaningDescription("%s");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      arrayList0.add(supportingDocument0);
      rawVariable0.setNotes("%s");
      arrayList0.add(supportingDocument1);
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("NO_SUPPORTING_DOCUMENT_FILTER");
      supportingDocument2.clone();
      supportingDocument0.setFileName("xDz`cG@x>$/CYNRw$");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "";
      rawVariable0.setNotes("(!");
      rawVariable0.getValueLabels();
      rawVariable0.getForm();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      rawVariable0.removeValueLabel(valueLabel0);
      assertEquals("(!", rawVariable0.getNotes());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.spliterator();
      ontologyTerm0.setNameSpace("Hx)nG&W{3r");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument3);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      derivedVariable0.setCleaningDescription("gbfVIu:u%F3");
      supportingDocument3.clone();
      supportingDocument3.setFilePath("=EzJ)X|V#L.T(DOg");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setFileName("ontologyTerm.term.saveChanges");
      supportingDocument2.setIdentifier(1794);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument5);
      derivedVariable0.setCleaningDescription("=EzJ)X|V#L.T(DOg");
      assertEquals("=EzJ)X|V#L.T(DOg", derivedVariable0.getCleaningDescription());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getCategory();
      derivedVariable1.getCleaningDescription();
      rawVariable0.getLabel();
      rawVariable0.getNotes();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.727373655790363
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("QMK9?H=[", "g0 p");
      user0.setIdentifier(5);
      user0.setIdentifier(5);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      user0.setCounty("user.addressLine1.label");
      user0.setAddressLine2("supportingDocument.filePath.saveChanges");
      User user1 = new User("Unknown", "g0 p");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      User user2 = new User((String) null, (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.detectFieldChanges(user2, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      User user3 = new User();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user3, rawVariable3, rawVariable2);
      assertTrue(arrayList2.equals((Object)arrayList1));
      
      RawVariable rawVariable4 = (RawVariable)rawVariable3.clone();
      assertEquals("Unknown", rawVariable4.getCategory());
      assertEquals("Unknown", rawVariable4.getAvailability());
      assertFalse(rawVariable4.isCleaned());
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
      
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList3);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.278652206252129
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(arrayList0.contains(ontologyTerm0));
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertEquals("0", variable0.getDisplayItemIdentifier());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isNewRecord());
      assertNotSame(variable0, rawVariable0);
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList0.retainAll(arrayList1);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.8638881505219866
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setYear("g-Vf");
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setFileName("p=gcxc");
      arrayList0.add(supportingDocument4);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument5);
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.getAvailability();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.getLabel();
      assertEquals("g-Vf", rawVariable0.getYear());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.8794340783161916
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("A");
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("Q");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      arrayList0.add(ontologyTerm2);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeSupportingDocuments(arrayList1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList3);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument1);
      rawVariable2.getAvailability();
      rawVariable1.getYear();
      rawVariable0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      assertEquals("A", rawVariable0.getForm());
      
      rawVariable2.getAvailability();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable2.getAvailability());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      user0.setEmail("");
      User.detectFieldChanges(user0, user0, user0);
      user0.setAddressLine1("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.setCoded(true);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      arrayList1.spliterator();
      ontologyTerm0.setNameSpace("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setColumnEnd("hE\"\"Dh:G2?Sa^TBk");
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      derivedVariable0.setColumnEnd("");
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCodeBookNumber("-");
      derivedVariable0.getSourceVariables();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getColumnStart();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.getCleaningStatus();
      derivedVariable1.addSourceVariable(derivedVariable0);
      assertEquals("-", derivedVariable0.getCodeBookNumber());
      
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable1.getColumnEnd();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.805867282505779
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("A");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      user0.setPassword("A");
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User("variable.alias.label", "f%9UbS+EpW6;");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user1, rawVariable0, valueLabel0, valueLabel1);
      valueLabel0.clone();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user2 = new User();
      RawVariable rawVariable3 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable3, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.600492795905894
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("BD*j&VS5bE");
      derivedVariable0.setCoded(false);
      derivedVariable0.setFilePath("0#Tp$A?Q");
      derivedVariable0.getAlias();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getQuestionNumber();
      rawVariable0.setName("0#Tp$A?Q");
      User user0 = new User("", "pS]v?i");
      user0.setPhone("variable.alias.label");
      user0.setUserID("");
      user0.setPostCode("BD*j&VS5bE");
      user0.setIdentifier((-1146));
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getName();
      rawVariable0.setCoded(false);
      assertEquals("BD*j&VS5bE", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.708839453365132
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(true);
      rawVariable0.setCodeBookNumber((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.785306545610895
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setLabel("variable.codeBookNumber.label");
      User user0 = new User("variable.alias.label", (String) null);
      user0.setEmail("");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("uF{e");
      rawVariable0.addSupportingDocument(supportingDocument0);
      assertEquals("variable.codeBookNumber.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("(ivFcqN*.FM{]o,");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.notes = "JM86Cs{l'LLGYY0r#";
      derivedVariable0.setCleaned(true);
      derivedVariable0.getName();
      assertEquals("(ivFcqN*.FM{]o,", derivedVariable0.getName());
      
      rawVariable0.setCleaned(true);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("}d{A2$0di9*2MM");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList0.retainAll(arrayList1);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("}d{A2$0di9*2MM", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.879282118640374
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      rawVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setYear("g-Vf");
      arrayList0.add(supportingDocument1);
      arrayList0.spliterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("g-Vf");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument2.setFileName("");
      arrayList0.add(supportingDocument3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList2);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList3);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument6);
      rawVariable0.getAvailability();
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getAvailability();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("g-Vf", rawVariable0.getYear());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.clone();
      arrayList0.sort(comparator0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(false);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.isCleaned();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("3BgB'SZ^)v&B0V<0j");
      supportingDocument0.clone();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("([7");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument1.setIdentifier(1794);
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      derivedVariable0.setCleaningDescription(">M+EPSS_N");
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      assertEquals(">M+EPSS_N", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.8770725820472016
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_CHECK_DATABASE_EXISTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("C]c<}Id");
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList3);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList5);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.getAvailability();
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getAvailability();
      assertNotNull(string0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7269110076302976
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getAlternativeVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.8849823665632934
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setCleaningDescription("NO_SUPPORTING_DOCUMENT_FILTER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setFileName("fNI[nM&#");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("macaw.system.MacawChangeEvent");
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument0.clone();
      User user0 = new User("macaw.system.MacawChangeEvent", "fNI[nM&#");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument2);
      supportingDocument1.setFileName("}d{A2$0di9*2MM");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.getAvailability();
      rawVariable0.getYear();
      rawVariable1.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable1.getAvailability();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.cloneAttributes(derivedVariable1);
      assertEquals("macaw.system.MacawChangeEvent", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setCodeBookNumber((String) null);
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Object object0 = new Object();
      supportingDocument0.setFileName("}d{A2$0di9*2MM");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIdentifier(1794);
      assertNotSame(supportingDocument2, supportingDocument0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.362843374280337
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setForm("A");
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setCleaningDescription("%s");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument1);
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setCleaningDescription("NO_SUPPORTING_DOCUMENT_FILTER");
      supportingDocument2.clone();
      supportingDocument0.setFileName("xDz`cG@x>$/CYNRw$");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningDescription("D\"Bi?tC&/emP;hR7V'");
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningDescription();
      assertEquals("D\"Bi?tC&/emP;hR7V'", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("");
      rawVariable0.setAlias("supportingDocument.title.saveChanges");
      rawVariable0.addValueLabel(valueLabel0);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", "variable.isCleaned.saveChanges.changedToNotClean");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.getDisplayName();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.form = "";
      derivedVariable0.setCodeBookNumber("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setCleaningDescription("");
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }
}
