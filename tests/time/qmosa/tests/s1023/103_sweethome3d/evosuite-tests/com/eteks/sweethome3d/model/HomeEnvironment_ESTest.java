/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:32:33 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2878749590709533
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("i82\"C@=LTH2>d.U", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(18);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "i82\"C@=LTH2>d.U", homeEnvironment_DrawingMode0, object0);
      homeEnvironment1.setGroundColor(400);
      homeEnvironment1.setGroundColor((-444));
      homeEnvironment1.setCeillingLightColor(400);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.getVideoWidth();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment.Property.values();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.setCeillingLightColor((-3753));
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.setVideoFrameRate((-1375));
      homeEnvironment2.getSkyTexture();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals((-3753), int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_ASPECT_RATIO", "3P\"xJ`}7y}]", temporaryURLContent0, 422.23F, 422.23F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-42), homeTexture0, 7, homeTexture0, (-42), (-1229.411F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.1258270737189187
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(0);
      MockURL.getFtpExample();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setCeillingLightColor((-1309));
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getVideoHeight();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.788336980067754
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(0);
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "}", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setCeillingLightColor(1160);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property.values();
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setCeillingLightColor(1160);
      homeEnvironment0.getSkyTexture();
      assertEquals(1160, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(752, (HomeTexture) null, 33, 752, 33);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("nsFDOl", propertyChangeListener0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      Camera camera0 = new Camera(33, 752, 33, 1261.841F, 2.0F, (-2546.0F));
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "RATIO_2_1", (Object) null, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("xDQN6R.W!", propertyChangeListener1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoHeight();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property.values();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoHeight((-2025));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals((-2025), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", "", resourceURLContent0, 0, (-1764.6549F), "NAME", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture1, (-921), homeTexture1, (-921), (-1764.6549F));
      homeEnvironment0.clone();
      homeEnvironment0.getPhotoQuality();
      assertEquals((-921), homeEnvironment0.getLightColor());
      
      homeEnvironment0.setLightColor(0);
      assertEquals(0, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      homeEnvironment0.setSkyColor(219);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoHeight(300);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoWidth();
      Random.setNextRandom(2167);
      System.setCurrentTimeMillis(1L);
      homeEnvironment0.setWallsAlpha(320);
      homeEnvironment0.setAllLevelsVisible(true);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super class isn't cloneable", "", resourceURLContent0, 0, (-1764.6549F), "NAME", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2542, homeTexture0, 0, homeTexture0, 1506, 3707.266F);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int0);
      
      Random.setNextRandom(476);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(3707.266F, float0, 0.01F);
      
      homeEnvironment0.getVideoCameraPath();
      int int1 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int1);
      
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2542, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1506, homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.518225151738783
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality((-283));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment2.setVideoFrameRate(46);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.getSkyColor();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setVideoCameraPath(list0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setPhotoHeight(46);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getGroundTexture();
      int int0 = homeEnvironment3.getVideoQuality();
      assertEquals((-283), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", "", resourceURLContent0, 0, (-1764.6549F), "NAME", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(735, homeTexture0, 0, homeTexture0, 0, 2542);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getLightColor();
      assertEquals(0, homeEnvironment0.getSkyColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(320, homeTexture0, 735, 8, (-1764.6549F));
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(320, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(735, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, int0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(8, homeEnvironment1.getLightColor());
      assertEquals((-1764.6549F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.125827073718918
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment0.setCeillingLightColor((-1448));
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getVideoHeight();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray1 = HomeEnvironment.Property.values();
      assertNotSame(homeEnvironment_PropertyArray1, homeEnvironment_PropertyArray0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("ufs~@", "ufs~@", temporaryURLContent0, 2824.0F, 2373.4521F, "ufs~@");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-551), homeTexture0, (-4008), (-4008), 0.0F);
      homeEnvironment0.setSubpartSizeUnderLight((-4008));
      homeEnvironment0.setWallsAlpha(2333.65F);
      homeEnvironment0.setSkyColor(14);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment1.setPhotoHeight((-4008));
      assertEquals(2333.65F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7862471159089246
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-2748), (HomeTexture) null, (-2748), 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth((-2748));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoFrameRate((-2715));
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth((-902));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-902));
      homeEnvironment1.setVideoQuality((-902));
      homeEnvironment1.setWallsAlpha(33.0F);
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals((-676), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", "", resourceURLContent0, 0, (-1764.6549F), "NAME", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3368, homeTexture1, 0, (-921), 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(3368, homeEnvironment1.getGroundColor());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals((-921), homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "", list0, list0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("DRAWING_MODE", propertyChangeListenerProxy0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setGroundColor((-3511));
      homeEnvironment0.setCeillingLightColor((-695));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      HomeEnvironment.Property.values();
      homeEnvironment3.getDrawingMode();
      homeEnvironment0.setCeillingLightColor(2453);
      assertEquals((-3511), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("K$rr~ $<%wLaz72?o*$", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 2911, 2911, 2911);
      CatalogTexture catalogTexture1 = new CatalogTexture("C=n\u0005J%(Gciv[gc/)'", (Content) null, 2911, 2.0F);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1140, homeTexture1, 3, 94, 1.0F);
      assertEquals(3, homeEnvironment1.getSkyColor());
      
      homeEnvironment1.setSkyColor(94);
      homeEnvironment1.getLightColor();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getGroundColor();
      homeEnvironment1.setGroundTexture(homeTexture0);
      assertEquals(94, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.360837820182527
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment2.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality((-283));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment2.setVideoFrameRate(46);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.getSkyColor();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setVideoCameraPath(list0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy3);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-283), homeEnvironment0.getVideoQuality());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super class isn't cloneable", "", resourceURLContent0, 0, (-1764.6549F), "NAME", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2542, homeTexture0, 2542, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(2542, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(2542, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.414222433546777
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate(46);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoWidth();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(46, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0227949245106362
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setVideoQuality((-1));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate((-551));
      homeEnvironment0.setWallsAlpha((-1));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      System.setCurrentTimeMillis((-551));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "SKY_TEXTURE", (Object) null, homeEnvironment1);
      CatalogTexture catalogTexture0 = new CatalogTexture("SKY_TEXTURE", (Content) null, (-551), (-1.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("%C,&)N6s#>eF", "", (Content) null, (-1), 1335.0902F, "", true);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      HomeTexture homeTexture3 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setVideoWidth((-1077));
      TexturesCategory texturesCategory0 = new TexturesCategory("#/O.<Z@nCUlM9vA<7");
      catalogTexture1.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-921), homeTexture0, (-551), homeTexture3, 3, (-2818.4668F));
      homeEnvironment0.clone();
      assertEquals((-1), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", resourceURLContent0, 33.0F, 33.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, homeTexture0, 17, homeTexture0, 20, 17);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(13427964);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoFrameRate(17);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(20);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Windows", (Content) null, 2.0F, (-129.9F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-945), homeTexture0, (-945), (-945), 1.5F);
      homeEnvironment0.setSkyColor(320);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(320, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.099501544769486
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(13);
      homeEnvironment0.setSkyColor((-1761));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setWallsAlpha((-1.0F));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoWidth((-1761));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, resourceURLContent0, 1388.737F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(184, homeTexture0, 184, homeTexture0, 184, 184);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.getVideoWidth();
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment1.setCeillingLightColor(46);
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "^V?_}[G5bh><=", uRLStreamHandler0);
      homeEnvironment1.setLightColor(46);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-1779.5F), 46);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(2241, homeTexture0, 2925, 2241, 2241);
      homeEnvironment2.setSkyColor(2925);
      homeEnvironment1.getLightColor();
      assertEquals(46, homeEnvironment1.getCeillingLightColor());
      
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1698162924117237
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1215, (HomeTexture) null, (-1286), (-3813), 1215);
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality((-902));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate(1215);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Contn isn't a JAR entry", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Contn isn't a JAR entry", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getCeillingLightColor();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(752, (HomeTexture) null, 33, 752, 33);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("nsFDOl", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setGroundColor(33);
      homeEnvironment0.setPhotoWidth(33);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(2947);
      homeEnvironment0.setWallsAlpha((-1779.5F));
      homeEnvironment1.getGroundTexture();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(2580, (HomeTexture) null, (-312), (HomeTexture) null, 2947, 11.0F);
      homeEnvironment1.clone();
      homeEnvironment2.setPhotoQuality((-1372));
      assertEquals((-1372), homeEnvironment2.getPhotoQuality());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte) (-56);
      byteArray0[5] = (byte)85;
      byteArray0[6] = (byte)41;
      byteArray0[7] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 19;
      homeEnvironment0.setPhotoWidth(11053224);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.501516696960544
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.clone();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment2.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1021170635140374
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.setVideoWidth(1431);
      homeEnvironment1.setVideoQuality(400);
      homeEnvironment0.setWallsAlpha(2333.65F);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setCeillingLightColor(1431);
      Random.setNextRandom(3792);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertEquals(2333.65F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth((-902));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-902));
      homeEnvironment0.setVideoQuality(400);
      homeEnvironment0.setWallsAlpha(1.0F);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("K$rr~ $<%wLaz72?o*$", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 2911, 2911, 2911);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("K$rr~ $<%wLaz72?o*$", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "KGf*F7&|", propertyChangeListenerProxy0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("K$rr~ $<%wLaz72?o*$", "", "", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(240, int0);
      
      int int1 = homeEnvironment0.getGroundColor();
      assertEquals(2911.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int1);
      assertEquals(2911, homeEnvironment0.getLightColor());
      assertEquals(2911, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("K$rr~ $<%wLaz72?o*$", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 2911, 2911, 2911);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("K$rr~ $<%wLaz72?o*$", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "KGf*F7&|", propertyChangeListenerProxy0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("K$rr~ $<%wLaz72?o*$", "", "", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getDrawingMode();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.246115828400028
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setGroundColor((-551));
      homeEnvironment0.setGroundColor((-312));
      homeEnvironment0.setCeillingLightColor(1160);
      homeEnvironment0.setAllLevelsVisible(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoFrameRate(14);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment4 = homeEnvironment1.clone();
      homeEnvironment4.setLightColor(1160);
      homeEnvironment4.getVideoWidth();
      homeEnvironment4.clone();
      HomeEnvironment.Property.values();
      homeEnvironment1.getSubpartSizeUnderLight();
      int int0 = homeEnvironment3.getPhotoWidth();
      assertEquals(14, homeEnvironment2.getVideoFrameRate());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8192, (HomeTexture) null, 8192, 8192, 8192);
      homeEnvironment0.setPhotoHeight(8192);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "", "", object0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unknown resource ", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, "Unknown resource ", (Object) null, propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(8192, (HomeTexture) null, 1030, 1030, 8192);
      homeEnvironment1.setPhotoHeight(2571);
      assertEquals(2571, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", resourceURLContent0, 33.0F, 33.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("NAME", "", content0, (-1764.6549F), 3664.441F, "Super lass isn't cloneable", true);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.eteks.sweethome3d.model.AspectRatio");
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3368, homeTexture0, (-921), (HomeTexture) null, 3368, (-4.906449F));
      homeEnvironment0.setGroundColor(3368);
      homeEnvironment0.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("K$rr~ $<%wLaz72?o*$", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 2911, 2911, 2911);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("K$rr~ $<%wLaz72?o*$", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "KGf*F7&|", propertyChangeListenerProxy0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("K$rr~ $<%wLaz72?o*$", "", "", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      
      homeEnvironment0.setPhotoHeight(0);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(0, homeEnvironment0.getPhotoHeight());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      MockURL.getFtpExample();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3101, (HomeTexture) null, 12, 123, 1.5F);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(12, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(123, homeEnvironment0.getLightColor());
      assertEquals(3101, homeEnvironment0.getGroundColor());
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ufs~@", resourceURLContent0, 1215, (-129.9F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("+lYK", resourceURLContent0, (-488.0F), 1.3333334F);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1215, homeTexture0, (-945), 1140, (-663.0F));
      assertEquals((-945), homeEnvironment0.getSkyColor());
      
      homeEnvironment0.setSkyColor(1140);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(1140, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0, 0, 0.0F, 0.0F, 0.0F, 0.0F, (-1L), camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "", (Object) null, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setWallsAlpha(1.0F);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.0080594378013763
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.setVideoFrameRate(46);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setWallsAlpha(2824.0F);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      assertEquals(2824.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ufs~@", resourceURLContent0, 1225, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1225, homeTexture0, 1225, homeTexture0, 1306, 1225);
      homeEnvironment0.clone();
      homeEnvironment0.setPhotoQuality(8);
      assertEquals(8, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.4013832922199407
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth((-543));
      homeEnvironment0.setCeillingLightColor((-1));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getPhotoQuality();
      Random.setNextRandom(300);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.setCeillingLightColor(400);
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL(uRL0, "", uRLStreamHandler0);
      homeEnvironment0.setLightColor((-57));
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertFalse(temporaryURLContent0.isJAREntry());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.51739077543507
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.setCeillingLightColor(400);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoHeight();
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoFrameRate(11);
      homeEnvironment0.getPhotoQuality();
      Random.setNextRandom(11);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment0.getVideoWidth();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(752, (HomeTexture) null, 33, 752, 33);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("nsFDOl", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("jQ`1WMNJJ4V'WT+`", (String) null, object0, "jQ`1WMNJJ4V'WT+`");
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera(33, 752, 33, 1261.841F, 2.0F, (-2546.0F));
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "RATIO_2_1", (Object) null, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      Object object2 = new Object();
      propertyChangeEvent1.setPropagationId(object2);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("xDQN6R.W!", propertyChangeListener1);
      propertyChangeEvent1.toString();
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoHeight();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(752);
      homeEnvironment0.getPhotoAspectRatio();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSkyColor((-295));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-295), homeEnvironment0.getSkyColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("^V?_}[G5bh><=", propertyChangeListenerProxy0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Camera camera0 = new Camera(752, 752, 752, (-551.0F), 1.0F, 1723.5554F);
      camera0.setFieldOfView((-551.0F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("^V?_}[G5bh><=", "^V?_}[G5bh><=", "^V?_}[G5bh><=", camera0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(752);
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.setVideoFrameRate(752);
      homeEnvironment0.setLightColor(2423);
      assertEquals(752.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte) (-112);
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)76;
      byteArray0[8] = (byte) (-88);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(320);
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(320, homeEnvironment0.getSkyColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2494), (HomeTexture) null, 0, (HomeTexture) null, (-2494), 1.5F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.listIterator();
      Camera camera0 = new Camera((-2494), (-2494), 1.5F, 0, (-2494), 1.5F);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera0);
      linkedList0.add(camera1);
      homeEnvironment0.getVideoCameraPath();
      linkedList0.removeLast();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2494), int0);
      
      homeEnvironment0.setVideoQuality(0);
      int int1 = homeEnvironment0.getSkyColor();
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2494), homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getVideoQuality());
      assertEquals(0, int1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("K$rr~ $<%wLaz72?o*$", (Content) null, 2.0F, 2.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 2911, 2911, 2911);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("K$rr~ $<%wLaz72?o*$", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "KGf*F7&|", propertyChangeListenerProxy0, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("K$rr~ $<%wLaz72?o*$", "", "", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setLightColor(0);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(752, (HomeTexture) null, 33, 752, 33);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("nsFDOl", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("jQ`1WMNJJ4V'WT+`", (String) null, object0, "jQ`1WMNJJ4V'WT+`");
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Camera camera0 = new Camera(33, 752, 33, 1261.841F, 2.0F, (-2546.0F));
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera0, "RATIO_2_1", (Object) null, object1);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoFrameRate(4);
      homeEnvironment1.clone();
      assertEquals(4, homeEnvironment1.getVideoFrameRate());
      
      homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0750596491686046
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setPhotoWidth(1);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoQuality(1602);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.074287448396404
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setVideoQuality(0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoHeight((-1212));
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoFrameRate(300);
      assertEquals(300, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ufs~@", resourceURLContent0, 1215, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1215, homeTexture0, 1215, homeTexture0, 1306, 1215);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      int int0 = homeEnvironment1.getVideoQuality();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(1306, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(1215, homeEnvironment1.getGroundColor());
      assertEquals(0, int0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getPhotoQuality());
      assertEquals(1215.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(1215, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.4559247841655973
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.setCeillingLightColor(400);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoFrameRate(11);
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(11);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(300, (HomeTexture) null, 400, 46, 400);
      homeEnvironment1.setVideoFrameRate((-2423));
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      System.setCurrentTimeMillis(0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(11.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("jyb2+", "jyb2+", resourceURLContent0, (-1672450034), 752.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1672450034), homeTexture0, 2, homeTexture0, 2, 1.0F);
      homeEnvironment0.getGroundTexture();
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.855868606181163
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-551));
      homeEnvironment0.setVideoFrameRate((-1));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "SKY_TEXTURE", (Object) null, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setGroundColor((-551));
      homeEnvironment0.setGroundColor((-312));
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-180.0F), 1.0F, (-380.0F), (-486.1566F), 1160, 1.0F, (-1230L), camera_Lens0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(list0, "SKY_TEXTURE", camera0, homeEnvironment1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeEvent1, "qeF%u%Z", homeEnvironment2, propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      List<Camera> list1 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list1);
      homeEnvironment0.setPhotoHeight((-1));
      HomeEnvironment.Property.valueOf("SKY_TEXTURE");
      homeEnvironment0.getVideoCameraPath();
      assertEquals((-1), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ufs~@", resourceURLContent0, 1215, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1306, homeTexture0, 320, 320, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.setVideoQuality(3242);
      homeEnvironment1.setVideoQuality((-2715));
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      homeEnvironment1.setSkyTexture(homeTexture1);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(3242, homeEnvironment0.getVideoQuality());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setVideoFrameRate((-1077));
      List<Camera> list0 = new LinkedList<Camera>();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("wH|;/t!|BTWX", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "wH|;/t!|BTWX", "SKY_TEXTURE", propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SKY_TEXTURE", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "SKY_TEXTURE", "wH|;/t!|BTWX", "SKY_TEXTURE");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setGroundColor((-1077));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.clone();
      HomeEnvironment.Property.values();
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setCeillingLightColor(0);
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate(4);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha((-3345.3F));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      assertEquals((-3345.3F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.9954171502194566
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.setSubpartSizeUnderLight((-1));
      homeEnvironment0.setAllLevelsVisible(true);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoQuality((-1));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setWallsAlpha(0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", resourceURLContent0, 33.0F, 33.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("NAME", "", content0, (-1764.6549F), 3664.441F, "Super lass isn't cloneable", true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture1.setCategory(texturesCategory0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.eteks.sweethome3d.model.AspectRatio");
      catalogTexture0.setCategory(texturesCategory1);
      HomeTexture homeTexture3 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-921), homeTexture3, (-921), homeTexture3, 3756, 3756);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-921), homeEnvironment0.getGroundColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-921), homeEnvironment0.getSkyColor());
      assertEquals(3756, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(3756.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", resourceURLContent0, 33.0F, 33.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("NAME", "", content0, (-1764.6549F), 3664.441F, "Super lass isn't cloneable", true);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3368, homeTexture0, (-921), (HomeTexture) null, 3368, (-4.906449F));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-4.906449F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-921), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2017), (HomeTexture) null, (-2017), (-2017), (-476.172F));
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2017), homeEnvironment0.getGroundColor());
      assertEquals((-476.172F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2017), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2017), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", resourceURLContent0, 33.0F, 33.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("NAME", "", content0, (-1764.6549F), 3664.441F, "Super lass isn't cloneable", true);
      Content content1 = homeTexture0.getImage();
      CatalogTexture catalogTexture2 = new CatalogTexture("NAME", "NAME", content1, (-1764.6549F), 408.5701F, "", false);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-551), homeTexture0, (-1993), (-1993), (-551));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      assertNotSame(homeEnvironment3, homeEnvironment2);
      assertEquals(25, homeEnvironment3.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment3.getGroundColor());
      assertTrue(homeEnvironment3.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment3.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment3.getLightColor());
      assertEquals(300, homeEnvironment3.getPhotoHeight());
      assertEquals(13427964, homeEnvironment3.getSkyColor());
      assertEquals(240, homeEnvironment3.getVideoHeight());
      assertEquals(400, homeEnvironment3.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment3.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", resourceURLContent0, 33.0F, 33.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("NAME", "", content0, (-1764.6549F), 3664.441F, "Super lass isn't cloneable", true);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture1.setCategory(texturesCategory0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.eteks.sweethome3d.model.AspectRatio");
      catalogTexture0.setCategory(texturesCategory1);
      resourceURLContent0.getJAREntryName();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3368, homeTexture2, 11053236, homeTexture0, (-1080), (-1764.6549F));
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("com/eteks/sweethome3d/model/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.com/eteks/sweethome3d/model/
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      CatalogTexture catalogTexture0 = new CatalogTexture("Super lass isn't cloneable", "", resourceURLContent0, 0, (-1764.6549F), "NAME", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture1, (-921), homeTexture1, 3368, (-1764.6549F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals((-1764.6549F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(3368, homeEnvironment1.getLightColor());
      assertEquals((-921), homeEnvironment1.getSkyColor());
  }
}
