/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:53:09 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6605272280998884
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (byte)1, 1646);
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis((byte)0);
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean2 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean2 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      ForeignKeyConstraint.toString(list0);
      boolean boolean3 = foreignKeyConstraint0.isReal();
      assertFalse(boolean3 == boolean1);
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getName();
      assertEquals(1646, foreignKeyConstraint0.getDeleteRule());
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "EXISTS", 70, (byte)0);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string1);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(70, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.480877909332734
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-164), (byte)1);
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis((byte)1);
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      assertFalse(boolean0);
      
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean2 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean2 == boolean1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string2);
      
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRule();
      ForeignKeyConstraint.toString(list0);
      assertEquals((-164), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", foreignKeyConstraint0.getDeleteRuleName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)0, (byte)0);
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis((byte)0);
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.isCascadeOnDelete();
      String string1 = "}3Mh2|vhI9$x==8";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "}3Mh2|vhI9$x==8";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "}3Mh2|vhI9$x==8";
      Config config0 = new Config(stringArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("AT", "qP#uuNI-*95TB", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"AT\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5072462647331335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-164), (byte)1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "xCvVZ9|f 2>{,", (byte)1, (byte)46);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals(1, foreignKeyConstraint1.getUpdateRule());
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.077057716007896
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)46, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(46, foreignKeyConstraint0.getUpdateRule());
      assertEquals("N", string2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-2559), (byte)1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(2285L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";LJ9c!R&sD]>yA");
      System.setCurrentTimeMillis((-2559));
      System.setCurrentTimeMillis((byte)0);
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertFalse(boolean1 == boolean0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1840L);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals((-2559), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.178782989513801
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-164), (byte)1);
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis((byte)1);
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      boolean boolean1 = foreignKeyConstraint0.isReal();
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      boolean boolean2 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals((-164), foreignKeyConstraint0.getUpdateRule());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4ij%9Ub+EpWi;", (-1082), 222);
      Config config0 = new Config();
      foreignKeyConstraint0.getChildTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "Sm\"je^I<$/JgQ$BU";
      Config config1 = new Config(stringArray0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", ",?+WNl2(", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.02285770806073
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 2, 3);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.11509159281281
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4if%9UbS+EpW6;", (-3516), (-3516));
      foreignKeyConstraint0.isCascadeOnDelete();
      System.setCurrentTimeMillis((-3516));
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-3516), int0);
      assertEquals((-3516), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.150020577119469
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "N", (byte)46, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string2);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(46, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)46;
      byteArray0[0] = (byte)46;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-1), (byte)46);
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
      assertEquals(46, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.077057716007896
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "T", 2, 145);
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(145, foreignKeyConstraint0.getDeleteRule());
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.825903367331673
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)46, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getName();
      assertEquals(46, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4if%9UbS+EpW6;", (-3516), (-3516));
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertFalse(boolean1 == boolean0);
      
      foreignKeyConstraint0.getName();
      assertEquals((-3516), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-3516), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-3516), (-3516));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "e4if%9Ub+EpWi;", (-3516), (-2708));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "EXISTS", 70, (byte)0);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      assertEquals(70, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)46;
      byteArray0[0] = (byte)46;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-1), (byte)46);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(46, foreignKeyConstraint0.getDeleteRule());
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.150020577119469
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)46, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string2);
      assertEquals(46, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((byte)1);
      System.setCurrentTimeMillis((-2559));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "9c", (-814), (byte)1);
      foreignKeyConstraint0.getParentTable();
      assertEquals((-814), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", foreignKeyConstraint0.getDeleteRuleName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-1357), (byte)46);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.isNullOnDelete();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4if%9UbS+EpW6;", (-3516), (-3516));
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-3516), int0);
      assertEquals((-3516), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      int int0 = (-3516);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4if%9UbS+EpW6;", (-3516), (-3516));
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-3516), (-1612));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(resultSet0).getInt(anyString());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      doReturn((String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyString());
      TableColumn tableColumn0 = null;
      try {
        tableColumn0 = new TableColumn((Table) null, resultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "e4if%9Ub+EpWi;";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4if%9Ub+EpWi;", (-3516), (-3516));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      String string1 = "";
      String string2 = "Sm\"je^I<$/JgQ$BU";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", "\u0000B 8*zihE", "Sm\"je^I<$/JgQ$BU");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \"Sm\"je^I<$/JgQ$BU.meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)59, 2);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      assertEquals(59, foreignKeyConstraint0.getUpdateRule());
      assertTrue(foreignKeyConstraint0.isNullOnDelete());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4if%9Ub+EpWi;", (-3516), (-3516));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "e4if%9Ub+EpWi;", (-3516), 112);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      String string0 = "e4if%9UbS+EpW6;";
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      String string1 = "D+y";
      String string2 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, (-3516), (-3516));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      int int0 = (-3516);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "e4if%9UbS+EpW6;", (-3516), (-3516));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "QbQS]p%4-", 946, (-62));
      foreignKeyConstraint1.addParentColumn((TableColumn) null);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setShortType("-host");
      tableColumn0.removeAParentFKConstraint();
      tableColumn0.setComments("PRESERVE");
      tableColumn0.removeChild((TableColumn) null);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.unlinkParents();
      tableColumn1.unlinkParents();
      tableColumn0.setIsAutoUpdated(true);
      tableColumn0.setType("z]enoO~ni?M]!");
      tableColumn0.removeChild((TableColumn) null);
      tableColumn1.setType("");
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn2, tableColumn2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.removeChild((TableColumn) null);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
