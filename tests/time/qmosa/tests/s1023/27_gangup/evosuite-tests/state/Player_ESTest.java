/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:27:33 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.NotActiveException;
import java.io.ObjectOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.10451946591644
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(2147340491, "Player", 2147340491);
      player0.pack();
      Player player1 = new Player(614, "JmEf?~DHb$A#", "JmEf?~DHb$A#", 2147340491);
      player0.isJoinOK(player1, true);
      player0.setZ(0.2F);
      player1.prev = (Party) player0;
      player1.setDead((-140L));
      System.setCurrentTimeMillis((short)4919);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player1.pack();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("JmEf?~DHb$A#");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.isJoinOK(player1, true);
      player1.getMoney();
      player0.type();
      player0.setConnected(false);
      player0.isConnected();
      player1.gangStrength();
      player0.isJoinOK(player1, false);
      int int0 = player0.type();
      assertEquals(0.2F, player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((-1906), (String) null, (String) null, 4919, 4919);
      player1.getIP();
      boolean boolean0 = player1.isConnected();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertTrue(boolean0);
      assertEquals(4919, player1.getStrength());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(3);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      Party party0 = new Party((-1906));
      player0.head = party0;
      Party party1 = player0.prev;
      party0.prev = player0.head;
      player0.head = null;
      int int0 = Packable.UNDEFINED;
      player0.getStrength();
      player0.pack();
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0, "wGB.w;bU6&v<=,pz", "wGB.w;bU6&v<=,pz", (-1794), 347);
      Player player1 = new Player((-1794), (String) null, (String) null, (-1794));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Player player2 = new Player();
      Player player3 = new Player(0, "", "", (-1794), (-543));
      player1.setJoinOK(player2, false);
      player0.setY(17.4F);
      player0.isJoinOK(player2, true);
      player0.setX(0.2F);
      Player player4 = new Player((short)4919, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", ",U6J,z", (-543));
      player0.setX(0.2F);
      assertEquals(0.2F, player0.getX(), 0.01F);
      
      player1.getName();
      assertEquals((-1794), player1.getPictureId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-2762));
      player0.setX((-2762));
      player0.setZ((-2762));
      player0.setMoney((-2762));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.getX();
      player0.type();
      player0.getStrength();
      player0.getMoney();
      int int0 = player0.gangStrength();
      assertEquals((-2762.0F), player0.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-768));
      byte[] byteArray0 = new byte[2];
      player0.setZ(0.0F);
      byteArray0[0] = (byte) (-93);
      player0.pack();
      byteArray0[1] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setX((byte) (-93));
      float float0 = player0.getX();
      assertEquals((-93.0F), float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]N^bOXP~{^/$w@");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",U6J,z");
      player0.isJoinOK(player0, false);
      Player player1 = new Player((short)4919, "I&5;~YR]saa,P?/lF46", "I&5;~YR]saa,P?/lF46", (-23645), (short)4919);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-44);
      byteArray0[4] = (byte) (-127);
      Player player0 = new Player(34, "", "", (byte) (-127), 927);
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(927, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-127), player0.getPictureId());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0725024227453397
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(0, "wGB.w;bU6&v<=,pz", "wGB.w;bU6&v<=,pz", (-1794), 347);
      Player player1 = new Player(1, "wGB.w;bU6&v<=,pz", "wGB.w;bU6&v<=,pz", (-1794));
      player0.setJoinOK(player1, true);
      player1.setY(1);
      player0.isJoinOK(player1, true);
      player0.prev = (Party) player1;
      player1.setX(347);
      player0.add(player1);
      byte[] byteArray0 = player1.pack();
      player1.unpack(byteArray0);
      Player player2 = new Player(1);
      player1.isJoinOK(player0, true);
      player0.setY(1);
      player2.setZ(0.0F);
      Player player3 = new Player(1);
      player1.pack();
      System.setCurrentTimeMillis((-1448L));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0.0F);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      player0.unpack(dataInputStream1);
      player0.setX((byte) (-93));
      assertEquals((-93.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]N^bOXP~{^/$w@");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Player player0 = new Player();
      Player player1 = new Player((-633));
      player0.setJoinOK(player1, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]N^bOXP~{^/$w@");
      player0.isJoinOK(player1, false);
      Player player2 = new Player(1377, "0.0.0.0", "", 5, 5);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.469736490702675
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(2817, "", (String) null, 2817);
      player0.setDead((-633L), true);
      Player player1 = new Player((-1), "", "", (short)4919, (-1));
      player1.setConnected(true);
      player0.setJoinOK(player1, true);
      player0.setY(2817);
      player1.isJoinOK(player0, true);
      player0.setZ((-633L));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)34;
      player0.unpack(byteArray0);
      player0.isConnected();
      player0.setDead();
      player1.getZ();
      player1.toString();
      player1.gangStrength();
      player0.setConnected(false);
      player1.setDead((long) 2817);
      player0.setDead(0L, true);
      float float0 = player1.getY();
      assertEquals(2817L, player1.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Player player0 = new Player((-2263), (String) null, (String) null, 1, (-1906));
      int int0 = Packable.GAME_STATE;
      int int1 = player0.gangStrength();
      assertEquals((-1906), int1);
      assertEquals(1, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, "", "", 4, 0);
      player0.reset(true);
      Player player1 = new Player(0, "", "M|hQgv\"-KOjHO2G", 0);
      player1.setX(1815.2067F);
      player1.setY(0.0F);
      assertEquals(1815.2067F, player1.getX(), 0.01F);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)78;
      player0.gangStrength();
      Player player2 = new Player();
      int int0 = player2.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Party party0 = new Party((-1918));
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1, "", "O<vJz!$|^<v\"jYy4<K", 1);
      player0.setMoney((-362.8F));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte) (-93);
      byteArray0[2] = (byte) (-104);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Player player0 = new Player((byte) (-93), "", "", 0, 8704);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(8704, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player(2411, "gui.ModuleBrowserDialog$ModuleFilter", (String) null, 720, 1076);
      Party party0 = new Party(116);
      player0.add(party0);
      int int1 = Packable.GAME_STATE;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0.0F);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark(0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream1.readBoolean();
      player0.unpack(dataInputStream1);
      player0.setX((byte) (-93));
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((byte)0, "wGB.w;bU6&v<=,pz", (byte)0);
      player0.getX();
      player0.getName();
      player0.getPictureId();
      Player player1 = new Player(369, ".}:Oj'NBfcOoSgol:0", 4919);
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
      
      player0.pack();
      float float1 = player0.getY();
      assertEquals(0.0F, float1, 0.01F);
      
      Player player2 = new Player((-1474), ".}:Oj'NBfcOoSgol:0", "module.ModuleBrowserDialog$ModuleFilter", 423, (byte)0);
      Player player3 = new Player(4919, "0.0.0.0", (-1794));
      boolean boolean0 = player2.isJoinOK(player3, false);
      assertEquals((-1794), player3.getPictureId());
      assertEquals(0, player2.getStrength());
      assertEquals(".}:Oj'NBfcOoSgol:0", player2.getIP());
      assertFalse(boolean0);
      
      player0.getName();
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "]N^bOXP~{^/$w@";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String string1 = "#";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      Player player0 = new Player();
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(0, "t%@{", "", (-1));
      player0.prev = null;
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((-1L), false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.getPictureId();
      player0.getTimeOfDeath();
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-768));
      byte[] byteArray0 = new byte[2];
      player0.setZ(0.0F);
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)97;
      player0.setZ((byte) (-93));
      player0.unpack(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.setX((-768));
      assertEquals((-93.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4187252478056886
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(5, "state.Player", 5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)64;
      player0.setDead((long) 5);
      player0.setDead();
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      Player player1 = new Player((byte)64);
      player0.setJoinOK(player1, true);
      player0.setMoney(0.0F);
      player0.type();
      player1.reset(true);
      player1.head = (Party) player0;
      Player player2 = new Player(1, "gui.ModuleBrowserDialog$ModuleFilter", (-3661));
      player2.gangStrength();
      player2.unpack(byteArray0);
      player0.isJoinOK(player2, false);
      player2.remove(player0);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      player1.getTimeOfDeath();
      player1.getStrength();
      player0.setDead(0L);
      player1.isConnected();
      player2.setConnected(false);
      player2.unpack(byteArray0);
      player2.getPictureId();
      player1.getStrength();
      player1.reset(true);
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.setZ(1705.3754F);
      Player player1 = new Player(2109);
      Party party0 = player1.head;
      player0.prev = null;
      player0.getZ();
      player0.getPictureId();
      Party party1 = new Party();
      party1.remove(player0);
      party1.getSubparty();
      party1.add(player0);
      party1.next = (Party) player0;
      party1.add(player0);
      player0.add(party1);
      player0.isDead();
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      mockPrintStream0.println(0);
      objectOutputStream0.write(0);
      try { 
        objectOutputStream0.defaultWriteObject();
        fail("Expecting exception: NotActiveException");
      
      } catch(NotActiveException e) {
         //
         // not in call to writeObject
         //
         verifyException("java.io.ObjectOutputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0, "a|xpC]@]h|?Ayrr}", "*F?=p", 0, 0);
      Player player1 = new Player(10, "a|xpC]@]h|?Ayrr}", "*F?=p", 2516, 3);
      player0.remove(player1);
      player0.setDead();
      player0.setConnected(true);
      player0.isConnected();
      player0.toString();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-3832), (String) null, (-3832));
      Player player1 = new Player();
      player0.head = (Party) player1;
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player0.head.toString());
      
      player0.toString();
      assertEquals((-3832), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]N^bOXP~{^/$w@");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Player player0 = new Player();
      Player player1 = new Player(4180);
      player1.setJoinOK(player0, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]N^bOXP~{^/$w@");
      player0.isJoinOK(player1, false);
      Player player2 = new Player(5844, ",U6J,z", "]N^bOXP~{^/$w@", 5844, 2360);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2296, "4AJ$f?) r|/.A.w0", "4AJ$f?) r|/.A.w0", 0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(2817, (String) null, (String) null, 14, (-1977));
      Player player1 = new Player();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Party party0 = new Party((-1906));
      Player player0 = new Player();
      player0.setZ(1091.0F);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      byteArray0[2] = (byte)8;
      player0.unpack(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read(byteArray0);
      player0.reset(false);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.setX((-1906));
      float float0 = player0.getMoney();
      assertEquals((-1906.0F), player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1952296882816973
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-1549), "@6P69+1A", "@6P69+1A", (-1549), (-1549));
      player0.pack();
      player0.setMoney((-1549));
      player0.setDead(2796L, true);
      player0.getStrength();
      player0.getZ();
      player0.setDead(0L);
      player0.getY();
      player0.setDead();
      player0.getTimeOfDeath();
      player0.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(2385);
      player0.setZ((-1906));
      player0.pack();
      player0.pack();
      player0.setX((-1906));
      Player player1 = new Player((-23726), "wlyW+#%.>iVlRZ", (short)4919);
      player1.isJoinOK(player0, false);
      Player player2 = new Player((-874), "864Y(_nO", "", 10);
      player0.getZ();
      assertEquals((-1906.0F), player0.getX(), 0.01F);
      
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]N^bOXP~{^/$w@");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = Packable.GAME_STATE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-23645), "", "+:x:nOZ0Y@?r]oq4:", (-1030), (-23645));
      int int1 = Packable.GAME_STATE;
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-23645), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-1030), player0.getPictureId());
      assertEquals("", player0.getIP());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3042644954097065
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(12, (String) null, (-1038));
      player0.getSubparty();
      Player player1 = new Player(0);
      player1.getSubparty();
      player0.setDead();
      player1.getX();
      player1.getName();
      Player player2 = new Player((short)4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (-1578), 1285);
      player2.getPictureId();
      player2.getX();
      player1.getIP();
      player2.pack();
      Player player3 = new Player((short)4919);
      player3.getY();
      Player player4 = new Player((-1578), (String) null, (String) null, 12, 4329);
      player2.isJoinOK(player0, false);
      assertTrue(player0.isDead());
      
      player2.getName();
      player2.type();
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-23645), "gui.ModuleBrowserDialog$ModuleFilter", "a", 2411, (-338));
      player0.setX((-338));
      assertEquals((-338.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(611, "b8>X'", 611);
      player0.getSubparty();
      player0.getSubparty();
      player0.getX();
      player0.getName();
      player0.getPictureId();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      player0.pack();
      float float1 = player0.getY();
      assertEquals(0.0F, float1, 0.01F);
      
      Player player1 = new Player(567, "b8>X'", "0.0.0.0", 4329, 611);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals("b8>X'", player1.getIP());
      assertFalse(boolean0);
      assertEquals(611, player1.getStrength());
      assertEquals(4329, player1.getPictureId());
      
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-2700), "9", "@S1HA_n@)lV_", 1225);
      int int0 = player0.type();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1225, player0.getPictureId());
      assertEquals(5, int0);
      assertEquals("9", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Player player0 = new Player((-188), "", "", (-7), (byte) (-11));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)91;
      byteArray0[2] = (byte) (-11);
      byteArray0[3] = (byte) (-11);
      player0.unpack(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-11), player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-7), player0.getPictureId());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2411, "#", "a", 2411);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte)4;
      player0.unpack(byteArray0);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-23645), "gui.ModuleBrowserDialog$ModuleFilter", "a", 2411, (-338));
      MockFile mockFile0 = new MockFile("a");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Locale locale0 = Locale.PRC;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "u1";
      objectArray0[1] = (Object) player0;
      objectArray0[2] = (Object) fileSystemHandling1;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "u1", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Party party0 = new Party((-1906));
      Player player0 = new Player();
      Player player1 = new Player();
      float float0 = Player.TOLERANCE;
      String string0 = player1.getName();
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", string0);
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte) (-44);
      byteArray0[4] = (byte) (-127);
      Player player0 = new Player(34, "", "", (byte) (-127), 958);
      byteArray0[5] = (byte) (-44);
      byteArray0[6] = (byte) (-31);
      player0.getMoney();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getMoney();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(958, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(float1, float0, 0.01F);
      assertEquals((-127), player0.getPictureId());
      assertEquals(0.0F, float1, 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-338), "#", "W1+`5lDUsvb\"Gm", (-23645), 5);
      player0.pack();
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-23645), "gui.ModuleBrowserDialog$ModuleFilter", "a", 2411, (-338));
      int int0 = Packable.GAME_STATE;
      int int1 = player0.getStrength();
      assertEquals((-338), int1);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("gui.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(2411, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]N^bOXP~{^/$w@");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player();
      player0.pack();
      System.setCurrentTimeMillis(600L);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(1, "wGB.w;bU6&v<=,pz", (String) null, (-1794));
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(1);
      player0.getZ();
      player0.getY();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(160, (String) null, "", 160, (-8223));
      player0.getName();
      assertEquals((-8223), player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(160, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.8893546963292347
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(0, "wGB.w;bU6&v<=,pz", "wGB.w;bU6&v<=,pz", (-1794), 347);
      Player player1 = new Player(1, "wGB.w;bU6&v<=,pz", "wGB.w;bU6&v<=,pz", (-1794));
      player1.setMoney((short)4919);
      boolean boolean0 = true;
      player0.setJoinOK(player1, true);
      player1.setY(1);
      player0.isJoinOK(player1, true);
      player1.add(player0);
      byte[] byteArray0 = null;
      player1.pack();
      player0.pack();
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(3, "\"x3<o", "G", (-1017));
      boolean boolean0 = player0.isDead();
      assertEquals((-1017), player0.getPictureId());
      assertEquals("\"x3<o", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(461);
      player0.setDead();
      player0.setDead(5825L);
      Player player1 = new Player(1303, "Player", "xt<) 3;Lg!o~l`nk)r", 1303);
      float float0 = Player.TOLERANCE;
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-23645), "gui.ModuleBrowserDialog$ModuleFilter", "a", 2411, (-338));
      player0.setDead(1962L, false);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(0, "wGB.w;bU6&v<=,pz", "wGB.w;bU6&v<=,pz", (-1794), 347);
      Player player1 = new Player((-1794), "wGB.w;bU6&v<=,pz", "wGB.w;bU6&v<=,pz", (-1794));
      player0.setJoinOK(player1, true);
      Player player2 = new Player();
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Party party0 = new Party((-1906));
      Player player0 = new Player();
      player0.setConnected(true);
      int int0 = Packable.GAME_STATE;
      assertEquals(4, int0);
  }
}
