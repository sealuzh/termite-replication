/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:27:36 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5478183549676735
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7kBjC3^W YO>;VL", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream("7kBjC3^W YO>;VL");
      mockPrintStream0.println(0.0);
      mockPrintStream0.print(" elements");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("7kBjC3^W YO>;VL");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedCustomInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(pushbackInputStream0, 1632);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) mockFileInputStream0;
      PrintStream printStream0 = mockPrintStream0.format("7kBjC3^W YO>;VL", objectArray0);
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA;
      printStream0.println(2701);
      Object object1 = new Object();
      printStream0.println((long) 1632);
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(pushbackInputStream0, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream2, mockFileOutputStream0);
      base64Decoder0.ProgressSet = true;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)116;
      mockFileInputStream0.read(byteArray0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream2, printStream0);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9964), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8148788917587951
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7kBjC3^W YO>;VL", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("7kBjC3^W YO>;VL");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("7kBjC3^W YO>;VL");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.setBegin(false);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder2.decodeStream();
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder1.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder1.os = (OutputStream) mockPrintStream0;
      mockPrintStream0.println(0.0F);
      base64Decoder3.decodeStream();
      Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder4.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder2.decodeStream();
      Base64Decoder base64Decoder5 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder4.decodeStream();
      Base64Decoder base64Decoder6 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder6.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder2.decodeStream();
      base64Decoder4.decodeStream();
      base64Decoder5.decodeStream();
      assertEquals((-169997), mockFileInputStream0.available());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6339496240573443
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7kBjC3^W YO>;VL", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      mockPrintStream0.print(" elements");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("7kBjC3^W YO>;VL");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Object[] objectArray0 = new Object[16];
      PrintStream printStream0 = mockPrintStream0.format("a@o.TDD+Dw", objectArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("7kBjC3^W YO>;VL");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.setBegin(true);
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      mockPrintStream0.println(0.0F);
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder2.decodeStream();
      Base64Decoder base64Decoder4 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder4.decodeStream();
      Base64Decoder base64Decoder5 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder5.decodeStream();
      base64Decoder4.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-139977), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5747161745799924
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("7kBjC3^W YO>;VL");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("7kBjC3^W YO>;VL");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Pq^-lrE#T*UsAKV'z");
      mockPrintStream0.println(0.0);
      mockPrintStream0.print(" elements");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("7kBjC3^W YO>;VL");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) mockFileInputStream0;
      PrintStream printStream0 = mockPrintStream0.format("7kBjC3^W YO>;VL", objectArray0);
      Object object0 = new Object();
      Locale locale0 = Locale.JAPAN;
      Object object1 = new Object();
      printStream0.println((long) 1632);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) priorityQueue0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/99_newzgrabber");
      FileSystemHandling.createFolder(evoSuiteFile1);
      printStream0.printf(locale0, ";/t!|BTWX__e4,Oe", objectArray0);
      byte[] byteArray0 = new byte[2];
      objectArray0[0] = (Object) (byte)97;
      byteArray0[1] = (byte)116;
      mockFileInputStream0.read(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-19954), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(557);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.close();
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, pipedOutputStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
