/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:53:16 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.SequenceInputStream;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4102453456579889
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      System.setCurrentTimeMillis(0L);
      archiveScanner0.scan();
      String[] stringArray0 = new String[2];
      archiveScanner0.getNotIncludedDirectories();
      stringArray0[0] = ", does not exist in class ";
      stringArray0[1] = "VgPc";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile0.mkdir();
      improvedFile0.mkdir();
      improvedFile0.mkdir();
      archiveScanner0.scan();
      FileSystemHandling.shouldAllThrowIOExceptions();
      archiveScanner0.processDirectory(improvedFile0, "VgPc", false);
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4187591973137939
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      improvedFile1.delete();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      DirectoryScanner.matchPath("HN789QC", ", does not exist in class ");
      String[] stringArray0 = new String[9];
      stringArray0[0] = ", does not exist in class ";
      stringArray0[1] = ", does not exist in class ";
      stringArray0[2] = ", does not exist in class ";
      stringArray0[3] = ", does not exist in class ";
      stringArray0[4] = ", does not exist in class ";
      stringArray0[5] = ", does not exist in class ";
      stringArray0[6] = ", does not exist in class ";
      stringArray0[7] = ", does not exist in class ";
      stringArray0[8] = ", does not exist in class ";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.basedir = (File) improvedFile0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      improvedFile0.mkdir();
      archiveScanner0.scan();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        archiveScanner0.processDirectory(improvedFile1, "q#?/#I1K~", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/, does not exist in class /tempdir0
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.978563225201054
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ", does not exist in class ");
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte)10;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class /narc0");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(", does not exist in class /tempdir0");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      archiveScanner0.basedir = (File) improvedFile0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1151L));
      System.setCurrentTimeMillis(0L);
      archiveScanner0.scan();
      System.setCurrentTimeMillis(0L);
      try { 
        archiveScanner0.processArchive(improvedFile0, "criticlal.com.lts.application.errors.properties.saving");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, , does not exist in class 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0031703371689167
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class /tempdir0");
      String[] stringArray0 = new String[9];
      stringArray0[0] = ", does not exist in class ";
      stringArray0[1] = ", does not exist in class ";
      stringArray0[2] = ", does not exist in class ";
      stringArray0[3] = ", does not exist in class ";
      stringArray0[4] = ", does not exist in class ";
      stringArray0[5] = ", does not exist in class ";
      stringArray0[6] = ", does not exist in class ";
      stringArray0[7] = ", does not exist in class ";
      stringArray0[8] = ", does not exist in class ";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray1 = new String[9];
      improvedFile1.mkdir();
      archiveScanner0.basedir = (File) improvedFile0;
      stringArray1[0] = ", does not exist in class ";
      ImprovedFile.createTempImprovedFile(", does not exist in class ", ", does not exist in class ", improvedFile0);
      stringArray1[1] = ", does not exist in class ";
      stringArray1[3] = ", does not exist in class ";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.scan();
      System.setCurrentTimeMillis(1431L);
      System.setCurrentTimeMillis(1431L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9377383907805945
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ", does not exist in class ");
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte)10;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class /narc0");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(", does not exist in class /tempdir0");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      archiveScanner0.basedir = (File) improvedFile0;
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1151L));
      System.setCurrentTimeMillis(0L);
      archiveScanner0.scan();
      System.setCurrentTimeMillis(0L);
      archiveScanner0.processArchive(improvedFile0, "criticlal.com.lts.application.errors.properties.saving");
      assertFalse(improvedFile0.isFile());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7993991393748952
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class ");
      improvedFile0.createTempDir();
      FileSystemHandling.createFolder(evoSuiteFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.createFolder(evoSuiteFile0);
      System.setCurrentTimeMillis(0L);
      improvedFile0.toPath();
      System.setCurrentTimeMillis(0L);
      archiveScanner0.scan();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      archiveScanner0.processFile("StA%@v_");
      System.setCurrentTimeMillis((-3055L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.736684818577157
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      improvedFile1.delete();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class /tempdir0");
      String[] stringArray0 = new String[9];
      stringArray0[0] = ", does not exist in class ";
      stringArray0[1] = ", does not exist in class ";
      stringArray0[2] = ", does not exist in class ";
      stringArray0[3] = ", does not exist in class ";
      stringArray0[4] = ", does not exist in class ";
      stringArray0[5] = ", does not exist in class ";
      stringArray0[6] = ", does not exist in class ";
      stringArray0[7] = ", does not exist in class ";
      stringArray0[8] = ", does not exist in class ";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray1 = new String[9];
      improvedFile1.mkdir();
      archiveScanner0.basedir = (File) improvedFile0;
      stringArray1[0] = ", does not exist in class ";
      stringArray1[1] = ", does not exist in class ";
      stringArray1[3] = ", does not exist in class ";
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      archiveScanner0.scan();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      archiveScanner0.processFile("xag$PB5j>]n9xA5");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      archiveScanner0.scan();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      archiveScanner0.processDirectory(improvedFile0, "/Qu5bgx~v#k", true);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3617945128069984
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      System.setCurrentTimeMillis(0L);
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      archiveScanner0.scan();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(507L);
      archiveScanner0.processDirectory(improvedFile0, ", does not exist in class ", false);
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ", does not exist in class ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5538432458126263
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      improvedFile1.delete();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      DirectoryScanner.matchPath("HN789QC", ", does not exist in class ");
      String[] stringArray0 = new String[9];
      stringArray0[0] = ", does not exist in class ";
      stringArray0[1] = ", does not exist in class ";
      stringArray0[2] = ", does not exist in class ";
      stringArray0[3] = ", does not exist in class ";
      stringArray0[4] = ", does not exist in class ";
      stringArray0[5] = ", does not exist in class ";
      stringArray0[6] = ", does not exist in class ";
      stringArray0[7] = ", does not exist in class ";
      stringArray0[8] = ", does not exist in class ";
      archiveScanner0.setIncludes(stringArray0);
      improvedFile1.mkdir();
      archiveScanner0.basedir = (File) improvedFile0;
      improvedFile1.mkdir();
      improvedFile0.mkdir();
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile1, "q#?/#I1K~", false);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8669932428978546
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("|(w1el", "$KL");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile("|(w1el", "dq=d=!B{H@*l,Tl", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner2.scandir(improvedFile0, "dq=d=!B{H@*l,Tl", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")=G.jar", ")=G.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")=G.jar";
      stringArray0[1] = ")=G.jar";
      stringArray0[2] = ")=G.jar";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector0 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.scan();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No basedir set
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ImprovedFile improvedFile1 = new ImprovedFile("");
      ImprovedFile.createTempDirectory(".jar", "/Delete", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, ".jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")=G.jar", ")=G.jar");
      MockFile mockFile1 = new MockFile("&&[ |<G8@fJ(");
      MockFile mockFile2 = new MockFile(")=G.jar", ".JAR");
      mockFile1.setWritable(true, false);
      File file0 = MockFile.createTempFile("_1;`6", ")=G.jar.jar");
      MockFile mockFile3 = new MockFile("&&[ |<G8@fJ(");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte) (-70);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1);
      mockFileOutputStream0.getChannel();
      ImprovedFile.copy(byteArrayInputStream0, mockFileOutputStream0);
      MockFile mockFile4 = new MockFile(file0, "6");
      mockFile3.setWritable(true);
      MockFile mockFile5 = new MockFile("l?");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile1, ")=G.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.731556613448952
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class /tempdir0");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[9];
      archiveScanner0.basedir = (File) improvedFile0;
      stringArray0[0] = ", does not exist in class ";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1151L));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-69);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      archiveScanner0.scan();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis((-2646L));
      try { 
        archiveScanner0.scanArchive(improvedFile0, ", does not exist in class ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error creating temp directory for , does not exist in class 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("NaqORuV#ImN6g$`ky", "Uzv");
      MockFile mockFile1 = new MockFile("NaqORuV#ImN6g$`ky");
      MockFile mockFile2 = new MockFile("NaqORuV#ImN6g$`ky", "o>^+BN@rM i6ViA='");
      mockFile0.toPath();
      mockFile0.setWritable(true, false);
      ImprovedFile.copyFromToDir(mockFile0, mockFile1);
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("The application encountered a critical error and must now terminate.", "The application encountered a critical error and must now terminate.", mockFile1);
      mockFile1.mkdir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile("kxzXZ0$Q[.");
      int int0 = archiveScanner0.toFileType(mockFile1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")=G.jar", ")=G.jar");
      MockFile mockFile1 = new MockFile("&&[ |<G8@fJ(");
      MockFile mockFile2 = new MockFile(")=G.jar", ".JAR");
      ImprovedFile.copyFromToDir(mockFile1, mockFile2);
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile(")=G.jar", "&&[ |<G8@fJ(", mockFile2);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile mockFile3 = new MockFile("hkHi]SF");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".JAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")=G.jar", ")=G.jar");
      MockFile mockFile1 = new MockFile("&&[ |<G8@fJ(");
      MockFile mockFile2 = new MockFile(")=G.jar", ".JAR");
      mockFile1.setWritable(true, true);
      MockFile.createTempFile("_1;`6", ")=G.jar.jar");
      MockFile mockFile3 = new MockFile("&&[ |<G8@fJ(");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte) (-70);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      MockFile mockFile4 = new MockFile(mockFile2, ")=G.jar");
      mockFile4.mkdir();
      MockFile mockFile5 = new MockFile(mockFile4, "&&[ |<G8@fJ(");
      ImprovedFile improvedFile0 = new ImprovedFile("&&[ |<G8@fJ(", "_1;`6");
      System.setCurrentTimeMillis((byte) (-70));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile3, ", does not exist in class 1, does not exist in class .jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063594376997188
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", does not exist in class ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(", does not exist in class ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      System.setCurrentTimeMillis(0L);
      ImprovedFile.createTempImprovedFile(", does not exist in class ", ", does not exist in class ", archiveScanner0.basedir);
      try { 
        archiveScanner0.scan();
       //  fail("Expecting exception: Exception");
       // Unstable assertion
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/, does not exist in class /, does not exist in class 0, does not exist in class 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Dysz+\rj5RNb#^iA/(", "Dysz+\rj5RNb#^iA/(");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      File file0 = archiveScanner0.basedir;
      // Undeclared exception!
      try { 
        archiveScanner1.scanArchive((File) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(" AV", " AV");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner0.setIncludes((String[]) null);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsNotIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.scan();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No basedir set
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")=G.jar", ")=G.jar");
      MockFile mockFile1 = new MockFile("&&[ |<G8@fJ(");
      MockFile mockFile2 = new MockFile(")=G.jar", ".JAR");
      mockFile1.setWritable(true, true);
      File file0 = MockFile.createTempFile("_1;`6", ")=G.jar.jar");
      MockFile mockFile3 = new MockFile("&&[ |<G8@fJ(");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte) (-70);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream(mockFile0);
      mockFileOutputStream1.getChannel();
      ImprovedFile.copy(sequenceInputStream0, mockFileOutputStream0);
      MockFile mockFile4 = new MockFile(mockFile3, ")=G.jar");
      MockFile mockFile5 = new MockFile(mockFile1, ")=G.jar");
      ImprovedFile improvedFile0 = new ImprovedFile("f0eM?C}o", ".JAR.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(mockFile4, ".JAR");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/&&[ |<G8@fJ(/)=G.jar
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      byte[] byteArray0 = new byte[3];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.scandir(improvedFile0, "", true);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile(", does not exist in class .jar");
      MockFile mockFile1 = new MockFile("&&[ |<G8@fJ(");
      MockFile mockFile2 = new MockFile(")=G.jar", ".JAR");
      ImprovedFile.copyFromToDir(mockFile1, mockFile2);
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      try { 
        archiveScanner0.scandir(mockFile0, "9y5pP", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/, does not exist in class .jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")=G.jar", ")=G.jar");
      MockFile mockFile1 = new MockFile("&&[ |<G8@fJ(");
      MockFile mockFile2 = new MockFile(")=G.jar", ".JAR");
      mockFile1.setWritable(true, true);
      MockFile.createTempFile("_1;`6", ")=G.jar.jar");
      MockFile mockFile3 = new MockFile("&&[ |<G8@fJ(");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte) (-70);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile2);
      mockFileOutputStream0.getChannel();
      ImprovedFile.copy(sequenceInputStream0, mockFileOutputStream0);
      MockFile mockFile4 = new MockFile(mockFile2, ", does not exist in class 0C0Ee.jar");
      mockFile1.setWritable(false);
      MockFile mockFile5 = new MockFile(".JAR");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile3, "temp");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(mockFile2);
      //  // Unstable assertion: assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".WAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner0.setIncludes((String[]) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scan();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No basedir set
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")=G.jar", ")=G.jar");
      MockFile mockFile1 = new MockFile("&&[ |<G8@fJ(");
      MockFile mockFile2 = new MockFile(")=G.jar", ".JAR");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte) (-64);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile(".JAR", ")=G.jar", mockFile2);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile2, ")=G.jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.scandir(improvedFile0, "", true);
      System.setCurrentTimeMillis(2);
  }
}
