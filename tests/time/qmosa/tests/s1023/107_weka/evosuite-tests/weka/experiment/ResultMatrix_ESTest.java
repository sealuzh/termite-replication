/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 09:12:13 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.460119287363518
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowAverage(false);
      int[] intArray0 = new int[0];
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.setColOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.m_EnumerateColNames = false;
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[1] = "*";
      stringArray0[2] = " ";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixCSV0.setRowNameWidth(586);
      resultMatrixCSV0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(586, 1);
      resultMatrixPlainText0.globalInfo();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV0.assign(resultMatrixCSV1);
      resultMatrixPlainText0.getRemoveFilterName();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "*";
      stringArray1[1] = ")";
      stringArray1[2] = "*";
      stringArray1[3] = "v";
      stringArray1[4] = "(";
      stringArray1[5] = "(";
      stringArray1[6] = " ";
      stringArray1[7] = ")";
      stringArray1[8] = "6:]_etAr]Q[(J";
      resultMatrixHTML0.m_PrintColNames = true;
      stringArray0[0] = stringArray1;
      resultMatrixPlainText0.getColSize(stringArray0, 97);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.507129807329839
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      resultMatrixGnuPlot0.m_Counts = null;
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      resultMatrixGnuPlot0.m_StdDevPrec = (-1297);
      stringArray0[4] = "*";
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixGnuPlot0.m_ShowAverage = false;
      resultMatrixGnuPlot0.LOSS_STRING = "{~-Ckj+\"N<;^z";
      intArray0[5] = 1;
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.m_RowNameWidth = 2300;
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixPlainText0.getMeanPrec();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 388;
      resultMatrixCSV0.m_ShowAverage = true;
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.trimString("-mean-width <int>", 388);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      resultMatrixGnuPlot0.m_Counts = null;
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = "*";
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 887;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixGnuPlot0.m_ShowAverage = false;
      resultMatrixGnuPlot0.LOSS_STRING = "{~-Ckj+\"N<;^z";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray1 = new int[9][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      resultMatrixCSV0.setSummary(intArray1, intArray1);
      resultMatrixCSV0.getRowCount();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.246601712090598
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setOptions((String[]) null);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.552234634622983
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray1 = new int[1];
      intArray1[0] = 189;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setMeanWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 26);
      int[][] intArray2 = new int[0][9];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray2, intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2794156030221533
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth(0);
      resultMatrixLatex0.LEFT_PARENTHESES = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(0, 1485);
      resultMatrixLatex2.getDefaultPrintColNames();
      resultMatrixLatex2.getEnumerateColNames();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.630271679247496
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth(0);
      resultMatrixLatex0.LEFT_PARENTHESES = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.getColName(2);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.countWidthTipText();
      resultMatrixLatex0.getColCount();
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5436244943666853
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getOptions();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 454);
      resultMatrixPlainText1.getColName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setCountWidth(998);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(2, 877);
      resultMatrixGnuPlot2.getColName(877);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText1);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText1.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, (-1616));
      resultMatrixPlainText0.printRowNamesTipText();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.getVisibleRowCount();
      resultMatrixGnuPlot2.setRowOrder((int[]) null);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanWidth(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot3);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.6597800188866616
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 0;
      resultMatrixHTML0.addHeader((String) null, " ");
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray1[7] = 0;
      intArray1[8] = 0;
      resultMatrixHTML0.setRowOrder(intArray1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2448, 2);
      resultMatrixCSV0.setMeanPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setOptions(stringArray0);
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5045738945000133
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.2548773676201073
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setMeanWidth((-203));
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixGnuPlot0.assign(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getVisibleColCount();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixGnuPlot0.m_PrintRowNames = true;
      resultMatrixGnuPlot0.setPrintColNames(false);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.629231071702376
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder(intArray2);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "{H@*l,TlCZ~47HZ%d@";
      stringArray0[3] = "[";
      stringArray0[4] = " ";
      stringArray0[5] = "*";
      stringArray0[6] = "[";
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.setMeanPrec(2344);
      resultMatrixCSV1.toStringMatrix();
      resultMatrixCSV0.significanceWidthTipText();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.isMean(45);
      resultMatrixHTML0.getSignificanceWidth();
      resultMatrixHTML0.getDefaultRemoveFilterName();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5482221817528665
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringKey();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 2);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray1 = new int[1];
      intArray1[0] = 189;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixGnuPlot1.toStringKey();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4815718492102636
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setCountWidth(64);
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.assign(resultMatrixGnuPlot1);
      resultMatrixGnuPlot1.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.removeFilterNameTipText();
      int int0 = 57;
      resultMatrixGnuPlot0.getSignificance(0, 57);
      resultMatrixPlainText0.printRowNamesTipText();
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText((-4548), (-32));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.404588343401346
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      int[] intArray0 = new int[8];
      int[][] intArray1 = new int[3][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixGnuPlot0.getOptions();
      resultMatrixLatex0.getRowName((-1643));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.6116495982185253
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.padString("v", 0, false);
      resultMatrixSignificance0.setSize(2523, 2);
      resultMatrixSignificance1.padString("W-:rm", (-3003));
      resultMatrixSignificance1.getDisplayName();
      resultMatrixSignificance0.colNameWidthTipText();
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.setMean(2, 2535, 4.5);
      ResultMatrixSignificance resultMatrixSignificance2 = null;
      try {
        resultMatrixSignificance2 = new ResultMatrixSignificance((-667), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.6292373905544504
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.padString("$+?NMbuma`", 0, false);
      resultMatrixSignificance1.setSize(2, 39);
      resultMatrixSignificance0.padString("Indices from sort (ints): ", 981);
      resultMatrixSignificance1.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(0, 2);
      resultMatrixSignificance2.colNameWidthTipText();
      resultMatrixSignificance1.showAverageTipText();
      resultMatrixSignificance1.getDefaultPrintRowNames();
      resultMatrixSignificance1.clearHeader();
      int int0 = (-665);
      resultMatrixSignificance0.setCount(0, 39);
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5506887548186974
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      int[] intArray0 = new int[9];
      intArray0[0] = 17;
      intArray0[1] = 2;
      intArray0[2] = 7;
      intArray0[3] = 2;
      intArray0[4] = 1;
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.showStdDevTipText();
      double double0 = resultMatrixCSV0.getCount(17);
      assertEquals(0.0, double0, 0.01);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.529881130591447
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificanceWidth(2340);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setEnumerateColNames(false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(2340, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.584441056497874
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1, 1);
      String[] stringArray0 = resultMatrixSignificance1.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      // Undeclared exception!
      try { 
        resultMatrixSignificance2.padString((String) null, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9792949754551623
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getVisibleRowCount();
      resultMatrixCSV0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = " ";
      stringArray0[2] = "[";
      resultMatrixPlainText0.m_ColNames = stringArray0;
      resultMatrixPlainText0.m_PrintColNames = false;
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      resultMatrixPlainText0.toStringSummary();
      resultMatrixCSV0.m_MeanPrec = 20;
      boolean boolean0 = resultMatrixGnuPlot0.getShowAverage();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3, 1);
      resultMatrixLatex0.getDisplayName();
      resultMatrixCSV0.setColHidden(155, false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowStdDev(false);
      resultMatrixCSV0.getShowStdDev();
      resultMatrixLatex0.setRowNameWidth(1);
      assertEquals(1, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixSignificance0.meanWidthTipText();
      boolean boolean1 = resultMatrixSignificance0.getDefaultShowStdDev();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.642870649219993
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.padString("v", 0, false);
      resultMatrixSignificance0.setSize(2523, 2);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.padString("Average", 45);
      resultMatrixSignificance2.enumerateColNamesTipText();
      resultMatrixSignificance1.colNameWidthTipText();
      resultMatrixSignificance1.showAverageTipText();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.setMean(1597, (-3268), (-621.01032));
      resultMatrixSignificance0.setCount(0, 2523);
      resultMatrixSignificance2.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.6494536424664963
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      resultMatrixHTML0.toStringMatrix();
      int[] intArray0 = new int[5];
      intArray0[0] = 7;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "*";
      stringArray0[2] = "v";
      stringArray0[3] = "[";
      stringArray0[4] = "\tThe number of decimals after the decimal point for the mean.\n\t(default: ";
      stringArray0[5] = "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n";
      stringArray0[6] = "*";
      stringArray0[7] = "(";
      stringArray0[8] = "";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixCSV0.setMeanPrec(0);
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.toStringMatrix();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.isMean((-1));
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.5212756655813666
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.clear();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 45);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      resultMatrixHTML1.setRowOrder(intArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "f{w$DVw_;7F]B;wy(";
      stringArray0[2] = "v";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixHTML0.setShowAverage(false);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(35, 44);
      resultMatrixCSV1.setMeanPrec(0);
      // Undeclared exception!
      resultMatrixCSV1.toStringMatrix();
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2128189783784378
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      resultMatrixGnuPlot0.m_Counts = null;
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixGnuPlot0.LOSS_STRING = "{~-Ckj+\"N<;^z";
      intArray0[5] = 1;
      intArray0[6] = 10;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      stringArray0[5] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getMean((-611), 6);
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.667412476306582
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.padString(")", 1, true);
      resultMatrixSignificance0.setSize(37, 0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.padString(" ", (-3324));
      resultMatrixSignificance1.enumerateColNamesTipText();
      resultMatrixSignificance0.colNameWidthTipText();
      resultMatrixSignificance1.showAverageTipText();
      resultMatrixSignificance1.getDefaultPrintRowNames();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance2.clearHeader();
      resultMatrixSignificance1.setMean((-1732), 2, (-1300.3));
      ResultMatrixSignificance resultMatrixSignificance3 = new ResultMatrixSignificance(resultMatrixSignificance2);
      resultMatrixSignificance3.setCount(13, 0.0);
      resultMatrixSignificance1.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixSignificance3.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5848740365898246
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 997;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 997);
      resultMatrixSignificance0.getOptions();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(0, 997);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      resultMatrixSignificance1.padString("%c{_'A=ifbM)rf` ", 0, true);
      // Undeclared exception!
      resultMatrixSignificance2.setSize(1, 2523);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.61113513525079
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth(0);
      resultMatrixLatex0.LEFT_PARENTHESES = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.getColName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevPrec = 1;
      resultMatrixGnuPlot0.setOptions(stringArray0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(14);
      resultMatrixGnuPlot0.isStdDev(3);
      assertEquals(14, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.678458155223139
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getRowHidden(1197);
      String[][] stringArray0 = new String[7][0];
      String[] stringArray1 = new String[7];
      stringArray1[0] = "[";
      stringArray1[1] = "[";
      stringArray1[2] = "B*..@Z%Kp)45T8]|`n";
      stringArray1[3] = "[";
      stringArray1[4] = "*";
      stringArray1[5] = "[";
      stringArray1[6] = "]";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[1];
      stringArray2[0] = "]";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[3];
      stringArray3[0] = "*";
      stringArray3[1] = "B*..@Z%Kp)45T8]|`n";
      stringArray3[2] = " ";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "[";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[8];
      stringArray5[0] = "[";
      stringArray5[1] = "v";
      stringArray5[2] = "[";
      stringArray5[3] = "]";
      stringArray5[4] = "[";
      stringArray5[5] = "]";
      stringArray5[6] = "v";
      stringArray5[7] = "*";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[7];
      stringArray6[0] = "]";
      stringArray6[1] = "*";
      stringArray6[2] = "[";
      stringArray6[3] = " ";
      stringArray6[4] = "*";
      stringArray6[5] = "*";
      stringArray6[6] = " ";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[8];
      stringArray7[0] = "]";
      stringArray7[1] = "B*..@Z%Kp)45T8]|`n";
      stringArray7[2] = "*";
      stringArray7[3] = "v";
      stringArray7[4] = ":W8UtgaA<8Q4";
      stringArray7[5] = "B*..@Z%Kp)45T8]|`n";
      stringArray7[6] = "v";
      stringArray7[7] = " ";
      stringArray0[6] = stringArray7;
      int int0 = resultMatrixCSV0.getColSize(stringArray0, 0);
      assertEquals(1, int0);
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5377835170981533
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      resultMatrixHTML0.toStringMatrix();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      int[] intArray0 = new int[9];
      intArray0[0] = 17;
      intArray0[1] = 2;
      intArray0[2] = 7;
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 0;
      resultMatrixLatex0.m_RankingLosses = intArray1;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = "v";
      resultMatrixCSV0.m_ColNames = stringArray0;
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixCSV0.setMeanPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setOptions(resultMatrixCSV0.m_ColNames);
      assertEquals(0, resultMatrixCSV0.getMeanPrec());
      
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3048010204815736
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toString();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot0.setRowNameWidth(1146);
      resultMatrixSignificance0.setMean(977, 2, 2);
      resultMatrixGnuPlot0.getDisplayRow((-2133));
      assertEquals(1146, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixSignificance0.getVisibleColCount();
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.829238032422048
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      int[] intArray0 = new int[8];
      int[][] intArray1 = new int[3][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
      intArray0[0] = 2;
      resultMatrixGnuPlot0.setRowNameWidth(849);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setMean(20, 0, 0.0);
      resultMatrixGnuPlot0.getDisplayRow(0);
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.printColNamesTipText();
      assertEquals(849, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.298384485131918
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.m_RankingDiff = intArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      String[] stringArray0 = new String[0];
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9274829883654556
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = ",";
      stringArray0[1] = "O?";
      stringArray0[2] = "Q 7)9\"(ZF";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName((-2465));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixGnuPlot0.assign(resultMatrixLatex0);
      resultMatrixGnuPlot0.removeFilterName("O?");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.getMean(2755, (-2505));
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.526509749167674
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.getColName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setCountWidth(2349);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot2.getColName(2);
      resultMatrixGnuPlot2.assign(resultMatrixLatex1);
      resultMatrixGnuPlot1.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(924, 2);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 0;
      resultMatrixGnuPlot1.setRowOrder(intArray0);
      assertEquals(2349, resultMatrixGnuPlot1.getCountWidth());
      
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot3);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertTrue(resultMatrixSignificance0.getPrintColNames());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.5482221817528665
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray1 = new int[1];
      intArray1[0] = 189;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.4832884140672715
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixPlainText0.removeFilterNameTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getSignificance(1, 0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.printRowNamesTipText();
      resultMatrixPlainText1.getVisibleRowCount();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 2;
      resultMatrixPlainText1.toStringKey();
      intArray0[4] = 1;
      intArray0[5] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setMeanWidth(1);
      assertEquals(1, resultMatrixGnuPlot1.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance1.getDefaultShowStdDev();
      resultMatrixPlainText1.assign(resultMatrixPlainText0);
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = (-869);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.5500649603556873
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setMeanWidth(14);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixPlainText0.assign(resultMatrixSignificance1);
      assertEquals(40, resultMatrixSignificance1.getDefaultRowNameWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.145918928220185
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.listOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getStdDevPrec();
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.setMeanWidth(1);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixCSV0.m_PrintRowNames = true;
      intArray0[2] = (-1476);
      intArray0[3] = 0;
      intArray0[4] = 2;
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.m_RowNameWidth = (-611);
      resultMatrixPlainText0.setColNameWidth(1);
      resultMatrixPlainText0.m_SignificanceWidth = (-611);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixSignificance0.significanceWidthTipText();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixSignificance0.m_CountWidth = (-611);
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.setShowStdDev(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.m_StdDevPrec = 2;
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.getRevision();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.setStdDev((-2137), 1, 2);
      resultMatrixCSV0.setPrintRowNames(true);
      assertEquals(1, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.6651990693866505
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV1.clear();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 2;
      resultMatrixHTML1.setRowOrder(intArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "*";
      stringArray0[1] = "8RtZlK=";
      stringArray0[2] = "(";
      stringArray0[3] = "[";
      resultMatrixLatex0.setOptions(stringArray0);
      assertFalse(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixCSV1.setMeanPrec(2);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.significanceWidthTipText();
      resultMatrixHTML1.globalInfo();
      resultMatrixHTML1.getOptions();
      boolean boolean0 = resultMatrixHTML1.isMean(2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7886260379670382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.setPrintRowNames(true);
      int[][] intArray0 = new int[5][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 1;
      intArray3[3] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 0;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 2;
      intArray0[4] = intArray5;
      resultMatrixLatex0.m_Significance = intArray0;
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.m_RowNameWidth = 40;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      resultMatrixLatex0.getColHidden(3473);
      assertFalse(resultMatrixLatex0.getPrintColNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.2738566459557727
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixLatex0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.m_CountWidth = 1;
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      resultMatrixLatex0.m_EnumerateColNames = true;
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(50, 2);
      resultMatrixPlainText0.toStringRanking();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixPlainText0.addHeader(" ", "");
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.getMean(1052, 0);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7432373635429266
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.LEFT_PARENTHESES = "-show-avg";
      resultMatrixCSV0.m_EnumerateColNames = true;
      resultMatrixCSV0.addHeader("-show-avg", "-show-avg");
      resultMatrixCSV0.toStringHeader();
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.069097165968439
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(59, 26);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.WIN_STRING = "-print-row-names";
      resultMatrixPlainText0.m_ShowAverage = true;
      String string0 = resultMatrixPlainText0.padString("", (-1985), false);
      assertEquals("", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("</b></td>", "");
      resultMatrixLatex0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(50, 2);
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getRevision();
      double double0 = resultMatrixHTML0.getStdDev(5, (-2054));
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(5, 0);
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(5, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.8332859258894443
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getColName(946);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.getDefaultMeanPrec();
      resultMatrixGnuPlot1.getDefaultEnumerateRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      int int0 = (-688);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(1, (-688));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1;
      resultMatrixGnuPlot0.getMean(0, 10);
      String string0 = resultMatrixGnuPlot0.rowNameWidthTipText();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals("The maximum width for the row names (0 = optimal).", string0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setStdDevWidth(1803);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-1416), (-1416));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-473), (-1995));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.5212756655813666
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      resultMatrixHTML0.toStringMatrix();
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      int[] intArray0 = new int[9];
      intArray0[0] = 17;
      resultMatrixHTML0.setSize(1, 2);
      intArray0[1] = 2;
      intArray0[2] = 7;
      intArray0[3] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = "v";
      resultMatrixCSV0.m_ColNames = stringArray0;
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixCSV0.setMeanPrec(0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.031684571568738
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setRowNameWidth(12);
      resultMatrixSignificance0.setMean(0, (-1), (-1));
      resultMatrixGnuPlot0.getDisplayRow(1303);
      int int0 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(12, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.630144395669346
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.padString(")", 1124, false);
      resultMatrixSignificance1.setSize(2, 2);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      resultMatrixSignificance2.padString("*", 2);
      resultMatrixSignificance2.getDisplayName();
      resultMatrixSignificance0.colNameWidthTipText();
      resultMatrixSignificance1.showAverageTipText();
      resultMatrixSignificance1.getDefaultPrintRowNames();
      resultMatrixSignificance2.clearHeader();
      resultMatrixSignificance0.setMean(1457, 989, 1457);
      resultMatrixSignificance2.setCount(0, 0);
      resultMatrixSignificance0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixSignificance2.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 5;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.getDefaultPrintColNames();
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.530414423511293
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray1 = new int[1];
      intArray1[0] = 189;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.754268262955326
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray1 = new int[1];
      intArray1[0] = 189;
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.0404387273591684
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1255);
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 2507;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 1255;
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixPlainText0.m_ColNameWidth = 2;
      resultMatrixPlainText0.setStdDevWidth(1255);
      resultMatrixPlainText0.m_MeanPrec = 0;
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.m_ColNames = stringArray0;
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.m_ShowStdDev = false;
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(1255, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.478505965478652
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getOptions();
      resultMatrixPlainText0.getColName(62);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(84, 2);
      resultMatrixGnuPlot1.setCountWidth(0);
      resultMatrixGnuPlot1.getColName(3);
      resultMatrixGnuPlot1.assign(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText1.getVisibleRowCount();
      resultMatrixPlainText1.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance((-1), 2);
      resultMatrixPlainText0.printRowNamesTipText();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(1821, 51);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = ",";
      stringArray0[2] = "Q 7)9\"(ZF";
      stringArray0[3] = "Q)/guESiWI.B&";
      stringArray0[4] = "u^ov>0g";
      stringArray0[5] = " & - ";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.171952709824048
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.getColName(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(357);
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance((-1356), 54);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setMeanWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.clear();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.getDefaultShowStdDev();
      resultMatrixPlainText0.assign(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.1563508206547004
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setRowNameWidth(1);
      resultMatrixSignificance0.setMean(1, 0, (-2012.948540371105));
      resultMatrixGnuPlot0.getDisplayRow(26);
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.isAverage(1);
      resultMatrixSignificance0.setStdDevWidth(0);
      assertEquals(1, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.8871876276384962
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowNameWidth(4877);
      resultMatrixHTML0.padString("", 0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.m_PrintColNames = false;
      resultMatrixHTML0.padString("Dataset", 0);
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.3714185719941963
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      resultMatrixGnuPlot0.m_Counts = null;
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixGnuPlot0.LOSS_STRING = "{~-Ckj+\"N<;^z";
      intArray0[5] = 1;
      intArray0[6] = 10;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      
      resultMatrixGnuPlot0.getOptions();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixLatex0.getRowName(2066);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setRowHidden(2541, true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2321);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.0871950491506825
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = ",";
      stringArray0[1] = "O?";
      stringArray0[2] = "Q 7)9\"(ZF";
      stringArray0[3] = "Q)/guESiWI.B&";
      stringArray0[4] = "u^ov>0g";
      stringArray0[5] = " & - ";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setMeanPrec((-3158));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.227351187667384
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixCSV0.clear();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[7];
      resultMatrixGnuPlot2.toArray();
      stringArray0[0] = "";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "*";
      stringArray0[4] = "";
      stringArray0[5] = "*";
      stringArray0[6] = "$\bullet$";
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot3.getDefaultSignificanceWidth();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.6304646405621352
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.m_HeaderKeys = null;
      resultMatrixSignificance0.padString("v", 0, false);
      resultMatrixSignificance0.setSize(2523, 2);
      resultMatrixSignificance1.padString("W-:rm", (-3003));
      resultMatrixSignificance1.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.colNameWidthTipText();
      resultMatrixSignificance2.showAverageTipText();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixSignificance1.clearHeader();
      resultMatrixSignificance0.setMean(2523, 0, 0);
      resultMatrixSignificance2.setCount(2, (-1618.392677517312));
      resultMatrixSignificance0.getDisplayName();
      // Undeclared exception!
      resultMatrixSignificance0.toStringHeader();
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.204702712692897
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.m_StdDevPrec = 2;
      Vector<String> vector0 = new Vector<String>();
      vector0.stream();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.padString("OjHO2GRc[DGwI", 26);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.removeFilterName("OjHO2GRc[DGwI           ");
      resultMatrixHTML0.colNameWidthTipText();
      vector0.add(")");
      resultMatrixHTML0.getDefaultPrintRowNames();
      resultMatrixHTML0.getSummaryTitle(26);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.padString((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.9681239800897954
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 636;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(636, 0);
      resultMatrixSignificance0.LOSS_STRING = "4F|`?ACE`*";
      resultMatrixSignificance0.getSummaryTitle(636);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.874519625657589
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = ",";
      stringArray0[1] = "O?";
      stringArray0[2] = "Q 7)9\"(ZF";
      stringArray0[3] = "Q)/guESiWI.B&";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.enumerateColNamesTipText();
      resultMatrixSignificance0.colNameWidthTipText();
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.setMean((-667), (-742), 4.6);
      resultMatrixSignificance0.setCount((-667), 1);
      resultMatrixSignificance0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.774342220194881
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      resultMatrixLatex0.toStringRanking();
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      int[] intArray0 = new int[9];
      intArray0[0] = 17;
      resultMatrixLatex0.clear();
      intArray0[2] = 7;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowNameWidth((-3076));
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("pI>i");
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString((-1742.95447904559), (-1689));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[1] = "O?";
      stringArray0[2] = "Q 7)9\"(ZF";
      stringArray0[3] = "Q)/guESiWI.B&";
      stringArray0[4] = "u^ov>0g";
      stringArray0[5] = " & - ";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[1];
      int int0 = 2;
      int int1 = 2349;
      resultMatrixGnuPlot0.setStdDevPrec(2349);
      intArray0[0] = 2;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.452577255092425
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2718);
      assertEquals(2718, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 3040);
      Vector<String> vector0 = new Vector<String>();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "(";
      stringArray0[5] = "[";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixCSV0.getStdDevPrec();
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      resultMatrixCSV0.m_Counts = doubleArray0;
      boolean boolean0 = resultMatrixCSV0.isSignificance(102);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5401992098061243
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      String[][] stringArray0 = new String[1][4];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "bR]c]b#";
      stringArray1[1] = "";
      stringArray1[2] = "K7DJ";
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 1);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.556827167900947
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      String[][] stringArray0 = new String[1][4];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "bR]c]b#";
      resultMatrixGnuPlot1.WIN_STRING = "";
      stringArray1[2] = "K7.DJ";
      stringArray0[0] = stringArray1;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(25, 25);
      resultMatrixSignificance0.getColName((-1876));
      resultMatrixSignificance0.setColNameWidth(405);
      resultMatrixSignificance0.stdDevPrecTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-1876), 672);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.8925266766348736
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean boolean0 = false;
      resultMatrixLatex0.setEnumerateRowNames(false);
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 1;
      doubleArray1[5] = (double) 1;
      doubleArray1[6] = (double) 1;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 1;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 1;
      doubleArray4[2] = (double) 1;
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 2;
      doubleArray4[5] = 100.0;
      doubleArray4[6] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = (double) 1;
      doubleArray5[1] = (double) 1;
      doubleArray5[2] = 1930.0;
      doubleArray5[3] = (double) 0;
      doubleArray5[4] = (double) 0;
      doubleArray5[5] = 100.0;
      doubleArray5[6] = (double) 1;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[1];
      doubleArray6[0] = (double) 2;
      doubleArray0[5] = doubleArray6;
      resultMatrixLatex0.m_Mean = doubleArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.7886260379670382
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixSignificance0.m_RowNameWidth = (-1080);
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.getStdDevWidth();
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 2;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = (-2471);
      intArray5[5] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.getDefaultPrintColNames();
      assertTrue(resultMatrixLatex0.getEnumerateRowNames());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0246955538582476
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getRowHidden(1197);
      resultMatrixCSV0.setMean(1197, 1, 0.0);
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getColCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.0794307304192574
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.doubleToString(2470.373717, 0);
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      resultMatrixHTML0.padString("print-col-names", 2, false);
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(2);
      resultMatrixCSV0.m_MeanPrec = (-160);
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.m_RowNameWidth = 0;
      resultMatrixHTML0.m_RowNameWidth = (-89);
      resultMatrixCSV0.setCountWidth((-1574));
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixCSV0.getRemoveFilterName();
      assertEquals(2, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixHTML0.removeFilterName((String) null);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.3824957457329345
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.clear();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7886260379670382
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixHTML0.getRemoveFilterName();
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixHTML0.m_Significance = null;
      resultMatrixHTML0.doubleToString(804.0001434, 0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.861566251045369
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(11);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getStdDev(24, 24);
      assertEquals(11, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.0118066152426777
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setMeanWidth((-914));
      resultMatrixGnuPlot0.setRowNameWidth((-1));
      resultMatrixSignificance0.setMean((-1271), 0, 0);
      int int0 = resultMatrixGnuPlot0.getDisplayRow(1030);
      assertEquals((-1), int0);
      
      int int1 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(0, int1);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.1417070364814808
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixHTML0.setEnumerateColNames(false);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      resultMatrixHTML0.m_MeanPrec = 110;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.776975225092501
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(5, 5);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setRowNameWidth((-1));
      resultMatrixSignificance0.setMean((-1271), 0, 0);
      int int0 = resultMatrixGnuPlot0.getDisplayRow(1030);
      assertEquals((-1), int0);
      
      int int1 = resultMatrixSignificance0.getVisibleColCount();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(5, resultMatrixGnuPlot0.getRowCount());
      assertEquals(5, int1);
      assertEquals(5, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.861566251045369
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(26);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getStdDev(683, 2);
      assertEquals(26, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.6703835295519434
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      resultMatrixGnuPlot0.m_Counts = null;
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(54, 1);
      resultMatrixCSV0.clear();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(30, 2);
      String[] stringArray1 = resultMatrixPlainText0.getOptions();
      resultMatrixPlainText0.getColName((-396));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setOptions(stringArray1);
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
      assertTrue(resultMatrixGnuPlot1.getEnumerateColNames());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.7893851194855697
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[5];
      intArray1[4] = 0;
      intArray1[1] = 0;
      resultMatrixHTML0.clearSummary();
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      resultMatrixGnuPlot0.setColNameWidth(0);
      resultMatrixHTML0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.1731027011044644
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      resultMatrixGnuPlot1.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      resultMatrixGnuPlot1.getDefaultMeanWidth();
      assertEquals(50, resultMatrixGnuPlot1.getColNameWidth());
      
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.5531398802619627
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      String[][] stringArray0 = new String[1][4];
      String[] stringArray1 = new String[3];
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.517852226179471
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getColName(2343);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }
}
