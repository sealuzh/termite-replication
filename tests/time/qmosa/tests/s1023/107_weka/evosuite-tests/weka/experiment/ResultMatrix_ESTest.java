/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:24:38 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7953715770125243
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevWidth = 271;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixHTML0.getSummaryTitle((-1762));
      resultMatrixHTML0.toStringSummary();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixHTML0.addHeader("", "WBVu");
      resultMatrixHTML0.setColHidden(0, false);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2510);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.173173485703436
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.padString("par}\nend{table}\n", 41, false);
      resultMatrixSignificance1.setSize(1946, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.removeFilterName("par}\nend{table}\n");
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(2, 26);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1514;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 26;
      intArray0[5] = 2;
      intArray0[6] = 189;
      resultMatrixGnuPlot0.setRowOrder(intArray0);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      resultMatrixSignificance2.getDefaultShowStdDev();
      resultMatrixGnuPlot1.setColName(41, ",U+A5(BTwC=-");
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.354377750877735
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 3035);
      resultMatrixCSV0.getRowHidden(3035);
      resultMatrixSignificance0.trimString("YPGy#eHE,p'J8Ub`", 1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.7392496504005392
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      int[][] intArray0 = new int[0][5];
      resultMatrixLatex0.m_HeaderValues = null;
      resultMatrixLatex0.setRanking(intArray0);
      resultMatrixLatex0.toString();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5598779174195516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 140);
      resultMatrixLatex0.clearRanking();
      double[][] doubleArray0 = new double[5][5];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 140;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 140;
      doubleArray2[1] = (double) 140;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) 140;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 0;
      doubleArray3[6] = (double) 1;
      doubleArray3[7] = (double) 2;
      doubleArray3[8] = (double) 140;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = 0.0;
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = (double) 140;
      doubleArray4[3] = 0.0;
      doubleArray4[4] = (double) 0;
      doubleArray4[5] = (double) 140;
      doubleArray4[6] = 0.0;
      doubleArray4[7] = (double) 0;
      doubleArray4[8] = (double) 140;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[6];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (double) 140;
      doubleArray5[2] = (-55.39897669);
      doubleArray5[3] = (double) 0;
      doubleArray5[4] = (double) 0;
      doubleArray5[5] = 0.0;
      doubleArray0[4] = doubleArray5;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.177048155965674
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 2;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = (-2471);
      intArray5[5] = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(16, 30);
      resultMatrixGnuPlot0.setColNameWidth(345);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.toStringSummary();
      resultMatrixGnuPlot1.getStdDev((-2471), 2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3655412834920435
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      boolean boolean0 = true;
      resultMatrixHTML0.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      resultMatrixGnuPlot0.padString("(", 2, true);
      intArray0[2] = intArray3;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.142802631263253
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.padString("*", 39, false);
      resultMatrixSignificance1.setSize(39, 25);
      resultMatrixSignificance1.padString("", 0);
      resultMatrixSignificance0.enumerateColNamesTipText();
      resultMatrixSignificance1.colNameWidthTipText();
      resultMatrixSignificance0.showAverageTipText();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.getDefaultPrintRowNames();
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[7];
      intArray1[0] = 47;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 39;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      resultMatrixSignificance2.m_NonSigWins = intArray0;
      resultMatrixSignificance1.clearHeader();
      resultMatrixSignificance2.setMean(1, 26, 26);
      resultMatrixSignificance2.setCount(511, 0.0);
      resultMatrixSignificance0.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1516303900172087
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "v";
      stringArray1[1] = "*";
      stringArray1[2] = "*";
      stringArray1[3] = "v";
      resultMatrixGnuPlot0.TIE_STRING = resultMatrixGnuPlot0.TIE_STRING;
      stringArray1[5] = "v";
      resultMatrixGnuPlot0.LOSS_STRING = "v";
      resultMatrixGnuPlot0.m_SignificanceWidth = (-3743);
      resultMatrixGnuPlot0.m_RowNames = stringArray1;
      resultMatrixGnuPlot0.setColNameWidth((-1512));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringSummary();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.147753642989472
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.padString("v", 0, false);
      resultMatrixSignificance0.setSize(2523, 2);
      resultMatrixSignificance1.padString("W-:rm", (-3003));
      resultMatrixSignificance1.enumerateColNamesTipText();
      resultMatrixSignificance0.colNameWidthTipText();
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixSignificance0.clearHeader();
      int[][] intArray0 = new int[5][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 7;
      intArray1[2] = 2;
      intArray1[3] = 0;
      intArray1[4] = 2354;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 2;
      intArray2[1] = 1484;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray2[4] = 0;
      intArray2[5] = 2344;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 2354;
      intArray0[4] = intArray5;
      // Undeclared exception!
      try { 
        resultMatrixSignificance1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.9666043429873286
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(2352);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      int int0 = 26;
      resultMatrixGnuPlot0.removeFilterName("8034");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(2358, 2348);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(2358, 11);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=4.110297926047929
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      String[] stringArray0 = resultMatrixPlainText0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.padString("(", (-1025), false);
      int int0 = (-1446);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSize(696, (-1446));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1785175320184282
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance1);
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixCSV0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      Vector<String> vector0 = new Vector<String>();
      double double0 = resultMatrixGnuPlot1.getMean((-2881), 95);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=4.167343954996454
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.padString("v", 0, false);
      resultMatrixSignificance0.setSize(2523, 2);
      resultMatrixSignificance1.padString("W-:rm", (-3003));
      resultMatrixSignificance1.enumerateColNamesTipText();
      resultMatrixSignificance1.setShowAverage(false);
      resultMatrixSignificance0.colNameWidthTipText();
      resultMatrixSignificance0.showAverageTipText();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance1.setMean((-3003), (-667), 2523);
      resultMatrixSignificance1.setCount(2, 0.0);
      resultMatrixSignificance1.getDisplayName();
      resultMatrixSignificance1.setMeanPrec(0);
      resultMatrixSignificance0.getSummaryTitle((-2214));
      // Undeclared exception!
      resultMatrixSignificance0.toStringHeader();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.735093869545508
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      resultMatrixHTML0.toArray();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML1.padString("Mb", 26);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Mb                        ";
      resultMatrixHTML1.m_RowNames = stringArray0;
      resultMatrixHTML1.setMeanPrec(0);
      assertEquals(0, resultMatrixHTML1.getMeanPrec());
      
      resultMatrixHTML1.clear();
      resultMatrixHTML0.removeFilterName("_!M>:;");
      resultMatrixHTML1.colNameWidthTipText();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("a.J`C?E%u_3&tI8KZ");
      resultMatrixHTML0.getDefaultPrintRowNames();
      resultMatrixHTML1.getSummaryTitle(37);
      String string0 = resultMatrixHTML0.padString("*", 1);
      assertEquals("*", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3599820626217594
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance1);
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 45);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.setSignificanceWidth(2);
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      
      resultMatrixSignificance0.getRowOrder();
      resultMatrixGnuPlot0.padString(")", 3006);
      resultMatrixSignificance1.stdDevPrecTipText();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixSignificance0.rowNameWidthTipText();
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.614732665944271
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(59, 26);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.WIN_STRING = "-print-row-names";
      resultMatrixPlainText0.m_ShowAverage = true;
      String string0 = resultMatrixPlainText0.padString("", (-1985), false);
      assertEquals("", string0);
      assertEquals(26, resultMatrixPlainText0.getVisibleRowCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("</b></td>", "");
      resultMatrixLatex0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(50, 2);
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getRevision();
      double double0 = resultMatrixHTML0.getStdDev(5, (-2054));
      assertEquals(0.0, double0, 0.01);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean boolean0 = resultMatrixCSV0.getRowHidden((-2067));
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertFalse(boolean0);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.169501957207281
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "v";
      stringArray1[1] = "v";
      stringArray1[2] = "*";
      stringArray1[3] = "v";
      stringArray1[4] = " ";
      stringArray1[5] = "v";
      stringArray1[6] = "v";
      resultMatrixGnuPlot0.m_RowNames = stringArray1;
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 10;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      stringArray0[5] = "";
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.141616203712001
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.padString("v", 0, false);
      resultMatrixSignificance0.setSize(2523, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(54);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getStdDev(1, 2);
      assertEquals(54, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=4.123813825709169
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(18, stringArray0.length);
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      String string0 = resultMatrixSignificance1.padString("par}\nend{table}\n", 41, false);
      assertEquals("par}\nend{table}\n                         ", string0);
      
      resultMatrixSignificance1.setSize(1946, 0);
      resultMatrixSignificance1.padString("(", 1054);
      resultMatrixSignificance1.enumerateColNamesTipText();
      resultMatrixSignificance1.colNameWidthTipText();
      resultMatrixSignificance1.showAverageTipText();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance1.setMean(41, 0, 1044.008652662);
      resultMatrixSignificance1.getDisplayName();
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertTrue(resultMatrixSignificance1.getEnumerateColNames());
      
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance2.getDefaultMeanWidth();
      assertEquals(0, resultMatrixSignificance2.getCountWidth());
      assertEquals(0, resultMatrixSignificance2.getSignificanceWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.4497478505694765
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.doubleToString(2470.373717, 0);
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      resultMatrixHTML0.padString("print-col-names", 2, false);
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(2);
      resultMatrixCSV0.m_MeanPrec = (-160);
      resultMatrixCSV0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRowOrder(resultMatrixHTML0.m_RowOrder);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-60), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=4.035181198927371
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray1 = new int[1];
      intArray1[0] = 189;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      resultMatrixPlainText0.getDefaultMeanWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixGnuPlot0.setColName(0, "");
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=4.016814968491132
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 26;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(59, 26);
      resultMatrixPlainText0.getDefaultCountWidth();
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.padString("", 5, true);
      // Undeclared exception!
      resultMatrixSignificance0.setSize(2717, 26);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.994174587848704
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = ",";
      stringArray0[1] = "O?";
      stringArray0[2] = "Q 7)9\"(ZF";
      stringArray0[1] = "Q)/guESiWI.B&";
      stringArray0[4] = "u^ov>0g";
      stringArray0[5] = " & - ";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[][] doubleArray0 = new double[9][1];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 2;
      doubleArray1[7] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = 0.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[3];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (double) 1;
      doubleArray5[2] = (double) 1;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[7];
      doubleArray6[0] = (double) 2;
      doubleArray6[1] = (double) 1;
      doubleArray6[2] = (double) 2;
      doubleArray6[3] = 0.0;
      doubleArray6[4] = 0.0;
      doubleArray6[5] = 0.0;
      doubleArray6[6] = (double) 2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[6];
      doubleArray7[0] = 0.0;
      doubleArray7[1] = (double) 2;
      doubleArray7[2] = (double) 2;
      doubleArray7[3] = (double) 2;
      doubleArray7[4] = 0.0;
      doubleArray7[5] = 4456.0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[6];
      doubleArray8[0] = (double) 2;
      doubleArray8[1] = 4456.0;
      doubleArray8[2] = (double) 2;
      doubleArray8[3] = (double) 0;
      doubleArray8[4] = (double) 2;
      doubleArray8[5] = 4456.0;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[6];
      doubleArray9[0] = (double) 2;
      doubleArray9[1] = 0.0;
      doubleArray9[2] = 0.0;
      doubleArray9[3] = 4456.0;
      doubleArray9[4] = (double) 2;
      doubleArray9[5] = (double) 2;
      doubleArray0[8] = doubleArray9;
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6434799038299412
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.listOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getStdDevPrec();
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.setMeanWidth(1);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.m_EnumerateColNames = true;
      resultMatrixCSV0.m_PrintRowNames = true;
      intArray0[2] = (-1476);
      intArray0[3] = 0;
      intArray0[4] = 2;
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      resultMatrixPlainText0.m_RowNameWidth = (-611);
      resultMatrixPlainText0.setColNameWidth(1);
      resultMatrixPlainText0.m_SignificanceWidth = (-611);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixSignificance0.significanceWidthTipText();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixSignificance0.m_CountWidth = (-611);
      resultMatrixSignificance0.getVisibleColCount();
      resultMatrixSignificance0.setShowStdDev(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.m_StdDevPrec = 2;
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.getRevision();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.setStdDev((-2137), 1, 2);
      resultMatrixCSV0.setPrintRowNames(true);
      assertEquals(1, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=4.019883475022343
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(2718);
      assertEquals(2718, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.clear();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      resultMatrixPlainText0.removeFilterName(">#-JL#4L6JpRdpL;)");
      stringArray0[2] = " ";
      stringArray0[3] = "]";
      stringArray0[4] = "u^ov>0g";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.significanceWidthTipText();
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.14775414910326
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.padString("v", 0, false);
      resultMatrixSignificance0.setSize(2523, 2);
      assertEquals(2523, resultMatrixSignificance0.getColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(180);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getStdDev(0, 219);
      assertEquals(180, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.959351706749337
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(59, 26);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.WIN_STRING = "-print-row-names";
      resultMatrixPlainText0.m_ShowAverage = true;
      resultMatrixPlainText0.padString("", (-1985), false);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setOptions((String[]) null);
      resultMatrixLatex0.addHeader("</b></td>", "");
      resultMatrixLatex0.toStringSummary();
      assertEquals(0, resultMatrixLatex0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(50, 2);
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.getStdDev(5, (-2054));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(5, 0);
      resultMatrixGnuPlot0.padString("{centering \begin{tabular}{lr", (-1985));
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2393339981643923
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      resultMatrixHTML0.m_EnumerateColNames = false;
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixHTML0.setMeanWidth(4);
      assertEquals(4, resultMatrixHTML0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(2492);
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.getStdDev(276, 0);
      assertEquals(2492, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2886062789553234
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = "(";
      stringArray0[2] = "";
      stringArray0[4] = " ";
      int int0 = resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertEquals(2, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, int0);
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.9791267418756666
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec(1);
      assertEquals(1, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixCSV0.clear();
      Vector<String> vector0 = new Vector<String>();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[2] = ")";
      stringArray0[4] = "v";
      stringArray0[6] = "v";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixCSV0.showAverageTipText();
      assertFalse(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2821325314735317
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintColNames(false);
      resultMatrixLatex0.setPrintRowNames(true);
      int[][] intArray0 = new int[5][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 1;
      intArray3[3] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 0;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 2;
      intArray0[4] = intArray5;
      resultMatrixLatex0.m_Significance = intArray0;
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.m_RowNameWidth = 40;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      
      resultMatrixLatex0.getColHidden(3473);
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=4.0067244810033475
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      int[] intArray1 = new int[1];
      intArray1[0] = 189;
      resultMatrixGnuPlot0.setRowOrder(intArray1);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getDefaultMeanWidth();
      assertTrue(resultMatrixSignificance1.getDefaultEnumerateColNames());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5341096134351178
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1255);
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 2507;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 1255;
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixPlainText0.m_ColNameWidth = 2;
      resultMatrixPlainText0.setStdDevWidth(1255);
      resultMatrixPlainText0.m_MeanPrec = 0;
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.m_ColNames = stringArray0;
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.m_ShowStdDev = false;
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(1255, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.7416512170410927
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "v";
      stringArray1[1] = "v";
      stringArray1[2] = "*";
      stringArray1[3] = "v";
      stringArray1[4] = " ";
      stringArray1[5] = "v";
      resultMatrixGnuPlot0.m_RowNames = stringArray1;
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[5] = 1;
      intArray0[6] = 10;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      stringArray0[5] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      resultMatrixGnuPlot0.removeFilterNameTipText();
      resultMatrixGnuPlot0.headerKeys();
      assertFalse(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.473531066953619
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getRowHidden(1197);
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.382137122587991
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowNameWidth(4877);
      resultMatrixHTML0.padString("", 0);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.m_PrintColNames = false;
      resultMatrixHTML0.padString("Dataset", 0);
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.6939623533702663
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixHTML0.setMeanWidth(4);
      resultMatrixHTML0.m_StdDevWidth = 276;
      resultMatrixHTML0.LOSS_STRING = "";
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultStdDevWidth();
      resultMatrixHTML0.meanPrecTipText();
      assertEquals(4, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5784878626239767
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowHidden(47, false);
      resultMatrixPlainText0.isAverage(39);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(47, 0);
      resultMatrixLatex0.addHeader("GoZxXqZ?b7@<T/o2[S", "PGDB/NAm`?'ZP<-=~r");
      double[][] doubleArray0 = new double[4][9];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 2;
      doubleArray2[4] = (double) 2;
      doubleArray2[5] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[3];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 47;
      doubleArray4[2] = (double) 1;
      doubleArray4[3] = (double) 1;
      doubleArray4[4] = (double) 0;
      doubleArray4[5] = (double) 1;
      doubleArray4[6] = (double) 39;
      doubleArray0[3] = doubleArray4;
      resultMatrixLatex0.m_Mean = doubleArray0;
      resultMatrixLatex0.setSignificanceWidth(47);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertEquals(47, resultMatrixLatex0.getSignificanceWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.6274781040256934
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Integer> vector0 = new Vector<Integer>();
      double[][] doubleArray0 = new double[5][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = (double) 2;
      doubleArray4[3] = (double) 0;
      doubleArray4[4] = (double) 1;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[6];
      doubleArray5[0] = (double) 1;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (double) 2;
      doubleArray5[3] = (double) 0;
      doubleArray5[4] = (double) 0;
      doubleArray5[5] = (double) 2;
      doubleArray0[4] = doubleArray5;
      resultMatrixHTML0.m_Mean = doubleArray0;
      resultMatrixHTML0.m_PrintRowNames = true;
      resultMatrixHTML0.m_HeaderValues = vector0;
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixHTML0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.stdDevWidthTipText();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixHTML0.getDefaultCountWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.7030949956510963
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.m_StdDevPrec = 2;
      Vector<String> vector0 = new Vector<String>();
      vector0.stream();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.toArray();
      resultMatrixHTML0.padString("OjHO2GRc[DGwI", 26);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.removeFilterName("OjHO2GRc[DGwI           ");
      resultMatrixHTML0.colNameWidthTipText();
      vector0.add(")");
      resultMatrixHTML0.getDefaultPrintRowNames();
      resultMatrixHTML0.getSummaryTitle(26);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.padString((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.22701448677876
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[6][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 2;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = (-2471);
      intArray5[5] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 0;
      intArray6[1] = (-906);
      intArray6[2] = (-869);
      intArray0[5] = intArray6;
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.522183681390948
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.setRowNameWidth((-1));
      resultMatrixSignificance0.setMean((-1271), 0, 0);
      int int0 = resultMatrixGnuPlot0.getDisplayRow(1030);
      assertEquals((-1), int0);
      
      int int1 = resultMatrixSignificance0.getVisibleColCount();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, int1);
      assertFalse(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.removeFilterName("pI>i");
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString((-1742.95447904559), (-1689));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.6848891509361414
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 2);
      resultMatrixCSV0.WIN_STRING = "";
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 334;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.LOSS_STRING = "*";
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.assign(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=4.002755712681831
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      resultMatrixPlainText0.printRowNamesTipText();
      resultMatrixPlainText0.getVisibleRowCount();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1797);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.7523649649374557
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.m_CountWidth = 1;
      resultMatrixGnuPlot0.getDefaultMeanPrec();
      resultMatrixLatex0.m_EnumerateColNames = true;
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(50, 2);
      resultMatrixPlainText0.toStringRanking();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.getMean(1052, 0);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=4.0162600742797006
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[2] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDefaultPrintColNames();
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.034175113420582
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot1);
      String[][] stringArray0 = new String[1][4];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "bR]c]b#";
      stringArray1[1] = "";
      stringArray1[2] = "K7DJ";
      stringArray0[0] = stringArray1;
      int int0 = resultMatrixPlainText0.getColSize(stringArray0, 1);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.338205060943012
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(25, 25);
      resultMatrixSignificance0.getColName((-1876));
      resultMatrixSignificance0.setColNameWidth(405);
      resultMatrixSignificance0.stdDevPrecTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-1876), 672);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=4.054061516118526
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      resultMatrixPlainText0.getOptions();
      intArray0[2] = 1;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.getColName(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.getColName(2);
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_ColNameWidth = 26;
      resultMatrixGnuPlot0.removeFilterName("");
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.getVisibleRowCount();
      resultMatrixGnuPlot0.m_ColNameWidth = 0;
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixGnuPlot0.getSignificance(0, 1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixCSV0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixHTML0.stdDevPrecTipText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.2824531984608654
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixSignificance0.m_RowNameWidth = (-1080);
      resultMatrixSignificance0.toStringKey();
      int int0 = resultMatrixSignificance0.getStdDevWidth();
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.575298499014299
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.doubleToString(2470.373717, 0);
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      resultMatrixHTML0.padString("print-col-names", 2, false);
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 0;
      resultMatrixHTML0.m_RowOrder = intArray0;
      resultMatrixHTML0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(2);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      resultMatrixCSV0.m_MeanPrec = (-160);
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.m_RowNameWidth = 0;
      resultMatrixHTML0.m_RowNameWidth = (-89);
      resultMatrixCSV0.setCountWidth((-1574));
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixCSV0.getRemoveFilterName();
      resultMatrixHTML0.setShowStdDev(false);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.8651454324916985
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[4];
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.m_StdDevWidth = 0;
      stringArray0[0] = " ";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(95, 3040);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.284560997316632
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixHTML0.getRemoveFilterName();
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixHTML0.m_Significance = null;
      resultMatrixHTML0.doubleToString(804.0001434, 0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.globalInfo();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.9791267418756666
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixPlainText0.setColNameWidth(1);
      assertEquals(1, resultMatrixPlainText0.getColNameWidth());
      
      resultMatrixCSV0.setStdDevPrec(1);
      resultMatrixCSV0.clear();
      Vector<String> vector0 = new Vector<String>();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = " ";
      stringArray0[2] = ")";
      stringArray0[4] = "v";
      stringArray0[6] = "v";
      ResultMatrixGnuPlot.main(stringArray0);
      resultMatrixCSV0.getStdDevPrec();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.17876392094377
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      stringArray0[1] = "v";
      stringArray0[2] = "*";
      stringArray0[3] = "v";
      stringArray0[4] = " ";
      stringArray0[5] = "v";
      stringArray0[6] = "v";
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      int[] intArray0 = new int[8];
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 10;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      double double0 = resultMatrixGnuPlot0.getMean(1, 0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.6794767516724245
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "v";
      stringArray1[1] = "v";
      stringArray1[2] = "*";
      stringArray1[3] = "v";
      stringArray1[4] = " ";
      stringArray1[5] = "v";
      stringArray1[6] = "v";
      resultMatrixGnuPlot0.m_RowNames = stringArray1;
      int[] intArray0 = new int[8];
      resultMatrixGnuPlot0.setRowNameWidth((-1249));
      intArray0[0] = 2;
      intArray0[1] = 849;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 10;
      intArray0[7] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      stringArray0[5] = "";
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2427336819246153
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixHTML0.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[4][5];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      resultMatrixGnuPlot0.setColNameWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.8825918863482576
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n";
      stringArray0[1] = "F";
      ResultMatrixCSV.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }
}
