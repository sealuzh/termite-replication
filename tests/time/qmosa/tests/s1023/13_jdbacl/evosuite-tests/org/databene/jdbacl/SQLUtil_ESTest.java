/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:54:42 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ", calendar);";
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, ", calendar);");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((DBColumn[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8425367013444882
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = SQLUtil.normalize("1l]XepSUH&;,r0F", true);
      assertEquals("1l ] XepSUH & ;, r0F", string0);
      
      SQLUtil.parseColumnTypeAndSize("1l  ] XepSUH & ;, r0F");
      DBCatalog dBCatalog0 = new DBCatalog();
      String string1 = SQLUtil.ownerDotComponent(dBCatalog0);
      assertEquals("null", string1);
      
      String[] stringArray0 = new String[0];
      String string2 = SQLUtil.join("-#k&B-M9l", "1l  ] XepSUH & ;, r0F", stringArray0, "1l  ] XepSUH & ;, r0F", "insert9z't`&p}+~&qyj;m", stringArray0);
      assertEquals("-#k&B-M9l join 1l  ] XepSUH & ;, r0F as insert9z't`&p}+~&qyj;m on ", string2);
      
      DBCatalog dBCatalog1 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("null");
      TableContainer tableContainer1 = new TableContainer("-#k&B-M9l");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1l]XepSUH&;,r0F");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", (DBSchema) null);
      Random.setNextRandom(589);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string3 = SQLUtil.typeAndName(tableContainer0);
      assertEquals("container null", string3);
      
      DBDataType dBDataType0 = DBDataType.getInstance(589, "alter index");
      Integer integer0 = new Integer(589);
      Integer.sum(589, (-2004666357));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("-#k&B-M9l", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.setName("insert");
      String string4 = SQLUtil.renderValue(defaultDBColumn0);
      assertEquals("insert : ALTER INDEX(589)", string4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ep8~r<;*|${u");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("ep8~r<;*|${u");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("ep8~r<;*|${u", dBSchema0);
      defaultDBTable1.addReferrer(defaultDBTable0);
      DBDataType.getInstance(222, ";B~!H{DpdK[el3;]");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable(";B~!H{DpdK[el3;]", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable1, "ep8~r<;*|${u", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("XJ[LQ]6fjtjum", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(";B~!H{DpdK[el3;]", dBTable0, (-3934), "deleteuser.hZome");
      DBDataType.getInstance(420, "HQ!jP#M#Barqd1");
      DefaultDBColumn defaultDBColumn1 = null;
      try {
        defaultDBColumn1 = new DefaultDBColumn("&{O0AH15!", defaultDBTable0, 420, "(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "ep8~r<;*|${u";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(373, "Jyu|)g6T(1\"Xvk3U");
      Integer integer0 = new Integer(248);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("ep8~r<;*|${u", defaultDBTable0, dBDataType0, integer0, integer0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFileWriter mockFileWriter0 = new MockFileWriter(" DEFAULT ", false);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockFileWriter0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedWriter0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "Jyu|)g6T(1\"Xvk3U", objectArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ep8~r<;*|${u");
      Boolean.valueOf("-");
      Character character0 = new Character('9');
      SQLUtil.renderValue(character0);
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      DBDataType dBDataType0 = DBDataType.getInstance((-1792841312), "'9'");
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("ep8~r<;*|${u", defaultDBTable0, dBDataType0, integer0);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      String string0 = "execute";
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn("execute");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'execute' not found in table 'ep8~r<;*|${u'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2599739490670663
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "update";
      stringArray0[1] = "update";
      stringArray0[2] = "update";
      stringArray0[3] = "H}zV/";
      stringArray0[4] = "update";
      stringArray0[5] = "update";
      stringArray0[6] = "Q3~&75K(+wSk,)B^e";
      String string0 = SQLUtil.join("H}zV/", "update", stringArray0, "select-", "INSERT INTO ", stringArray0);
      assertEquals("H}zV/ join select- as INSERT INTO  on update.update = INSERT INTO .update and update.update = INSERT INTO .update and update.update = INSERT INTO .update and update.H}zV/ = INSERT INTO .H}zV/ and update.update = INSERT INTO .update and update.update = INSERT INTO .update and update.Q3~&75K(+wSk,)B^e = INSERT INTO .Q3~&75K(+wSk,)B^e", string0);
      
      System.setCurrentTimeMillis(0L);
      String string1 = SQLUtil.renderColumnListWithTableName("rename", stringArray0);
      assertEquals("rename.update, rename.update, rename.update, rename.H}zV/, rename.update, rename.update, rename.Q3~&75K(+wSk,)B^e", string1);
      
      String string2 = SQLUtil.normalize(" _A|k)6ti5", false);
      assertEquals("_A | k) 6ti5", string2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = SQLUtil.normalize("/*", false);
      assertEquals("/*", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("JWyAph?-/A~+JkZc", (DBSchema) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JWyAph?-/A~+JkZc";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "JWyAph?-/A~+JkZc", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("alter materialized view");
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0F);
      stringBuilder1.append((double) 0.0F);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1);
      assertEquals("alter materialized view0.00.0CONSTRAINT JWyAph?-/A~+JkZc ", stringBuilder1.toString());
      
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (JWyAph?-/A~+JkZc)", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ep8~r<;*|${u");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("ep8~r<;*|${u");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("ep8~r<;*|${u", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance(222, ";B~!H{DpdK[el3;]");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.max((-467), (-109));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("ep8~r<;*|${u", defaultDBTable1, dBDataType0, integer0, integer0);
      String string0 = SQLUtil.normalize("ep8~r<;*|${u", true);
      assertEquals("ep8 ~ r < ; * | $ { u", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9809787598716668
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select intorename");
      TableContainer tableContainer0 = new TableContainer("select intorename");
      tableContainer0.getSchema();
      boolean boolean0 = SQLUtil.isDML("select intorename");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("drop tablenclob");
      assertTrue(boolean1);
      assertNotNull(boolean1);
      
      Boolean boolean2 = SQLUtil.mutatesStructure("drop tablenclob");
      assertTrue(boolean2.equals((Object)boolean0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("JWyAph?-/A~+JkZc", (DBSchema) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JWyAph?-/A~+JkZc";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "JWyAph?-/A~+JkZc", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("alter materialized view");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0F);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1);
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("XSLAE.D");
      DBDataType dBDataType0 = DBDataType.getInstance(3089, "+dv`Ch!K4cYR,");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.max((-1), 3803);
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.ABORT;
      Integer integer3 = RawTransaction.COMMIT;
      Integer integer4 = RawTransaction.ABORT;
      Integer integer5 = RawTransaction.LOCK_ESCALATE;
      Integer integer6 = new Integer((-2177));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("JWyAph?-/A~+JkZc", defaultDBTable0, dBDataType0, integer5, integer6);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      linkedList0.add((DBColumn) defaultDBColumn0);
      linkedList0.offer(defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("JWyAph?-/A~+JkZc", (DBSchema) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JWyAph?-/A~+JkZc";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "JWyAph?-/A~+JkZc", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("alter materialized view");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("CONSTRAINT JWyAph?-/A~+JkZc UNIQUE (JWyAph?-/A~+JkZc)", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.isQuery("select intorename");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 42;
      PipedReader pipedReader0 = new PipedReader(42);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "(p2CFf4t";
      String string1 = "";
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(42);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedReader0.connect(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = "left";
      DBDataType.getInstance(47, "left");
      TableContainer tableContainer0 = new TableContainer((String) null);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.322122307526584
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select intorename");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "XyG;?w3e+JfCt,t=n");
      SQLUtil.mutatesDataOrStructure("select intorename");
      SQLUtil.removeComments("select intorename");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.127614099953585
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SQLUtil.mutatesStructure("rename");
      Random.setNextRandom((-62504053));
      SQLUtil.isDML("rename");
      char[] charArray0 = new char[3];
      charArray0[0] = '(';
      charArray0[1] = 'M';
      charArray0[2] = '|';
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("=04o1n/cJ!uiX%w==G", (String[]) null, "=04o1n/cJ!uiX%w==G", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ep8~r<;*|${u");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.chars();
      stringBuilder0.reverse();
      Random.setNextRandom((-3));
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "ep8~r<;*|${u";
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("ep8~r<;*|${u", stringArray0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("ep8~r<;*|${u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(42);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedReader0.connect(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      DBDataType dBDataType0 = DBDataType.getInstance(47, "left");
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainer tableContainer1 = new TableContainer((String) null);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("40[{Ai1h%\"|o#XFR4", (DBSchema) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(">o2SaR{J#DY", defaultDBTable0, 42, ")");
      defaultDBColumn0.setType(dBDataType0);
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4677479993462206
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis(429L);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "select intoiy^4a(=y&#=bsfi0";
      stringArray0[1] = "select intoiy^4a(=y&#=bsfi0";
      stringArray0[2] = "select intoiy^4a(=y&#=bsfi0";
      stringArray0[3] = "select intoiy^4a(=y&#=bsfi0";
      stringArray0[4] = "Cp1251";
      stringArray0[5] = "select intoiy^4a(=y&#=bsfi0";
      stringArray0[6] = "select intoiy^4a(=y&#=bsfi0";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.mutatesDataOrStructure("select into[ydg;+wd3lnzvdui*cb");
      SQLUtil.isDDL("select intoiy^4a(=y&#=bsfi0");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("select intoiy^4a(=y&#=bsfi0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: select intoiy^4a(=y&#=bsfi0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBDataType.getInstance((-115815716), "ml B'_S3CK");
      TableContainer tableContainer0 = new TableContainer("J`hIU@*k");
      TableContainer tableContainer1 = new TableContainer("ml B'_S3CK");
      TableContainer tableContainer2 = new TableContainer((String) null, tableContainer0);
      tableContainer1.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("f(DI#D", (DBSchema) null);
      String string0 = "r0q<1ZaC";
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn(",Mn0*9D;$6L}lL_Jl", defaultDBTable0, (-95213021), "f(DI#D");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: f(DI#D
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBDataType dBDataType0 = DBDataType.getInstance((-1098565737), ",");
      TableContainer tableContainer0 = new TableContainer(",");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",");
      TableContainer tableContainer1 = new TableContainer("left");
      TableContainer tableContainer2 = new TableContainer("drop materialized view", tableContainer1);
      tableContainer2.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop indexnclob", (DBSchema) null);
      tableContainer1.toString();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop materialized view", defaultDBTable0, 738, "drop materialized view");
      tableContainer2.equals(defaultDBColumn0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("r0q<1ZaC", defaultDBTable0, (-654), "%EFH|zi=aAEg:");
      defaultDBColumn1.setType(dBDataType0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("^g\"1hz4%", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumn(defaultDBColumn2);
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("%EFH|zi=aAEg:", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBDataType.getInstance(3089, "9z't`&p}+~&qyj;m");
      Integer.max(34, 1014);
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.ABORT;
      Integer integer2 = RawTransaction.COMMIT;
      Integer integer3 = RawTransaction.ABORT;
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8872385926133712
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      stringBuilder1.insert(3, "UNIQUE ");
      stringBuilder1.chars();
      String string0 = "E6W@_Bl7Pk2@\\Hla.o^";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--";
      SQLUtil.leftJoin("UNIQUE ", stringArray0, "org.h2.value.ValueTime", "--", stringArray0);
      SQLUtil.innerJoin(";8Fpu-yfeK", stringArray0, ";8Fpu-yfeK", (String) null, stringArray0);
      VersionNumber.valueOf(";8Fpu-yfeK as null on ;8Fpu-yfeK.-- = null.--");
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9459959973559475
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.insert(3, "UNIQUE ");
      stringBuilder1.chars();
      StringBuilder stringBuilder3 = stringBuilder2.delete(3, 3681);
      stringBuilder3.codePoints();
      stringBuilder1.reverse();
      SQLUtil.addOptionalCondition((String) null, stringBuilder3);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = "UNIQUE ";
      stringArray0[2] = "UNIQUE ";
      stringArray0[3] = "UNIQUE ";
      stringArray0[4] = null;
      SQLUtil.isDDL("UNIQUE ");
      String[] stringArray1 = new String[9];
      stringArray1[0] = "UNIQUE ";
      stringArray1[1] = "renameinsert";
      stringArray1[2] = "renameinsert";
      stringArray1[3] = "UNIQUE ";
      stringArray1[4] = "!/>nG";
      stringArray1[5] = "renameinsert";
      stringArray1[6] = "!/>nG";
      stringArray1[7] = "UNIQUE ";
      stringArray1[8] = "!/>nG";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("eq8", stringArray1, "UNIQUE ", "renameinsert", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = " I]<oh0m";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("|h*#XA^", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchemas();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select intorename");
      dBCatalog0.getSchema("yG;?w3e+Jf,t=n");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      Boolean.valueOf(" REFERENCES ");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "create unique index]($dn";
      stringArray0[1] = "create unique index]($dn";
      stringArray0[2] = "alter index]($dn";
      stringArray0[3] = " REFERENCES ";
      stringArray0[4] = "create unique index]($dn";
      stringArray0[5] = "select intorename";
      stringArray0[6] = "yG;?w3e+Jf,t=n";
      stringArray0[7] = "create unique index]($dn";
      stringArray0[8] = "select intorename";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create unique index]($dn", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"create unique index]($dn\" PRIMARY KEY (create unique index]($dn, create unique index]($dn, alter index]($dn,  REFERENCES , create unique index]($dn, select intorename, yG;?w3e+Jf,t=n, create unique index]($dn, select intorename)", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1024101618981637
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SQLUtil.removeComments("S|ye]cn,");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("S|ye]cn,", (DBSchema) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|h*#XA^";
      stringArray0[1] = "S|ye]cn,";
      stringArray0[2] = "|h*#XA^";
      stringArray0[3] = "|h*#XA^";
      stringArray0[4] = "8000003b-00d0-fd77-3ed8-000a0a0b1900";
      String string0 = SQLUtil.join("exec's=\"?", "exec's=\"?", stringArray0, "8000003b-00d0-fd77-3ed8-000a0a0b1900", "insert9z't`&p}+~&qyj;m", stringArray0);
      assertEquals("exec's=\"? join 8000003b-00d0-fd77-3ed8-000a0a0b1900 as insert9z't`&p}+~&qyj;m on exec's=\"?.|h*#XA^ = insert9z't`&p}+~&qyj;m.|h*#XA^ and exec's=\"?.S|ye]cn, = insert9z't`&p}+~&qyj;m.S|ye]cn, and exec's=\"?.|h*#XA^ = insert9z't`&p}+~&qyj;m.|h*#XA^ and exec's=\"?.|h*#XA^ = insert9z't`&p}+~&qyj;m.|h*#XA^ and exec's=\"?.8000003b-00d0-fd77-3ed8-000a0a0b1900 = insert9z't`&p}+~&qyj;m.8000003b-00d0-fd77-3ed8-000a0a0b1900", string0);
      
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("8000003b-00d0-fd77-3ed8-000a0a0b1900");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "S|ye]cn,", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (|h*#XA^, S|ye]cn,, |h*#XA^, |h*#XA^, 8000003b-00d0-fd77-3ed8-000a0a0b1900)", string1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "]($Dn";
      TableContainer tableContainer0 = new TableContainer("^g\"1hz4%e|^XY5");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("]($Dn");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.max((-109), 443);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop tableselect intorename", defaultDBTable0, (DBDataType) null, integer0, integer0);
      String string0 = SQLUtil.normalize("]($Dn", false);
      assertEquals("] ($ Dn", string0);
      
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("^g\"1hz4%e|^XY5");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      String string1 = SQLUtil.normalize("J,AZ/5?.mT\"G41", true);
      assertEquals("J, AZ / 5 ?.mT \"G41\"", string1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[3];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = ":hnNK2a##V;D<CI?";
      stringArray0[1] = "2-8";
      stringArray0[2] = "1|wODYpCj!D>";
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("UNIQUE ");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.insert(3, "UNIQUE ");
      stringBuilder1.chars();
      StringBuilder stringBuilder3 = stringBuilder2.delete(3, 7);
      stringBuilder3.codePoints();
      StringBuilder stringBuilder4 = stringBuilder1.reverse();
      SQLUtil.addOptionalCondition((String) null, stringBuilder3);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        stringBuilder4.append((CharSequence) "UNIQUE ", (-904), 2874);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -904, end 2874, s.length() 7
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.56807203446893
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      SQLUtil.isQuery("select intorename");
      dBCatalog0.getSchema("XyG;?w3e+JfCt,t=n");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      SQLUtil.mutatesDataOrStructure("replace");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("XyG;?w3e+JfCt,t=n", "replace", defaultDBTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3380691959386508
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SQLUtil.normalize("p`M^E<[6$l}", true);
      SQLUtil.isQuery("p ` M ^ E  <  [ 6 $ l }");
      Object object0 = new Object();
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("#=B(f");
      dBCatalog0.getSequences();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      dBCatalog0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "p`M^E<[6$l}";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "delete";
      stringArray0[4] = null;
      stringArray0[5] = "p`M^E<[6$l}";
      stringArray0[6] = "#=B(f";
      stringArray0[7] = "";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      delayQueue0.poll(0L, timeUnit0);
      SQLUtil.renderValue((Object) null);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "E}P+UR]g7{.";
      stringArray1[1] = " WHERE ";
      stringArray1[2] = "null";
      stringArray1[3] = "#=B(f";
      stringArray1[4] = "p`M^E<[6$l}";
      stringArray1[5] = "delete";
      stringArray1[6] = "#=B(f";
      stringArray1[7] = "constraint";
      stringArray1[8] = "";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, true, stringArray1);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.append(1606L);
      // Undeclared exception!
      try { 
        stringBuilder1.delete((-2104), 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2104
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2488215410938253
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = " I]<oh0m";
      String[] stringArray0 = new String[5];
      stringArray0[0] = " I]<oh0m";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      boolean boolean0 = true;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" I]<oh0m", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance(" I]<oh0m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("~YHo7#u SoS8,*E's");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "~YHo7#u SoS8,*E's";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "~YHo7#u SoS8,*E's", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("alter materialized view");
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0F);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1);
      assertEquals("alter materialized view0.0CONSTRAINT \"~YHo7#u SoS8,*E's\" ", stringBuilder1.toString());
      assertEquals("alter materialized view0.0CONSTRAINT \"~YHo7#u SoS8,*E's\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "]($Dn";
      TableContainer tableContainer0 = new TableContainer("^g\"1hz4%e|^XY5");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("]($Dn");
      DBDataType dBDataType0 = DBDataType.getInstance(230, "$($4Im58X-bJ=.Bk2B");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("VARBINARY", defaultDBTable0, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("$($4IM58X-BJ=.BK2B", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "1ri?P9a>#XR+";
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(42);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedReader0.connect(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      DBDataType.getInstance(47, "left");
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainer tableContainer1 = new TableContainer((String) null);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("vaf/K67=TlKA<jjDPu");
      boolean boolean0 = false;
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = "<";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("<");
      mockPrintWriter0.println(0.0);
      mockPrintWriter0.println();
      PrintWriter printWriter0 = mockPrintWriter0.printf("<", objectArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, printWriter0);
      String string1 = "/*";
      // Undeclared exception!
      try { 
        DBDataType.getInstance("/*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5754958472190381
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("JWyAph?-/A~+JkZc", (DBSchema) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("JWyAph?-/A~+JkZc");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, true);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      String[] stringArray0 = new String[1];
      StringBuilder stringBuilder0 = new StringBuilder(",K@5\"TWG.");
      stringBuilder0.append('p');
      NameSpec nameSpec1 = NameSpec.NEVER;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create tabledrop table", true, stringArray0);
      NameSpec nameSpec2 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec2);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("y", (DBSchema) null);
      defaultDBTable1.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3175069676000026
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = " I]<oh0m";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("NCLOB");
      assertNull(boolean0);
      
      SQLUtil.mutatesStructure("NCLOB");
      boolean boolean1 = SQLUtil.isDDL("create materialized view");
      assertTrue(boolean1);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBSequence dBSequence0 = new DBSequence("8Tvn8co#\"wh>9#$37O", "org.apache.derby.impl.store.raw.data.EncryptContainerUndoOperation", "8Tvn8co#\"wh>9#$37O");
      dBSequence0.getStartIfNotDefault();
      dBSequence0.setName("8Tvn8co#\"wh>9#$37O");
      dBSequence0.setMinValue((BigInteger) null);
      SQLUtil.typeAndName(dBSequence0);
      String string0 = "alter materialized view";
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("alter materialized view", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "UNIQUE ";
      String string1 = null;
      StringBuilder stringBuilder0 = new StringBuilder(3);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.insert(3, "UNIQUE ");
      stringBuilder1.chars();
      stringBuilder2.delete(3, 7);
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin((String) null, (String[]) null, "UNIQUE ", (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "'S=\"?";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("i]<oh0m");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "i]<oh0m";
      stringArray0[1] = "E6W@_Bl7Pk2@Hla.o^";
      stringArray0[2] = "E6W@_Bl7Pk2@Hla.o^";
      stringArray0[3] = "E6W@_Bl7Pk2@Hla.o^";
      String[] stringArray1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("drop materialized view9z't`&p}+~&qyj;m", stringArray0, ")/.Aqe0Op;P", "D92XcvY;UfV.,1B", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[5];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      String[] stringArray1 = new String[8];
      stringArray1[2] = " I]<oh0m";
      stringArray1[1] = "i7M>eBf1`UHCI";
      stringArray1[2] = null;
      stringArray1[3] = "i7M>eBf1`UHCI";
      stringArray1[4] = "updateselect intoiy^4a(=y";
      stringArray1[5] = null;
      stringArray1[6] = "i7M>eBf1`UHCI";
      stringArray1[7] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("i7M>eBf1`UHCI", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      dBForeignKeyConstraint0.columnReferencedBy(stringArray1[2]);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (, , , , ) REFERENCES null(, i7M>eBf1`UHCI, , i7M>eBf1`UHCI, updateselect intoiy^4a(=y, , i7M>eBf1`UHCI, )", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6265761614324488
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = " I]<oh0m";
      SQLUtil.join("org.h2.expression.Alias", "Q6+lD7\"", stringArray0, "org.h2.expression.Alias", "|h*#XA^", stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog();
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("insert9z't`&p}+~&qyj;m", stringBuilder0);
      stringBuilder1.append((-2058191530));
      stringBuilder1.append((-2058191530));
      stringBuilder1.codePoints();
      stringBuilder1.reverse();
      SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      assertEquals("0351918502-0351918502-m;jyq&~+}p&`t'z9tresni or null", stringBuilder0.toString());
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.mutatesDataOrStructure("into");
      SQLUtil.leftJoin((String) null, stringArray0, "K:v<'ztaNl", "|h*#XA^", stringArray0);
      boolean boolean0 = SQLUtil.isProcedureCall("execute-");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.311433801313185
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Boolean boolean0 = SQLUtil.mutatesStructure("rename");
      assertTrue(boolean0);
      
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("execselect");
      assertNull(boolean1);
      
      Boolean boolean2 = SQLUtil.mutatesDataOrStructure("insert");
      assertTrue(boolean2);
      assertNotNull(boolean2);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = " I]<oh0m";
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(" I]<oh0m");
      stringBuilder1.append((-1794775404));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7242986702781118
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBDataType dBDataType0 = DBDataType.getInstance((-1098565737), ",");
      TableContainer tableContainer0 = new TableContainer(",");
      TableContainer tableContainer1 = new TableContainer("left");
      TableContainer tableContainer2 = new TableContainer("drop materialized view", tableContainer1);
      tableContainer2.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop indenclob", (DBSchema) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("r0q<1ZaC", defaultDBTable0, (-654), "%EFH|zi=aAEg:");
      defaultDBColumn0.setType(dBDataType0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("^g\"1hz4%", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumn(defaultDBColumn1);
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.join("drop materialized view", "drop indenclob", (String[]) null, "^g\"1hz4% ,(2,2) NULL", "()*h~", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2623477045221727
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.join((String) null, "5?", stringArray0, "5?", "M(Mw4", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[8];
      stringArray1[0] = "M(Mw4";
      stringArray1[1] = "5? as M(Mw4 on ";
      stringArray1[2] = "5? as M(Mw4 on ";
      stringArray1[3] = "5? as M(Mw4 on ";
      stringArray1[4] = "M(Mw4";
      stringArray1[5] = null;
      stringArray1[6] = "5? as M(Mw4 on ";
      stringArray1[7] = "5?";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "5?", true, stringArray1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "5? as M(Mw4 on ");
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0F);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      assertEquals("5? as M(Mw4 on 0.0CONSTRAINT 5? ", stringBuilder0.toString());
      assertEquals("5? as M(Mw4 on 0.0CONSTRAINT 5? ", stringBuilder1.toString());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.213840557467978
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "]($Dn";
      stringArray0[1] = "]($Dn";
      stringArray0[2] = "]($Dn";
      stringArray0[3] = "]($Dn";
      DBDataType.getInstance((-3167), "create unique indexkgt1[^@g'*!h_|)w5m)");
      TableContainer tableContainer0 = new TableContainer("]($Dn");
      TableContainer tableContainer1 = new TableContainer("drop materialized view");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ALTER TABLE ", (DBSchema) null);
      Random.setNextRandom((-3167));
      String[] stringArray1 = new String[2];
      stringArray1[0] = "create unique indexkgt1[^@g'*!h_|)w5m)";
      stringArray1[1] = "yP<<|S31}>D";
      String string0 = SQLUtil.renderWhereClause(stringArray1, stringArray1);
      assertEquals("create unique indexkgt1[^@g'*!h_|)w5m) = 'create unique indexkgt1[^@g'*!h_|)w5m)' AND yP<<|S31}>D = 'yP<<|S31}>D'", string0);
      
      SQLUtil.typeAndName((DBObject) null);
      String string1 = SQLUtil.normalize("drop materialized view", false);
      assertEquals("drop materialized view", string1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9574834621823012
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SQLUtil.removeComments("N#FAwP&{DcXCb");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execeq8", (DBSchema) null);
      String[] stringArray0 = new String[4];
      stringArray0[1] = "8000003b-00d0-fd77-3ed8-000a0a0b1900";
      stringArray0[1] = "|h*#XA^";
      stringArray0[2] = "w;l!b*n}1";
      stringArray0[3] = "insert9z't`&p}+~&qyj;m";
      SQLUtil.join("w;l!b*n}1", "N#FAwP&{DcXCb", stringArray0, "execeq8", "2Ax.@je}a0dRQvx7", stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("N#FAwP&{DcXCb");
      TableContainer tableContainer1 = new TableContainer("A");
      tableContainer1.getSchema();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("create table", (DBSchema) null);
      Random.setNextRandom(148);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.typeAndName(dBCatalog0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      int int0 = (-646);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-646));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.128183350293198
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<L");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "<L";
      stringArray0[1] = "call";
      stringArray0[2] = "<L";
      SQLUtil.leftJoin("E6W@_Bl7Pk2@Hla.o^", stringArray0, "call", "delete", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "R.b/rQ2_ l";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("drop table", stringArray0, ">2UA0;u*LQ!n", "X#6&U.FsHgce1", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ep8~r<;*|${u");
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("ep8~r<;*|${u");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("ep8~r<;*|${u", dBSchema0);
      DBDataType.getInstance(222, ";B~!H{DpdK[el3;]");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "update";
      stringArray0[1] = "Q3 }3J%I$";
      stringArray0[2] = "update";
      stringArray0[3] = "ZiO7wB \":x_h)a`2dS";
      stringArray0[4] = "Q3 }3J%I$";
      stringArray0[5] = "ep8~r<;*|${u";
      stringArray0[6] = "ep8~r<;*|${u";
      stringArray0[7] = "Q3 }3J%I$";
      stringArray0[8] = "update";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "Q3 }3J%I$";
      stringArray1[1] = "ep8~r<;*|${u";
      stringArray1[2] = "alter session";
      stringArray1[3] = "ep8~r<;*|${u";
      stringArray1[4] = "Q3 }3J%I$";
      stringArray0[5] = "cfo";
      // Undeclared exception!
      try { 
        SQLUtil.join(";B~!H{DpdK[el3;]", "Q3 }3J%I$", stringArray0, "ep8~r<;*|${u", "alter session", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6211272758470872
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Boolean.valueOf("'S=\"?");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("DROP TABLE");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "DROP TABLE";
      stringArray0[1] = "'S=\"?";
      stringArray0[2] = "E6W@_Bl7Pk2@Hla.o^";
      stringArray0[3] = "E6W@_Bl7Pk2@Hla.o^";
      stringArray0[4] = "E6W@_Bl7Pk2@Hla.o^";
      stringArray0[5] = "DROP TABLE";
      stringArray0[6] = "DROP TABLE";
      stringArray0[7] = "'S=\"?";
      stringArray0[8] = "DROP TABLE";
      String string0 = SQLUtil.leftJoin("'S=\"?", stringArray0, "DROP TABLE", (String) null, stringArray0);
      assertEquals("left join DROP TABLE as null on 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.'S=\"? = null.'S=\"? and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.'S=\"? = null.'S=\"? and 'S=\"?.DROP TABLE = null.DROP TABLE", string0);
      
      String[] stringArray1 = new String[9];
      stringArray1[0] = "K$g1WMW&NI^gQ[Uu";
      stringArray1[1] = "DROP TABLE";
      stringArray1[2] = "DROP TABLE";
      stringArray1[3] = "drop table";
      stringArray1[4] = "vq+ru";
      stringArray1[5] = "'S=\"?";
      stringArray1[6] = "left join DROP TABLE as null on 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.'S=\"? = null.'S=\"? and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.'S=\"? = null.'S=\"? and 'S=\"?.DROP TABLE = null.DROP TABLE";
      stringArray1[7] = "'S=\"?";
      stringArray1[8] = ",;/sd)NfRw0>";
      String string1 = SQLUtil.innerJoin("update", stringArray1, "delete", "create unique indexeq8", stringArray0);
      assertEquals("delete as create unique indexeq8 on update.K$g1WMW&NI^gQ[Uu = create unique indexeq8.DROP TABLE and update.DROP TABLE = create unique indexeq8.'S=\"? and update.DROP TABLE = create unique indexeq8.E6W@_Bl7Pk2@Hla.o^ and update.drop table = create unique indexeq8.E6W@_Bl7Pk2@Hla.o^ and update.vq+ru = create unique indexeq8.E6W@_Bl7Pk2@Hla.o^ and update.'S=\"? = create unique indexeq8.DROP TABLE and update.left join DROP TABLE as null on 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.'S=\"? = null.'S=\"? and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.E6W@_Bl7Pk2@Hla.o^ = null.E6W@_Bl7Pk2@Hla.o^ and 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.DROP TABLE = null.DROP TABLE and 'S=\"?.'S=\"? = null.'S=\"? and 'S=\"?.DROP TABLE = null.DROP TABLE = create unique indexeq8.DROP TABLE and update.'S=\"? = create unique indexeq8.'S=\"? and update.,;/sd)NfRw0> = create unique indexeq8.DROP TABLE", string1);
      
      VersionNumber.valueOf("G~Tc/prv^zk8.7w5>");
      boolean boolean0 = SQLUtil.isQuery("^0");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2381744996028692
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("");
      String string0 = SQLUtil.renderValue("");
      String string1 = SQLUtil.normalize("''", false);
      assertTrue(string1.equals((Object)string0));
      
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("''", false, "", "''");
      String string2 = SQLUtil.ownerDotComponent(dBCheckConstraint0);
      assertEquals("''", string2);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(42);
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedReader0.connect(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      TableContainer tableContainer0 = new TableContainer((String) null);
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBDataType dBDataType0 = DBDataType.getInstance(3, "");
      TableContainer tableContainer0 = new TableContainer("TlE>ObmbqQdx),");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("execbz7?47rfn,d^kj", (DBSchema) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("<yG;?w3e+JfCt,t=n", defaultDBTable0, (-3214), "5lNOBdySp44qxi~");
      defaultDBColumn0.setType(dBDataType0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("<yG;?w3e+JfCt,t=n  NULL", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Boolean.valueOf("M");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("M");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers("fM_o:8\"7W=", "YRpt|iC\f]xVx", "fM_o:8\"7W=");
      assertEquals("fM_o:8\"7W=", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = "";
      SQLUtil.normalize("", true);
      DBCatalog dBCatalog0 = new DBCatalog();
      String string1 = null;
      // Undeclared exception!
      try { 
        dBCatalog0.getTable((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null'
         //
         verifyException("org.databene.jdbacl.model.DBCatalog", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("gtUnicdStream", stringBuilder0);
      assertEquals("gtUnicdStream", stringBuilder0.toString());
      
      DBDataType dBDataType0 = DBDataType.getInstance(6107, "%35UOVx8sSUD");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.max((-783), (-783));
      Integer integer1 = RawTransaction.COMMIT;
      Integer integer2 = RawTransaction.ABORT;
      Integer integer3 = RawTransaction.COMMIT;
      Integer integer4 = RawTransaction.ABORT;
      Integer integer5 = RawTransaction.LOCK_ESCALATE;
      Integer integer6 = new Integer(3);
      DBSchema dBSchema0 = new DBSchema("f+KqpZ7JpI$i3!D(");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("gtUnicdStream", dBSchema0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("f+KqpZ7JpI$i3!D(", defaultDBTable0, dBDataType0, integer3, integer5);
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      LinkedList<DBColumn> linkedList1 = new LinkedList<DBColumn>();
      linkedList1.add((DBColumn) defaultDBColumn0);
      linkedList0.offer(defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
      System.setCurrentTimeMillis(1L);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "f+KqpZ7JpI$i3!D(";
      stringArray0[1] = "gtUnicdStream";
      SQLUtil.renderColumnNames(stringArray0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("f+KqpZ7JpI$i3!D( %35UOVX8SSUD(0,3) NULL", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      JdbcConnectionPool.create((ConnectionPoolDataSource) pGConnectionPoolDataSource0);
      boolean boolean0 = SQLUtil.isQuery("create materialized viewkgt1[^@g'*!h_|)w5m)");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(".comp", 548);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = SQLUtil.normalize("JWyAph?-/A~+JkZc", false);
      assertEquals("JWyAph ? - / A ~ + JkZc", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SQLUtil.removeComments("S|ye]cn,");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("S|ye]cn,", (DBSchema) null);
      int int0 = 1643;
      DBDataType dBDataType0 = DBDataType.getInstance(1643, "alter session");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("S|ye]cn,", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.301557456842103
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "|h*#XA^";
      stringArray0[1] = "|h*#XA^";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "|h*#XA^";
      stringArray1[1] = "|h*#XA^";
      stringArray1[2] = "|h*#XA^";
      stringArray1[3] = "|h*#XA^";
      stringArray1[4] = "|h*#XA^";
      stringArray1[5] = "oLR@`-;tu+p~$:6pKC";
      stringArray1[6] = "-=bld";
      stringArray1[7] = "|h*#XA^";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("|h*#XA^", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      dBForeignKeyConstraint0.columnReferencedBy("create unique indexnclob", false);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT |h*#XA^ ", string0);
      
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (|h*#XA^, |h*#XA^) REFERENCES null(|h*#XA^, |h*#XA^, |h*#XA^, |h*#XA^, |h*#XA^, oLR@`-;tu+p~$:6pKC, -=bld, |h*#XA^)", string1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.394993443200781
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "]($Dn";
      stringArray0[1] = "]($Dn";
      stringArray0[2] = "]($Dn";
      stringArray0[3] = "]($Dn";
      stringArray0[4] = "]($Dn";
      stringArray0[5] = "]($Dn";
      stringArray0[6] = "]($Dn";
      stringArray0[7] = "]($Dn";
      SQLUtil.leftJoin("]($Dn", stringArray0, "]($Dn", "]($Dn", stringArray0);
      SQLUtil.innerJoin("K#\u0005KdO", stringArray0, "]($Dn", "~%", stringArray0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) jdbcDataSource0);
      jdbcConnectionPool0.getLogWriter();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("]($Dn");
      jdbcDataSource0.getLogWriter();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(42);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedWriter pipedWriter0 = new PipedWriter();
      pipedReader0.connect(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      TableContainer tableContainer0 = new TableContainer((String) null);
      tableContainer0.getTable((String) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "ep8~r<;*|${u";
      stringArray0[3] = null;
      stringArray0[4] = "- 0";
      stringArray0[5] = null;
      stringArray0[6] = "- 0";
      stringArray0[7] = "- 0";
      tableContainer0.isIdentical((DBObject) null);
      stringArray0[8] = "- 0";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4358532144078109
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "O!KPI";
      stringArray0[1] = "N#FAwP&{DcXCb";
      stringArray0[2] = "N#FAwP&{DcXCb";
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("O!KPI", compositeDBObject0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("N#FAwP&{DcXCb");
      defaultDBTable1.getPrimaryKeyConstraint();
      CompositeDBObject<DBNotNullConstraint> compositeDBObject1 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer1 = new TableContainer("BLOB", compositeDBObject1);
      tableContainer1.isIdentical((DBObject) null);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      Random.setNextRandom(1420);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("O!KPI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("JzyAph?-/A~+JkZc");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JzyAph?-/A~+JkZc";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "JzyAph?-/A~+JkZc", true, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("alter materialized view");
      stringBuilder0.append(0.0F);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, (NameSpec) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      char char0 = '3';
      char char1 = 'u';
      DBConstraint dBConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "_dJF1WGvXq;;o";
      stringArray0[1] = "q";
      stringArray0[2] = "q";
      stringArray0[3] = "q";
      stringArray0[4] = "q";
      stringArray0[5] = "_dJF1WGvXq;;o";
      stringArray0[6] = "_dJF1WGvXq;;o";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "q", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      System.setCurrentTimeMillis((-1565L));
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "N#FAwP&{DcXCb";
      stringArray0[1] = "N#FAwP&{DcXCb";
      stringArray0[2] = "N#FAwP&{DcXCb";
      stringArray0[4] = "N#FAwP&{DcXCb";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("N#FAwP&{DcXCb", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT N#FAwP&{DcXCb FOREIGN KEY (N#FAwP&{DcXCb, N#FAwP&{DcXCb, N#FAwP&{DcXCb, , N#FAwP&{DcXCb) REFERENCES null(N#FAwP&{DcXCb, N#FAwP&{DcXCb, N#FAwP&{DcXCb, , N#FAwP&{DcXCb)", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      SQLUtil.isProcedureCall("Bzb?47RfN,d^KJ");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "|72q2<&vyM/Gk");
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) "|72q2<&vyM/Gk", (-115), 247);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -115, end 247, s.length() 13
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)87;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("<yG;?w3e+JfCt,t=n", dBCatalog0);
      dBSchema0.setName("|");
      dBSchema0.setCatalog(dBCatalog0);
      String string0 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals("null.|", string0);
  }
}
