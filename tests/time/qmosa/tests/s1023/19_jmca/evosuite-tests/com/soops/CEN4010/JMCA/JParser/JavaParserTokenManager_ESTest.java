/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 09:23:35 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0161800094270859
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)120;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 802, 7, (-976));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("#X");
      javaCharStream0.ReInit((Reader) stringReader0, (-1835), 802);
      javaParserTokenManager0.SkipLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1835, column 802.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5631575110850602
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2177), 2191);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      String string0 = "#X";
      String string1 = "+N1}j';5";
      StringReader stringReader1 = new StringReader("+N1}j';5");
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1397622204578421
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2540), 298, 125);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      int int0 = 51;
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 51, 298, 125);
      StringReader stringReader0 = new StringReader("9");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6282395215666019
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 118, 1759, 118);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      String string0 = "}4";
      StringReader stringReader0 = new StringReader("}4");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)93, 802);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("Ma0=!(");
      String string1 = "qR~N\"";
      MockFile mockFile1 = null;
      try {
        mockFile1 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6943335101011305
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2540), (-2177), (-2540));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (-1), (-2177), (-1));
      StringReader stringReader0 = new StringReader("boZleSn");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("hSi0I");
      MockFile mockFile1 = new MockFile(mockFile0, "&s=");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4879308706634973
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e3b>{ekv54>VW Fv");
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)116, (byte)116, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("AKm,sH/hGiEvU");
      token0.image = " c*-tVZcQ$";
      javaCharStream0.ReInit((Reader) stringReader0, 280, 116);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("\"|=\"");
      token1.endColumn = (int) (byte)93;
      MockFile mockFile1 = new MockFile("AKm,sH/hGiEvU");
      byteArrayInputStream0.read(byteArray0);
      mockFile1.setReadable(false);
      File file0 = MockFile.createTempFile("AKm", ",", (File) mockFile0);
      MockFile mockFile2 = new MockFile(mockFile1, "\"|=\"");
      MockFile mockFile3 = new MockFile(file0, "AKm,sH/hGiEvU");
      MockFile mockFile4 = new MockFile(" c*-tVZcQ$");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile4);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("sH", token2.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4977875514986219
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".R%r!jHJqWk1A\"R8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 40, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginLine = 59;
      token0.beginLine = 0;
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("%");
      StringReader stringReader2 = new StringReader(".");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.SkipLexicalActions(token1);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.getNextToken();
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, ".R%r!jHJqWk1A\"R8");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0504919064529354
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 106, (-641), 802);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("UaU={(");
      javaCharStream0.ReInit((Reader) stringReader0, (-641), 943);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("while", "E,gceT^NpNX&6v", (File) mockFile0);
      MockFile mockFile1 = new MockFile(file0, "n");
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.TokenLexicalActions(token1);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(945, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5206898614285613
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 802, 118, 1803);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("UaU={(");
      javaCharStream0.ReInit((Reader) stringReader0, 1803, 50);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("0000");
      MockFile.createTempFile("0000", "bD%|]%ZPosc>F", (File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "*%63&rOCgu$5m*.1x]");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("=", token2.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0831476691135247
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(NGHS@19Q5Mdd2MU\"*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("(");
      javaParserTokenManager0.getNextToken();
      File file0 = MockFile.createTempFile("1cj8D0eh", "com.soops.CEN4010.JMCA.JParser.Token$GTToken", (File) mockFile0);
      MockFile.createTempFile("c>-A{7{y({@cdkSG", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5167233808409666
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 802, 118, 1803);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("Ma0=!(");
      javaCharStream0.ReInit((Reader) stringReader0, 1803, 50);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("0000");
      MockFile.createTempFile("0000", "bD%|]%ZPosc>F", (File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "*%63&rOCgu$5m*.1x]");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      assertEquals(53, javaCharStream0.getBeginColumn());
      assertEquals(1803, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)116;
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'u';
      charArray0[1] = 'P';
      charArray0[2] = '%';
      charArray0[3] = '?';
      charArray0[4] = '4';
      charArray0[5] = 'F';
      charArray0[6] = 'b';
      charArray0[7] = 'E';
      javaCharStream0.nextCharBuf = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5387326688690994
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("/v-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("boolean");
      javaParserTokenManager0.getNextToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 240);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, 33);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 33. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0817465327764304
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 802, 27, (-976));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("#X");
      javaCharStream0.ReInit((Reader) stringReader0, (-1835), 802);
      javaParserTokenManager0.SkipLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1835, column 802.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4894085053497983
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)116, (byte)116, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("AKm,sH/hGiEvU");
      token0.image = " c*-tVZcQ$";
      javaCharStream0.ReInit((Reader) stringReader0, 39, 74);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile(" c*-tVZcQ$");
      MockFile mockFile1 = new MockFile(" c*-tVZcQ$");
      mockFile1.setReadable(false);
      MockFile.createTempFile("AKm", "AKm,sH/hGiEvU", (File) mockFile1);
      MockFile mockFile2 = new MockFile(mockFile0, "}\":%0Piu@O.JYhT/p{H");
      MockFile mockFile3 = new MockFile(mockFile2, "M");
      MockFile mockFile4 = new MockFile(mockFile1, "dHVDh#");
      MockFile mockFile5 = new MockFile("`qcCs_1aR!L");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile5);
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(77, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0530748989586114
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte)66;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)66, (byte)66, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)66, (-416), 95);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      MockFile mockFile0 = new MockFile("sjg", "hSi0I");
      MockFile mockFile1 = new MockFile(mockFile0, "hSi0I");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9017750298932845
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 802, 118, 1803);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 802, column 118.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.MoreLexicalActions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaParserTokenManager1.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager1.setDebugStream(javaParserTokenManager0.debugStream);
      assertNotSame(javaParserTokenManager0, javaParserTokenManager1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5106263950032626
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)116;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)116, (byte)116, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("6tJQ}]7mMQ|k");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager2.SkipLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      assertEquals(118, javaCharStream0.getBeginColumn());
      
      javaParserTokenManager1.getNextToken();
      MockFile mockFile0 = new MockFile("U");
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("tJQ", token0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9532710147058912
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-416), (-2877));
      StringReader stringReader0 = new StringReader("\"import\"");
      StringReader stringReader1 = new StringReader("\"import\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.curLexState = 37;
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "\"import\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1563745537147718
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)93, 3);
      StringReader stringReader0 = new StringReader("\"import\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, 3);
      StringReader stringReader1 = new StringReader("\"import\"");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      MockFile mockFile0 = new MockFile("3^FcK");
      MockFile mockFile1 = new MockFile(mockFile0, "X{U'SU3X$/4lm7x");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"i\" (105), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5007292544161557
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)93, 674, 674);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("l?To]");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("");
      javaParserTokenManager1.getNextToken();
      String string0 = "";
      MockFile mockFile1 = new MockFile("l");
      String string1 = "},";
      // Undeclared exception!
      try { 
        MockFile.createTempFile("},", "I,|)8_", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0246293629293988
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 3092);
      StringReader stringReader0 = new StringReader("KFPWv08P~'M{dIY;FF");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("");
      javaParserTokenManager0.getNextToken();
      MockFile mockFile1 = new MockFile("");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5749890189254132
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".R%r!jHJqWk1A\"R8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 40, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginLine = 59;
      token0.beginLine = 0;
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("#X");
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("r");
      Token.newToken(40);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile1 = new MockFile(mockFile0, "R");
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 11);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 11. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4535675760722633
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)116, (byte)116, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("!1$Zs");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      MockFile mockFile0 = new MockFile("q5V`Is-kZ/D{v$6&Z");
      javaParserTokenManager1.getNextToken();
      MockFile mockFile1 = new MockFile("");
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "USY", (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1208, 106, 106);
      javaCharStream0.adjustBeginLineColumn(26, 39);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(javaParserTokenManager0.debugStream, 41);
      bufferedOutputStream0.close();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("\"switch\"", "T%!");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // T%!
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9988874541038845
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 2334);
      StringReader stringReader0 = new StringReader("\"import\"");
      StringReader stringReader1 = new StringReader("\"import\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      MockFile mockFile0 = new MockFile("\"import\"");
      javaParserTokenManager0.getNextToken();
      MockFile mockFile1 = new MockFile("N(&g\"Pm");
      MockFile mockFile2 = new MockFile("diD`<t'XWDMe");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("--", "diD`<t'XWDMe", (File) mockFile1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9732244500016347
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2540), (-2177), (-2540));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.mark((-2177));
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (-1), (-2177), (-1));
      StringReader stringReader0 = new StringReader("boolean");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("hSi0I");
      MockFile mockFile1 = new MockFile(mockFile0, "\"&=\"");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(3562);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 3562. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      PipedInputStream pipedInputStream0 = new PipedInputStream(25);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.endLine = 0;
      javaParserTokenManager0.jjimageLen = 122;
      javaParserTokenManager0.SwitchTo(0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(0, token_GTToken0.beginLine);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5237308314814797
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = ".R%r!jHJqWk1A\"R8";
      StringReader stringReader0 = new StringReader(".R%r!jHJqWk1A\"R8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 40, 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginLine = 0;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 40);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 40. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      stringReader0.skip(1480L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaCharStream0.available = 114;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      int int0 = 121;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, 121);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 121. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-2177), (-2177));
      StringReader stringReader0 = new StringReader("\"import\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1985), (-1985), (-2054));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1985));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1985. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = (-416);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)93, (byte)93, (-416));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1517), (byte)93, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, (-2007));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2007. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1180), 928);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token.GTToken token_GTToken2 = new Token.GTToken();
      assertEquals(0, token_GTToken2.beginLine);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0025277052464983
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)116;
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(23, token0.kind);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5187684522052842
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)116, (byte)116, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader0 = new StringReader("cotine");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1985), (-1985), (-2058));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1208, 106, 106);
      javaCharStream0.adjustBeginLineColumn(26, 39);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 6);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 6. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1L);
      int int0 = 2523;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)93, (byte)93, 2523);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1517), (byte)93, (-416));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, (-2007));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2007. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
