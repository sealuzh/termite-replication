/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:13:27 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.340534377469851
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)30, 1);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read(byteArray0, (int) (byte)1, (int) (byte)0);
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5737588950701915
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)30;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.backup(14);
      javaCharStream0.bufpos = (-768);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -767
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)0;
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3755338776865145
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      JavaCharStream.hexval('d');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 8, 755);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1742), (-1742));
      javaCharStream0.adjustBeginLineColumn((-1586), 1);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream2.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":'");
      JavaCharStream.hexval('D');
      MockFile mockFile0 = new MockFile("");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9742679252764594
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("_");
      stringReader0.reset();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte) (-100);
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2931, (byte)73);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1141), (byte)76);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.431592426999151
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetSuffix(2);
      javaCharStream0.backup(14);
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.UpdateLineColumn('\u0000');
      javaCharStream0.backup((-386));
      boolean boolean0 = false;
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader(":'");
      char char0 = '`';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('e');
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)89;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)85, 2830);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)5);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(bufferedInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      StringReader stringReader1 = new StringReader(" column ");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)16;
      byteArray0[1] = (byte) (-7);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader(":'");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
      
      int int1 = JavaCharStream.hexval('f');
      assertEquals(15, int1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaCharStream.hexval('7');
      StringReader stringReader0 = new StringReader("_VYVII%xg$uz6err4x");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream.hexval('C');
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("eMEU)\"SY';,4-#Xe");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[1] = (byte)10;
      char char0 = 'O';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3164250323253432
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("WZ:Ei6arsg=bd+;<Rl");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.304960205575741
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.backup(14);
      javaCharStream0.BeginToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 1364, 14, 78);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, 78, (-212), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3234425761849924
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1972, 0);
      javaCharStream0.backup(1972);
      javaCharStream0.BeginToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      assertEquals(2125, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2083863787713236
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.backup(14);
      javaCharStream0.BeginToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      javaCharStream0.line = 14;
      JavaCharStream.hexval('a');
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zU,j0");
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 84);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")\"[");
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
      
      int int1 = JavaCharStream.hexval('B');
      assertEquals(11, int1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.GetSuffix(0);
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3527628465460406
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)30, 1);
      byteArrayInputStream0.read(byteArray0, (int) (byte)1, (int) (byte)0);
      javaCharStream0.ExpandBuff(false);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      javaCharStream0.bufpos = 0;
      javaCharStream0.backup(3);
      javaCharStream0.tokenBegin = 3;
      stringReader0.ready();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, (-1), 1606, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3986943146041626
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(1, 0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)1;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte) (-78);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)89;
      byteArray0[8] = (byte)59;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.adjustBeginLineColumn(1, 0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.FillBuff();
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3164250323253432
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2166079384444037
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, 1, (byte) (-6));
      javaCharStream0.backup(73);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\u0080');
      javaCharStream0.backup((byte)10);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix((byte)10);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("!");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4096, 3325, 2463);
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('l');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CC:w7|I$");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      stringReader0.markSupported();
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.6859521806860274
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.skip(0L);
      StringReader stringReader0 = new StringReader("2iWOOj4nz*h9x\"{`j?1");
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 96, 73);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 73, (-1645), 96);
      JavaCharStream.hexval('5');
      javaCharStream0.ReInit((Reader) stringReader0, 73, 1, 96);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=_<P}w^tFq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.close();
      javaCharStream0.backup(3554);
      javaCharStream0.maxNextCharInd = 3554;
      javaCharStream0.getColumn();
      javaCharStream0.ExpandBuff(true);
      assertEquals(4637, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6300764703807875
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      int int0 = (-1372);
      javaCharStream0.backup((-1372));
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getBeginLine();
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.3164250323253432
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3<P}^t{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("");
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5496104037449467
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('D');
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(1290);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('l');
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.485817177003055
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" Wolumn ");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 0);
      javaCharStream0.backup(11);
      javaCharStream0.BeginToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.backup(11);
      javaCharStream0.backup((-3717));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 0);
      javaCharStream0.backup(11);
      javaCharStream0.BeginToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
      assertEquals(4086, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)62;
      byteArray0[2] = (byte)1;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)62, (byte)10, (byte)10);
      byteArrayInputStream0.reset();
      boolean boolean0 = false;
      javaCharStream0.inBuf = 61;
      javaCharStream0.line = (int) (byte)0;
      javaCharStream0.adjustBeginLineColumn(0, 353);
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)10;
      char char0 = 'X';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1850), 0, 658);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3<P}^t{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.line = (-981);
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-981), javaCharStream0.getBeginLine());
      assertEquals('3', char0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4760309859581935
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetSuffix(2);
      javaCharStream0.backup(14);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\u0000');
      javaCharStream0.backup((-386));
      boolean boolean0 = false;
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6908746774461216
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|U9oV");
      int int0 = 65;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-900), 2178, 65);
      javaCharStream0.maxNextCharInd = 2975;
      int int1 = (-3604);
      int int2 = 80;
      javaCharStream0.adjustBeginLineColumn(80, 3);
      javaCharStream0.getBeginLine();
      stringReader0.markSupported();
      javaCharStream0.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.3453828623183357
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte)0;
      javaCharStream0.backup(0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('L', char0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4395720605004327
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")\"[");
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.backup(0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.BeginToken();
      String string0 = javaCharStream0.GetImage();
      assertEquals(")", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1526), (-1526));
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0);
      javaCharStream0.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0018442867649786
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(0, 2008);
      javaCharStream0.AdjustBuffSize();
      assertEquals(2008, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.119256889968534
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[1] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      javaCharStream0.bufpos = 0;
      javaCharStream0.tokenBegin = 3;
      stringReader0.ready();
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      javaCharStream0.bufpos = 0;
      javaCharStream0.backup(3);
      javaCharStream0.tokenBegin = 3;
      stringReader0.ready();
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.0018442867649786
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.backup((byte)1);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)1, 4022);
      assertEquals(4095, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5239887105746712
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mvUl{V1g}Y(t?d|B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringReader0.skip((-1));
      javaCharStream0.backup(0);
      stringReader0.ready();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(0, 3);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 100, 8, 4066);
      javaCharStream0.getBeginLine();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.422738768329776
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4055, 14, 4055);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-3604), (-3604));
      javaCharStream0.getBeginLine();
      javaCharStream0.backup(57);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.201793123629589
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 0);
      javaCharStream0.backup(11);
      javaCharStream0.BeginToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      javaCharStream0.backup(0);
      javaCharStream0.readChar();
      assertEquals(4086, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      int int0 = 0;
      javaCharStream0.available = (-386);
      javaCharStream0.GetSuffix(0);
      javaCharStream0.backup(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int1 = (-3613);
      javaCharStream0.nextCharInd = 1037;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.574337865325543
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.GetSuffix(2);
      int int0 = 14;
      javaCharStream0.backup(14);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-386), (-257));
      javaCharStream0.GetImage();
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<&vyM/Gk20t%@{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-565), (-565));
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      char char0 = '}';
      charArray0[1] = '}';
      char char1 = 'a';
      charArray0[2] = 'a';
      char char2 = 'D';
      charArray0[3] = 'D';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('{');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.7588342921642806
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j*z5iV7^w}<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2370), (-2370));
      javaCharStream0.prevCharIsCR = false;
      stringReader0.read();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-1));
      sequenceInputStream0.skip((-2370));
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-2370), (-2370));
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('P');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5468492440578783
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_&LV6)}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 799, (-186));
      javaCharStream1.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream1.GetImage();
      javaCharStream1.backup((-1105));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('L', char0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-3), (byte) (-6));
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.3642700114462456
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      stringReader0.skip(0);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.backup(43);
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(4056, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=_<P}w^tFq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('=', char0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.817432218909716
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")\"[");
      boolean boolean0 = true;
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader(")\"[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 95, (-1865));
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) null, 761, (-1951));
      StringReader stringReader2 = new StringReader("_B>ik)8Rh J%");
      javaCharStream0.ReInit((Reader) stringReader2);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-231), 997);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (-2545), 997);
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('_');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V");
      stringReader0.close();
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.GetImage();
      int int1 = (-801);
      javaCharStream0.inBuf = (-801);
      // Undeclared exception!
      try { 
        stringReader0.mark((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 4096;
      CharBuffer charBuffer0 = CharBuffer.allocate(11);
      CharBuffer charBuffer1 = charBuffer0.duplicate();
      charBuffer0.chars();
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 4096);
      charBuffer0.append((CharSequence) charBuffer1);
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      stringReader0.mark(0);
      int int1 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.413720063267781
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CC:w7|I$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3066, 3066, 3066);
      javaCharStream0.maxNextCharInd = 3066;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 456, 0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (byte)88, (-1161));
      javaCharStream2.FillBuff();
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, (-1), (byte)88, (-1161));
      // Undeclared exception!
      try { 
        javaCharStream3.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      StringReader stringReader0 = new StringReader("</VhsOB[;SS5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-1));
      javaCharStream0.bufpos = 0;
      javaCharStream0.backup(3);
      assertEquals(4093, javaCharStream0.bufpos);
      
      javaCharStream0.tokenBegin = 3;
      stringReader0.ready();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(dataInputStream0, dataInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream1, 0, (-841), 14);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CC:w7|I$");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-3544), 4072, (-248));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-386));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      pipedInputStream0.close();
      javaCharStream0.buffer = null;
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 2008, 53, 53);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.757637858307174
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 92);
      javaCharStream0.line = 4088;
      pipedOutputStream0.flush();
      javaCharStream0.maxNextCharInd = (-4317);
      javaCharStream0.inBuf = (-558);
      javaCharStream0.adjustBeginLineColumn(10, 4063);
      pipedOutputStream0.write(10);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 11, 0);
      javaCharStream0.backup(11);
      javaCharStream0.BeginToken();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 0, 2);
      String string0 = javaCharStream1.GetImage();
      assertNotNull(string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)62;
      byteArray0[2] = (byte)10;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("}C5u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals('}', char0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.336724853660327
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CC:w7|I$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3066, 3066, 3066);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.BeginToken();
      javaCharStream1.AdjustBuffSize();
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 13);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      String string0 = "M";
      StringReader stringReader0 = new StringReader("UXO|l*WPUE-<r~vuh");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1533), (-1533), (-1533));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.7859595407342206
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader(">;VL<l:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3041), 69, 0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-3041));
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 1859, 264);
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-3041), 4096);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1850), 104);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      
      javaCharStream1.ExpandBuff(false);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('r');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 832, 832, (-1850));
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 92);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-32), 1);
      sequenceInputStream0.read();
      sequenceInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-1620), (-1), 1);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=_<P}w^tFq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) null, 72, 1389, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)81;
      byteArray0[6] = (byte) (-79);
      byteArray0[7] = (byte)3;
      byteArray0[8] = (byte) (-25);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), (byte) (-84), (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader(">;VL<l:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3041), 69, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      Enumeration<ByteArrayInputStream> enumeration1 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      StringReader stringReader1 = new StringReader(",26Ls~qg-z7<5pT:WL");
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }
}
