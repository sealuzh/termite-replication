/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 07:27:58 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.controller.StructuredMenuHolder;
import freemind.main.FreeMindMain;
import freemind.modes.filemode.FileMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ContainerEvent;
import java.awt.event.InputMethodListener;
import java.util.Locale;
import javax.help.HelpModel;
import javax.help.JHelpGlossaryNavigator;
import javax.help.JHelpNavigator;
import javax.help.JHelpTOCNavigator;
import javax.help.NavigatorView;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JMenu;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuKeyEvent;
import org.apache.fop.image.FopImage;
import org.apache.fop.image.JpegImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
      FileMode fileMode0 = new FileMode();
      fileMode0.getController();
      // Undeclared exception!
      try { 
        fileMode0.toLocalizedString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.Mode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JMenu jMenu0 = new JMenu("6%KRdn7HY}b", false);
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jMenu0, 0, 0, 0, 0, '{', menuElementArray0, (MenuSelectionManager) null);
      menuKeyEvent0.consume();
      int int0 = 8;
      menuKeyEvent0.setKeyCode(8);
      menuKeyEvent0.setSource((Object) null);
      MenuKeyEvent menuKeyEvent1 = new MenuKeyEvent(jMenu0, (-611), 0, 8, (-611), '{', menuElementArray0, (MenuSelectionManager) null);
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(menuKeyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JComponent.setDefaultLocale(locale0);
      StructuredMenuHolder structuredMenuHolder0 = new StructuredMenuHolder();
      structuredMenuHolder0.addCategory("Ch!K4cYR");
      JMenu jMenu0 = new JMenu("!~", false);
      MenuElement[] menuElementArray0 = new MenuElement[0];
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      ContainerEvent containerEvent0 = new ContainerEvent(jMenu0, 16, jMenu0);
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertTrue(jColorChooser0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JHelpNavigator jHelpNavigator0 = new JHelpNavigator((NavigatorView) null);
      JHelpGlossaryNavigator jHelpGlossaryNavigator0 = new JHelpGlossaryNavigator((NavigatorView) null);
      JHelpTOCNavigator jHelpTOCNavigator0 = new JHelpTOCNavigator((NavigatorView) null, (HelpModel) null);
      jHelpTOCNavigator0.addInputMethodListener((InputMethodListener) null);
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      try { 
        Controller.showCommonJColorChooserDialog(jHelpNavigator0, "r>|N;", (Color) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
