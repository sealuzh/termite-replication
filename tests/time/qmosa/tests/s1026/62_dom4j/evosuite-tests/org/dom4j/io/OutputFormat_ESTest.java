/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:20:30 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.169422913580796
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      OutputFormat outputFormat2 = new OutputFormat("-expandEmpty-xhtmly*%_>U/72H-D#^");
      outputFormat0.setIndent("-expandEmpty-xhtmlUTF-8");
      outputFormat2.setLineSeparator("-expandEmptyHha{fQ");
      assertEquals("-expandEmptyHha{fQ", outputFormat2.getLineSeparator());
      
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-newline";
      stringArray0[1] = "-expandEmpty,dU_\"";
      stringArray0[2] = "-expandEmptyHha{fQ";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "";
      stringArray0[5] = null;
      stringArray0[6] = "-rwldneH";
      int int0 = outputFormat1.parseOptions(stringArray0, 2);
      assertEquals(4, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8040612744126205
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      String[] stringArray0 = new String[4];
      stringArray0[1] = "V#ZkI!c){RjB|4pj";
      stringArray0[2] = "-lineSeparator";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(4, int0);
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isPadText());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6112461400713833
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-628));
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewLineAfterNTags(8);
      outputFormat0.setNewlines(true);
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = new OutputFormat("-indent");
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("W9)^iX6ak: A(<W");
      outputFormat0.setTrimText(true);
      outputFormat1.setEncoding("-indent");
      outputFormat1.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setLineSeparator("-indentSize");
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-indent";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = ">expandEmpty.";
      stringArray0[3] = "-indent";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(8, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat2.getLineSeparator());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.62115586703738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-628));
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewLineAfterNTags(8);
      outputFormat0.setNewlines(true);
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = new OutputFormat("-indent");
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("W9)^iX6ak: A(<W");
      outputFormat0.setTrimText(true);
      outputFormat1.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setLineSeparator("-indentSize");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtmlUTF-8";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "W9)^iX6ak: A(<W";
      stringArray0[3] = "-indent";
      stringArray0[4] = "W9)^iX6ak: A(<W";
      stringArray0[5] = "fRP~~xUIoz;8%zh";
      stringArray0[6] = "-indentSize";
      stringArray0[7] = "W9)^iX6ak: A(<W";
      stringArray0[8] = "-indent";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7678840659199366
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-newlines";
      stringArray0[5] = "-newlines";
      outputFormat0.parseOptions(stringArray0, 4);
      outputFormat0.setIndentSize((-2069));
      outputFormat0.setIndent("-linFSepara*");
      assertEquals("-linFSepara*", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3129809585039767
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat("-indentSize");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "W9)^iX6ak: A(<W";
      stringArray0[2] = "W9)^iX6ak: A(<W";
      stringArray0[3] = "W9)^iX6ak: A(<W";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "-indentSize";
      stringArray0[6] = "-indentSize";
      stringArray0[7] = "F^I5Gr";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"W9)^iX6ak: A(<W\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".cjeG>pHK[N";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = ".cjeG>pHK[N";
      stringArray0[3] = ".cjeG>pHK[N";
      stringArray0[4] = ".cjeG>pHK[N";
      outputFormat0.setLineSeparator("-xhtmlUTF-8");
      outputFormat0.isSuppressDeclaration();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.008925238667177
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmly*%_>U/72H-D#^", true, "-xhtmly*%_>U/72H-D#^");
      outputFormat0.setIndentSize(1);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[5];
      outputFormat0.setTrimText(false);
      stringArray0[0] = "-xhtmly*%_>U/72H-D#^";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 3700);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.getLineSeparator();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmly*%_>U/72H-D#^", false);
      outputFormat1.setIndent("\n");
      outputFormat1.setIndentSize(1);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals(" ", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-3708));
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals((-3708), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2890792946791425
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setIndentSize(24);
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[3];
      stringArray0[1] = "";
      stringArray0[2] = "35\u0003Ko+:y2ZaQ+c";
      outputFormat0.parseOptions(stringArray0, 24);
      outputFormat0.setNewLineAfterNTags(660);
      OutputFormat outputFormat1 = new OutputFormat("35\u0003Ko+:y2ZaQ+c");
      outputFormat0.setTrimText(true);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("35\u0003Ko+:y2ZaQ+c");
      outputFormat1.setIndentSize(24);
      OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      OutputFormat.createPrettyPrint();
      outputFormat1.parseOptions(stringArray0, 2814);
      assertEquals("                        ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "1");
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "xICBu0N6=<<03)W";
      stringArray0[3] = "1";
      stringArray0[4] = "";
      stringArray0[5] = "1";
      outputFormat0.parseOptions(stringArray0, 541);
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat("xICBu0N6=<<03)W", true);
      outputFormat1.parseOptions(stringArray0, 541);
      outputFormat1.setNewLineAfterNTags(52);
      outputFormat0.isTrimText();
      outputFormat1.setIndent("xICBu0N6=<<03)W");
      assertEquals(52, outputFormat1.getNewLineAfterNTags());
      
      OutputFormat outputFormat2 = new OutputFormat("xICBu0N6=<<03)W");
      outputFormat2.parseOptions(stringArray0, 657);
      String string0 = outputFormat0.getIndent();
      assertEquals("", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "1";
      OutputFormat outputFormat0 = new OutputFormat("", true, "1");
      boolean boolean0 = false;
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[10];
      outputFormat0.setIndent("ywTSoD");
      stringArray0[0] = "";
      char char0 = '{';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.151125976398041
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags((-1971618930));
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setIndent(true);
      String[] stringArray0 = new String[0];
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat1.getLineSeparator();
      OutputFormat outputFormat2 = new OutputFormat();
      OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("HhaS{fyQ8");
      outputFormat0.setIndentSize((-904));
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize(18);
      assertEquals((-1971618930), outputFormat0.getNewLineAfterNTags());
      
      outputFormat2.setIndent("Xdd!Xxx*=");
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat1 = new OutputFormat("YhaS{fmQ8", true);
      outputFormat1.setAttributeQuoteCharacter('\'');
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.setNewLineAfterDeclaration(false);
      String string0 = OutputFormat.STANDARD_INDENT;
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('I');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (I)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "1");
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "xICBu0N6=&h<<03)W";
      stringArray0[2] = "1";
      stringArray0[3] = "1";
      stringArray0[4] = "";
      stringArray0[5] = "1";
      stringArray0[6] = "1";
      outputFormat0.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 541);
      outputFormat0.setLineSeparator("");
      outputFormat0.setXHTML(false);
      outputFormat0.isXHTML();
      outputFormat0.setNewlines(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = new OutputFormat("1", false, "-xhtml_YNb6S/");
      outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isXHTML());
      
      outputFormat1.isSuppressDeclaration();
      String string0 = outputFormat1.getIndent();
      assertEquals("1", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9472002185719735
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(1);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[8];
      outputFormat0.setXHTML(true);
      stringArray0[0] = "[";
      stringArray0[1] = "sRVmVLj5,NgLMA";
      outputFormat0.setTrimText(false);
      stringArray0[2] = "sRVmVLj5,NgLMA";
      stringArray0[3] = "sRVmVLj5,NgLMA";
      outputFormat0.setTrimText(true);
      stringArray0[4] = "-xhtmlUTF-8";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[6] = "sRVmVLj5,NgLMA";
      stringArray0[7] = "sRVmVLj5,NgLMA";
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = new OutputFormat("");
      String string0 = "\",Oav83=FI(Xo|";
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setEncoding((String) null);
      outputFormat2.setLineSeparator("-expandEmpty-expandEmptyHha{fQ");
      outputFormat2.setExpandEmptyElements(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "+6/2}=O9|$5D 3?";
      stringArray0[1] = null;
      stringArray0[2] = "sRVmVL";
      int int0 = (-1135);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-1135));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1135
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3848924330997707
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-encoding";
      boolean boolean0 = true;
      outputFormat0.setXHTML(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6565955846378957
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[10];
      outputFormat0.setNewLineAfterNTags(8);
      outputFormat0.setNewlines(true);
      stringArray0[0] = "HhaS{fyQ8";
      stringArray0[1] = "L";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterNTags(462);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = new OutputFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("L");
      outputFormat2.setIndentSize((-904));
      String[] stringArray1 = new String[8];
      stringArray1[0] = "\n";
      stringArray1[1] = "PRQ34j@%BO6";
      stringArray1[2] = "L";
      stringArray1[3] = "HhaS{fyQ8";
      outputFormat0.getNewLineAfterNTags();
      outputFormat2.setIndentSize(0);
      outputFormat2.setIndent("YRYczq1mn`aE");
      assertEquals("YRYczq1mn`aE", outputFormat2.getIndent());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5762105290091304
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmly*%_>U/72H-D#^";
      stringArray0[2] = "-xhtmly*%_>U/72H-D#^";
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-xhtmlUTF-8");
      assertEquals("-xhtmlUTF-8", outputFormat0.getIndent());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals("  ", outputFormat1.getIndent());
      assertFalse(outputFormat1.isXHTML());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertTrue(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isPadText());
      assertTrue(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2667097817732322
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("^");
      assertEquals("^", outputFormat0.getIndent());
      
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "IXD!InI.";
      stringArray0[1] = "^";
      stringArray0[2] = "YaGC2#v#VDk~^:";
      stringArray0[3] = "m9rluW5 ET-w ZlI";
      stringArray0[4] = "^";
      stringArray0[5] = "W9)^iX";
      stringArray0[6] = "m9rluW5 ET-w ZlI";
      stringArray0[7] = "^";
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.260228994863853
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("%_>U/72H-D#^", true, "%_>U/72H-D#^");
      outputFormat0.setIndentSize(1);
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[21];
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      stringArray0[0] = "%_>U/72H-D#^";
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndentSize(1186);
      stringArray0[1] = "%_>U/72H-D#^";
      stringArray0[2] = "%_>U/72H-D#^";
      stringArray0[3] = "%_>U/72H-D#^";
      stringArray0[4] = "%_>U/72H-D#^";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isTrimText();
      outputFormat0.setIndent((String) null);
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.224143929153847
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewlines();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(121);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("");
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8047056673944684
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "1");
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "xICBu0N6=<<03)W";
      stringArray0[3] = "1";
      outputFormat0.setTrimText(true);
      stringArray0[4] = "";
      stringArray0[5] = "1";
      outputFormat0.parseOptions(stringArray0, 541);
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat(stringArray0[0], true);
      String[] stringArray1 = new String[4];
      stringArray1[1] = "xICBu0N6=<<03)W";
      stringArray1[2] = "xICBu0N6=<<03)W";
      stringArray1[3] = "1";
      outputFormat1.parseOptions(stringArray1, 1);
      outputFormat0.isTrimText();
      outputFormat1.getLineSeparator();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-4110));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4110
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.100479061876036
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterNTags(49);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.getIndent();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = "";
      outputFormat1.parseOptions(stringArray0, 49);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('+');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (+)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1040026700508068
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("sRVmVLj5,NgLMA", false);
      outputFormat0.setEncoding("7[b`h)Y-&?");
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat0.getIndent();
      outputFormat0.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      assertEquals("7[b`h)Y-&?", outputFormat0.getEncoding());
      
      String string0 = outputFormat1.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3496401508748375
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("org.dom4j.io.OutputFormat");
      outputFormat0.isPadText();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1993);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(0);
      outputFormat0.setIndent("org.dom4j.io.OutputFormat");
      outputFormat1.setEncoding("org.dom4j.io.OutputFormat");
      outputFormat0.isNewlines();
      outputFormat1.isPadText();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setEncoding("org.dom4j.io.OutputFormat");
      outputFormat1.setIndent(false);
      outputFormat2.setIndentSize(1993);
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.setTrimText(true);
      outputFormat1.isXHTML();
      outputFormat1.setLineSeparator("");
      outputFormat0.setNewlines(true);
      outputFormat2.setOmitEncoding(false);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      assertEquals(1993, outputFormat0.getNewLineAfterNTags());
      
      outputFormat2.setTrimText(true);
      assertFalse(outputFormat2.isSuppressDeclaration());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0059695736425467
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(4688);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding(".Y$NJZWn");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setPadText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator(".Y$NJZWn");
      outputFormat0.setNewLineAfterDeclaration(true);
      assertEquals(".Y$NJZWn", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "M]";
      OutputFormat outputFormat0 = new OutputFormat("M]");
      boolean boolean0 = false;
      outputFormat0.setOmitEncoding(false);
      boolean boolean1 = true;
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isNewlines();
      String string1 = "m9rluW5 ET-w ZlI";
      outputFormat0.setLineSeparator("m9rluW5 ET-w ZlI");
      char char0 = 'Y';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9708086158745552
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(".cjeG>pHK[N", false);
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".cjeG>pHK[N";
      outputFormat0.setIndent(false);
      stringArray0[1] = "-xlehtmlUTF-8";
      stringArray0[2] = ".cjeG>pHK[N";
      stringArray0[3] = ".cjeG>pHK[N";
      stringArray0[0] = ".cjeG>pHK[N";
      stringArray0[5] = "-xlehtmlUTF-8";
      stringArray0[6] = "-xlehtmlUTF-8";
      stringArray0[7] = ".cjeG>pHK[N";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize(1);
      assertEquals(" ", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("^");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "m9rluW5 ET-w ZlI";
      stringArray0[1] = "^";
      stringArray0[2] = "YaGC2#v#VDk~^:";
      stringArray0[3] = "m9rluW5 ET-w ZlI";
      stringArray0[4] = "^";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("^");
      assertEquals("^", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize(462);
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9255542764015305
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(".cjeG>pHK[N", false);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".cjeG>pHK[N";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = ".cjeG>pHK[N";
      stringArray0[3] = ".cjeG>pHK[N";
      stringArray0[4] = ".cjeG>pHK[N";
      stringArray0[5] = "-xhtmlUTF-8";
      stringArray0[6] = "-xhtmlUTF-8";
      stringArray0[7] = "-xhtmlUTF-8";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize(2);
      outputFormat0.setIndent("");
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5776343282378185
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(1);
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[8];
      outputFormat0.setXHTML(true);
      stringArray0[0] = "[";
      stringArray0[1] = "sRVmVLj5,NgLMA";
      outputFormat0.setTrimText(false);
      stringArray0[2] = "sRVmVLj5,NgLMA";
      outputFormat0.setIndent(false);
      stringArray0[3] = "sRVmVLj5,NgLMA";
      stringArray0[4] = "-xhtmlUTF-8";
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(true);
      stringArray0[5] = "sRVmVLj5,NgLMA";
      stringArray0[6] = "sRVmVLj5,NgLMA";
      stringArray0[7] = "sRVmVLj5,NgLMA";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterNTags((-789));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("sRVmVLj5,NgLMA");
      outputFormat0.setIndentSize(1);
      outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize(4209);
      outputFormat0.setIndent("^");
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6511351440615436
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "sRVmVLj5,NgLMq";
      stringArray0[1] = "sRVmVLj5,NgLMq";
      stringArray0[2] = "W9)^iX6ak: A(<W";
      stringArray0[3] = "sRVmVLj5,NgLMq";
      stringArray0[4] = "W9)^iX6ak: A(<W";
      outputFormat0.parseOptions(stringArray0, 1528);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isPadText());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isNewlines());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("  ", outputFormat2.getIndent());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isXHTML());
      assertTrue(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isPadText());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isTrimText());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("m9rluW5 ET-w ZlI", false, "_Jp9hCE");
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1805979656));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1805979656
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7820613918729726
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmly*%_>U/72H-D#^", true, "-xhtmly*%_>U/72H-D#^");
      outputFormat0.setIndentSize(1);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[5];
      outputFormat0.setTrimText(true);
      stringArray0[0] = "-xhtmly*%_>U/72H-D#^";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      stringArray0[1] = "-xhtmly*%_>U/72H-D#^";
      stringArray0[2] = "-xhtmly*%_>U/72H-D#^";
      String string0 = "-xhtmlUTF-8";
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.3578727204011494
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml%_>U/72H-D#^", true, "-xhtml%_>U/72H-D#^");
      outputFormat0.setIndentSize(1);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[5];
      outputFormat0.setTrimText(false);
      stringArray0[0] = "-xhtml%_>U/72H-D#^";
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(false);
      stringArray0[1] = "-xhtml%_>U/72H-D#^";
      stringArray0[2] = "-xhtml%_>U/72H-D#^";
      stringArray0[3] = "-xhtml%_>U/72H-D#^";
      stringArray0[4] = "-xhtml%_>U/72H-D#^";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setEncoding("-xhtml%_>U/72H-D#^");
      outputFormat0.setNewLineAfterNTags(5);
      outputFormat0.setTrimText(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("-xhtml%_>U/72H-D#^");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("-xhtml%_>U/72H-D#^");
      outputFormat0.setIndentSize(468);
      assertEquals(5, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmly*%_>U", true, "-xhtmly*%_>U");
      String string0 = outputFormat0.getEncoding();
      assertEquals("-xhtmly*%_>U", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("-xhtmly*%_>U", string0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-expandEmpty,dU_\"", true, "-expandEmpty-expandEmpty,dU_\"");
      outputFormat0.setIndentSize((-1118));
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("-expandEmpty-expandEmpty,dU_\"");
      assertTrue(outputFormat0.isPadText());
      assertEquals("-expandEmpty-expandEmpty,dU_\"", outputFormat0.getIndent());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_YNb6S/";
      stringArray0[1] = "_YNb6S/";
      stringArray0[2] = "W9)^iX6ak: A(<W";
      stringArray0[3] = "F^I5Gr";
      OutputFormat outputFormat0 = new OutputFormat("F^I5Gr");
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("F^I5Gr", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.700433991370831
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(8);
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = new OutputFormat("F^I5Gr");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "d)IS6my~";
      outputFormat1.setLineSeparator("-expandEmptyi|");
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "F^I5Gr";
      stringArray0[3] = "F^I5Gr";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "F^I5Gr";
      stringArray0[6] = "W9)^iX6ak: A(<W";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.getLineSeparator();
      assertEquals(8, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1647578454927587
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmly*%_>U/72H-D#^", true, "-xhtmly*%_>U/72H-D#^");
      assertFalse(outputFormat0.isXHTML());
      
      OutputFormat outputFormat1 = new OutputFormat("+Fl_:Kq", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-encoE";
      stringArray0[1] = "+Fl_:Kq";
      stringArray0[2] = "-xhtmly*%_>U/72H-D#^";
      stringArray0[3] = "-xhtmly*%_>U/72H-D#^";
      stringArray0[4] = "-xhtmly*%_>U/72H-D#^";
      outputFormat0.parseOptions(stringArray0, 2);
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-lineSeparator";
      outputFormat0.setLineSeparator("n?(]q*");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.parseOptions(stringArray0, 20);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.setIndent("oP]");
      assertEquals("n?(]q*", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.133011813746727
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty,dU_\"");
      OutputFormat outputFormat1 = new OutputFormat("+Fl_:Kq", false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "+Fl_:Kq";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = "-expandEmpty,dU_\"";
      stringArray0[3] = "+Fl_:Kq";
      stringArray0[4] = "Hha{fQ";
      int int0 = outputFormat1.parseOptions(stringArray0, 2);
      assertTrue(outputFormat1.isExpandEmptyElements());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.360596861096938
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("%_>U/72H-D#^", true, "%_>U/72H-D#^");
      outputFormat0.setIndentSize(1);
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[5];
      outputFormat0.setTrimText(false);
      stringArray0[0] = "%_>U/72H-D#^";
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      stringArray0[1] = "%_>U/72H-D#^";
      stringArray0[2] = "%_>U/72H-D#^";
      stringArray0[3] = "%_>U/72H-D#^";
      stringArray0[4] = "%_>U/72H-D#^";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isTrimText();
      outputFormat0.setIndent((String) null);
      outputFormat0.parseOptions(stringArray0, 0);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(outputFormat0.isXHTML());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[10];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("=70~DbTy<0k");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("=70~DbTy<0k", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(boolean0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }
}
