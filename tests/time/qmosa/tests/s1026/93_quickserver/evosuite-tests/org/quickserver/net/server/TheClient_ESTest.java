/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:28:51 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.Proxy;
import java.net.Socket;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.util.xmlreader.DBObjectPoolConfig;
import org.quickserver.util.xmlreader.QuickServerConfig;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("objectPoolConfig-maxActive", 3);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte)32;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((byte)32);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/secure/secure-store/key-store-info/store-file");
      TheClient theClient0 = new TheClient();
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress((byte)32);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      theClient0.setSocket(mockSocket0);
      String string0 = theClient0.toString();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.710401248597012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setCommunicationLogging(false);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setTrusted(true);
      theClient0.getTimeoutMsg();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTry((-285));
      theClient0.getTimeout();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientEvent();
      theClient0.toString();
      theClient0.setTimeout(91);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getCommunicationLogging();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientObjectHandler();
      theClient0.toString();
      theClient0.getClientEventHandler();
      assertEquals(91, theClient0.getTimeout());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.48629831128984
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(3554);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(4408);
      theClient0.getClientObjectHandler();
      theClient0.getServer();
      Data data0 = new Data();
      theClient0.setClientData(data0);
      theClient0.getClientCommandHandler();
      theClient0.toString();
      ClientData clientData0 = theClient0.getClientData();
      theClient0.setClientData(clientData0);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.getAuthenticator();
      TheClient theClient1 = new TheClient();
      theClient1.setAuthenticator((Authenticator) null);
      theClient0.getClientWriteHandler();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      ClientAuthenticationHandler clientAuthenticationHandler0 = theClient0.getClientAuthenticationHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientAuthenticationHandler(clientAuthenticationHandler0);
      theClient0.getSocketChannel();
      assertEquals(4408, theClient0.getMaxAuthTry());
      
      theClient1.getSocket();
      theClient1.getClientBinaryHandler();
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(59L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout((-1));
      theClient0.getTrusted();
      theClient0.setTrusted(true);
      theClient0.getTimeout();
      theClient0.toString();
      assertEquals((-1), theClient0.getTimeout());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientCommandHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientBinaryHandler();
      theClient0.getClientCommandHandler();
      theClient0.getClientEvent();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.582567877087128
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      TheClient theClient1 = new TheClient();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.setMaxAuthTry(0);
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.setMaxAuthTry(4408);
      theClient1.getClientObjectHandler();
      theClient0.getServer();
      theClient1.getServer();
      theClient0.getAuthenticator();
      theClient0.setMaxConnectionMsg("");
      theClient0.setTimeoutMsg("Where options include:\n");
      TheClient theClient2 = new TheClient();
      theClient2.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getSocket();
      theClient0.toString();
      theClient1.getCommunicationLogging();
      theClient0.getClientEventHandler();
      theClient2.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient1.getClientCommandHandler();
      assertEquals(4408, theClient1.getMaxAuthTry());
      
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient2.setServer((QuickServer) null);
      theClient0.getClientBinaryHandler();
      theClient2.getClientCommandHandler();
      theClient2.getClientEvent();
      assertTrue(theClient2.getCommunicationLogging());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.198959292011301
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientData();
      theClient0.getTimeoutMsg();
      theClient0.getAuthenticator();
      theClient0.getMaxAuthTryMsg();
      theClient0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      theClient0.getClientEvent();
      theClient0.getClientExtendedEventHandler();
      theClient0.toString();
      theClient0.getAuthenticator();
      theClient0.getTimeoutMsg();
      theClient0.getClientEvent();
      theClient0.getClientObjectHandler();
      theClient0.getMaxConnectionMsg();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getSocketChannel();
      theClient0.getClientObjectHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getSocketChannel();
      theClient0.getTimeoutMsg();
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientBinaryHandler();
      System.setCurrentTimeMillis(3998L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3203928312357034
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTryMsg("Timeout");
      theClient0.setTimeout(1241);
      theClient0.getClientEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.MAX_CON_BLOCKING;
      theClient0.setClientEvent(clientEvent0);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxAuthTryMsg();
      TheClient theClient1 = new TheClient();
      theClient1.getAuthenticator();
      theClient1.setAuthenticator((Authenticator) null);
      theClient0.getTimeout();
      theClient1.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getMaxAuthTry();
      theClient0.getClientWriteHandler();
      assertEquals(1241, theClient0.getTimeout());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.5354315286325124
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NetworkHandling.openRemoteTcpServer((EvoSuiteRemoteAddress) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTry(125);
      theClient0.setTrusted(true);
      theClient0.getTimeoutMsg();
      TheClient theClient1 = new TheClient();
      theClient1.getServer();
      theClient1.getClientBinaryHandler();
      theClient0.getClientExtendedEventHandler();
      theClient1.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTryMsg((String) null);
      theClient0.setTimeout(125);
      theClient0.getClientEventHandler();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientBinaryHandler();
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      theClient1.setClientEvent(clientEvent0);
      theClient1.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.getAuthenticator();
      TheClient theClient2 = new TheClient();
      theClient2.getTimeout();
      TheClient theClient3 = new TheClient();
      theClient3.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getMaxAuthTry();
      assertEquals(125, theClient0.getMaxAuthTry());
      
      theClient3.getClientWriteHandler();
      assertEquals(0, theClient3.getMaxAuthTry());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5831059454218064
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(3554);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(4408);
      theClient0.getClientObjectHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getServer();
      theClient0.getServer();
      theClient0.getAuthenticator();
      theClient0.setMaxConnectionMsg("Where options include:\n");
      theClient0.setTimeoutMsg("'a@ ?$+!/vk5|O=pS9");
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getSocket();
      theClient0.toString();
      theClient0.getTrusted();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setServer((QuickServer) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientCommandHandler();
      theClient0.getClientEvent();
      theClient0.getAuthenticator();
      theClient0.getSocket();
      theClient0.getServer();
      assertEquals(4408, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(3554);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setMaxAuthTry(4408);
      theClient0.getClientObjectHandler();
      theClient0.getServer();
      theClient0.getServer();
      theClient0.getAuthenticator();
      theClient0.setMaxConnectionMsg("Where options include:\n");
      theClient0.setTimeoutMsg("'a@ ?$+!/vk5|O=pS9");
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getSocket();
      theClient0.getTimeoutMsg();
      theClient0.getCommunicationLogging();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setServer((QuickServer) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientCommandHandler();
      theClient0.getClientEvent();
      assertEquals(4408, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setCommunicationLogging(false);
      theClient0.getClientWriteHandler();
      theClient0.getClientObjectHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler((-1819));
      blockingClientHandler0.getClientData();
      assertEquals("<ClientHandler-Pool#-1819-ID:1>", blockingClientHandler0.getName());
      
      theClient0.setClientData((ClientData) null);
      theClient0.getClientCommandHandler();
      theClient0.toString();
      theClient0.setClientData((ClientData) null);
      theClient0.getClientExtendedEventHandler();
      TheClient theClient1 = new TheClient();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getAuthenticator();
      theClient0.getCommunicationLogging();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer();
      QuickServerConfig quickServerConfig0 = new QuickServerConfig();
      quickServerConfig0.getDBObjectPoolConfig();
      quickServer0.setDBObjectPoolConfig((DBObjectPoolConfig) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setServer(quickServer0);
      theClient0.setMaxConnectionMsg("no socket");
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.getSocket();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setMaxConnectionMsg("no socket");
      theClient0.getClientAuthenticationHandler();
      theClient0.setTrusted(true);
      System.setCurrentTimeMillis(610L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.7109393169316904
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.toString();
      theClient0.setClientData((ClientData) null);
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient0.setTrusted(true);
      theClient0.setMaxAuthTryMsg("");
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setMaxAuthTry((-1966));
      theClient0.setTrusted(true);
      theClient0.getTimeoutMsg();
      theClient0.getServer();
      theClient0.getClientBinaryHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setMaxAuthTryMsg("Timeout");
      theClient0.setTimeout(0);
      theClient0.getClientEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientEvent(clientEvent0);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getTimeout();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getMaxAuthTry();
      theClient0.getClientWriteHandler();
      theClient0.getServer();
      assertEquals((-1966), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1L));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("ALL");
      theClient0.setMaxConnectionMsg("fv5<.;E9/Ik'");
      theClient0.getMaxAuthTryMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis((-13L));
      TheClient theClient0 = new TheClient();
      assertFalse(theClient0.getTrusted());
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      theClient0.setTrusted(true);
      boolean boolean0 = theClient0.getTrusted();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4872576972828044
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      QuickServer quickServer0 = new QuickServer("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", 201);
      theClient0.setServer(quickServer0);
      theClient0.getAuthenticator();
      theClient0.getServer();
      TheClient theClient1 = new TheClient();
      theClient1.getServer();
      theClient0.getAuthenticator();
      theClient1.setMaxConnectionMsg("6");
      theClient0.setTimeoutMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientExtendedEventHandler();
      ClientEvent clientEvent0 = ClientEvent.CLOSE_CON;
      theClient1.setClientEvent(clientEvent0);
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getSocket();
      String string0 = theClient1.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Close Connection)}", string0);
      
      boolean boolean0 = theClient1.getCommunicationLogging();
      assertTrue(boolean0);
      
      TheClient theClient2 = new TheClient();
      theClient2.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient2.getClientCommandHandler();
      theClient1.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setServer((QuickServer) null);
      TheClient theClient3 = new TheClient();
      theClient3.getClientBinaryHandler();
      theClient3.getClientCommandHandler();
      theClient2.getClientEvent();
      theClient2.getClientWriteHandler();
      theClient2.getClientWriteHandler();
      assertFalse(theClient2.getTrusted());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NetworkHandling.openRemoteTcpServer((EvoSuiteRemoteAddress) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(59L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TheClient theClient0 = new TheClient();
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getChannel();
      theClient0.setSocketChannel((SocketChannel) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getSocketChannel();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("objectPoolConfig-maxActive", 3);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[3] = (byte)32;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((byte)32);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("");
      theClient0.getMaxAuthTryMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
  }
}
