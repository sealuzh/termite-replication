/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:20:17 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.gui.StartFrame;
import client.network.ClientMsgReceiver;
import common.Map;
import java.awt.HeadlessException;
import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.Proxy;
import java.net.Socket;
import java.net.UnknownHostException;
import java.sql.BatchUpdateException;
import java.sql.DataTruncation;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLTransientConnectionException;
import java.util.HashMap;
import java.util.Stack;
import java.util.Vector;
import messages.global.MapInfo;
import messages.global.MapListMsg;
import messages.global.SessionListMsg;
import messages.round.BombExplodedMsg;
import messages.session.InitializeRoundMsg;
import messages.session.PlayerInfo;
import org.apache.log4j.helpers.LogLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)72;
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      Vector<Integer> vector0 = new Vector<Integer>();
      boolean boolean0 = true;
      BombExplodedMsg bombExplodedMsg0 = new BombExplodedMsg(byte0, vector0, vector0, vector0, boolean0);
      clientMsgReceiver0.processMsg(bombExplodedMsg0);
      byteArray0[0] = byte0;
      String string0 = "V[N";
      try { 
        MockInetAddress.getByAddress(string0, byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [72, 0]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      SessionListMsg sessionListMsg0 = new SessionListMsg();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Stack<PlayerInfo> stack0 = new Stack<PlayerInfo>();
      PlayerInfo playerInfo0 = mock(PlayerInfo.class, new ViolatedAssumptionAnswer());
      stack0.add(playerInfo0);
      InitializeRoundMsg initializeRoundMsg0 = new InitializeRoundMsg(stack0, (Map) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(initializeRoundMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("<Html>The following things are requried:", ";nVEKe.*}w!/");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread mockThread0 = new MockThread((ThreadGroup) null, "2kB*#1UNc=AD1Hq");
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0);
      MockThread.interrupted();
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread2 = new MockThread();
      MockThread mockThread3 = new MockThread((ThreadGroup) null, ";nVEKe.*}w!/");
      MockThread.getAllStackTraces();
      Thread[] threadArray0 = new Thread[8];
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread1;
      threadArray0[1] = (Thread) mockThread3;
      threadArray0[1] = thread0;
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      threadArray0[3] = (Thread) mockThread3;
      threadArray0[4] = (Thread) mockThread1;
      threadArray0[5] = (Thread) mockThread2;
      MockThread.dumpStack();
      threadArray0[6] = (Thread) mockThread0;
      Thread thread1 = MockThread.currentThread();
      threadArray0[7] = thread1;
      MockThread.enumerate(threadArray0);
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      MapListMsg mapListMsg0 = new MapListMsg(stack0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.MapListMsg", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("<Html>The following things are requried:", "mnVEKe.*}w!/");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread mockThread0 = new MockThread((ThreadGroup) null, "2kB*#1UNc=AD1Hq");
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0);
      MockThread.interrupted();
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread2 = new MockThread();
      MockThread mockThread3 = new MockThread((ThreadGroup) null, "mnVEKe.*}w!/");
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[8];
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread1;
      threadArray0[1] = (Thread) mockThread3;
      threadArray0[2] = thread0;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread1;
      mockThread1.getStackTrace();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      threadArray0[6] = (Thread) mockThread0;
      Thread[] threadArray1 = new Thread[3];
      threadArray1[0] = (Thread) clientMsgReceiver0;
      threadArray1[1] = thread0;
      threadArray1[2] = (Thread) mockThread0;
      MockThread.enumerate(threadArray1);
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      MapListMsg mapListMsg0 = new MapListMsg(stack0);
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(mapListMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.MapListMsg", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Tj%3");
      ClassLoader.getSystemClassLoader();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException(batchUpdateException0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      boolean boolean0 = true;
      LogLog.setInternalDebugging(boolean0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(sQLInvalidAuthorizationSpecException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("<Html>The following thing: are Ueuried:", "mnVEKe.*}w!/");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread mockThread0 = new MockThread((ThreadGroup) null, "2kB*#1UNc=AD1Hq");
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0);
      MockThread.interrupted();
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread2 = new MockThread();
      MockThread mockThread3 = new MockThread((ThreadGroup) null, "mnVEKe.*}w!/");
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[8];
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread1;
      threadArray0[1] = (Thread) mockThread3;
      threadArray0[2] = thread0;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread1;
      mockThread1.getStackTrace();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.reset();
      threadArray0[5] = (Thread) mockThread2;
      threadArray0[6] = (Thread) mockThread0;
      Thread[] threadArray1 = new Thread[3];
      threadArray1[0] = (Thread) clientMsgReceiver0;
      threadArray1[1] = thread0;
      threadArray1[2] = (Thread) mockThread0;
      MockThread.enumerate(threadArray1);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(sQLIntegrityConstraintViolationException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("Tj%3");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread mockThread0 = new MockThread((ThreadGroup) null, "ERROR");
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0);
      MockThread.interrupted();
      Thread[] threadArray0 = new Thread[8];
      Thread thread0 = MockThread.currentThread();
      threadArray0[0] = thread0;
      threadArray0[1] = (Thread) clientMsgReceiver0;
      MockThread mockThread2 = new MockThread();
      threadArray0[2] = (Thread) mockThread2;
      threadArray0[3] = (Thread) mockThread1;
      threadArray0[4] = (Thread) clientMsgReceiver0;
      MockThread mockThread3 = new MockThread((ThreadGroup) null, "Tj%3");
      threadArray0[5] = (Thread) mockThread3;
      threadArray0[6] = (Thread) clientMsgReceiver0;
      threadArray0[7] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLIntegrityConstraintViolationException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataTruncation dataTruncation0 = new DataTruncation(0, false, false, 0, 0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      dataTruncation0.getLocalizedMessage();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, true);
      mockPrintWriter0.println((long) 0);
      dataTruncation0.printStackTrace((PrintWriter) mockPrintWriter0);
      dataTruncation0.getParameter();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("", "", dataTruncation0);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      Proxy proxy0 = new Proxy(proxy_Type0, mockInetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataTruncation dataTruncation0 = new DataTruncation(0, false, true, 1, 0);
      dataTruncation0.getTransferSize();
      dataTruncation0.getLocalizedMessage();
      DataTruncation dataTruncation1 = new DataTruncation(0, false, false, 0, 0, dataTruncation0);
      dataTruncation1.addSuppressed(dataTruncation0);
      dataTruncation0.getParameter();
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException("ERROR", "Data truncation", dataTruncation0);
      dataTruncation0.getParameter();
      SQLTransientConnectionException sQLTransientConnectionException1 = new SQLTransientConnectionException("Data truncation", "2-rbVOE`}g,9e%+9!2", dataTruncation0);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(dataTruncation0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      StartFrame startFrame0 = StartFrame.startFrame;
      StartFrame.startFrame = null;
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(dataTruncation0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
