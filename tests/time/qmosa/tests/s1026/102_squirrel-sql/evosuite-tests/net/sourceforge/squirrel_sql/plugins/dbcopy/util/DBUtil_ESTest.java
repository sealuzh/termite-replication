/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:12:22 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLWarning;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JTree;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "fsohSc$ybzF9");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer.valueOf(3);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType.createNewDatabaseObjectType("m@(");
      ImageIcon imageIcon0 = new ImageIcon("6");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer.getInteger("Y(,");
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel((TreeNode) null, false);
      defaultTreeModel0.setAsksAllowsChildren(false);
      JTree jTree0 = new JTree(defaultTreeModel0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.installUI(jTree0);
      JTree jTree1 = new JTree(defaultTreeModel0);
      metalTreeUI0.stopEditing(jTree0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Y(,", "Y(,");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "Y(,", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Y(,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis((-1590L));
      DBUtil.typesAreEquivalent(16, (-1122));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      Integer.getInteger("", 16);
      Integer.min(8300, (-1122));
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getModel();
      JTree jTree0 = new JTree((TreeModel) null);
      jTree0.addNotify();
      jTree0.repaint((long) (-3));
      JTree jTree1 = new JTree((TreeModel) null);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.stopEditing(jTree1);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer.divideUnsigned((int) integerArray0[0], 2796);
      Integer.getInteger("Y(,", integer0);
      Integer integer1 = new Integer(2796);
      Integer.divideUnsigned((-16), 3244);
      Integer.getInteger("Y(,", 2796);
      integerArray0[1] = integer1;
      Integer.divideUnsigned(147, 147);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "/*foo*/ select distinct * from foos foo order by foo.bar, foo.baz", "C(W", "Y(,", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "|]o6I6E@= 3P#t;-*";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|]o6I6E@= 3P#t;-*");
      ISession iSession0 = null;
      int int0 = 1520;
      String string1 = "Y%liabkLFfTFC]RH";
      String string2 = "y$jiBSR{^bTw";
      Integer integer0 = new Integer(1520);
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      linkedList0.add((IDatabaseObjectInfo) null);
      DBUtil.convertObjectToTableList(linkedList0);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("^Y%liabkLFfTFC]%RH", "^Y%liabkLFfTFC]%RH", "+j%G", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer.compareUnsigned((-1935), 1035);
      Integer.compareUnsigned(2796, 4);
      Integer integer1 = new Integer(2796);
      Integer.getInteger("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer.min(1, (int) integerArray0[2]);
      Integer.sum((-2928), (int) integerArray0[0]);
      Integer.getInteger(".xml", (int) integerArray0[1]);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.spliterator();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2796);
      integerArray0[1] = integer1;
      Integer.getInteger("user.dir", 2796);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)18;
      byteArray0[7] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "user.dir");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "log4j.logger.");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J9DAI)NaK<)vAzr");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte) (-8);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      String string0 = "tOJ!~F*Y!I+rFy\\@#";
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string1 = ".xml";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("^6z^Z;-Eyg}0'`-4l[k", (String) null, "^6z^Z;-Eyg}0'`-4l[k", (String) null, (-517), (String) null, (-517), (-517), (-517), (-517), "J9DAI)NaK<)vAzr", "tOJ!~F*Y!I+rFy@#", (-517), (-517), ".xml");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      String string2 = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "octet_length");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("6y%F<#wy.)5`s=w", ".xml", "6y%F<#wy.)5`s=w", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-16), "ltOJ!~F*Y!I+rFy@#", (-16), (-16), (-16), (-1113), "6y%F<#wy.)5`s=w", "a&ISWO8T/5z1VHQEI", 4000, 1, "[eUy:@nd8:");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".xml");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-113);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".xml");
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer.valueOf(3);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("S", (String) null, "(", "OzNl?M:/w", 11448517, " that matched ", 3, (-1073741822), (-1073741822), 4627, (String) null, "L{,+%", 252, 3, "S");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      ImageIcon imageIcon0 = new ImageIcon("$N~|t&#9BH?T}X(c");
      DatabaseObjectType.createNewDatabaseObjectType("6", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      ImageIcon imageIcon1 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("4$]cPg)J^U", (Icon) imageIcon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo1 = (TableColumnInfo)DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      assertEquals("(", tableColumnInfo1.getTableName());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 2796;
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      DBUtil.convertTableToObjectList(stack0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "replaceOtherDataType: unexpected exception - ", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("br)", " that matched ", "G?K/fIG?{,@[Ujd", " that matched ", (-2357), "L{,+%", (-1858), 4, 4, (-2357), " that matched ", (String) null, 3, 2005, "br)");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getChangeLogFile();
      FileWrapperImpl.listRoots();
      fileWrapperFactoryImpl0.create(fileWrapper0, "failed to load table names");
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      Integer integer0 = new Integer((-1858));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      byteArray0[2] = (byte)18;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals(" that matched ,  that matched ,  that matched ,  that matched ,  that matched ", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "ClNI";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ClNI", "J2=", "|yP2_=vQZ|X@:'kh", "ClNI", 0, "J2=", 0, (-4), 4209, 0, "", "", 0, (-4), "S");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      byte byte0 = (byte) (-112);
      String string1 = null;
      String string2 = "case";
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "VCtJBk\"UYX-lkKa", "case", (String) null, (-4));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer.valueOf(3);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType.createNewDatabaseObjectType("m@(");
      ImageIcon imageIcon0 = new ImageIcon("6");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("WzL?Mg?^", "WzL?Mg?^", "@;#R(Qct?*VMXy~)", "@;#R(Qct?*VMXy~)", 0, "%=.sm`xzLB K!>PJ<Rt", 2207, 0, 143, 2004, "[eUy:@nd8:", "%=.sm`xzLB K!>PJ<Rt", 2, 0, ">G:=I,&A0/X=^dlEj");
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer.valueOf(3);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("S", (String) null, "(", "OzNl?M:/w", 11448553, " that matched ", (-1952257859), (-1073741822), (-1073741822), 4627, (String) null, "L{,+%", 252, (-2114946014), "m@(");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      ImageIcon imageIcon0 = new ImageIcon("6");
      DatabaseObjectType.createNewDatabaseObjectType("6", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("VCtJBk\"UYX-lkKa", "VCtJBk\"UYX-lkKa", "`NRD", "`NRD", 2009, "`NRD", 2009, 0, 129, 0, "VCtJBk\"UYX-lkKa", "kqcKk", 2009, 2009, "ClNI");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("`NRD");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("kqcKk");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("ClNI");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.createNewDatabaseObjectType("no action");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getAccessibleContext();
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.createNewDatabaseObjectType("no action", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("0dMngU{&-C~0", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      DatabaseObjectType.createNewDatabaseObjectType("no action", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("ClNI", (Icon) imageIcon0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[4];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("`NRD, `NRD, `NRD, `NRD", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer((-1732));
      Integer.getInteger((String) null, (-1732));
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("VCtJBk\"UYX-lkKa", "_l=?Z[%Di<((/2\"", "TRUNCATE TABLE ", "TRUNCATE TABLE ", 1236, "_\"%'/6x2@;Ey", (-1732), (-2046), 99, 1236, "VCtJBk\"UYX-lkKa", "fN#0$u/-h<", 444, (-1732), (String) null);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2796);
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      integerArray0[4] = integer4;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Integer.remainderUnsigned((int) integerArray0[0], 91);
      DBUtil.fixCase((ISession) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = null;
      iDatabaseObjectInfoArray0[1] = null;
      iDatabaseObjectInfoArray0[2] = null;
      iDatabaseObjectInfoArray0[3] = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("^6z^Z;-Eyg}0'`-4l[k", "^6z^Z;-Eyg}0'`-4l[k", "^6z^Z;-Eyg}0'`-4l[k", "oO,X:C", (-278), "viewName", 400, (int) integerArray0[0], 2004, 1237, "(O8J", "", (int) integerArray0[0], 387, "*R{ ]KR#.");
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[5] = null;
      iDatabaseObjectInfoArray0[6] = null;
      iDatabaseObjectInfoArray0[7] = null;
      iDatabaseObjectInfoArray0[8] = null;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.jfree.data.time.TimePeriodValues", " that matched ", "G?K/fIG?{,@[Ujd", " that matched ", (-2357), "L{,+%", (-2357), 2461, 2461, (-2369), " that matched ", (String) null, 3, 5000, "DBUtil.error.missingtable");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getSquirrelHomeDir();
      fileWrapperFactoryImpl0.create(fileWrapper0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileWrapper fileWrapper1 = applicationFileWrappersImpl0.getEditWhereColsFile();
      fileWrapperFactoryImpl0.createTempFile("y(V9~bD7", "DBUtil.error.missingtable");
      fileWrapperFactoryImpl0.createTempFile(" that matched ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", fileWrapper1);
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(2289, tableColumnInfo0, (ISession) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)18;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "DBUtil.error.missingtable");
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(2461);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      DBUtil.replaceDistinctDataType((-2218), (TableColumnInfo) null, (ISession) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte) (-24);
      byteArray0[8] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " DROP DEFAULT");
      System.setCurrentTimeMillis(3634L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("VCtJBk\"UYX-lkKa", "VCtJBk\"UYX-lkKa", "`NRD", "`NRD", 2009, "`NRD", 2009, 0, 188, 0, "VCtJBk\"UYX-lkKa", "kqcKk", 2009, 2009, "ClNI");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("`NRD");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("kqcKk");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.createNewDatabaseObjectType("no action");
      DatabaseObjectType.createNewDatabaseObjectType("zmPv$F");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getAccessibleContext();
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("no action", (Icon) imageIcon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "`NRD", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2796);
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, " that matched ", "org.jfree.data.jdbc.JDBCXYDataset", "net.sourcefore.squirrel_sq.plugins.dcopy.dbcopy", (int) integerArray0[1], "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-104), 2796, 7, (-16), (String) null, "9a4#L", (int) integerArray0[2], (int) integerArray0[2], " that matched ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "", "L9*[_1(c*SQ[8Tc(", "*S_p?x", 2004, "*S_p?x", 2004, 2004, 2004, (-104), "m", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2004, (-104), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = " that matched ";
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " that matched ", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong(2796);
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.max(7, (-15));
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[2];
      integerArray0[0] = integer4;
      integerArray0[1] = integer2;
      stack0.toArray(integerArray0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[0] = null;
      iDatabaseObjectInfoArray0[1] = null;
      iDatabaseObjectInfoArray0[2] = null;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(3, list0.size());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "Ja-Vf5)|Uw*@Z4TK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      dBCopyPlugin0.unload();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      dBCopyPlugin0.getPluginUserSettingsFolder();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "NO", " 2B<]@W&]PR` 6+lYu");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("VCtJBk\"UYX-lkKa", "VCtJBk\"UYX-lkKa", "", "", 2009, "", 0, 0, 129, 0, "VCtJBk\"UYX-lkKa", "kqcKk", 0, 2009, "ClNI");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("");
      DatabaseObjectType.createNewDatabaseObjectType("kqcKk");
      DatabaseObjectType.createNewDatabaseObjectType("CA0;");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("ClNI");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType(" seems to already have it defined.");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("kqcKk", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("VCtJBk\"UYX-lkKa", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql((SessionInfoProvider) null, tableColumnInfo0, "kqcKk", "VCtJBk\"UYX-lkKa");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      stack0.toArray(integerArray0);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      boolean boolean0 = DBUtil.typesAreEquivalent((-2114946014), 5334);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer.compareUnsigned((-1935), 1035);
      Integer.compareUnsigned(2796, 4);
      Integer integer1 = new Integer(2796);
      Integer.getInteger("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer.min(1, (int) integerArray0[2]);
      Integer.sum((-2928), (int) integerArray0[0]);
      Integer.getInteger(".xml", (int) integerArray0[1]);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer.toUnsignedString((-266));
      Integer.getInteger("lmXCEGjqD6%0O9_", integer1);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      Integer integer6 = JLayeredPane.FRAME_CONTENT_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-68);
      byteArray0[4] = (byte)8;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte)111;
      byteArray0[6] = (byte) (-112);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("t", "t", "t", (String) null, 7, "t", 7, 7, (-1158), (-57), (String) null, "auc;r|`'J>(x;m6%DFg", 514, 514, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((SQLWarning) null).when(connection0).getWarnings();
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      connectionWrapper0.getWarnings();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall((String) null, 0, 1057, (-1166));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte)111;
      byteArray0[6] = (byte) (-112);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", (String) null, 7, "", 7, 7, (-1158), 0, (String) null, "cF", 514, 514, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall((String) null, 0, 1057, (-1166));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer.getInteger("Y(,", integer0);
      Integer integer1 = new Integer(2796);
      integerArray0[1] = integer1;
      Integer.divideUnsigned(135, 135);
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBUtil.typesAreEquivalent((-2395), 872);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-3), (-3));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Integer.valueOf(3);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      ImageIcon imageIcon0 = new ImageIcon();
      JLabel jLabel0 = new JLabel(imageIcon0);
      jLabel0.setAlignmentX(0.0F);
      imageIcon0.setImageObserver(jLabel0);
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("6", (Icon) imageIcon0);
      imageIcon0.getImageLoadStatus();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF;
      ImageIcon imageIcon1 = new ImageIcon();
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent(0, 5);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.jfree.data.time.Day");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".xml", "org.jfree.data.time.Day", ".xml", "^6z^Z;-Eyg}0'`-4l[k", (-1182), ". Skipping FK constraint", (-908), 12, 2869, 1564, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1182), (-644), "^6z^Z;-Eyg}0'`-4l[k");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1182), int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setPasteToTableName((String) null);
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " that matched ", 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DBUtil.setLastStatementValues("");
      DBUtil.getLastStatementValues();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("changes.txt", dBCopyPlugin0.getChangeLogFileName());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "VCtJBk\"UYX-lkKa", "}iV", "}iV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences((DBCopyPreferenceBean) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "rNcIZ", "MR", "O'6A@Pc{Vm46%3-PyzQ", (-1235), "java.util.Calendar", (-1235), (-769), 40000, 5, "MR", "tck\u0007Qsa=k5CJBKuhB", 1001, 1, "M~");
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis(1219L);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBUtil.setLastStatement("");
      String string0 = "";
      String string1 = "";
      String string2 = "";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string3 = "!qI|0";
      String string4 = "Geer%";
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("!qI|0", "", "Geer%");
      dBCopyPlugin0.setDestDatabaseObject(databaseObjectInfo0);
      // Undeclared exception!
      try { 
        dBCopyPlugin0.sessionStarted((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(25, 25);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Integer.valueOf(3);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      ImageIcon imageIcon0 = new ImageIcon();
      JLabel jLabel0 = new JLabel(imageIcon0);
      jLabel0.setAlignmentX(0.0F);
      imageIcon0.setImageObserver(jLabel0);
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("6", (Icon) imageIcon0);
      imageIcon0.getImageLoadStatus();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF;
      ImageIcon imageIcon1 = new ImageIcon();
      imageIcon1.getAccessibleContext();
      imageIcon1.getDescription();
      DatabaseObjectType.createNewDatabaseObjectType("KgMGUMOV$74<Dr?7", (Icon) imageIcon1);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("Ll`{", "6", "RL;{", (ISession) null, false, 641);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      DBUtil.getLastStatement();
      dBCopyPlugin0.getSourceSession();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getCollapsedIcon();
      JTree jTree0 = new JTree();
      jTree0.repaint(1L);
      JTree jTree1 = new JTree((TreeModel) null);
      metalTreeUI0.stopEditing(jTree0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", false);
      JInternalFrame.JDesktopIcon jInternalFrame_JDesktopIcon0 = new JInternalFrame.JDesktopIcon(jInternalFrame0);
      assertTrue(jInternalFrame_JDesktopIcon0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer.compareUnsigned((-1935), 1035);
      Integer.compareUnsigned(2796, 4);
      Integer integer1 = new Integer(2796);
      Integer.getInteger("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer.min(1, (int) integerArray0[2]);
      Integer.sum((-2928), (int) integerArray0[0]);
      Integer.getInteger(".xml", (int) integerArray0[1]);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer.compare(938, 11);
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.compareUnsigned(4526, 2000);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "PreferencesPanel.writeScriptToolTip", "MUUQ ^3dlo)c#?ULo~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
