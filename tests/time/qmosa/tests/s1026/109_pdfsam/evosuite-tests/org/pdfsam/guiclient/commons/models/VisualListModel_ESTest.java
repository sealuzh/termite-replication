/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:36:55 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.ItemListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.image.LookupOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.renderable.ParameterBlock;
import java.net.URLStreamHandler;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DropMode;
import javax.swing.JComboBox;
import javax.swing.JEditorPane;
import javax.swing.JLayeredPane;
import javax.swing.JPopupMenu;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9280478396261032
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      jComboBox0.transferFocus();
      jComboBox0.setComponentPopupMenu((JPopupMenu) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = visualPageListItemArray0[2];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(0, 0, true);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9128646770098026
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      jComboBox0.transferFocus();
      jComboBox0.setComponentPopupMenu((JPopupMenu) null);
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = visualPageListItemArray0[2];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(0, 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8688245196701632
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      ItemListener itemListener0 = mock(ItemListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(itemListener0, itemListener0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ItemListener) aWTEventMulticaster0, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster1, (ItemListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ItemListener) aWTEventMulticaster1, (ItemListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster0, (ItemListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ItemListener) aWTEventMulticaster0, (ItemListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((ItemListener) null, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ItemListener) aWTEventMulticaster1, (ItemListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster0, (ItemListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster5, (ItemListener) aWTEventMulticaster2);
      DropMode.values();
      visualListModel0.subList(0, 0, true);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 419;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(0, 419, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<Object> stack0 = new Stack<Object>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.getElementAt(13);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      visualListModel1.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.getElements();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.setData(vector0);
      assertTrue(vector0.isEmpty());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      jComboBox0.transferFocus();
      jComboBox0.setComponentPopupMenu((JPopupMenu) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = visualPageListItemArray0[2];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 644);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1614, (-251), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1614) > toIndex(-251)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.475556764799498
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.reverseElements(intArray0);
      AffineTransform affineTransform0 = new AffineTransform();
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Object> stack0 = new Stack<Object>();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0, vector0);
      Vector<Object> vector1 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector1, vector1);
      visualListModel1.subList(0, 0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel2.subList((-1052), 12, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1, (-1), true);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      JEditorPane jEditorPane0 = new JEditorPane("", "");
      DropMode.values();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = Integer.getInteger("", 1175);
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer1 = new Integer((int) integerArray0[1]);
      vector0.add(integer1);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(vector0);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      defaultComboBoxModel0.removeListDataListener(jComboBox1);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) jComboBox0;
      DefaultComboBoxModel<Object> defaultComboBoxModel1 = new DefaultComboBoxModel<Object>(objectArray0);
      assertFalse(defaultComboBoxModel1.equals((Object)defaultComboBoxModel0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      jComboBox0.setComponentPopupMenu((JPopupMenu) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = visualPageListItemArray0[2];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0, stack0);
      Stack<Object> stack1 = new Stack<Object>();
      stack1.retainAll(stack0);
      ParameterBlock parameterBlock1 = new ParameterBlock(stack1, stack1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, sunHints_Key2);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1372);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      Vector<Object> vector1 = parameterBlock1.getParameters();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1, vector0);
      parameterBlock2.getSources();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(vector1);
      Object[] objectArray0 = new Object[0];
      vector0.toArray(objectArray0);
      DefaultComboBoxModel<Object> defaultComboBoxModel1 = new DefaultComboBoxModel<Object>(vector1);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      defaultComboBoxModel1.removeElement(parameterBlock2);
      defaultComboBoxModel1.getListDataListeners();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox1);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 1472;
      intArray0[1] = 2787;
      intArray0[2] = (-1485);
      intArray0[3] = 1039;
      intArray0[4] = 1170;
      intArray0[5] = 2093;
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector1);
      Vector<Object> vector2 = parameterBlock1.getSources();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(vector2);
      DefaultComboBoxModel<Object> defaultComboBoxModel1 = new DefaultComboBoxModel<Object>(vector2);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel1);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      parameterBlock0.getParameters();
      Vector<Object> vector1 = parameterBlock0.getParameters();
      vector1.add((Object) parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.701816533805549
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-5107));
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(2787);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-5107);
      intArray0[1] = (-5107);
      intArray0[2] = 2787;
      linkedHashSet0.add((VisualPageListItem) null);
      intArray0[3] = (-5107);
      intArray0[4] = (-5107);
      intArray0[5] = 2787;
      visualListModel0.removeElements(intArray0, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.clearData();
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.getSize();
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel2.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel2.getSize();
      visualListModel2.moveDownIndexes(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 2787;
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel1.addAllElements(2787, (Collection<VisualPageListItem>) linkedHashSet0);
      assertNotSame(visualListModel1, visualListModel2);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-5107));
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(2787);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndex(2787);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.elementsChanged();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(255, (-4998), 40000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 40000
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      short[] shortArray0 = new short[1];
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(1716, shortArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Object object0 = new Object();
      DropMode dropMode0 = DropMode.ON_OR_INSERT_ROWS;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, dropMode0);
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      float[] floatArray0 = new float[5];
      floatArray0[1] = (float) 1716;
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.moveDownIndex(2515);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      parameterBlock0.getParameters();
      vector0.add((Object) parameterBlock0);
      visualListModel0.reverseElements(intArray0);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer0;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = IIPResolutionDescriptor.MAX_RESOLUTION;
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<Object> stack0 = new Stack<Object>();
      assertEquals(10, stack0.capacity());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt((-1321), (VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.getElements();
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short)0;
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-1074), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-1068), 0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.214822123914342
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      int[] intArray0 = new int[4];
      intArray0[0] = 3;
      intArray0[1] = 0;
      intArray0[2] = (-944);
      intArray0[3] = (-1300);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray1 = new int[2];
      intArray1[0] = 400;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      intArray1[1] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid ICC Profile Data
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Stack<Integer> stack0 = new Stack<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack0);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = integer2;
      integerArray0[1] = integer2;
      integerArray0[2] = integer0;
      integerArray0[3] = integer1;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[5] = integer5;
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(integerArray0);
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((int) integerArray0[5], (Collection<VisualPageListItem>) treeSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(1784, (Collection<VisualPageListItem>) treeSet0);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2096058100845513
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      intArray0[0] = (-1372);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 17;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray1);
      assertArrayEquals(new int[] {17}, intArray1);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0, stack0);
      parameterBlock0.set(0.0, 1299);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      vector0.trimToSize();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer0 = new Integer(1299);
      vector1.add(integer0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(vector1);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) parameterBlock1;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-836));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -836
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      JEditorPane jEditorPane0 = new JEditorPane("1@<h", ";Gd^Z=L");
      DropMode.values();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key2, "AUi6wtQ3z&^#z");
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-892), (-892), true);
      assertNull(collection0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.prependAllElements(arrayDeque0);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.remove(hierarchyBoundsListener0, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener5);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener4);
      Stack<Object> stack0 = new Stack<Object>();
      assertTrue(stack0.isEmpty());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      parameterBlock0.clone();
      parameterBlock0.set(4, 770);
      parameterBlock0.getParameters();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.getFocusListeners();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Integer> stack0 = new Stack<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack0);
      Object object0 = new Object();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      jComboBox0.addFocusListener(metalComboBoxEditor_UIResource0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(stack0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<Object> stack1 = new Stack<Object>();
      visualListModel0.addAllElements(276, (Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Stack<Integer> stack0 = new Stack<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack0);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      Vector<Object> vector0 = null;
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null, (Vector<Object>) null);
      int int0 = (-1734);
      int int1 = 0;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1734), 0, (-1026));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1026
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DropMode dropMode0 = DropMode.INSERT;
      JEditorPane jEditorPane0 = new JEditorPane("AUi6wtQ3z&^#z", "<h");
      jEditorPane0.getDropMode();
      DropMode.values();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, visualListModel0);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = new AffineTransform();
      int[] intArray0 = new int[0];
      DropMode.values();
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      int int0 = 9;
      Integer.compareUnsigned(9, (-545));
      Integer integer1 = Integer.getInteger("wv", (-545));
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer1;
      integerArray0[1] = integer1;
      integerArray0[2] = integer0;
      integerArray0[3] = integer1;
      integerArray0[4] = integer0;
      integerArray0[5] = integer0;
      integerArray0[6] = integer0;
      integerArray0[7] = integer0;
      integerArray0[8] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      Vector<Integer> vector1 = new Vector<Integer>();
      Vector<Integer> vector2 = new Vector<Integer>();
      try { 
        Integer.parseUnsignedInt("wv", (int) integerArray0[1]);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -545 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3809682098476945
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      int[] intArray0 = new int[4];
      intArray0[0] = 3;
      intArray0[1] = 0;
      intArray0[2] = (-944);
      intArray0[3] = (-1293);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray1 = new int[2];
      intArray1[0] = 400;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      intArray1[1] = 1;
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.appendAllElements(linkedList0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid ICC Profile Data
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-564));
      visualListModel0.moveUpIndex((-564));
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener4, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener7 = AWTEventMulticaster.add(hierarchyBoundsListener3, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener5);
      AWTEventMulticaster.remove(hierarchyBoundsListener7, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener6, (HierarchyBoundsListener) null);
      Stack<Object> stack0 = new Stack<Object>();
      assertFalse(stack0.contains((-564)));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-564));
      visualListModel0.moveUpIndex(1);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener4, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener7 = AWTEventMulticaster.add(hierarchyBoundsListener3, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener5);
      AWTEventMulticaster.remove(hierarchyBoundsListener7, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener6, (HierarchyBoundsListener) null);
      Stack<Object> stack0 = new Stack<Object>();
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = new Integer((-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-892), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-892)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AffineTransform affineTransform0 = new AffineTransform();
      Stack<Integer> stack0 = new Stack<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack0);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer[] integerArray0 = new Integer[0];
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(integerArray0);
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements((-345), (Collection<VisualPageListItem>) treeSet0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2186555838402073
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 1701;
      intArray0[1] = (int) (short) (-6);
      intArray0[2] = (int) (short) (-6);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[1] = (-6);
      intArray0[6] = (int) (short) (-6);
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DropMode dropMode0 = DropMode.INSERT;
      JEditorPane jEditorPane0 = new JEditorPane("VY", "<h");
      DropMode dropMode1 = DropMode.ON_OR_INSERT_ROWS;
      DropMode.values();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, "VY");
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(180, 180, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1, (-1), false);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      JEditorPane jEditorPane0 = new JEditorPane("", "");
      DropMode.values();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = Integer.getInteger("", 1175);
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer1 = new Integer((int) integerArray0[1]);
      vector0.add(integer1);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(vector0);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      defaultComboBoxModel0.removeListDataListener(jComboBox1);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) jComboBox0;
      DefaultComboBoxModel<Object> defaultComboBoxModel1 = new DefaultComboBoxModel<Object>(objectArray0);
      assertFalse(defaultComboBoxModel1.equals((Object)defaultComboBoxModel0));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jComboBox0.addHierarchyBoundsListener((HierarchyBoundsListener) null);
      FocusListener[] focusListenerArray0 = jComboBox0.getFocusListeners();
      assertEquals(1, focusListenerArray0.length);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<Object> vector0 = new Stack<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 3);
      vector0.add((Object) defaultTableModel0);
      vector0.spliterator();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      float float0 = 0.0F;
      int int0 = 102;
      int int1 = 119;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 102;
      floatArray0[1] = (float) 102;
      floatArray0[2] = (float) 119;
      floatArray0[3] = (float) 119;
      floatArray0[2] = 0.0F;
      floatArray0[5] = (float) 102;
      floatArray0[1] = (float) 102;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(3, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      parameterBlock1.getParameters();
      ParameterBlock parameterBlock2 = new ParameterBlock(stack0, stack0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-1020), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1020
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jComboBox0.addHierarchyBoundsListener((HierarchyBoundsListener) null);
      jComboBox0.getFocusListeners();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DropMode dropMode0 = DropMode.INSERT;
      JEditorPane jEditorPane0 = new JEditorPane("AUi6wtQ3z&^#z", "<h");
      DropMode dropMode1 = DropMode.INSERT;
      JEditorPane jEditorPane1 = new JEditorPane("<h", "*#=U%/=+[");
      jEditorPane1.getDropMode();
      DropMode.values();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(2505, 1527, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(2788, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2788) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DropMode dropMode0 = DropMode.INSERT;
      JEditorPane jEditorPane0 = new JEditorPane("AUi6wtQ3z&^#z", "<h");
      jEditorPane0.getDropMode();
      DropMode.values();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, visualListModel0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(3056, (-892), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3056) > toIndex(-892)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(12, 12, false);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1897, 1897);
      assertNull(collection0);
  }
}
