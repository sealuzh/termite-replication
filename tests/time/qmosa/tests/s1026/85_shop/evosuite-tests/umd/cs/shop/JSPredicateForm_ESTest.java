/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:24:13 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.LinkedList;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8133224558281074
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("COnfLgZ^Nk`WOG{mp8");
      stringReader0.mark(32);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = new Object();
      jSTerm0.firstElement();
      Integer integer0 = new Integer((-1));
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) null);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm0.matches((JSPredicateForm) jSTerm1, jSSubstitution1);
      // Undeclared exception!
      try { 
        jSTerm1.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.694291475079333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars((-4), 2);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.skip(0L);
      stringReader0.reset();
      streamTokenizer0.slashStarComments(true);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.iterator();
      jSTerm0.clonePF();
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      jSTerm0.clonePF();
      jSTerm1.standarizerPredicateForm();
      System.setCurrentTimeMillis((-2));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Jot");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(1620);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) null);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      jSPredicateForm1.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(2969L);
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Jot");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(1620);
      stringReader0.read();
      stringReader0.markSupported();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars((-4), 1620);
      streamTokenizer0.ordinaryChars((-4), (-1084528426));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      CharBuffer.allocate(60);
      stringReader0.read();
      Integer integer0 = new Integer(60);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) jSSubstitution0);
      jSTerm0.equals((JSPredicateForm) null);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7507184699924547
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "Jot");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      jSPredicateForm0.replaceAll(unaryOperator0);
      Object object0 = jSTerm0.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      Integer integer0 = new Integer(1620);
      jSTerm0.add(object0);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      StringReader stringReader0 = new StringReader("Jot");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("COnfLgZ^Nk`WOG{mp8");
      JSTerm jSTerm0 = new JSTerm();
      JSPredicateForm jSPredicateForm0 = null;
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.472942726245813
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      streamTokenizer1.nextToken();
      streamTokenizer1.ordinaryChar((-4));
      CharBuffer charBuffer0 = CharBuffer.allocate(60);
      charBuffer0.order();
      streamTokenizer0.slashSlashComments(false);
      jSTerm0.add((Object) charBuffer0);
      charBuffer0.duplicate();
      charBuffer0.append('>');
      streamTokenizer0.sval = streamTokenizer0.sval;
      stringReader0.read(charBuffer0);
      streamTokenizer0.pushBack();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm();
      JSTerm jSTerm2 = new JSTerm();
      jSTerm2.makeVariable();
      jSTerm2.add((Object) "not");
      streamTokenizer1.quoteChar(3473);
      jSTerm2.add((Object) null);
      jSTerm1.equals(jSTerm0);
      jSTerm2.equals((JSPredicateForm) jSTerm0);
      jSTerm1.clear();
      jSTerm1.isGround();
      // Undeclared exception!
      try { 
        jSTerm2.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.472942726245813
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("COnfLgZ^Nk`WOG{mp8");
      stringReader0.mark(32);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = new Object();
      jSTerm0.firstElement();
      Integer integer0 = new Integer((-1));
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) null);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      jSTerm0.clonePF();
      // Undeclared exception!
      try { 
        jSTerm1.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = new Object();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 78;
      CharBuffer charBuffer0 = CharBuffer.allocate(78);
      charBuffer0.order();
      charBuffer0.duplicate();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.makeVariable();
      jSTerm1.add((Object) "not");
      jSTerm0.isGround();
      // Undeclared exception!
      try { 
        jSTerm1.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.442470333070849
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "Jot");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      Integer integer0 = new Integer(1620);
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSTerm1.equals(jSPredicateForm2);
      assertFalse(boolean0);
      
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.clonePF();
      JSPredicateForm jSPredicateForm4 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm5 = new JSPredicateForm();
      jSTerm0.toStr();
      jSTerm0.toStr();
      JSSubstitution jSSubstitution1 = jSPredicateForm3.matches(jSPredicateForm1);
      assertFalse(jSPredicateForm1.equals((Object)jSPredicateForm4));
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      jSSubstitution1.removeElement(jSPredicateForm0);
      jSTerm0.applySubstitutionT(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      Object object0 = jSPredicateForm0.clone();
      jSTerm1.add(object0);
      int int0 = 4272;
      CharBuffer charBuffer0 = CharBuffer.allocate(4272);
      CharBuffer.allocate(4272);
      // Undeclared exception!
      try { 
        charBuffer0.subSequence((-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4118090007716961
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7\u0005aGtgDU/V y+/");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashStarComments(false);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSTerm0.iterator();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      Integer integer0 = new Integer(2441);
      jSTerm0.add((Object) jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm((String) null);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("COnfLgZ^Nk`WOG{mp8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.markSupported();
      stringReader0.read();
      JSSubstitution jSSubstitution0 = jSTerm0.matches((JSPredicateForm) jSTerm0);
      jSSubstitution0.removeElement("");
      jSTerm0.lastElement();
      Integer integer0 = new Integer(1526);
      jSSubstitution0.remove((Object) integer0);
      jSSubstitution0.remove((Object) "COnfLgZ^Nk`WOG{mp8");
      jSSubstitution0.removeElement("%%%");
      JSTerm jSTerm1 = jSTerm0.applySubstitutionT(jSSubstitution0);
      jSTerm1.add((Object) jSTerm0);
      CharBuffer.allocate(1526);
      int int0 = (-2061667107);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-2061667107));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9553232836201198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars((-4), (-4));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.skip((-4));
      stringReader0.reset();
      streamTokenizer0.slashStarComments(true);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer0.eolIsSignificant(true);
      jSTerm1.iterator();
      jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      stringReader0.ready();
      jSTerm0.clonePF();
      jSSubstitution0.add((Object) streamTokenizer0);
      jSTerm1.applySubstitutionPF(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "COnfLgZ^N^k`WOG{mp8");
      jSTerm0.setSize(563);
      StringReader stringReader0 = new StringReader("TxoXgO");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashStarComments(false);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.iterator();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CWnfLgZ^Nk`WOm{mp8");
      stringReader0.markSupported();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.302597338021332
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "Jot");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      jSPredicateForm0.replaceAll(unaryOperator0);
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) jSSubstitution0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      jSSubstitution0.removeIf(predicate3);
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm1.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean0 = jSTerm1.equals(jSPredicateForm2);
      assertTrue(boolean0);
      
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.clonePF();
      JSPredicateForm jSPredicateForm4 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm5 = new JSPredicateForm();
      jSPredicateForm1.toStr();
      StringBuffer stringBuffer0 = jSPredicateForm2.toStr();
      assertEquals(5, stringBuffer0.length());
      
      JSPredicateForm jSPredicateForm6 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm4.removeAll(jSPredicateForm5);
      jSPredicateForm6.print();
      jSPredicateForm6.clonePF();
      jSPredicateForm6.clonePF();
      jSPredicateForm6.print();
      assertNotSame(jSPredicateForm2, jSPredicateForm3);
      assertNotSame(jSPredicateForm2, jSPredicateForm6);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4780709313740181
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      Integer integer0 = new Integer((-2));
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.add((Object) jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      jSPredicateForm2.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3021631217816445
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "Jot");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      jSPredicateForm0.replaceAll(unaryOperator0);
      JSTerm jSTerm1 = (JSTerm)jSTerm0.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      Integer integer0 = new Integer(1620);
      boolean boolean0 = jSTerm1.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      boolean boolean1 = jSTerm1.equals(jSPredicateForm2);
      assertFalse(boolean1 == boolean0);
      
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.clonePF();
      JSPredicateForm jSPredicateForm4 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm3.print();
      JSPredicateForm jSPredicateForm5 = new JSPredicateForm();
      jSPredicateForm1.toStr();
      StringBuffer stringBuffer0 = jSPredicateForm2.toStr();
      assertEquals("(Jot)", stringBuffer0.toString());
      
      JSPredicateForm jSPredicateForm6 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm4.removeAll(jSPredicateForm5);
      jSPredicateForm6.print();
      jSPredicateForm6.clonePF();
      jSPredicateForm6.clonePF();
      assertNotSame(jSPredicateForm2, jSPredicateForm3);
      assertNotSame(jSPredicateForm2, jSPredicateForm6);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "COnfLgZ^N^k`WOG{mp8");
      int int0 = 563;
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSSubstitution0.trimToSize();
      jSTerm0.lastElement();
      jSSubstitution0.remove((Object) "COnfLgZ^N^k`WOG{mp8");
      jSSubstitution0.remove((Object) jSSubstitution1);
      jSSubstitution1.removeElement((Object) null);
      jSTerm0.applySubstitutionT(jSSubstitution0);
      jSTerm0.add((Object) jSSubstitution1);
      CharBuffer.allocate(563);
      int int1 = 1;
      CharBuffer.allocate(1);
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 96, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7\u0005aGtgDU/V y+/");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution2);
      Object object0 = new Object();
      jSSubstitution3.removeElement(object0);
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSTerm0.applySubstitutionT(jSSubstitution4);
      JSTerm jSTerm1 = null;
      try {
        jSTerm1 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1Uk:Y]1yyJwD[~");
      StringReader stringReader1 = new StringReader(":mkyZ4}HVI");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(462);
      linkedList0.add(integer0);
      jSPredicateForm0.removeAll(linkedList0);
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "7.0";
      StringReader stringReader0 = new StringReader("7.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      CharBuffer charBuffer0 = CharBuffer.allocate(46);
      jSTerm0.add((Object) charBuffer0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.nio.HeapCharBuffer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "COnfLgZ^N^k`WOG{mp8");
      int int0 = 563;
      jSTerm0.setSize(563);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = jSTerm0.clone();
      jSTerm0.add(object0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      System.setCurrentTimeMillis(1518L);
      CharBuffer charBuffer0 = CharBuffer.allocate(1417);
      CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.subSequence(138, 1417);
      CharBuffer.allocate(1417);
      // Undeclared exception!
      try { 
        charBuffer0.subSequence((-361110230), 1417);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Jot");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar((-4));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      Integer integer0 = new Integer((-4));
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) "Jot");
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      streamTokenizer0.commentChar((-4));
      StringReader stringReader1 = new StringReader("Jot");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      streamTokenizer2.quoteChar(0);
      jSTerm0.equals(jSTerm1);
      jSTerm0.clear();
      System.setCurrentTimeMillis((-399L));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Jot");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.wordChars((-1621178776), 0);
      streamTokenizer0.sval = "Jot";
      streamTokenizer0.commentChar(1620);
      stringReader0.markSupported();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars((-4), 1620);
      streamTokenizer0.ordinaryChars((-4), (-1084528426));
      streamTokenizer1.nval = 1.0;
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      CharBuffer.allocate(60);
      Integer integer0 = new Integer(60);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "Jot");
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.makeEval(false);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "COnfLgZ^N^k`WOG{mp8");
      int int0 = 563;
      jSTerm0.setSize(563);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(46);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Integer integer1 = new Integer(61);
      Integer integer2 = new Integer(46);
      Integer integer3 = new Integer(61);
      Integer integer4 = new Integer(46);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "COnfLgZ^Nk`WOG{mp8";
      StringReader stringReader0 = new StringReader("COnfLgZ^Nk`WOG{mp8");
      int int0 = 32;
      stringReader0.mark(32);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.close();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm1.matches((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7.0");
      StringReader stringReader1 = new StringReader("1Uk:Y]1yyJwD[~");
      StringReader stringReader2 = new StringReader(":mkyZ4}HVI");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("1Uk:Y]1yyJwD[~");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "CWnfLgZ^Nk`WOm{mp8";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(wLz]/`Q.aku");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
