/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:12:28 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.196939089991099
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setLightColor((-1));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setVideoWidth(298);
      homeEnvironment0.getSkyColor();
      homeEnvironment1.setSkyColor((-1));
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.getVideoFrameRate();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("com.eteks.sweethome3d.tools.ResourceURLContent", ">.Q.OXO4 s^)?R>wig", 300, "GROUND_COLOR", uRLStreamHandler0);
      homeEnvironment0.getVideoHeight();
      System.setCurrentTimeMillis(0);
      homeEnvironment1.getPhotoHeight();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(298, homeEnvironment0.getVideoWidth());
      assertEquals(224, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.154968374655302
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setLightColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setPhotoHeight(16);
      homeEnvironment0.setPhotoWidth((-107));
      homeEnvironment0.setCeillingLightColor(11);
      homeEnvironment0.setAllLevelsVisible(true);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("L*Xd#{ [`*$", propertyChangeListener0);
      System.setCurrentTimeMillis(18);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      CatalogTexture catalogTexture0 = new CatalogTexture("L*Xd#{ [`*$", (Content) null, 18, (-1.0F), true);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-1), homeEnvironment0.getLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.261950424367441
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setLightColor((-1));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setVideoWidth(298);
      homeEnvironment0.getSkyColor();
      homeEnvironment1.setPhotoHeight((-1));
      homeEnvironment1.setSkyColor((-1));
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.setGroundColor(16);
      homeEnvironment0.setVideoQuality(626);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("com.eteks.sweethome3d.tools.ResourceURLContent", ">.Q.OXO4 s^)?R>wig", (-1), "GROUND_COLOR", uRLStreamHandler0);
      homeEnvironment0.getVideoHeight();
      System.setCurrentTimeMillis((-1));
      homeEnvironment0.getPhotoHeight();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(16, homeEnvironment0.getVideoFrameRate());
      assertEquals(224, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.170793809518273
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setLightColor((-1));
      homeEnvironment0.setVideoFrameRate(18);
      homeEnvironment0.setPhotoHeight(16);
      homeEnvironment0.setPhotoWidth((-107));
      homeEnvironment0.setCeillingLightColor(11);
      homeEnvironment0.setAllLevelsVisible(true);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.getSkyColor();
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getLightColor();
      boolean boolean0 = homeEnvironment1.isAllLevelsVisible();
      assertEquals((-1), homeEnvironment0.getGroundColor());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 1278;
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth((-291));
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.getPhotoHeight();
      String string0 = "$-SS^7}`id^|4crhAS)";
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent((ClassLoader) null, "!/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1278);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth(0);
      int int0 = 200;
      homeEnvironment0.setGroundColor(200);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(1132);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSkyColor(1620);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoCameraPath();
      String string0 = "$-SS^7}`id^|4crhAS)";
      homeEnvironment0.getPhotoWidth();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent((ClassLoader) null, "$-SS^7}`id^|4crhAS)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setLightColor(0);
      homeEnvironment1.setLightColor(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(2146680406);
      homeEnvironment0.setPhotoWidth(2146680406);
      homeEnvironment2.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment2.getSkyColor();
      assertTrue(homeEnvironment2.isAllLevelsVisible());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.173124811849275
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(33);
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1776, (HomeTexture) null, (-3378), (HomeTexture) null, (-3378), 0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setSkyColor(4870);
      homeEnvironment2.clone();
      homeEnvironment1.getGroundColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment2.getSkyColor();
      System.setCurrentTimeMillis(0L);
      float float0 = homeEnvironment2.getWallsAlpha();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(33);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth(3);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getSkyColor();
      System.setCurrentTimeMillis(1278);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment1.setPhotoHeight(33);
      assertEquals(1278, homeEnvironment0.getLightColor());
      assertEquals(33, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, (Content) null, (-491.71F), 2490.1F, "XMb}l$T}HXCK;");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getDrawingMode();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1054264953948976
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate((-1));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality((-1));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setGroundColor(9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(1, (HomeTexture) null, (-1), (HomeTexture) null, 71, (-623.5F));
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment1.getVideoAspectRatio());
      
      HomeEnvironment homeEnvironment4 = homeEnvironment2.clone();
      HomeEnvironment homeEnvironment5 = new HomeEnvironment(71, (HomeTexture) null, 1908874353, (-100), (-1));
      homeEnvironment2.getGroundColor();
      homeEnvironment5.getSkyTexture();
      homeEnvironment3.getSkyColor();
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment6 = homeEnvironment4.clone();
      assertEquals(13684944, homeEnvironment6.getCeillingLightColor());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.487977817998108
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(93);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getLightColor();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setSkyColor(13684944);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(13684944);
      homeEnvironment2.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!/", propertyChangeListener0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment2.setLightColor(13684944);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setSubpartSizeUnderLight(2672.5227F);
      homeEnvironment1.setLightColor(320);
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getSkyTexture();
      homeEnvironment3.setVideoWidth(0);
      int int0 = homeEnvironment2.getCeillingLightColor();
      assertEquals(13684944, homeEnvironment0.getSkyColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2427292778436665
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-2970.4385F));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(636);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setSkyColor(25);
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setGroundColor(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("  ?s5**J#qu6C", propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera((-2970.4385F), (-2970.4385F), (-2077.3044F), 1223.208F, 3191.1052F, 3191.1052F);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "  ?s5**J#qu6C", propertyChangeListenerProxy0, camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality((-292));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getGroundTexture();
      homeEnvironment1.setGroundColor(9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      int int0 = 15;
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(1, (HomeTexture) null, 15, (HomeTexture) null, (-1080), 1769.338F);
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        homeEnvironment3.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7154779193508705
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setGroundColor(2026);
      homeEnvironment0.setPhotoWidth(636);
      homeEnvironment0.setCeillingLightColor(636);
      homeEnvironment0.setCeillingLightColor(2026);
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoQuality(20);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1049922791552103
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(16);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setGroundColor(9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(1, (HomeTexture) null, 1245, (HomeTexture) null, 71, (-623.5F));
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment2.clone();
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(71, (HomeTexture) null, 1908874353, (-100), (-1));
      homeEnvironment2.getGroundColor();
      homeEnvironment4.getSkyTexture();
      homeEnvironment3.getSkyColor();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1908874353);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.755739480438498
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(12);
      homeEnvironment0.setVideoFrameRate(12);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality((-292));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getGroundTexture();
      homeEnvironment1.setGroundColor(9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      int int0 = 1;
      HomeEnvironment homeEnvironment3 = new HomeEnvironment((-292), (HomeTexture) null, 9, (HomeTexture) null, 1, (-1080));
      HomeEnvironment homeEnvironment4 = new HomeEnvironment((-1214), (HomeTexture) null, 1, (-1418), (-292));
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment4.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1028100642070378
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1278);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality((-86));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setGroundColor(624);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(3642, (HomeTexture) null, (-86), (HomeTexture) null, 3642, (-4490.956F));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setSkyTexture((HomeTexture) null);
      homeEnvironment3.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundColor();
      homeEnvironment1.getSkyTexture();
      int int0 = homeEnvironment3.getSkyColor();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment3.getDrawingMode());
      assertEquals((-86), int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(624);
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      homeEnvironment0.setVideoQuality(765);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      Random.setNextRandom(765);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(624, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2418626953628897
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(12);
      homeEnvironment0.setVideoFrameRate(12);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality((-292));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.getGroundTexture();
      homeEnvironment1.setGroundColor(9);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(1, (HomeTexture) null, 15, (HomeTexture) null, (-1080), 1769.338F);
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment((-292), (HomeTexture) null, (-1080), 12, 1);
      homeEnvironment1.setSubpartSizeUnderLight((-530.0F));
      HomeEnvironment homeEnvironment5 = homeEnvironment0.clone();
      homeEnvironment5.setLightColor(12);
      homeEnvironment1.setCeillingLightColor((-292));
      homeEnvironment4.getSkyTexture();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals((-292), homeEnvironment1.getCeillingLightColor());
      assertEquals((-530.0F), float0, 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.94402561539737
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(33);
      homeEnvironment0.setVideoCameraPath(list0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment1.setGroundColor(11053224);
      homeEnvironment1.setCeillingLightColor(11053224);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getDrawingMode();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getDrawingMode();
      homeEnvironment1.setVideoFrameRate(11053224);
      Random.setNextRandom(2973);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-2752));
      homeEnvironment1.setGroundColor((-2752));
      homeEnvironment1.setPhotoWidth((-2752));
      homeEnvironment1.setSubpartSizeUnderLight((-2752));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(2);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera((-2752), (-2752), 1.7777778F, 1.7777778F, (-2752), 1.0F);
      camera0.clone();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "", camera0, propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoHeight();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setSubpartSizeUnderLight(300);
      homeEnvironment1.getGroundColor();
      homeEnvironment3.setVideoQuality((-2752));
      homeEnvironment2.setSkyColor(209);
      homeEnvironment2.setVideoQuality((-2752));
      homeEnvironment1.setAllLevelsVisible(true);
      assertEquals((-2752.0F), homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 12;
      homeEnvironment0.setGroundColor(12);
      homeEnvironment0.setVideoFrameRate(12);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.setPhotoHeight(12);
      int int1 = (-255);
      int int2 = (-1699);
      homeEnvironment1.setSkyColor((-1699));
      homeEnvironment0.setSkyColor((-255));
      homeEnvironment0.setPhotoQuality(12);
      int int3 = 1;
      TextureImage textureImage0 = null;
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("mp8G#hE4&m4Vua$", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(1);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoWidth((-1037));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality((-1512));
      homeEnvironment1.setSubpartSizeUnderLight(1);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setSubpartSizeUnderLight((-3107.18F));
      homeEnvironment1.setVideoFrameRate((-607));
      float float0 = 0.0F;
      homeEnvironment0.setWallsAlpha(0.0F);
      int int0 = 9;
      homeEnvironment0.setSkyColor(9);
      homeEnvironment1.setSubpartSizeUnderLight(1.0F);
      homeEnvironment1.getSubpartSizeUnderLight();
      HomeEnvironment.DrawingMode.values();
      String string0 = "#t;Fzxu}";
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent((ClassLoader) null, "#t;Fzxu}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setPhotoHeight(33);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setLightColor(1978);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoQuality(0);
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2742746058724936
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-2970.4385F));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(636);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setSkyColor(25);
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("  ?s5**J#qu6C", propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera((-2970.4385F), (-2970.4385F), (-2077.3044F), 1223.208F, 3191.1052F, 3191.1052F);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "  ?s5**J#qu6C", propertyChangeListenerProxy0, camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals((-2970.4385F), float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-379), (HomeTexture) null, (-379), 1808, (-379));
      homeEnvironment0.clone();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setPhotoQuality((-379));
      Camera camera0 = new Camera(1808, 0.0F, 0.0F, 3269.3367F, 3127.0F, 0.0F);
      linkedList0.add(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyColor((-379));
      homeEnvironment0.clone();
      assertEquals((-379), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 2036.416F, 137L);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(18, homeTexture0, 18, homeTexture0, (-1109), (-1109));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1109), homeTexture0, (-1109), homeTexture0, (-1093), 1198.4F);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(13684944, homeTexture1, 8, 13684944, 137L);
      homeEnvironment1.getGroundColor();
      homeEnvironment2.getSkyTexture();
      homeEnvironment2.getSkyColor();
      System.setCurrentTimeMillis(1908874353);
      homeEnvironment0.clone();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
      
      int int0 = homeEnvironment3.getVideoHeight();
      assertEquals(240, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.127429422638514
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(33);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth((-129));
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSkyColor(1492);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoWidth(274);
      homeEnvironment0.setWallsAlpha(2208.0F);
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyColor();
      System.setCurrentTimeMillis(1278);
      homeEnvironment1.clone();
      homeEnvironment1.getWallsAlpha();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("caWnR~}?v:J\u0005ruH&Y.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.caWnR~}?v:J\u0005ruH&Y.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-2752));
      homeEnvironment1.setGroundColor((-2752));
      homeEnvironment1.setPhotoWidth((-2752));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(2);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera((-2752), (-2752), 1.7777778F, 1.7777778F, (-2752), 1.0F);
      camera0.clone();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "", camera0, propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoHeight();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setSubpartSizeUnderLight(300);
      homeEnvironment1.getGroundColor();
      homeEnvironment3.setVideoQuality((-2752));
      homeEnvironment2.setSkyColor(209);
      homeEnvironment2.setVideoQuality((-2752));
      homeEnvironment3.setCeillingLightColor((-1715));
      homeEnvironment3.getPhotoWidth();
      homeEnvironment3.setWallsAlpha((-1.0F));
      assertEquals((-2752), homeEnvironment1.getSkyColor());
      assertEquals((-2752), homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0995015447694865
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(1278);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth(3);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getSkyColor();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(16);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment1.setVideoWidth(16);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSkyColor(13427964);
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent((ClassLoader) null, "VIEW_3D_RATIO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 1;
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setVideoQuality(1);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
      
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(0.0F, float0, 0.01F);
      
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL1, false);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "", resourceURLContent0, 0, 0, "As_", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.994140011011283
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setPhotoWidth(636);
      homeEnvironment0.setCeillingLightColor(636);
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      homeEnvironment0.setVideoQuality(993);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.clone();
      assertEquals(993, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setLightColor((-1));
      homeEnvironment0.setVideoFrameRate(18);
      homeEnvironment0.setPhotoHeight(16);
      homeEnvironment0.setPhotoWidth((-1));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth((-1));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getSkyColor();
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getLightColor();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setPhotoHeight(33);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setLightColor(1978);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setWallsAlpha(0.0F);
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "9rRQ\"##+~5(tIe");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 9rRQ\"##+~5(tIe
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.261950424367441
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setLightColor((-1));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setVideoWidth(298);
      homeEnvironment0.getSkyColor();
      homeEnvironment1.setSkyColor((-1));
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.getGroundColor();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("com.eteks.sweethome3d.tools.ResourceURLContent", ">.Q.OXO4 s^)?R>wig", 300, "GROUND_COLOR", uRLStreamHandler0);
      homeEnvironment0.getVideoHeight();
      System.setCurrentTimeMillis((-1));
      homeEnvironment0.getPhotoHeight();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-1), homeEnvironment0.getLightColor());
      assertEquals(224, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-1));
      homeEnvironment0.setVideoFrameRate(16);
      homeEnvironment0.setLightColor((-1));
      homeEnvironment0.setPhotoHeight(16);
      homeEnvironment0.setPhotoWidth((-107));
      homeEnvironment0.setPhotoWidth((-1));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSubpartSizeUnderLight((-1));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("*l0M^fc5!aa", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("4OX(m)K3#M`Bz", propertyChangeListenerProxy0);
      Camera camera0 = new Camera(1036.9199F, (-107), (-959.04034F), 16, (-959.04034F), (-1831.0F));
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "SKY_COLOR", camera1, camera1);
      propertyChangeEvent0.setPropagationId("4OX(m)K3#M`Bz");
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("SKY_COLOR", "", "4OX(m)K3#M`Bz", "SKY_COLOR");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      assertEquals((-1), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.239471494980297
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-2752));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setGroundColor((-2752));
      homeEnvironment1.setPhotoWidth((-2752));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoFrameRate(2);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera camera0 = new Camera((-2752), (-2752), 1.7777778F, 1.7777778F, (-2752), 1.0F);
      camera0.clone();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "", camera0, propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.setCeillingLightColor(300);
      homeEnvironment1.setSubpartSizeUnderLight(300);
      homeEnvironment1.getGroundColor();
      homeEnvironment1.setVideoQuality((-2752));
      homeEnvironment2.setSkyColor(209);
      homeEnvironment2.setVideoQuality((-2752));
      homeEnvironment2.setVideoFrameRate((-2752));
      int int0 = homeEnvironment2.getCeillingLightColor();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("|2~sRVmVLj5,NgLMA", temporaryURLContent0, 1.3333334F, 325.01205F);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "YAW", resourceURLContent0, 1.3333334F, (-2589.0413F), (String) null, false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-132), homeTexture0, (-132), (-132), 92.0F);
      homeEnvironment0.setVideoQuality(12);
      assertEquals(12, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.1743174176930435
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(93);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getLightColor();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(13684944);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(13427964);
      homeEnvironment0.setGroundColor(12);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment2.setVideoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_4_3;
      homeEnvironment2.setVideoAspectRatio(aspectRatio2);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getGroundColor();
      int int0 = homeEnvironment2.getSkyColor();
      assertEquals(13427964, homeEnvironment2.getCeillingLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1278);
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(0L);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(959, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(240, int0);
      
      homeEnvironment1.isAllLevelsVisible();
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.360365006943756
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(71);
      homeEnvironment1.getLightColor();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setSkyColor(13684944);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.getSkyColor();
      homeEnvironment1.setCeillingLightColor(13427964);
      homeEnvironment1.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!/", propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment1.setLightColor(13427964);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!/", propertyChangeListener1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setAllLevelsVisible(true);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("!/", "", object0, "!/");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertTrue(homeEnvironment1.isAllLevelsVisible());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.553757370430061
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(93);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getLightColor();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSkyColor(13684944);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(13427964);
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment1.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!/", propertyChangeListener0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment2.setLightColor(13427964);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setSubpartSizeUnderLight(2672.5227F);
      homeEnvironment1.setLightColor(320);
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.getSkyTexture();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertTrue(homeEnvironment1.isAllLevelsVisible());
      assertEquals(2672.5227F, float0, 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.360365006943756
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(93);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getLightColor();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setSkyColor(13684944);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(13427964);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment1.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!/", propertyChangeListener0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment2.setLightColor(13427964);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!/", propertyChangeListener1);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setSubpartSizeUnderLight(2672.5227F);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("!/", propertyChangeListenerProxy1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "!/", "!/", homeEnvironment_Property1);
      propertyChangeEvent0.setPropagationId("!/");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      assertEquals(13427964, homeEnvironment2.getCeillingLightColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("5&'X&Rn0x*YGis&v", "5&'X&Rn0x*YGis&v", (Content) null, 424.999F, (-1512.0F), "5&'X&Rn0x*YGis&v", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(12, homeTexture0, 12, homeTexture0, 394, 2208.0F);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte) (-58);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.getPhotoAspectRatio();
      Random.setNextRandom(7);
      System.setCurrentTimeMillis(0L);
      Random.setNextRandom(9);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(33);
      homeEnvironment0.setVideoFrameRate(0);
      Object object0 = new Object();
      Camera camera0 = new Camera(33, 1278, (-233.74F), 0, 2327.994F, (-2102.6F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", camera0, (Object) null);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment0, "", (Object) null, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("e8Z:Ax\"G", propertyChangeListenerProxy0);
      Object object1 = new Object();
      Camera camera1 = new Camera(1.0F, 33, 0, (-1512.0F), 33.0F, 1531.2816F);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, "RATIO_16_9", camera1, object2);
      Object object3 = new Object();
      propertyChangeEvent0.setPropagationId(object3);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(33, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(33);
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setPhotoWidth((-1517));
      System.setCurrentTimeMillis(1L);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      // Undeclared exception!
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(temporaryURLContent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1365));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment1.setVideoWidth((-1289));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J4PkLNu");
      System.setCurrentTimeMillis(858L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment1.getVideoHeight();
      Random.setNextRandom((-967));
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals((-1289), homeEnvironment1.getVideoWidth());
      assertEquals((-967), int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.302244293389504
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(93);
      homeEnvironment1.getLightColor();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setSkyColor(13684944);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.getSkyColor();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(13427964);
      homeEnvironment2.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!/", propertyChangeListener0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment2.setLightColor(13427964);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!/", propertyChangeListener1);
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setAllLevelsVisible(true);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("!/", "", object0, "!/");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setSubpartSizeUnderLight(2672.5227F);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("!/", propertyChangeListenerProxy1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment0, "!/", "!/", homeEnvironment_Property1);
      propertyChangeEvent1.setPropagationId("!/");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      assertEquals(13684944, homeEnvironment0.getSkyColor());
      assertEquals(13427964, homeEnvironment2.getCeillingLightColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(137L);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("editorSubFolder.Windows", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("editorSubFolder.Windows", propertyChangeListenerProxy0);
      Camera camera0 = new Camera(1.5F, 1.5F, 1.5F, 0.0F, 137L, 1.5F);
      Camera camera1 = camera0.clone();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera2 = new Camera(2068.058F, 1.0F, 1309.482F, 0.0F, 1.0F, 137L, 137L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("editorSubFolder.Windows", "editorSubFolder.Windows", camera1, camera2);
      propertyChangeEvent0.setPropagationId(camera_Lens0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("S'?PC5..#4PyD$Zy6", "editorSubFolder.Windows", (Content) null, 0.0F, (-148.0F), "com.eteks.sweethome3d.model.HomeEnvironment$Property", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1289), homeTexture0, 822, 796, 796);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1289), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(822, homeEnvironment0.getSkyColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(796, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(796.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.1021170635140374
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte)22;
      byteArray0[7] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setLightColor(1278);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(33);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoWidth(3);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Camera camera0 = new Camera(240, 2672.5227F, 1278, 0, 3, (-2985.03F));
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.getVideoHeight();
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-337.0F), (-2737L), false);
      System.setCurrentTimeMillis(0L);
      int int0 = homeEnvironment1.getPhotoQuality();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setLightColor(1);
      homeEnvironment0.setCeillingLightColor((-3744));
      HomeEnvironment.DrawingMode.valueOf("OUTLINE");
      homeEnvironment0.setVideoQuality(1005);
      homeEnvironment0.getSubpartSizeUnderLight();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("OUTLINE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.OUTLINE
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
