/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:36:59 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.747844070928354
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      rawVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.getCodeBookNumber();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7245356829811365
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      User user1 = new User();
      user0.setLastName("");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable1.isCoded();
      assertTrue(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User();
      user0.setPhone("~N.]w6Z-<_7m>lg\"#.");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.799228322740754
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(true);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.hasSameDisplayName(derivedVariable3);
      ArrayList<Variable> arrayList2 = derivedVariable2.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList3);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable4);
      derivedVariable4.getSupportingDocuments();
      assertFalse(derivedVariable4.isNewRecord());
      assertFalse(derivedVariable4.isCleaned());
      assertEquals(0, derivedVariable4.getIdentifier());
      assertFalse(derivedVariable4.isCoded());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5821447072671853
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.setName("XOr9&r(EH7v@|6");
      User user1 = new User();
      user0.setLastName("9d");
      valueLabel0.setMissingValue(true);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setLabel("UNABLE_TO_GET_ORIGINAL_CLEANING_STATE");
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.setName("cHAH");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.724574747007075
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      User user1 = new User();
      user0.setLastName("");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm1, ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      String string0 = derivedVariable1.getDisplayName();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getForm());
      assertEquals("general.fieldValue.unknown", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("XOr9&r(EH7v@|6");
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("%b4fCQAKre8X!V", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user1, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.7611350891994793
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      valueLabel0.getDisplayName();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("general.error.blankField");
      valueLabel0.setMissingValue(true);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName((String) null);
      derivedVariable0.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-2067947214));
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8823946057804153
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      arrayList1.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      valueLabel0.setMissingValue(true);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setLabel("Wa_O||d]'JSFpA");
      ValueLabel valueLabel2 = new ValueLabel();
      derivedVariable0.setName((String) null);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.getName();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6891997420578053
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      arrayList1.stream();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      user0.setEmail("uU-");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setDescription("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.hasSameDisplayName(rawVariable0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList3);
      derivedVariable1.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSupportingDocuments();
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=4.022014638382301
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getValueLabels();
      rawVariable1.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCleaned();
      rawVariable1.setCleaningDescription("Y?u{{Tor^X5U");
      rawVariable0.setColumnStart("Y?u{{Tor^X5U");
      Variable.validateFields(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getNotes();
      rawVariable2.getAlias();
      rawVariable2.getCleaningStatus();
      rawVariable0.clone();
      rawVariable0.getAlternativeVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("Ewg%#Z5fP*M,{[");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningDescription("Unknown");
      derivedVariable0.setAlias("");
      rawVariable2.setIdentifier(1);
      derivedVariable0.getName();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.isNewRecord();
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.786119993735688
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      User user0 = new User();
      user0.setLastName("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.setCoded(true);
      derivedVariable0.clone();
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(arrayList1);
      arrayList2.stream();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList2.sort(comparator0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("!)vP}w&l{");
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.getYear();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList3.replaceAll(unaryOperator0);
      derivedVariable0.setSourceVariables(arrayList3);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.7458411154024427
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.setName("XOr9&r(EH7v@|6");
      User user1 = new User();
      user0.setLastName("9d");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier((-2013265917));
      derivedVariable0.setCoded(true);
      derivedVariable0.clone();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertEquals((-2013265917), derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7941820653816287
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel2.setLabel("xICBu0N6=<<03)W");
      arrayList1.add(valueLabel3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.035336244516708
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("Aunx-");
      derivedVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias("Aunx-");
      derivedVariable0.getCategory();
      User user0 = new User();
      user0.setEmail("");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setDescription("Aunx-");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.addSourceVariables(arrayList1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      assertEquals("Aunx-", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      rawVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setName("9!NGZca>");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      int int0 = 0;
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      valueLabel0.getDisplayName();
      ArrayList<SupportingDocument> arrayList1 = null;
      arrayList0.add(valueLabel0);
      // Undeclared exception!
      try { 
        rawVariable1.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      user0.setEmail("DUPLICATE_CATEGORY");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("LHA");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("LHA", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getQuestionNumber();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      String string0 = derivedVariable1.getCleaningStatus();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6669919055686817
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "user.affiliation.label";
      rawVariable0.getCleaningStatus();
      rawVariable0.getValueLabels();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("user.affiliation.label", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("!8#q-</C,^");
      Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8807566041424137
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.setName("XOr9&r(EH7v@|6");
      User user1 = new User();
      user0.setLastName("9d");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      valueLabel0.setLabel("9d");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      derivedVariable0.containsOntologyTerm(ontologyTerm4);
      rawVariable0.getLabel();
      assertEquals("XOr9&r(EH7v@|6", rawVariable0.getName());
      
      RawVariable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.0120998418417804
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable1.addOntologyTerms(arrayList0);
      derivedVariable1.hasSameDisplayName(rawVariable1);
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.8884888954634342
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("!)vP}w&l{");
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.getYear();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      rawVariable1.getDisplayName();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.0514474029629954
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      valueLabel0.setIdentifier(1);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setMissingValue(true);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      rawVariable0.columnEnd = "^a}m";
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel3 = new ValueLabel();
      arrayList0.add(valueLabel1);
      rawVariable0.getLabel();
      RawVariable.validateFields(rawVariable0);
      rawVariable0.getColumnEnd();
      assertEquals("^a}m", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8620891410921354
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("general.fieldValue.unknown", "UNABLE_TO_GET_VARIABLE_NAMES");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getName());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7048489620387994
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      User user0 = new User("general.fieldValue.unknown", "general.fieldValue.unknown");
      user0.setCity("general.fieldValue.unknown");
      user0.setAddressLine1("<{Cg");
      user0.setCity("<{Cg");
      user0.setPostCode("variable.category.label");
      user0.setFirstName("general.fieldValue.unknown");
      user0.setUserID("variable.category.label");
      RawVariable rawVariable0 = new RawVariable();
      User.detectFieldChanges(user0, user0, user0);
      user0.setCity("");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setYear("general.fieldValue.unknown");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getForm();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.676510728453975
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("K");
      rawVariable0.setAvailability("");
      rawVariable0.getDisplayName();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      user0.setAddressLine2((String) null);
      user0.setAddressLine1("K");
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("K", rawVariable0.getQuestionNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.9748142298550744
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.getValueLabels();
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier(1);
      arrayList2.add(valueLabel0);
      rawVariable0.addOntologyTerms(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList2.add(valueLabel3);
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>(linkedList0);
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<ValueLabel> arrayList2 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList2.add(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      rawVariable0.addOntologyTerms(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel1.setLabel("Aunx-");
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList2.add(valueLabel4);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9648040053930025
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.add(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      rawVariable0.addOntologyTerms(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setLabel("xICBu0N6=<<03)W");
      arrayList1.add(valueLabel2);
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      arrayList0.stream();
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("S1^i[rfcpJ]^b~-3|", "general.fieldValue.unknown");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.addSupportingDocument(supportingDocument1);
      valueLabel0.setLabel("general.fieldValue.unknown");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      rawVariable0.getForm();
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertTrue(arrayList1.isEmpty());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      valueLabel0.setLabel("V&:M(N%SaH");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      arrayList0.add(valueLabel0);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>(arrayList0);
      arrayList1.add(valueLabel0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setIdentifier(0);
      rawVariable0.getCategory();
      boolean boolean1 = rawVariable0.isNewRecord();
      assertTrue(boolean1 == boolean0);
      
      String string0 = rawVariable0.getFilePath();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("", "");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      rawVariable0.addSupportingDocument(supportingDocument0);
      valueLabel0.setLabel("");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      arrayList1.add(supportingDocument0);
      arrayList1.stream();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("!)vP}w&l{");
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.getYear();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      derivedVariable0.setSourceVariables(arrayList2);
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.8086031888635437
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      valueLabel0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add(valueLabel0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      Function<ValueLabel, String> function0 = (Function<ValueLabel, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super ValueLabel, ?>) function0);
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable1.setCoded(true);
      derivedVariable1.setCodeBookNumber((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getName());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.7808273196010282
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      valueLabel0.setIdentifier(1105);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.columnStart = "}OA";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.createVariableSummary();
      rawVariable0.setCodeBookNumber("general.error.blankField");
      rawVariable0.getCodeBookNumber();
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      rawVariable0.setCleaningDescription("}OA");
      assertTrue(rawVariable0.isNewRecord());
      
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.7638988342990642
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList1.add(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      rawVariable0.addOntologyTerms(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setLabel("xICBu0N6=<<03)W");
      arrayList1.add(valueLabel2);
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.888488895463434
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("W%x*23", "xICBu0N6=<<03)W");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFilePath("!)vP}w&l{");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      rawVariable1.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList2.size());
      
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.iterator();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      arrayList0.clone();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setLabel("qG5z*Hrt@oJtk(7K");
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5178249916747575
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.add((ValueLabel) null);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.questionNumber = "(";
      derivedVariable0.setColumnEnd("(");
      derivedVariable0.getValueLabels();
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setOntologyName((String) null);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningDescription();
      rawVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Comparator<OntologyTerm> comparator0 = (Comparator<OntologyTerm>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals("=", rawVariable0.getCategory());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "macaw.businessLayer.Variable";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setColumnEnd("macaw.system.MacawChangeEvent");
      int int0 = (-1277);
      rawVariable0.setForm("macaw.system.MacawChangeEvent");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.iterator();
      supportingDocument0.setIdentifier((-1277));
      supportingDocument0.setIdentifier((-1277));
      rawVariable0.questionNumber = "macaw.businessLayer.Variable";
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("UNABLE_TO_CHECK_USER_DUPLICATE");
      rawVariable0.setQuestionNumber((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getYear();
      assertEquals("UNABLE_TO_CHECK_USER_DUPLICATE", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.0901856579812623
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      
      User user0 = new User("", "");
      user0.setIdentifier(0);
      user0.setAddressLine2("user.lastName.saveChanges");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.setCoded(false);
      rawVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      supportingDocument1.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(arrayList0);
      rawVariable1.addSupportingDocuments(arrayList1);
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.getYear();
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList3);
      derivedVariable1.removeSupportingDocuments(arrayList2);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setLabel("XOr9&r(EH7v@|6");
      derivedVariable1.removeValueLabel((ValueLabel) null);
      derivedVariable1.setName("XOr9&r(EH7v@|6");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      assertEquals("XOr9&r(EH7v@|6", derivedVariable1.getName());
      
      derivedVariable0.getName();
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("_aM1y-\"EHBWr");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getAvailability();
      rawVariable0.setAvailability("variable.name.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      assertEquals("_aM1y-\"EHBWr", derivedVariable0.getYear());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setYear("");
      rawVariable0.setNotes("\":}h'LS");
      rawVariable0.setColumnEnd("\":}h'LS");
      rawVariable0.getValueLabels();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      assertEquals("\":}h'LS", rawVariable0.getNotes());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.7091117567012413
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.setAlias((String) null);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      String string0 = rawVariable0.getAlias();
      assertNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      derivedVariable0.getSourceVariables();
      User user0 = new User((String) null, "");
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.753637444083912
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      User user0 = new User();
      user0.setLastName("xICBu0N6=<<03)W");
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user1, ontologyTerm2, ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier(142);
      derivedVariable0.setCoded(true);
      derivedVariable0.clone();
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList1);
      User.detectFieldChanges(user1, user0, user1);
      rawVariable0.getColumnStart();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("xICBu0N6=<<03)W", rawVariable0.getName());
      assertFalse(arrayList2.equals((Object)arrayList0));
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("Aunx-");
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      arrayList2.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>(arrayList1);
      arrayList0.add(supportingDocument0);
      arrayList3.stream();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList4 = derivedVariable1.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList4);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("Aunx-");
      supportingDocument1.setFilePath("!)vP}w&l{");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList5 = new ArrayList<Variable>();
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList5.replaceAll(unaryOperator0);
      derivedVariable0.setSourceVariables(arrayList5);
      String string0 = derivedVariable2.getCategory();
      assertFalse(derivedVariable2.isNewRecord());
      assertNotNull(string0);
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.7047979390274213
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.setQuestionNumber("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      User user0 = new User("@=];Dv RT", "@=];Dv RT");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAffiliation("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      user0.clone();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getValueLabels();
      derivedVariable1.getAvailability();
      derivedVariable1.getValueLabels();
      derivedVariable1.getLabel();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.9172299880444386
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ontologyTerm0.setOntologyName("macaw.businessLayer.OntologyTerm");
      user0.setFirstName("macaw.businessLayer.OntologyTerm");
      user0.setUserID("1s>ax!R84tyt<dq");
      ontologyTerm0.setOntologyName("macaw.businessLayer.OntologyTerm");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ontologyTerm0.setOntologyName("");
      derivedVariable0.setValueLabels(arrayList0);
      ontologyTerm0.setOntologyName("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlias(">bh=X5");
      User user1 = new User("macaw.businessLayer.OntologyTerm", "macaw.businessLayer.OntologyTerm");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.getNotes();
      derivedVariable0.setCodeBookNumber("supportingDocument.description.saveChanges");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      derivedVariable1.setSupportingDocuments(arrayList1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.getLabel();
      derivedVariable0.getYear();
      assertEquals(">bh=X5", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("%b4>fCQAKre8AX!V", "W%x*23");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      rawVariable0.getForm();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.trimToSize();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addValueLabel(valueLabel1);
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      rawVariable2.setValueLabels(arrayList2);
      rawVariable0.setIsNewRecord(false);
      String string0 = rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "general.fieldValue.unknown";
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList2);
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      User user1 = new User();
      User.detectFieldChanges(user1, user0, user1);
      // Undeclared exception!
      try { 
        ValueLabel.detectFieldChanges((User) null, (Variable) null, valueLabel1, valueLabel1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.ValueLabel", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("Aunx-");
      derivedVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias("Aunx-");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setColumnStart("Aunx-");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFilePath("variable.availability.label");
      rawVariable0.addSupportingDocument(supportingDocument2);
      rawVariable1.getYear();
      rawVariable0.getFilePath();
      assertEquals("Aunx-", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setSourceVariables(arrayList1);
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.887511378356885
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.setCodeBookNumber("INVALID_ADMINISTRATOR");
      supportingDocument2.setTitle("INVALID_ADMINISTRATOR");
      supportingDocument2.setFilePath("W%x*23");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getYear();
      assertEquals("INVALID_ADMINISTRATOR", rawVariable0.getCodeBookNumber());
      
      rawVariable1.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.addAll((Collection<? extends OntologyTerm>) arrayList0);
      arrayList1.add((OntologyTerm) null);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("LHA");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(false);
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setLabel("UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES");
      ValueLabel valueLabel3 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("general.error.blankField");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm(ontologyTerm2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.76055310171221
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("");
      valueLabel0.setMissingValue(true);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.setName("");
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.821978374837229
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("L:?aBg>R5Z-1j&$9k");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList1);
      valueLabel0.getDisplayName();
      User.detectFieldChanges(user0, user0, user1);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel0);
      valueLabel0.clone();
      user1.setPhone("D2S/");
      valueLabel0.setMissingValue(true);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel2, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("D2S/");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.getName();
      assertEquals("D2S/", derivedVariable1.getName());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.7398824251536404
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      valueLabel0.getDisplayName();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("general.error.blankField");
      valueLabel0.setMissingValue(true);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName((String) null);
      derivedVariable0.cloneAttributes(derivedVariable1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.getName();
      assertEquals("general.fieldValue.unknown", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear(":/qa");
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.setForm("general.fieldValue.unknown");
      Variable.validateFields(derivedVariable0);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getDisplayName());
      assertEquals("general.fieldValue.unknown", derivedVariable0.getForm());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList0.addAll((Collection<? extends OntologyTerm>) arrayList1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      valueLabel0.setMissingValue(false);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setLabel("");
      ValueLabel valueLabel2 = new ValueLabel();
      derivedVariable0.setName("DUPLICATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      assertEquals("DUPLICATE_ONTOLOGY_TERM", derivedVariable0.getName());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("$BbxplyHh+UC<q4?'f");
      supportingDocument0.setTitle("$BbxplyHh+UC<q4?'f");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCoded(false);
      derivedVariable0.getYear();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.notes = "$BbxplyHh+UC<q4?'f";
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      arrayList0.add(supportingDocument1);
      arrayList0.iterator();
      arrayList0.sort(comparator0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.8851218920964303
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setColumnStart("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(arrayList1);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.addSupportingDocument(supportingDocument0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      arrayList3.add(valueLabel0);
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      User user0 = new User("LHA", "W%x*23");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("!)vP}w&l{");
      rawVariable0.addSupportingDocument(supportingDocument1);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList2.add((ValueLabel) null);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList2.add(valueLabel1);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }
}
