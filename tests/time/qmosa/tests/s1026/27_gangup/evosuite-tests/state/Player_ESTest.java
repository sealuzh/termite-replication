/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:29:15 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(866L);
      System.setCurrentTimeMillis((-433L));
      Player player0 = new Player();
      player0.setZ((byte) (-83));
      player0.pack();
      player0.getZ();
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(10, "\\C", (String) null, 10);
      Player player1 = new Player(3762, "caee_^^-F", (String) null, 10, (short)4919);
      player0.setJoinOK(player1, true);
      assertEquals(10, player1.getPictureId());
      assertEquals(4919, player1.getStrength());
      
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(10, "", "", (-22));
      player0.setConnected(true);
      player0.setMoney((-3579.0F));
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-3579.0F), player0.getMoney(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-2608), (String) null, (String) null, (-2608), 3291);
      Player player1 = new Player((short)4919, " ", 10);
      player0.head = (Party) player1;
      Player player2 = new Player(3, (String) null, (short)4919);
      player0.remove(player2);
      player0.setZ(3294.8F);
      Player player3 = new Player((short)4919, (String) null, ":IIr~FY2BqB'':ziVb!", (short)4919, (-31744));
      player3.id = 3291;
      byte[] byteArray0 = new byte[0];
      player3.unpack(byteArray0);
      player3.setX(0.0F);
      player0.prev = (Party) player3;
      player0.getName();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4703116992157614
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<2~'H-7r;oK<sjcE^U");
      Player player0 = new Player((-8536), "Player", "Player", (-8536), (-523));
      player0.getSubparty();
      player0.setMoney(1852.4799F);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player2 = new Player((-523), ".*[.]class$", "Player", (-1), (short)4919);
      player0.gangStrength();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.unpack(byteArray0);
      player0.setDead();
      player0.reset(true);
      player2.setJoinOK(player1, true);
      player0.isConnected();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      player1.setMoney((-1.0F));
      player1.isJoinOK(player0, false);
      player1.getMoney();
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(645, (String) null, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 766, 766);
      player0.getSubparty();
      Player player1 = new Player(384);
      player0.boss = (Party) player1;
      player0.getSubparty();
      player0.setMoney(0.2F);
      player1.setX(1.0F);
      player0.getIP();
      player0.getName();
      player0.getZ();
      player1.pack();
      player1.setY(0.0F);
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1), "Player", (-1));
      Party party0 = new Party();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockFile mockFile1 = new MockFile("Player", ".lYl");
      MockFile.createTempFile(".lYl", ".*[.]class$");
      mockFile1.setReadable(true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-36);
      player0.unpack(byteArray0);
      player0.setDead();
      player0.reset(true);
      Player player1 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(116, "", (-728));
      byte[] byteArray0 = player0.pack();
      player0.getPictureId();
      Party party0 = new Party((-224));
      player0.head = party0;
      player0.toString();
      player0.getY();
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      player0.getY();
      player0.getMoney();
      player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1178), (-728));
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player((-1051), (String) null, 4);
      player0.setZ(2252);
      player0.getZ();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-124);
      player0.unpack(byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
      try { 
        mockFileInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8914452886637294
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-8536), "Player", "Player", (-8536), (-523));
      player0.getSubparty();
      byte[] byteArray0 = player0.pack();
      player0.getZ();
      byte[] byteArray1 = player0.pack();
      player0.getZ();
      player0.getZ();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, 5, 2147340491);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 1759);
      bufferedInputStream0.read(byteArray0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      bufferedInputStream1.markSupported();
      bufferedInputStream1.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      player0.unpack(dataInputStream0);
      player0.pack();
      player0.setJoinOK(player0, false);
      player0.isConnected();
      player0.isJoinOK(player0, false);
      player0.getY();
      player0.getZ();
      System.setCurrentTimeMillis(1759);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      Player player0 = new Player((byte)92, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (String) null, (byte)92);
      Player player1 = new Player((byte)92, "aQI_&ES}QX98=", 1);
      player1.add(player0);
      player1.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(92, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(4919, "", "", (-1));
      player0.setX((-1));
      player0.setConnected(false);
      player0.getIP();
      player0.setDead(1L, false);
      player0.type();
      player0.isDead();
      Player player1 = new Player((-1565), " ", "", (-861), 5);
      player1.setMoney(1474.9349F);
      player0.isJoinOK(player1, false);
      player0.setX(1620.602F);
      boolean boolean0 = player0.isConnected();
      assertEquals(1620.602F, player0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-4167), (String) null, "K3K[d=7]DNf]c-&r%X", 0, (-2252));
      player0.setZ((-2252));
      player0.getY();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.gangStrength();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-89);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-89);
      byteArray0[7] = (byte) (-124);
      player0.unpack(byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      player0.pack();
      assertEquals((-2252.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.469736490702675
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(79L);
      Player player0 = new Player(2804);
      Player player1 = new Player();
      player0.pack();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.setDead();
      player1.getSubparty();
      player0.setJoinOK(player1, true);
      player0.type();
      player1.getName();
      player1.getMoney();
      player0.getY();
      player1.isConnected();
      player1.getMoney();
      System.setCurrentTimeMillis(170L);
      player1.setX(0.0F);
      player0.toString();
      player1.getTimeOfDeath();
      player1.getX();
      player1.getPictureId();
      player0.toString();
      player0.getPictureId();
      player0.gangStrength();
      player1.getMoney();
      assertEquals(0.0F, player1.getX(), 0.01F);
      
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1), "", "@US;l4D+u8 +", 10, (-1));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setY((-1));
      player0.pack();
      Player player1 = new Player(10, "gui.ModuleBrowserDialog$ModuleFilter", "EM@O:ZO:fw;QX<lG", (-2330));
      assertEquals(0L, player1.getTimeOfDeath());
      
      player1.setDead();
      player0.getIP();
      float float0 = player0.getY();
      assertEquals((-1.0F), float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-619), "", "module.ModuleBrowserDialog$ModuleFilter", 461, 4919);
      Party party0 = new Party((-1));
      party0.prev = (Party) player0;
      party0.getSubparty();
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2213, "", "", (-1051), 2213);
      Party party0 = new Party();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      Player player1 = new Player(5, "", "", (short)4919);
      Player player2 = new Player(17238, "", 5);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      int int0 = player0.type();
      assertEquals((-1051), player0.getPictureId());
      assertEquals(2213, player0.getStrength());
      
      int int1 = player2.getPictureId();
      assertEquals("0.0.0.0", player2.getIP());
      assertTrue(int1 == int0);
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(5, int1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      player0.getMoney();
      long long0 = 0L;
      player0.pack();
      player0.setDead(0L);
      player0.id = (-1788);
      player0.reset(true);
      Player player1 = new Player(3052, "elsRe+1M6%J3`", "elsRe+1M6%J3`", (-1788), (-1788));
      // Undeclared exception!
      try { 
        player1.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.943159814531569
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-5254));
      player0.setX((-5254));
      player0.add((Party) null);
      player0.setDead((long) (-5254), false);
      player0.gangStrength();
      player0.reset(false);
      Player player1 = new Player(4919, ".*[.]class$", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0);
      player0.add(player1);
      player0.getZ();
      player0.getStrength();
      player0.reset(false);
      player0.getX();
      player0.setMoney(1);
      player0.setX(1);
      player0.setDead(1L);
      assertEquals(1L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1273);
      player0.setY(1273);
      player0.reset(true);
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1273.0F, player0.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player((-1), "", 1028);
      Party party0 = new Party();
      URI uRI0 = MockURI.aFileURI;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1028, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1055), (String) null, 34);
      player0.setZ(2213);
      player0.getY();
      byte[] byteArray0 = new byte[2];
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{[*UT1s`aV", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      mockFileOutputStream0.write(byteArray0, 1, 712);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0, ")yZu6U@{", "0q(@Xu\"3)", 0, 0);
      int int0 = player0.getStrength();
      assertEquals(")yZu6U@{", player0.getIP());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1757412430371352
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(2217, "", "", (-1051), 2217);
      player0.setZ(2259.0F);
      Player player1 = new Player((-3042), "module.ModuleBrowserDialog$ModuleFilter", "Ei127If~HK2", (byte) (-124));
      Player player2 = new Player((byte) (-124), " og;_", "", (-2618), (byte)0);
      player0.gangStrength();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      player1.unpack(byteArray0);
      Player player3 = new Player();
      player2.reset(true);
      player3.setJoinOK(player1, true);
      player1.isConnected();
      player0.isJoinOK(player3, false);
      assertEquals(2259.0F, player0.getZ(), 0.01F);
      
      player3.getY();
      float float0 = player3.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1882070982754858
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(2217, "", "", (-1051), 2217);
      player0.setZ(0.0F);
      player0.getY();
      Player player1 = new Player((short)4919, "module.ModuleBrowserDialog$ModuleFilter", "Ei127If~HK2", (-3042));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-124);
      Player player2 = new Player((byte) (-124), "", (String) null, (byte)0, (-3593));
      int int0 = player0.gangStrength();
      assertEquals(2217, int0);
      
      player2.unpack(byteArray0);
      Player player3 = new Player();
      player3.boss = (Party) player2;
      player3.reset(false);
      player3.setJoinOK(player0, false);
      player1.isConnected();
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player1.getIP());
      
      boolean boolean0 = player3.isJoinOK(player0, true);
      assertFalse(boolean0);
      assertEquals(0L, player3.getTimeOfDeath());
      assertFalse(player3.isDead());
      assertEquals("Player-1", player3.toString());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0, player3.getPictureId());
      assertEquals("0.0.0.0", player3.getIP());
      
      float float0 = player2.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player2.getZ();
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0, player2.getPictureId());
      assertEquals(0.0F, float1, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.943159814531569
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-5254));
      player0.setX((-5254));
      player0.add((Party) null);
      player0.setDead((long) (-5254), false);
      player0.gangStrength();
      player0.reset(false);
      Player player1 = new Player(4919, ".*[.]class$", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0);
      player1.getSubparty();
      player0.add(player1);
      player0.getZ();
      player0.getStrength();
      player0.reset(false);
      player0.getX();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setMoney(1);
      player0.setX(1);
      player0.setDead(1L);
      assertEquals(1.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-1), "", 1028);
      Party party0 = new Party();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-36);
      byteArray0[6] = (byte) (-1);
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)0;
      mockFileOutputStream0.write(byteArray0, 4, 4);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(170, (String) null, (String) null, 170);
      player0.gangStrength();
      player0.gangStrength();
      player0.setMoney(805.4F);
      player0.getMoney();
      player0.getStrength();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(10, "", "", (-22));
      player0.setConnected(true);
      player0.setMoney((-3579.0F));
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      bufferedInputStream0.read(byteArray0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(byteArrayInputStream0);
      bufferedInputStream1.mark((short)4919);
      bufferedInputStream0.markSupported();
      bufferedInputStream1.markSupported();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1);
      bufferedInputStream2.available();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player1.pack();
      player0.setJoinOK(player1, true);
      player1.isConnected();
      player1.isJoinOK(player0, true);
      player1.getY();
      player0.getZ();
      System.setCurrentTimeMillis(156);
      player0.pack();
      assertEquals((-3579.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-9), "eaM0-?E63=Df0gEn", "eaM0-?E63=Df0gEn", (-9), (-2915));
      int int0 = player0.getStrength();
      assertEquals((-9), player0.getPictureId());
      assertEquals((-2915), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(367, "0)x6Qo1Yy-%[91=.p", ",~i; z)1a0f", 714, 2053);
      player0.setX((-1008.1553F));
      byte[] byteArray0 = player0.pack();
      player0.reset(true);
      player0.setX((-1008.1553F));
      boolean boolean0 = false;
      player0.setConnected(false);
      player0.unpack(byteArray0);
      player0.setY(0.0F);
      int int0 = (-1224);
      Party party0 = player0.head;
      player0.next = null;
      BufferedOutputStream bufferedOutputStream0 = null;
      try {
        bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, (-1224));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-4167), (String) null, ".?\"aH35", 42, 42);
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(3032, "", "", 3032);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.getY();
      player0.gangStrength();
      player0.getName();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1), "", 1028);
      Party party0 = new Party();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("q7gd:M[{mKi%nORu@", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream(mockFile0);
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      Player player1 = new Player();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream1);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-1), "", 1028);
      Party party0 = new Party();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(16672, "state.Party", "", 3171, 3171);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2383);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(2383);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)71;
      byteArray0[5] = (byte)84;
      dataInputStream1.readFully(byteArray0, 0, (int) (byte)0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertTrue(player0.isConnected());
      assertEquals(3171, player0.getStrength());
      assertEquals("state.Party", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals(3171, player0.getPictureId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-1), "", 1028);
      Party party0 = new Party();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("q7gd:M[{mKi%nOT$@", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream(mockFile0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte) (-36);
      player0.getY();
      player0.getZ();
      System.setCurrentTimeMillis((byte)4);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(1, "", "", 1349);
      player0.setZ(1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)0;
      player0.setConnected(false);
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte) (-48);
      player0.unpack(byteArray0);
      player0.next = null;
      player0.setY(2301.0F);
      float float0 = player0.getX();
      assertEquals(2301.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(2217, "", "", (-1051), 2217);
      player0.setZ(0.0F);
      float float0 = player0.getY();
      Player player1 = new Player((short)4919, "module.ModuleBrowserDialog$ModuleFilter", "Ei127If~HK2", (-3042));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-124);
      Player player2 = new Player((byte) (-124), "", (String) null, (byte)0, (-3593));
      int int0 = player0.gangStrength();
      assertEquals(2217, int0);
      
      player2.unpack(byteArray0);
      Player player3 = new Player();
      player3.boss = (Party) player2;
      MockPrintStream mockPrintStream0 = new MockPrintStream("module.ModuleBrowserDialog$ModuleFilter");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player3.pack(dataOutputStream0);
      assertEquals("Player-1", player3.toString());
      
      System.setCurrentTimeMillis(1392409296320L);
      player1.pack();
      assertEquals(1, player1.getStrength());
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player1.getIP());
      
      float float1 = player2.getZ();
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals((-3593), player2.getStrength());
      assertEquals(float1, float0, 0.01F);
      assertEquals(0, player2.getPictureId());
      assertTrue(player2.isConnected());
      assertEquals(0.0F, float1, 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.4169835932338453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(2217, "", "", (-1051), 2217);
      player0.setZ(0.0F);
      player0.getY();
      Player player1 = new Player((short)4919, "moule.ModuleBrowserDialog$ModuleFilter", "Ei127If~HK2", (-3042));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-124);
      player0.isDead();
      Player player2 = new Player(45, "", "*pv{D-n#,tR>P/d", 0, 1363);
      player0.gangStrength();
      player1.unpack(byteArray0);
      player2.setDead();
      assertTrue(player2.isDead());
      
      player2.reset(true);
      player1.setJoinOK(player2, true);
      player0.isConnected();
      player0.isJoinOK(player1, false);
      int int0 = player2.type();
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-2594));
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.021517785302462
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(3930, "OZ[Qx|56\"Sn=G:A", "OZ[Qx|56\"Sn=G:A", 0, 0);
      player0.setZ(3930);
      player0.getY();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      player0.setX(0);
      byteArray0[1] = (byte) (-83);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "OZ[Qx|56\"Sn=G:A");
      byteArray0[2] = (byte) (-124);
      player0.setDead((long) (byte) (-124), false);
      byteArray0[3] = (byte) (-89);
      player0.gangStrength();
      byteArray0[4] = (byte)66;
      byteArray0[5] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.unpack(byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      player0.pack();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player((-2336), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "", (byte)92);
      Player player1 = new Player(1363, "C-fC", 3882);
      Player player2 = new Player(156, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "(@Llf", 1052, 1363);
      assertEquals(1363, player2.getStrength());
      
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertFalse(boolean0);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", player0.getIP());
      
      String string0 = player1.getIP();
      assertEquals(3882, player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", string0);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", 0);
      player0.getIP();
      player0.setDead((long) 0, false);
      player0.type();
      player0.isDead();
      Player player1 = new Player(0, "o}", "}4yp", 544, (-861));
      player1.setY(0.1F);
      player1.prev = (Party) player0;
      Player player2 = new Player(3);
      player0.isJoinOK(player2, false);
      player2.setX((-855.56085F));
      player2.getTimeOfDeath();
      assertEquals((-855.56085F), player2.getX(), 0.01F);
      
      int int0 = player0.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      Player player0 = new Player((byte)92, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (String) null, (byte)92);
      Player player1 = new Player((byte)92, "aQI_&ES}QX98=", 1);
      player1.setDead((long) (byte)92, true);
      assertEquals(92L, player1.getTimeOfDeath());
      
      Player player2 = new Player((byte)92, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "", 1028, 1028);
      assertEquals(1028, player2.getPictureId());
  }
}
