/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:23:35 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$", 0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$";
      stringArray0[1] = "$";
      stringArray0[2] = "$";
      stringArray0[3] = "$";
      stringArray0[4] = "$";
      stringArray0[5] = "$";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config1.setCss("<|8YZ_XO:'=q`");
      String[] stringArray1 = new String[3];
      stringArray1[0] = "$";
      stringArray1[1] = "<|8YZ_XO:'=q`";
      config1.setConnectionProperties("$");
      stringArray1[2] = "INDICATOR";
      Config config2 = new Config(stringArray1);
      config2.setHost("A");
      config1.setSchemaSpec("");
      Config config3 = Config.getInstance();
      config3.isRankDirBugEnabled();
      config1.isMeterEnabled();
      Config config4 = new Config(stringArray1);
      Config config5 = new Config();
      System.setCurrentTimeMillis((-421L));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 13, 1);
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals(13, foreignKeyConstraint1.getUpdateRule());
      assertEquals("Restrict delete", string0);
      
      foreignKeyConstraint0.getName();
      assertEquals(0, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.317557617542878
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 2, (-3083));
      String[] stringArray0 = new String[2];
      stringArray0[1] = "$3";
      Config config0 = Config.getInstance();
      String[] stringArray1 = new String[2];
      stringArray1[0] = "8yDTg/Q!o!SXA;!&ht2";
      stringArray1[1] = "UTF-8";
      Config config1 = new Config(stringArray1);
      Config config2 = new Config();
      config1.setHtmlGenerationEnabled(false);
      MockFile.createTempFile("UTF-8", "UTF-8");
      Config.getLoadedFromJar();
      config0.isMeterEnabled();
      config2.getDbSpecificOptions();
      Config config3 = new Config();
      Config config4 = new Config();
      Config config5 = Config.getInstance();
      config5.getDbType();
      config5.getIndirectColumnExclusions();
      Config.getInstance();
      String[] stringArray2 = new String[7];
      stringArray2[0] = "UTF-8";
      System.setCurrentTimeMillis(2);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 46, 231);
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getName();
      List<TableColumn> list0 = foreignKeyConstraint1.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals((-2), int0);
      
      foreignKeyConstraint0.getParentTable();
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-3083), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", (-1), (-1));
      foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-1), int0);
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3194581193065735
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 19, 3);
      foreignKeyConstraint0.getChildColumns();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 147, 1);
      foreignKeyConstraint1.getParentColumns();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(foreignKeyConstraint0.isRestrictDelete());
      
      boolean boolean2 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean2 == boolean1);
      
      System.setCurrentTimeMillis(19);
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
      assertEquals(147, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4467185308617125
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 19, 2);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isCascadeOnDelete();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "$3";
      stringArray0[4] = "$3";
      stringArray0[6] = "";
      stringArray0[8] = "";
      foreignKeyConstraint0.getParentColumns();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isRestrictDelete();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "p;jy4=V-DX|OTL{+", (-476), 2);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "=c=!(o0/WWP&f";
      stringArray0[1] = "p;jy4=V-DX|OTL{+";
      stringArray0[2] = "$3";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config1.setCss("]+kwmEbu9");
      Config config2 = new Config(stringArray0);
      Config config3 = Config.getInstance();
      config1.setHost("UTF-8");
      Config config4 = new Config();
      config3.isRankDirBugEnabled();
      config0.isMeterEnabled();
      Config config5 = new Config(stringArray0);
      Config config6 = new Config();
      Config config7 = new Config(stringArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      config2.isMeterEnabled();
      Config config8 = new Config(stringArray0);
      Config.getInstance();
      Config config9 = new Config();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(2);
      foreignKeyConstraint0.getDeleteRuleName();
      Connection connection0 = null;
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", (String) null, "$3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 3, 3);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "$3";
      stringArray0[1] = "$3";
      stringArray0[2] = "$3";
      stringArray0[3] = "$3";
      stringArray0[4] = "$3";
      stringArray0[5] = "$3";
      stringArray0[6] = "$3";
      stringArray0[7] = "$3";
      stringArray0[8] = "$3";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      Config config2 = new Config(stringArray0);
      config2.isMeterEnabled();
      Config config3 = new Config(stringArray0);
      config0.getDbSpecificOptions();
      config3.setViewsEnabled(false);
      config3.getLogLevel();
      Config config4 = new Config(stringArray0);
      Config config5 = new Config();
      Config config6 = new Config(stringArray0);
      config6.getGraphvizDir();
      Config config7 = Config.getInstance();
      config7.isLowQuality();
      config7.setHasRoutines(false);
      config7.isMeterEnabled();
      Config.getInstance();
      config0.getLogLevel();
      Config config8 = new Config(stringArray0);
      Config config9 = new Config();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      System.setCurrentTimeMillis(2618L);
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.425934775756114
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 19, 3);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isCascadeOnDelete();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isRestrictDelete();
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 54, 140);
      Config config0 = Config.getInstance();
      Config.setInstance(config0);
      String[] stringArray0 = new String[0];
      Config config1 = new Config();
      Config config2 = new Config();
      String[] stringArray1 = new String[4];
      stringArray1[0] = "UTF-8";
      stringArray1[1] = "UTF-8";
      stringArray1[2] = "Za";
      stringArray1[3] = "UTF-8";
      Config config3 = new Config(stringArray0);
      config0.setHost((String) null);
      config0.setSchemaSpec("");
      Config config4 = new Config();
      config0.isRankDirBugEnabled();
      config0.isMeterEnabled();
      Config config5 = new Config(stringArray1);
      Config config6 = new Config();
      config3.setFont("Za");
      Config config7 = new Config(stringArray0);
      config3.isMeterEnabled();
      Config config8 = new Config(stringArray1);
      Config config9 = new Config();
      Config config10 = new Config();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(140);
      System.setCurrentTimeMillis(0L);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(54, foreignKeyConstraint0.getUpdateRule());
      assertEquals(140, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Table table0 = null;
      String string0 = "$3";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 0, 0);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      foreignKeyConstraint0.getChildColumns();
      String string1 = "";
      foreignKeyConstraint0.isReal();
      String string2 = "net.sourceforge.schemaspy.model.xml.TableMeta";
      foreignKeyConstraint0.isReal();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "$3", 483, 0);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$", 0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$";
      stringArray0[1] = "$";
      stringArray0[2] = "$";
      stringArray0[3] = "$";
      stringArray0[4] = "$";
      stringArray0[5] = "$";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config1.setCss("<|8YZ_XO:'=q`");
      String[] stringArray1 = new String[3];
      stringArray1[0] = "$";
      stringArray1[1] = "<|8YZ_XO:'=q`";
      stringArray1[2] = "INDICATOR";
      Config config2 = new Config(stringArray1);
      config2.setHost("$");
      config1.setSchemaSpec("");
      Config config3 = new Config();
      config3.isRankDirBugEnabled();
      config1.isMeterEnabled();
      Config config4 = new Config(stringArray1);
      Config config5 = new Config();
      config1.setFont("$");
      Config config6 = new Config(stringArray1);
      config1.isMeterEnabled();
      Config config7 = new Config(stringArray0);
      Config config8 = new Config();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-317L));
      foreignKeyConstraint0.getChildTable();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", foreignKeyConstraint0.getDeleteRuleDescription());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$", 0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$";
      stringArray0[1] = "$";
      stringArray0[2] = "$";
      stringArray0[3] = "$";
      stringArray0[4] = "$";
      stringArray0[5] = "$";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config1.setCss("<|8YZ_XO:'=q`");
      String[] stringArray1 = new String[3];
      stringArray1[0] = "$";
      stringArray1[1] = "<|8YZ_XO:'=q`";
      stringArray1[2] = "INDICATOR";
      Config config2 = new Config(stringArray1);
      config2.setHost("A");
      config1.setSchemaSpec("");
      Config config3 = new Config();
      config3.isRankDirBugEnabled();
      config1.isMeterEnabled();
      Config config4 = new Config(stringArray1);
      Config config5 = new Config();
      config1.setFont("$");
      Config config6 = new Config(stringArray1);
      config1.isMeterEnabled();
      Config config7 = new Config(stringArray0);
      Config config8 = new Config();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-317L));
      foreignKeyConstraint0.getChildTable();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete", foreignKeyConstraint0.getDeleteRuleName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "$3";
      int int0 = 0;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 0, 0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "$3", 138, 66);
      foreignKeyConstraint1.getUpdateRule();
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string1 = "OPEN";
      String string2 = "Restrict delete:\n Parent cannot be deleted if children exist";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("rt;C,", "\u0007Qsa=k5CJBKuhBNSX[", "\u0007Qsa=k5CJBKuhBNSX[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"rt;C,\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis(1534L);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 138, 138);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRule();
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(138, foreignKeyConstraint0.getUpdateRule());
      assertEquals(138, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.615726363637287
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 0, 0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "$3";
      stringArray0[1] = "$3";
      stringArray0[2] = "$3";
      stringArray0[3] = "$3";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config1.getGraphvizDir();
      config1.isMeterEnabled();
      Config config2 = new Config(stringArray0);
      Config config3 = new Config();
      config1.isMeterEnabled();
      Config config4 = new Config(stringArray0);
      Config.getInstance();
      Config config5 = new Config();
      config5.isMeterEnabled();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", (-1), (-1));
      foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$3");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 74, 483);
      List<TableColumn> list0 = foreignKeyConstraint1.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(483, foreignKeyConstraint1.getDeleteRule());
      assertEquals(74, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-2), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", (-1), (-1));
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$3");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-1086), 25);
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals(2, int0);
      assertEquals((-1086), foreignKeyConstraint1.getUpdateRule());
      assertEquals(25, foreignKeyConstraint1.getDeleteRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 0, 0);
      foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$3");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "net.sourceforge.schemaspy.model.xml.TableMeta");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "$3", 483, 0);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", (-1), (-1));
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$3");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-1), foreignKeyConstraint0.getDeleteRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 2579);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "$3";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config0.isRankDirBugEnabled();
      config1.isMeterEnabled();
      config0.getLogLevel();
      Config config2 = new Config(stringArray0);
      Config config3 = new Config();
      Config.getInstance();
      config1.getIndirectColumnExclusions();
      config2.getConnectionProperties();
      foreignKeyConstraint0.isImplied();
      System.setCurrentTimeMillis(737L);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 17, 17);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "$3";
      stringArray0[1] = "$3";
      stringArray0[2] = "$3";
      stringArray0[3] = "$3";
      stringArray0[4] = "$3";
      stringArray0[5] = "$3";
      stringArray0[6] = "$3";
      Config config0 = new Config(stringArray0);
      config0.isMeterEnabled();
      Config config1 = new Config(stringArray0);
      Config.getInstance();
      config0.isMeterEnabled();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      assertEquals(17, foreignKeyConstraint0.getUpdateRule());
      assertEquals(17, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = (-801);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Null on delete:\n Foreign key to parent set to NULL when parent deleted");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", (-801), 0);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}I");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "}I", 16, (-801));
      foreignKeyConstraint1.addChildColumn((TableColumn) null);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 0, 0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis((-3074L));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", (-17), (-17));
      String[] stringArray0 = new String[0];
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-17), int0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-17), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "5N", 0, 0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getUpdateRule();
      System.setCurrentTimeMillis((-3612L));
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("all", "op;-MXjU;EzaAr0x", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"all\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config1.setCss("<|8YZ_XO:'=q`");
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "<|8YZ_XO:'=q`";
      config1.setConnectionProperties("");
      stringArray1[2] = "INDICATOR";
      Config config2 = new Config(stringArray1);
      config2.setHost("A");
      config1.setSchemaSpec("");
      Config config3 = new Config();
      config3.isRankDirBugEnabled();
      config1.isMeterEnabled();
      Config config4 = new Config(stringArray1);
      Config config5 = new Config();
      config1.setFont("");
      Config config6 = new Config(stringArray1);
      config1.isMeterEnabled();
      Config config7 = new Config(stringArray0);
      Config config8 = new Config();
      Config config9 = new Config();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis((-317L));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 0, 0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "fi7R,,#If }.)\u0003";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "$3";
      stringArray0[6] = "Cascade on delete";
      stringArray0[7] = "";
      Config config0 = new Config(stringArray0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean0);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 2, (-3083));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$3";
      stringArray0[1] = "$3";
      Config config0 = new Config(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "8DTg/Q!ozSXA;!Eht2";
      stringArray1[1] = "UTF-8";
      Config config1 = new Config(stringArray1);
      Config config2 = new Config();
      config1.setHtmlGenerationEnabled(false);
      config1.getGraphvizDir();
      config0.isMeterEnabled();
      Config config3 = new Config();
      Config config4 = new Config();
      Config config5 = new Config();
      String[] stringArray2 = new String[5];
      stringArray2[0] = "UTF-8";
      stringArray2[1] = "UTF-8";
      stringArray2[2] = "UTF-8";
      stringArray2[3] = "UTF-8";
      stringArray2[4] = "UTF-8";
      Config config6 = new Config(stringArray2);
      Config config7 = new Config();
      config2.isMeterEnabled();
      Config config8 = new Config(stringArray1);
      Config.getInstance();
      Config config9 = new Config(stringArray0);
      config9.isMeterEnabled();
      String[] stringArray3 = new String[1];
      stringArray3[0] = "8DTg/Q!ozSXA;!Eht2";
      Config config10 = new Config(stringArray3);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals((-3083), foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$:W)'IyxL");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":^W29m^rh5zN?^<HNI$");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "`9q", 2, 20);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-3305L));
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(20, foreignKeyConstraint0.getDeleteRule());
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, (-30), (-30));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", 0, 0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "$3";
      stringArray0[1] = "$3";
      stringArray0[2] = "$3";
      stringArray0[3] = "$3";
      Config config0 = new Config(stringArray0);
      Config config1 = new Config();
      config1.isMeterEnabled();
      config0.getLogLevel();
      Config config2 = new Config();
      Config config3 = Config.getInstance();
      config3.getIndirectColumnExclusions();
      config3.getDbProperties();
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config config4 = new Config();
      Config config5 = new Config(stringArray0);
      config5.isMeterEnabled();
      Config config6 = new Config(stringArray0);
      Config.getInstance();
      Config config7 = new Config();
      Config.getInstance();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "$3", (-1), (-1));
      foreignKeyConstraint0.getChildColumns();
      String string0 = "net.sourceforge.schemaspy.model.ForeignKeyConstraint";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$3");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "$3", 483, (-1));
      foreignKeyConstraint1.addParentColumn((TableColumn) null);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Config config0 = Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      Database database0 = null;
      try {
        database0 = new Database(config0, connection0, databaseMetaData0, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", "@!9mK!N7q] ;pp<6yc}", "jat<A>hRkC8pe+Z;z4", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }
}
