/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:11:36 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.StringWriter;
import java.util.Date;
import java.util.Hashtable;
import java.util.function.BiFunction;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.configuration.BasicServerConfig;
import org.apache.axis.configuration.DirProvider;
import org.apache.axis.deployment.wsdd.WSDDResponseFlow;
import org.apache.axis.encoding.SerializationContext;
import org.apache.axis.message.Detail;
import org.apache.axis.message.SOAPHeaderElement;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.events.EventListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.493396764708821
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Detail detail0 = new Detail();
      detail0.getAttributeNodeNS("RC_OK", "b K}k;7pjP");
      Document document0 = detail0.getOwnerDocument();
      recordTypeMessage0.setResponseDocument(document0, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "BHb;{LT", "");
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      documentTypeImpl0.addEventListener("BHb;{LT", (EventListener) null, true);
      documentTypeImpl0.getReadOnly();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(wMLDocumentImpl0, (String) null, (String) null, "pv?");
      hTMLDocumentImpl1.getDoctype();
      DocumentTypeImpl documentTypeImpl2 = new DocumentTypeImpl(hTMLDocumentImpl1, "", "#", "");
      documentTypeImpl2.getEntities();
      documentTypeImpl2.addEventListener("@", (EventListener) null, false);
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl(documentTypeImpl2);
      WMLDocumentImpl wMLDocumentImpl2 = new WMLDocumentImpl((DocumentType) null);
      BasicServerConfig basicServerConfig0 = new BasicServerConfig();
      recordTypeMessage0.getResponseObject();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)115;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)42;
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, (-4589));
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Detail detail0 = new Detail();
      Detail detail1 = new Detail();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      Integer integer0 = new Integer(831);
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants1 = new SOAP12Constants();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      Integer integer1 = new Integer(0);
      SOAP12Constants sOAP12Constants2 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants3 = new SOAP12Constants();
      sOAP12Constants3.getHeaderQName();
      System.setCurrentTimeMillis(602L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Detail detail0 = new Detail();
      Document document0 = detail0.getOwnerDocument();
      recordTypeMessage0.setResponseDocument(document0, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "<VV/rZ%\"h", "");
      documentTypeImpl0.toString();
      documentTypeImpl0.getReadOnly();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(wMLDocumentImpl0, (String) null, (String) null, "pv?");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-105);
      byteArray0[3] = (byte) (-105);
      byteArray0[4] = (byte) (-105);
      byteArray0[5] = (byte) (-105);
      byteArray0[6] = (byte) (-105);
      byteArray0[7] = (byte) (-105);
      byteArray0[8] = (byte) (-105);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage("ZN_?8)@*LS", (XBUSSystem) null, "");
      recordTypeMessage1.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage1.getShortname());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      recordTypeMessage0.setResponseDocument(documentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      DirProvider dirProvider0 = new DirProvider("", (String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "net.sf.xbus.protocol.records.RecordTypeMessage", "`&He:a|;g", "`&He:a|;g");
      String string0 = "";
      DirProvider dirProvider1 = null;
      try {
        dirProvider1 = new DirProvider("deserPutValueDebug00", "net.sf.xbus.protocol.records.RecordTypeMessage");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory 'deserPutValueDebug00' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Detail detail0 = new Detail();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-19);
      byteArrayList0.iterator();
      byteArray0[2] = (byte) (-19);
      byteArrayList0.add(byteArray0);
      byteArrayList0.iterator();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("x5oe[", (XBUSSystem) null, "x5oe[");
      Detail detail0 = new Detail();
      WSDDResponseFlow wSDDResponseFlow0 = new WSDDResponseFlow();
      WSDDResponseFlow wSDDResponseFlow1 = new WSDDResponseFlow();
      wSDDResponseFlow0.addHandler(wSDDResponseFlow1);
      wSDDResponseFlow1.getChildElement(detail0, "attachment");
      Integer integer0 = new Integer(0);
      wSDDResponseFlow0.getJavaClass();
      WSDDResponseFlow wSDDResponseFlow2 = new WSDDResponseFlow();
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      SerializationContext serializationContext0 = new SerializationContext(mockPrintWriter0);
      wSDDResponseFlow0.addHandler(wSDDResponseFlow1);
      wSDDResponseFlow0.getChildElement(detail0, ".l&43:`&6$");
      WSDDResponseFlow wSDDResponseFlow3 = new WSDDResponseFlow();
      wSDDResponseFlow0.setName("");
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-52);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2:X9Oxcyw3vwO;$");
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      System.setCurrentTimeMillis((byte) (-12));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-2663L));
      System.setCurrentTimeMillis((-1189L));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("x5oe[", (XBUSSystem) null, "x5oe[");
      System.setCurrentTimeMillis(255L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      System.setCurrentTimeMillis(0L);
      Integer integer0 = new Integer((-4181));
      try { 
        recordTypeMessage0.setResponseObject(integer0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Detail detail0 = new Detail();
      Detail detail1 = new Detail();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("output");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory 'output' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      String string0 = null;
      recordTypeMessage0.getResponseTimestamp();
      recordTypeMessage0.setResponseTimestamp((Date) null);
      Hashtable<ByteArrayList, Object> hashtable0 = new Hashtable<ByteArrayList, Object>();
      ByteArrayList byteArrayList0 = null;
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      Object object0 = new Object();
      hashtable0.remove(object0);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      BiFunction<ByteArrayList, Object, Object> biFunction0 = (BiFunction<ByteArrayList, Object, Object>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      try { 
        recordTypeMessage0.setResponseObject(hashtable0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.util.Hashtable cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2:X9Oxcyw3vwO;$");
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("2:X9Oxcyw3vwO;$", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("x5oe[", (XBUSSystem) null, "x5oe[");
      Detail detail0 = new Detail();
      WSDDResponseFlow wSDDResponseFlow0 = new WSDDResponseFlow();
      WSDDResponseFlow wSDDResponseFlow1 = new WSDDResponseFlow();
      wSDDResponseFlow0.addHandler(wSDDResponseFlow1);
      wSDDResponseFlow1.getChildElement(detail0, "");
      Integer integer0 = new Integer(0);
      WSDDResponseFlow wSDDResponseFlow2 = new WSDDResponseFlow();
      wSDDResponseFlow0.setQName(wSDDResponseFlow2.QNAME_WSDLFILE);
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants1 = new SOAP12Constants();
      sOAP12Constants1.getHeaderQName();
      System.setCurrentTimeMillis(2184L);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("handlerInfo", "L$0@nX+k)9^Ffg?t");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory 'handlerInfo' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.getOwnerDocument();
      FileSystemHandling.shouldAllThrowIOExceptions();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("x5oe[", (XBUSSystem) null, "x5oe[");
      WSDDResponseFlow wSDDResponseFlow0 = new WSDDResponseFlow();
      WSDDResponseFlow wSDDResponseFlow1 = new WSDDResponseFlow();
      wSDDResponseFlow0.addHandler(wSDDResponseFlow1);
      Integer integer0 = new Integer(0);
      wSDDResponseFlow0.getJavaClass();
      WSDDResponseFlow wSDDResponseFlow2 = new WSDDResponseFlow();
      wSDDResponseFlow0.setQName(wSDDResponseFlow2.QNAME_WSDLFILE);
      wSDDResponseFlow2.setQName(wSDDResponseFlow0.QNAME_ENDPOINTURL);
      wSDDResponseFlow2.setName("0");
      SOAPHeaderElement sOAPHeaderElement0 = new SOAPHeaderElement("returnItemType", "operation");
      wSDDResponseFlow2.setParameter("u?Ueut!ZN", "undeployment");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      System.setCurrentTimeMillis(1L);
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("endpointURL", "itemType");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory 'endpointURL' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Detail detail0 = new Detail();
      Detail detail1 = new Detail();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      Object object0 = new Object();
      Integer integer0 = new Integer((byte)5);
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants1 = SOAPConstants.SOAP12_CONSTANTS;
      detail1.setEncodingStyle("soap12.webmethod");
      Integer integer1 = new Integer(1391);
      SOAP12Constants sOAP12Constants2 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants3 = new SOAP12Constants();
      sOAP12Constants1.getHeaderQName();
      System.setCurrentTimeMillis((byte)5);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("soap12.webmethod", (XBUSSystem) null, "soap12.webmethod");
      try { 
        recordTypeMessage0.setRequestObject(detail1, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.apache.axis.message.Detail cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }
}
