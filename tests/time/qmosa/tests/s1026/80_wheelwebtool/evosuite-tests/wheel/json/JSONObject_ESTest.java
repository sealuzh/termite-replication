/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:20:59 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7266282370002286
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      String[] stringArray0 = new String[1];
      Byte byte0 = new Byte((byte)8);
      Byte.toUnsignedLong((byte)15);
      JSONObject.valueToString(byte0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      String string0 = "Missing value";
      JSONObject.quote("Missing value");
      jSONObject1.names();
      jSONObject1.length();
      int int0 = new Integer(0);
      JSONObject jSONObject2 = jSONObject1.append("Missing value", "Missing value");
      jSONObject1.has("mBQ");
      try { 
        jSONObject2.getJSONArray("\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.891819179322502
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Short short0 = new Short((short)46);
      Short.toUnsignedInt((short)1519);
      Short.toUnsignedLong((short)128);
      Short.toUnsignedLong((short)0);
      Short.compare((short)0, (short) (-980));
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("spl", (Collection) linkedList0);
      JSONObject.quote(",\n");
      try { 
        jSONObject0.getInt("spl");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"spl\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.392849691853218
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "true";
      Float float0 = new Float(1.0);
      JSONObject jSONObject1 = jSONObject0.put("true", (Object) float0);
      jSONObject1.accumulate("true", hashMap0);
      jSONObject1.names();
      String string1 = null;
      jSONObject0.optInt((String) null);
      try { 
        jSONObject0.getString("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6567896133976987
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "";
      String[] stringArray0 = JSONObject.getNames((Object) "");
      String string1 = "Ez";
      String string2 = "YeX4u";
      JSONObject jSONObject0 = new JSONObject("\b", stringArray0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      linkedList0.removeLastOccurrence(jSONArray1);
      HashMap<Double, Object> hashMap0 = new HashMap<Double, Object>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      jSONObject2.put("{\"java.lang.String@0000000002\":\"java.lang.String$CaseInsensitiveComparator@0000000003\"}", (Collection) linkedList0);
      jSONObject1.put("", (Object) "");
      try { 
        jSONObject2.getLong("YeX4u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"YeX4u\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9383776845093017
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Short short0 = new Short((short) (-1721));
      Short.toUnsignedInt((short)1519);
      Short.toUnsignedLong((short)128);
      Short.toUnsignedLong((short)0);
      Short.compare((short)0, (short) (-980));
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      String string0 = "spl";
      JSONObject jSONObject1 = jSONObject0.put("spl", (Collection) linkedList0);
      try { 
        jSONObject1.getString(",\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\\n\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7881502068860127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = new JSONObject("", stringArray0);
      HashMap<JSONObject, JSONObject> hashMap2 = new HashMap<JSONObject, JSONObject>();
      JSONObject jSONObject2 = jSONObject0.put("", (Map) hashMap2);
      jSONObject1.toJSONArray(jSONArray0);
      jSONObject2.getString("");
      JSONObject jSONObject3 = jSONObject2.optJSONObject("(KC1YI1PpoxCG?");
      assertNull(jSONObject3);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.974047183894682
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.optDouble("D4vlRY3{Gnxo0$", 17.236496541231);
      String string0 = null;
      jSONObject0.optInt((String) null);
      jSONObject0.toString();
      try { 
        jSONObject0.getString("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.470861492271383
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      Double.min((-1162.389938673945), (-1162.389938673945));
      String[] stringArray0 = new String[1];
      Byte byte0 = new Byte((byte)8);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.quote("key");
      jSONObject0.names();
      jSONObject1.length();
      HashMap<Double, String> hashMap0 = new HashMap<Double, String>();
      HashMap<Double, Object> hashMap1 = new HashMap<Double, Object>(hashMap0);
      JSONObject jSONObject2 = new JSONObject((Map) hashMap1);
      jSONObject2.length();
      jSONObject2.append(">CNiP", (Object) null);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-12473307));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.80809489658178
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Byte byte0 = new Byte((byte)90);
      JSONObject jSONObject0 = new JSONObject((Object) "isjoin");
      JSONObject jSONObject1 = jSONObject0.put("OE`}g,", false);
      JSONObject jSONObject2 = jSONObject1.put("joi", (double) (byte)90);
      String string0 = null;
      try { 
        jSONObject2.put((String) null, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.934551794074474
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Float float0 = new Float(1.0);
      JSONObject jSONObject0 = new JSONObject(float0);
      Float.isFinite(0.0F);
      Float.max(1.0F, 1914.2F);
      jSONObject0.optJSONObject("istoLowerCase");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      linkedList0.add((JSONObject) null);
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONArray0.put((Collection) linkedList0);
      try { 
        jSONObject0.toJSONArray(jSONArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[0] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7760247186301696
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      jSONObject0.isNull("");
      jSONObject0.optBoolean("%");
      jSONObject0.optString("Null pointer");
      Double double0 = new Double((-1596L));
      JSONObject jSONObject1 = jSONObject0.append("%", "");
      StringWriter stringWriter0 = new StringWriter(340);
      StringWriter stringWriter1 = stringWriter0.append('/');
      stringWriter1.append((CharSequence) "%");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONObject jSONObject2 = jSONObject0.put("", (Collection) linkedList0);
      JSONObject.valueToString("Null pointer", 110, 110);
      jSONObject0.append("%", jSONObject1);
      jSONObject2.has("%");
      jSONObject1.optJSONObject("istoString");
      assertEquals(5, jSONObject1.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6283985047252507
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "");
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.quote((String) null);
      jSONObject0.names();
      jSONObject1.length();
      jSONObject1.length();
      String string0 = "true";
      Short short0 = new Short((short)1242);
      jSONObject1.append("true", short0);
      JSONObject jSONObject2 = jSONObject1.put("ISAh(b{", (double) 3);
      try { 
        jSONObject2.get("}Q!+i4k<9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"}Q!+i4k<9\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = null;
      jSONObject0.optDouble((String) null);
      StringWriter stringWriter0 = new StringWriter(32);
      char[] charArray0 = new char[6];
      charArray0[0] = '';
      charArray0[1] = 'G';
      charArray0[2] = 'q';
      charArray0[3] = '8';
      charArray0[4] = 'w';
      charArray0[5] = '=';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 32, 32);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6735439389176303
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      Double double0 = new Double((-4285.0478));
      Double.min((-1162.389938673945), 0.0);
      String string0 = "WfI}#!X";
      Double.min((-2180.755255043), (-1162.389938673945));
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      StringWriter stringWriter0 = new StringWriter(1785);
      StringWriter stringWriter1 = stringWriter0.append('A');
      char[] charArray0 = new char[9];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      JSONObject.quote("getclear");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\"getclear\"");
      stringWriter1.append((CharSequence) charBuffer0);
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[4] = '6';
      charArray0[5] = 'A';
      charArray0[6] = 'A';
      charArray0[7] = 'A';
      charArray0[8] = 'A';
      // Undeclared exception!
      try { 
        stringWriter1.write(charArray0, 996, (-2812));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double(940.4639129);
      String string0 = JSONObject.doubleToString(940.4639129);
      assertEquals("940.4639129", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("op", 1.0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.913459949109657
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      Double double0 = new Double((-4285.0478));
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      Double.min((-1162.389938673945), 0.0);
      Double.min((-2180.755255043), (-1162.389938673945));
      JSONObject jSONObject1 = new JSONObject(linkedList0);
      JSONArray jSONArray0 = new JSONArray();
      StringWriter stringWriter0 = new StringWriter(1785);
      StringWriter stringWriter1 = stringWriter0.append('A');
      stringWriter1.append((CharSequence) "WfI}#!X");
      String string0 = "N/_~p=A(|yU.lJ:";
      stringWriter0.flush();
      jSONObject0.opt(",\n");
      try { 
        jSONObject0.getJSONArray("N/_~p=A(|yU.lJ:");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"N/_~p=A(|yU.lJ:\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.693634744415031
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      String string0 = "/)e";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "%";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "%";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.toString(61);
      jSONObject0.names();
      jSONObject0.length();
      jSONObject1.length();
      JSONArray jSONArray0 = new JSONArray((Collection) null);
      JSONObject jSONObject2 = jSONObject1.append("%", jSONArray0);
      try { 
        jSONObject2.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.87035157280872
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long(0L);
      JSONObject jSONObject0 = new JSONObject(long0);
      jSONObject0.toJSONArray((JSONArray) null);
      JSONObject.valueToString(jSONObject0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9238949224537818
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("{", 0.0);
      jSONObject0.optJSONArray("{");
      jSONObject0.optString(" at character ");
      linkedList0.add(jSONObject0);
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = new JSONArray((Collection) linkedList0);
      jSONArray0.toJSONObject(jSONArray1);
      linkedList0.add((JSONObject) null);
      JSONArray jSONArray2 = new JSONArray((Collection) linkedList0);
      jSONArray2.optJSONObject(0);
      String string0 = "\\F[L\"k";
      jSONObject0.optLong("F[L\"k");
      try { 
        jSONObject0.get("F[L\"k");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"F[L\\\"k\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7887760441850435
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      String string0 = "{";
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("{", 0.0);
      jSONObject0.optJSONArray("{");
      JSONObject.testValidity("{");
      try { 
        jSONObject0.getJSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      StringWriter stringWriter0 = new StringWriter(48);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONArray jSONArray1 = new JSONArray();
      jSONArray0.toJSONObject(jSONArray1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ">e$2^@~Brm";
      stringArray0[1] = ">e$2^@~Brm";
      stringArray0[2] = ">e$2^@~Brm";
      stringArray0[3] = ">e$2^@~Brm";
      stringArray0[4] = ">e$2^@~Brm";
      stringArray0[5] = ">e$2^@~Brm";
      stringArray0[6] = ">e$2^@~Brm";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4840871363155848
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Byte byte0 = new Byte((byte)90);
      String[] stringArray0 = new String[8];
      String string0 = "";
      stringArray0[0] = "";
      stringArray0[1] = "A JSONArray text must start with '['";
      stringArray0[2] = "Missing value";
      stringArray0[3] = "";
      stringArray0[4] = "] is not a JSONObject.";
      JSONObject jSONObject0 = new JSONObject((Object) "A JSONArray text must start with '['");
      jSONObject0.names();
      jSONObject0.names();
      // Undeclared exception!
      jSONObject0.toString(1127, 101);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8335452194515467
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      jSONObject0.isNull("");
      jSONObject0.optBoolean("%");
      long long0 = (-1596L);
      String string0 = "\\n";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "%";
      stringArray0[1] = "\n";
      stringArray0[2] = "%";
      JSONObject jSONObject1 = new JSONObject(boolean0, stringArray0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      Boolean boolean1 = new Boolean("4KpNvav8p:");
      String string1 = "9";
      jSONObject0.put("9", (Collection) linkedList0);
      jSONObject0.put("%", (Object) boolean1);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject2.getLong("{\"java.lang.String@0000000004\":[java.lang.Byte@0000000014],\"java.lang.String@0000000009\":\"java.lang.Class@0000000010\",\"java.lang.String@0000000002\":java.lang.Boolean@0000000003}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\\"java.lang.String@0000000004\\\":[java.lang.Byte@0000000014],\\\"java.lang.String@0000000009\\\":\\\"java.lang.Class@0000000010\\\",\\\"java.lang.String@0000000002\\\":java.lang.Boolean@0000000003}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.292066491137483
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      short short0 = (short) (-1736);
      Short.valueOf((short) (-1736));
      String string0 = "\\n";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "YeX4u";
      JSONObject jSONObject0 = new JSONObject("Ez", stringArray0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.toString();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      linkedList0.removeLastOccurrence("{}");
      jSONObject0.put("\b", (Collection) linkedList0);
      jSONObject0.put("YeX4u", (Object) "Ez");
      try { 
        jSONObject0.getLong("YeX4u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"YeX4u\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6914670614715583
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("y(pjX5LFUueqW;zes");
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.isNull("y(pjX5LFUueqW;zes");
      jSONObject0.optBoolean("%");
      jSONObject0.optString("Null pointer");
      Double double0 = new Double((-1596L));
      jSONObject0.append("%", "y(pjX5LFUueqW;zes");
      StringWriter stringWriter0 = new StringWriter(340);
      stringWriter0.append(',');
      StringWriter stringWriter1 = new StringWriter(340);
      jSONObject0.write(stringWriter1);
      String string0 = "i2ZHv!n'";
      JSONTokener jSONTokener0 = new JSONTokener("QlI4B(+");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of QlI4B(+
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0979488286385775
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "-@<?AOP:%O5AXWH[";
      JSONObject jSONObject1 = jSONObject0.put("-@<?AOP:%O5AXWH[", (Object) "-@<?AOP:%O5AXWH[");
      JSONObject jSONObject2 = jSONObject1.put("-@<?AOP:%O5AXWH[", false);
      String string1 = "set";
      JSONObject jSONObject3 = jSONObject2.put("set", (-1522.9958300486767));
      jSONObject2.append("", jSONObject0);
      try { 
        jSONObject3.getLong("z=*64e?8k6{r(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"z=*64e?8k6{r(\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8957854402761787
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = ",:]}/\"[{;=#";
      stringArray0[3] = "/)e";
      stringArray0[4] = ">CNiP";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.toString(61);
      jSONObject1.names();
      int int0 = (-2131);
      jSONObject1.optInt("d_OH$+", (-2131));
      JSONObject jSONObject2 = jSONObject0.put(">CNiP", 61);
      jSONObject2.optLong((String) null, 1737L);
      JSONObject jSONObject3 = null;
      try {
        jSONObject3 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9952956283242615
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Float float0 = new Float(1.0);
      Float.min(0.0F, 0.0F);
      JSONObject jSONObject1 = jSONObject0.put("true", (Object) float0);
      jSONObject1.length();
      jSONObject0.length();
      try { 
        jSONObject1.append("true", "HO");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[true] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5418502451562888
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<JSONArray, JSONObject> hashMap0 = new HashMap<JSONArray, JSONObject>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = new JSONArray();
      hashMap0.put(jSONArray0, jSONObject0);
      String string0 = "";
      JSONObject jSONObject1 = hashMap0.replace(jSONArray0, (JSONObject) null);
      hashMap0.put(jSONArray0, jSONObject1);
      JSONObject.getNames((Object) hashMap0);
      JSONObject jSONObject2 = jSONObject1.put("", 913);
      JSONObject.getNames(jSONObject1);
      JSONObject.getNames(jSONObject2);
      jSONObject0.remove("");
      jSONObject0.toString(15, 15);
      JSONObject.valueToString("{}", (-1316), 15);
      try { 
        jSONObject2.getInt("\"java.lang.String@0000000005\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"java.lang.String@0000000005\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<JSONArray, JSONObject> hashMap0 = new HashMap<JSONArray, JSONObject>();
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = new JSONArray();
      hashMap0.put(jSONArray0, jSONObject0);
      String string0 = "";
      hashMap0.put(jSONArray0, (JSONObject) null);
      JSONObject.getNames((Object) hashMap0);
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9590960964240387
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Byte byte0 = new Byte((byte)126);
      JSONObject jSONObject0 = new JSONObject(byte0);
      String string0 = "val";
      try { 
        jSONObject0.getBoolean("val");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"val\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.0077644361927103
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      jSONObject0.isNull("");
      jSONObject0.optBoolean("%");
      jSONObject0.optString("%");
      Double double0 = new Double((-1596L));
      Double.sum(0.0, 0.0);
      JSONObject.getNames((Object) double0);
      jSONObject0.toString();
      jSONObject0.optDouble("G~yXf>i8mJ} *uODA", 0.0);
      jSONObject0.optInt((String) null, 160);
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.put((String) null, 47);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9427774109957432
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      JSONObject jSONObject1 = new JSONObject("", stringArray0);
      jSONObject1.put("[Xi,Q6]*+,q$CmH\n", (-4921));
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      jSONObject0.put("", (Collection) linkedList0);
      try { 
        jSONObject0.put((String) null, (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.91542872147852
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      Boolean.logicalXor(true, false);
      Boolean.logicalOr(false, true);
      Boolean.logicalXor(true, true);
      Boolean.logicalOr(false, false);
      JSONObject.valueToString(boolean0);
      Boolean.logicalAnd(false, false);
      Boolean.compare(true, false);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.keys();
      jSONObject0.remove("");
      JSONObject.valueToString((Object) null);
      JSONObject.getNames(jSONObject0);
      jSONObject0.toString(2500);
      jSONObject0.isNull("");
      jSONObject0.optBoolean("{}");
      jSONObject0.put("{}", 0L);
      jSONObject0.optString("{}");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.477060699125274
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "wheel.json.JSONTokener";
      stringArray0[1] = "";
      stringArray0[2] = "R";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = new JSONObject();
      jSONObject1.put("|,S>1FuQ[t H", 863L);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSONObject jSONObject0 = null;
      String[] stringArray0 = new String[4];
      String string0 = "";
      stringArray0[0] = "";
      String string1 = ":9~f";
      stringArray0[1] = ":9~f";
      String string2 = "getformat";
      stringArray0[2] = "getformat";
      stringArray0[3] = "[]";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6933483723645972
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      jSONObject0.optDouble("rrhg2Q{4_OKz{kS~r", 0.0);
      stringArray0[1] = "";
      stringArray0[2] = ",:]}/\"[{;=#";
      stringArray0[3] = "/)e";
      stringArray0[4] = ">CNiP";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.quote(">CNiP");
      Integer integer0 = new Integer(62);
      Short short0 = new Short((short)6607);
      hashMap1.put(integer0, short0);
      jSONObject1.names();
      jSONObject0.length();
      jSONObject0.length();
      JSONObject jSONObject2 = jSONObject1.append("", "");
      jSONObject2.getJSONArray("");
      try { 
        jSONObject2.getString(">CNiP");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\">CNiP\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.6910688711446102
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      String string0 = "";
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject1 = new JSONObject("", stringArray0);
      HashMap<JSONObject, JSONObject> hashMap2 = new HashMap<JSONObject, JSONObject>();
      JSONObject jSONObject2 = jSONObject0.put("", (Map) hashMap2);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      jSONObject1.opt("");
      try { 
        jSONObject2.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9531850804565751
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Short short0 = new Short((short) (-1721));
      Double.min((-1162.389938673945), 0.0);
      String string0 = "WfI}#!X";
      Double.min(Double.NaN, (-435.814361));
      Integer integer0 = new Integer(8);
      JSONObject jSONObject0 = new JSONObject(integer0);
      JSONArray jSONArray0 = new JSONArray();
      StringWriter stringWriter0 = new StringWriter(3082);
      StringWriter stringWriter1 = stringWriter0.append('h');
      StringWriter stringWriter2 = stringWriter1.append('\\');
      stringWriter0.append((CharSequence) "WfI}#!X");
      stringWriter2.flush();
      String string1 = "2k";
      jSONObject0.opt("2k");
      try { 
        jSONObject0.getJSONArray("isreplaceFirst");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isreplaceFirst\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      int int0 = jSONObject0.length();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.538053998214166
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Byte byte0 = new Byte((byte)98);
      HashMap<String, Short> hashMap0 = new HashMap<String, Short>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      Double.min(Double.NaN, 1.0);
      JSONObject jSONObject2 = new JSONObject();
      jSONObject0.names();
      jSONObject2.names();
      Float float0 = new Float(0.0F);
      int int0 = (-3804);
      JSONObject.valueToString(float0, (-1104), (-3804));
      try { 
        jSONObject2.getJSONObject("Expected a ',' or '}'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Expected a ',' or '}'\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.964349354778744
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      Double double0 = new Double((-4285.0478));
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      Double.min((-1162.389938673945), 0.0);
      Double.min((-2180.755255043), (-1162.389938673945));
      JSONObject jSONObject1 = new JSONObject(linkedList0);
      JSONArray jSONArray0 = new JSONArray();
      StringWriter stringWriter0 = new StringWriter(1785);
      StringWriter stringWriter1 = stringWriter0.append('E');
      stringWriter1.append((CharSequence) "WfI}#!X");
      stringWriter0.flush();
      try { 
        jSONObject1.getString("Vb_3kyQ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Vb_3kyQ\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2921403156873117
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-81));
      JSONObject jSONObject0 = new JSONObject(byte0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "]s";
      stringArray0[1] = "Missing value";
      stringArray0[2] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      long long0 = jSONObject1.optLong("]s", (long) (byte) (-81));
      assertEquals(1, jSONObject0.length());
      assertEquals((-81L), long0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6966929206980406
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      Boolean.logicalOr(false, true);
      Boolean.logicalXor(true, true);
      Boolean.logicalOr(false, false);
      JSONObject.valueToString(boolean0);
      Boolean.logicalAnd(false, false);
      Boolean.compare(true, false);
      JSONObject jSONObject0 = new JSONObject((Object) "java.lang.Boolean@0000000001");
      jSONObject0.keys();
      jSONObject0.remove("");
      JSONObject.valueToString((Object) null);
      JSONObject.getNames(jSONObject0);
      // Undeclared exception!
      jSONObject0.toString(2500);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.823113098108894
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.remove("n0J$Y/EFAYh,_]6Cb^h");
      Float float0 = new Float(1.0);
      jSONObject0.put("true", (Object) float0);
      try { 
        jSONObject0.getString("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7563879793717057
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      JSONObject.getNames(jSONObject0);
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = ",:]}/\"[{;=#";
      stringArray0[3] = "/)e";
      stringArray0[4] = ">CNiP";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject.quote(">CNiP");
      jSONObject1.names();
      jSONObject0.length();
      jSONObject0.length();
      JSONObject jSONObject2 = jSONObject1.append("", "");
      JSONObject.valueToString((Object) null);
      jSONObject2.getJSONArray("");
      try { 
        jSONObject2.getString(">CNiP");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\">CNiP\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.983417059632336
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("y(pjX5LFUueqW;zes");
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.isNull("y(pjX5LFUueqW;zes");
      jSONObject0.optBoolean("%");
      String string0 = jSONObject0.optString("Null pointer");
      Double double0 = new Double((-1596L));
      JSONObject jSONObject1 = jSONObject0.append("%", "y(pjX5LFUueqW;zes");
      StringWriter stringWriter0 = new StringWriter(340);
      stringWriter0.append(',');
      StringWriter stringWriter1 = new StringWriter(340);
      jSONObject0.write(stringWriter1);
      jSONObject1.optInt("M;vE");
      String string1 = JSONObject.valueToString(double0, 340, 0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.403407307274348
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Short.valueOf((short) (-1766));
      String string0 = "\\n";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "YeX4u";
      JSONObject jSONObject0 = new JSONObject("Ez", stringArray0);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      jSONObject0.toString();
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.append("o0E@YMc54&;^\"=]", object0);
      StringWriter stringWriter0 = new StringWriter(81);
      StringWriter stringWriter1 = stringWriter0.append(',');
      StringWriter stringWriter2 = new StringWriter();
      jSONObject1.write(stringWriter1);
      JSONTokener jSONTokener0 = new JSONTokener("QlI4B(+");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(stringWriter2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.664539718364379
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = ",:]}/\"[{;=#";
      stringArray0[3] = "/)e";
      stringArray0[4] = ">CNiP";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Integer integer0 = new Integer(102);
      Short short0 = new Short((short) (-339));
      hashMap0.put(integer0, short0);
      jSONObject1.toString(61);
      jSONObject1.names();
      jSONObject0.length();
      jSONObject0.length();
      JSONObject jSONObject2 = jSONObject1.append("", "");
      try { 
        jSONObject2.getString(">CNiP");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\">CNiP\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9615903862484645
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      jSONObject0.isNull("");
      jSONObject0.optBoolean("%");
      String string0 = "Null pointer";
      jSONObject0.optString("Null pointer");
      Double double0 = new Double((-1596L));
      jSONObject0.append("%", "");
      StringWriter stringWriter0 = new StringWriter(340);
      StringWriter stringWriter1 = stringWriter0.append('/');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "%");
      jSONObject0.write(stringWriter2);
      String string1 = "i2ZHv!n'";
      JSONObject.getNames(jSONObject0);
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      jSONObject0.put("", (Collection) linkedList0);
      String string2 = "QlI4B(+";
      JSONTokener jSONTokener0 = new JSONTokener("QlI4B(+");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of QlI4B(+
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.654381382377385
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      JSONObject.getNames(jSONObject0);
      stringArray0[1] = "";
      stringArray0[2] = ",:]}/\"[{;=#";
      stringArray0[3] = "/)e";
      stringArray0[4] = ",:]}/\"[{;=#";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject0.optJSONArray("u");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONObject jSONObject2 = jSONObject0.put(",:]}/\"[{;=#", (-1374.51039));
      linkedList0.add("getappend");
      JSONObject jSONObject3 = jSONObject0.putOpt("Or9&", "");
      jSONObject3.get(",:]}/\"[{;=#");
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      jSONObject2.opt("5'Z?avO8tf:YYI ,88");
      HashMap<String, Float> hashMap2 = new HashMap<String, Float>();
      hashMap2.put("", (Float) null);
      Float float0 = new Float(640.66228);
      Float float1 = new Float((-160.2095F));
      hashMap2.put("Or9&", float1);
      jSONObject2.put("LPvdqbX'grGeJnY\"", (Map) hashMap2);
      try { 
        jSONObject2.getInt("op");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"op\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.861796468767417
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Short short0 = new Short((short) (-1721));
      Short.toUnsignedInt((short)1519);
      Short.toUnsignedLong((short)128);
      Short.toUnsignedLong((short)0);
      Short.compare((short)0, (short)0);
      Short.toUnsignedLong((short) (-861));
      HashMap<String, Float> hashMap0 = new HashMap<String, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.opt("LPvdqbX'grGeJnY\"");
      hashMap0.put(",", (Float) null);
      Float float0 = new Float((double) (short)1519);
      hashMap0.put(": ", float0);
      JSONObject jSONObject1 = jSONObject0.put("LPvdqbX'grGeJnY\"", (Map) hashMap0);
      try { 
        jSONObject1.getInt("LPvdqbX'grGeJnY\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"LPvdqbX'grGeJnY\\\"\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.41883922654649
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      short short0 = (short) (-1736);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.isNull("%");
      jSONObject0.optBoolean("%");
      jSONObject0.optString("{L9=_eMlBt1tt9/=Wg");
      Double double0 = new Double((-1596L));
      try { 
        jSONObject0.append((String) null, "%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Byte byte0 = new Byte((byte)90);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "A JSONArray text must start with '['";
      stringArray0[2] = "issig valu(";
      stringArray0[3] = "";
      stringArray0[4] = "] is not a JSONObject.";
      stringArray0[5] = "^_y>XVuf|.YF9";
      stringArray0[6] = "dou";
      stringArray0[7] = "ismin";
      JSONObject jSONObject0 = new JSONObject(byte0, stringArray0);
      HashMap<JSONObject, JSONObject> hashMap0 = new HashMap<JSONObject, JSONObject>();
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2804725193701016
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Float float0 = new Float(5267.15F);
      Float.sum(0.0F, 5267.15F);
      Float.sum(0.0F, 5267.15F);
      JSONObject.numberToString(float0);
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>();
      Object object0 = new Object();
      Boolean boolean0 = new Boolean("java.lang.Float@0000000001");
      Boolean.logicalXor(true, true);
      hashMap0.put(object0, boolean0);
      Boolean boolean1 = new Boolean(true);
      hashMap0.put(object0, boolean1);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.toString(0, (-1135));
      try { 
        jSONObject0.get("java.lang.Float@0000000001");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Float@0000000001\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0441914505513883
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "true";
      Float float0 = new Float(1.0);
      jSONObject0.put("true", (Object) float0);
      String string1 = null;
      jSONObject0.optInt((String) null);
      try { 
        jSONObject0.getString("\f");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\f\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.054071868040543
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.get("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"null\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.936501809771896
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("");
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      boolean boolean1 = new Boolean("");
      jSONObject0.optBoolean("%");
      String string0 = "Null pointer";
      jSONObject0.optString("Null pointer");
      Double double0 = new Double((-1596L));
      jSONObject0.append("%", "");
      JSONObject jSONObject1 = jSONObject0.put("true", true);
      jSONObject1.toString(34, 1756);
      Float float0 = new Float((float) (-1596L));
      JSONObject.valueToString(float0);
      try { 
        jSONObject1.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5419879996659676
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Double double0 = new Double(940.4639129);
      JSONArray jSONArray0 = new JSONArray();
      Float float0 = new Float((-2407.0908F));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "dou";
      stringArray0[1] = "ismin";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      HashMap<JSONObject, JSONObject> hashMap0 = new HashMap<JSONObject, JSONObject>();
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      jSONObject0.put("de", (Collection) linkedList0);
      JSONObject jSONObject1 = new JSONObject();
      JSONObject.valueToString(jSONObject1, (-3171), (-20684708));
      Boolean boolean0 = new Boolean("SYGRXd");
      jSONObject1.append("isremainderUnsigned", boolean0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.490080734580516
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      Double double0 = new Double((-4285.0478));
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      Double.min((-1162.389938673945), 0.0);
      String string0 = "WfI}#!X";
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      Double.min((-2180.755255043), (-1162.389938673945));
      JSONObject jSONObject2 = new JSONObject();
      jSONObject1.names();
      jSONObject1.names();
      int int0 = 68;
      JSONObject.valueToString(jSONObject1, 61, 68);
      try { 
        jSONObject1.getJSONObject("WfI}#!X");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"WfI}#!X\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.526019065896931
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Double double0 = new Double(0.0);
      JSONObject jSONObject0 = new JSONObject(double0);
      Double.min((-1162.389938673945), (-1162.389938673945));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "WfI}#!X";
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      String string0 = "|\".Du*.Cigq";
      JSONObject jSONObject2 = new JSONObject();
      jSONObject0.names();
      jSONObject0.toString(101, 101);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      Double double0 = new Double(720.03);
      String string0 = JSONObject.doubleToString(1695.0);
      assertEquals("1695", string0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.750412046330494
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      Float float0 = new Float((-1.0F));
      Object object0 = new Object();
      HashMap<JSONObject, JSONObject> hashMap2 = new HashMap<JSONObject, JSONObject>();
      String string0 = "0";
      jSONObject0.put("0", (Map) hashMap2);
      try { 
        jSONObject0.getInt("Tm9J}#N2/S2iFN0#$G^");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"Tm9J}#N2/S2iFN0#$G^\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.9235109353529962
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      Integer integer0 = new Integer(13);
      Short short0 = new Short((short)1);
      hashMap1.put(integer0, short0);
      Integer integer1 = new Integer((-2330));
      Short short1 = new Short((short)16);
      hashMap0.putIfAbsent(integer1, short1);
      String string0 = "{}";
      jSONObject0.put("Unclosed comment", (Object) null);
      long long0 = new Integer((short)16);
      jSONObject0.optString("g88.b");
      jSONObject0.opt((String) null);
      try { 
        jSONObject0.getJSONArray("{}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{}\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.4497927527284427
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Boolean boolean0 = Boolean.valueOf(true);
      jSONObject0.put("kchx", (Object) boolean0);
      jSONObject0.keys();
      String string0 = "";
      try { 
        jSONObject0.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6435431846957202
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("y(pjX5LFUueqW;zes");
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.isNull("y(pjX5LFUueqW;zes");
      jSONObject0.optBoolean("%");
      jSONObject0.optString("Null pointer");
      Double double0 = new Double((-1596L));
      JSONObject jSONObject1 = jSONObject0.append("%", "y(pjX5LFUueqW;zes");
      StringWriter stringWriter0 = new StringWriter(340);
      stringWriter0.append('\u001E');
      StringWriter stringWriter1 = new StringWriter(340);
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject2 = jSONObject0.put("", (Collection) linkedList0);
      Long long0 = new Long((-1L));
      JSONObject jSONObject3 = jSONObject1.put("qX0`u(n!d~`$P!X", (Object) linkedList0);
      Float float0 = new Float((float) 340);
      jSONObject3.append("Null pointer", float0);
      jSONObject1.put("toL", 0L);
      JSONObject jSONObject4 = jSONObject2.put("Null pointer", false);
      assertEquals(5, jSONObject0.length());
      assertEquals(5, jSONObject4.length());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HashMap<String, Float> hashMap0 = new HashMap<String, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt("", 102);
      assertEquals(102, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.413893196227282
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Integer integer0 = new Integer((-1741));
      Integer.compare((-1741), (-1741));
      JSONObject jSONObject0 = new JSONObject(integer0);
      HashMap<String, Byte> hashMap0 = new HashMap<String, Byte>();
      Integer.min(864, 0);
      Byte byte0 = new Byte((byte)89);
      hashMap0.put("9+S 3L],LSan|", byte0);
      hashMap0.put((String) null, byte0);
      JSONObject jSONObject1 = jSONObject0.put("9+S 3L],LSan|", (Map) hashMap0);
      long long0 = jSONObject1.optLong((String) null);
      assertEquals(2, jSONObject0.length());
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7490906203903505
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Byte byte0 = new Byte((byte)8);
      JSONObject.valueToString(byte0);
      Short.toUnsignedLong((short)2807);
      Short.toUnsignedLong((short)2807);
      Short.compare((byte)8, (byte)8);
      String string0 = null;
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONTokener jSONTokener0 = new JSONTokener((String) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.8643630233048145
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      Double double0 = new Double((-4285.0478));
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      assertEquals(2, jSONObject0.length());
      
      Float.sum(1.0F, 1521.2168F);
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>();
      Boolean.logicalXor(true, true);
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      String string0 = JSONObject.valueToString(linkedList0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.2675632284814613
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = "{";
      JSONObject jSONObject0 = null;
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      linkedList0.add((JSONObject) null);
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("getformat");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of getformat
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String string0 = "";
      JSONObject.getNames((Object) "");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      linkedList0.add((JSONObject) null);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("wheel.json.JSONException");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of wheel.json.JSONException
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.3746517268956926
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("{", 0.0);
      jSONObject0.optJSONArray("{");
      Float float0 = new Float(1.0F);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " at character ";
      JSONObject jSONObject1 = new JSONObject("{", stringArray0);
      HashMap<JSONObject, JSONObject> hashMap0 = new HashMap<JSONObject, JSONObject>();
      jSONObject1.put(" at character ", (Map) hashMap0);
      jSONObject1.toJSONArray((JSONArray) null);
      try { 
        jSONObject1.getInt("{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5309346631331593
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean.getBoolean("y(pjX5LFUueqW;zes");
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.isNull("y(pjX5LFUueqW;zes");
      jSONObject0.optBoolean("%");
      JSONArray jSONArray0 = new JSONArray();
      HashMap<Boolean, Byte> hashMap0 = new HashMap<Boolean, Byte>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(XX14HE68e `o%Y\">($";
      stringArray0[1] = "";
      HashMap<JSONObject, JSONObject> hashMap1 = new HashMap<JSONObject, JSONObject>();
      jSONObject0.put("(XX14HE68e `o%Y\">($", (Map) hashMap1);
      jSONObject0.toJSONArray(jSONArray0);
      String string0 = "B>mh$5pu";
      try { 
        jSONObject0.getString("B>mh$5pu");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"B>mh$5pu\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Double double0 = new Double(940.4639129);
      Float.sum(55.5337F, 55.5337F);
      Float.sum(0.0F, 111.0674F);
      HashMap<Object, Boolean> hashMap0 = new HashMap<Object, Boolean>();
      Boolean.logicalXor(false, false);
      Boolean boolean0 = new Boolean(true);
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = new JSONObject();
      String string0 = jSONObject1.toString((-1135), (-1135));
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.5661191377462433
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Boolean.getBoolean("");
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      jSONObject0.isNull("");
      boolean boolean0 = jSONObject0.optBoolean("%");
      assertFalse(boolean0);
      
      String string0 = jSONObject0.optString("%");
      assertEquals("", string0);
      
      long long0 = jSONObject0.optLong("");
      assertEquals(0L, long0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.757415841760439
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "%");
      jSONObject0.isNull("");
      jSONObject0.optBoolean("%");
      jSONObject0.optLong("%");
      jSONObject0.optString("Null pointer");
      Double double0 = new Double((-1596L));
      jSONObject0.append("%", "");
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONObject jSONObject1 = jSONObject0.put("", (Collection) linkedList0);
      jSONObject1.optDouble("%", (double) (-1596L));
      linkedList0.iterator();
      JSONTokener jSONTokener0 = new JSONTokener("QlI4B(+");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of QlI4B(+
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.745002365139427
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      Double double0 = new Double(199.0);
      Double.max(199.0, 1611.0);
      Double.max((-1.0), Double.NaN);
      JSONObject jSONObject0 = new JSONObject(double0);
      assertEquals(3, jSONObject0.length());
      
      Double double1 = new Double(199.0);
      String string0 = JSONObject.doubleToString((-1.0));
      assertEquals("-1", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Short short0 = new Short((short) (-1721));
      Short.toUnsignedInt((short)1519);
      Short.toUnsignedLong((short)128);
      Short.toUnsignedLong((short)0);
      Short.compare((short)0, (short) (-980));
      Short.toUnsignedLong((short) (-861));
      JSONObject.numberToString(short0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(short0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Long long0 = new Long(0L);
      String string0 = "";
      JSONObject.quote("");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.160209130127872
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte byte0 = (byte)90;
      Byte byte1 = new Byte((byte)90);
      String[] stringArray0 = new String[8];
      String string0 = "";
      stringArray0[0] = "";
      String string1 = "isjoin";
      JSONObject jSONObject0 = new JSONObject((Object) "");
      boolean boolean0 = true;
      JSONObject jSONObject1 = jSONObject0.put("", true);
      jSONObject1.put("", 0.0);
      jSONObject0.put("isjoin", (double) (byte)90);
      try { 
        jSONObject0.getJSONObject("isjoin");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"isjoin\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.541280958396051
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      Float float0 = new Float((-1.0F));
      Object object0 = new Object();
      HashMap<JSONObject, JSONObject> hashMap2 = new HashMap<JSONObject, JSONObject>();
      long long0 = jSONObject0.optLong("0");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.457465386999542
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, 46, 110);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("null", true);
      jSONObject0.append("acl", object0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.7631600723108733
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      Double double0 = new Double((-4285.0478));
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      Short.toUnsignedInt((short)1519);
      Short.toUnsignedLong((short) (-861));
      Short.toUnsignedLong((short)273);
      Short.compare((short)273, (short) (-861));
      Short.toUnsignedLong((short) (-861));
      String string0 = JSONObject.numberToString(double0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1785011548592896
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HashMap<Integer, Short> hashMap0 = new HashMap<Integer, Short>();
      HashMap<Integer, Short> hashMap1 = new HashMap<Integer, Short>(hashMap0);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap1);
      String[] stringArray0 = new String[5];
      stringArray0[1] = "u6u7LT)pwnJ{=)C#~V";
      stringArray0[2] = ",:]}/\"[{;=#";
      stringArray0[3] = "/)e";
      stringArray0[4] = ">CNiP";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }
}
