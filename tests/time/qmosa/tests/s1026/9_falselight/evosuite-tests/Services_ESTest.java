/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:35:57 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5768731582333269
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 365);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("['db8@eYDC))EQ", 365);
      services_SIMPLE_Result0.reset();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.reset();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result1.reset();
      assertEquals(0L, services_SIMPLE_Result1.time);
      assertFalse(services_SIMPLE_Result1.works);
      
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testPOP3("** Erreur g\u00E9n\u00E9r\u00E9e : ", 1327);
      assertFalse(services_SIMPLE_Result2.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.763393936425376
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", 0);
      services_HTTP_Result0.toString();
      assertFalse(services_HTTP_Result0.works);
      
      services_HTTP_Result0.works = true;
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("?#~eU", 0);
      services_SIMPLE_Result0.reset();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://**Erreur d'E/S** (:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **.\n****");
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("", 0);
      services_SIMPLE_Result0.reset();
      services_HTTP_Result0.page_weight = 0;
      services_SIMPLE_Result0.Error = "** Erreur g\u00E9n\u00E9r\u00E9e : ";
      services_SIMPLE_Result1.Error = "?#~eU";
      services_SIMPLE_Result0.time = 0L;
      Services.testHTTP("**Erreur d'E/S** (", 0);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("** Erreur g\u00E9n\u00E9r\u00E9e : ", 0);
      Services.testPOP3("**Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **", (-67));
      Services services0 = new Services();
      Services.testPOP3("** Erreur g\u00E9n\u00E9r\u00E9e : ", 0);
      services_HTTP_Result1.toString();
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("**URL Mal Form\u00E9** (", 569);
      assertFalse(services_HTTP_Result2.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.525950491234776
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://*#BPyxS8 RJ>X[Qa6:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "*#BPyxS8 RJ>X[Qa6");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("*#BPyxS8 RJ>X[Qa6", 0);
      services_HTTP_Result0.time = 0L;
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.page_weight = 0;
      services_HTTP_Result0.time = 0L;
      services_HTTP_Result0.works = true;
      services_HTTP_Result0.toString();
      Services.testHTTPS("*#BPyxS8 RJ>X[Qa6", 0);
      services_HTTP_Result0.reset();
      assertFalse(services_HTTP_Result0.works);
      
      Services.testPOP3((String) null, (-1));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("** Temps : ", 0);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testSMTP("]Hpbioj<Gkmt<Cu]", 1);
      System.setCurrentTimeMillis(0L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("]Hpbioj<Gkmt<Cu]", (-857));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-22L));
      System.setCurrentTimeMillis((-22L));
      System.setCurrentTimeMillis((-22L));
      System.setCurrentTimeMillis((-2659));
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (-2659));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "$_A");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, (byte[]) null);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "m>\"5j@P^D0evW;XUH");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 3000);
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "** Poid de la page : ");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "%t=tns$z]{TUs{DV+O");
      byte[] byteArray0 = new byte[1];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("%t=tns$z]{TUs{DV+O", 523);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.page_weight = 2104;
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("", 1258);
      assertEquals(0L, services_HTTP_Result1.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 0);
      assertEquals(0L, services_HTTP_Result2.time);
      assertEquals(0, services_HTTP_Result2.page_weight);
      assertEquals(0, services_HTTP_Result2.code);
      assertFalse(services_HTTP_Result2.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "$_A");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, (byte[]) null);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "m>\"5j@P^D0evW;XUH");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("$_A", (byte)0);
      services_SIMPLE_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@75d51198) **", (-1357));
      assertFalse(services_SIMPLE_Result1.works);
      assertEquals(0L, services_SIMPLE_Result1.time);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("Oj>y41}+4L", 0);
      assertFalse(services_HTTP_Result2.works);
      assertEquals(0, services_HTTP_Result2.code);
      assertEquals(0L, services_HTTP_Result2.time);
      assertEquals(0, services_HTTP_Result2.page_weight);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis((-22L));
      System.setCurrentTimeMillis((-4126L));
      System.setCurrentTimeMillis((-22L));
      System.setCurrentTimeMillis((-2624));
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", (-2624));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }
}
