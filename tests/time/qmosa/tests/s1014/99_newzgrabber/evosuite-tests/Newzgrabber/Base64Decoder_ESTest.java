/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:18:20 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.BufferedOutputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import java.util.PriorityQueue;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("CLER");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.println("CLER");
      mockPrintStream0.println((float) (byte) (-98));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      mockPrintStream0.println((int) (byte)0);
      mockPrintStream0.write(byteArray0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("CLER");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      bufferedCustomInputStream0.read(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, false);
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      assertEquals((-9988), mockFileInputStream0.available());
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1031808349614796
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Newzgrabber.Base64Decoder");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)11;
      Locale locale0 = Locale.KOREAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) (byte)61;
      objectArray0[1] = (Object) "]vlcv!$# `&[dS)\"$";
      objectArray0[2] = (Object) locale0;
      objectArray0[4] = (Object) (byte)61;
      objectArray0[5] = (Object) mockFile0;
      objectArray0[6] = (Object) mockFile0;
      objectArray0[7] = (Object) (byte) (-117);
      mockPrintStream0.printf(locale0, "Newzgrabber.Base64Decoder", objectArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0, (byte)61, true);
      DebugGraphics.logStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("CLEAR");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      mockPrintStream1.println(1739);
      byte[] byteArray0 = new byte[0];
      mockPrintStream0.write(byteArray0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("CLEAR");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Object object0 = new Object();
      Object object1 = new Object();
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, false);
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(bufferedCustomInputStream1, false);
      BufferedCustomInputStream bufferedCustomInputStream3 = new BufferedCustomInputStream(bufferedCustomInputStream1, false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, bufferedOutputStream0);
      base64Decoder0.foundbegin = true;
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9996), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6028550145762354
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("CLER");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.println("CLER");
      mockPrintStream0.println((float) (byte) (-98));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      mockPrintStream0.println((int) (byte)0);
      mockPrintStream0.write(byteArray0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("CLER");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, true);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, false);
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(mockFileInputStream0, false);
      BufferedCustomInputStream bufferedCustomInputStream3 = new BufferedCustomInputStream(bufferedCustomInputStream0, false);
      BufferedCustomInputStream bufferedCustomInputStream4 = new BufferedCustomInputStream(bufferedCustomInputStream3, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-117.0");
      BufferedCustomInputStream bufferedCustomInputStream5 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream1, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-29982), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6277603141973452
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MockFile mockFile0 = new MockFile("Newzgrabber.Base64Decoder");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      byte[] byteArray0 = new byte[9];
      mockPrintStream0.println((float) (byte)61);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-120);
      mockPrintStream0.println((double) (byte)97);
      mockPrintStream0.write(byteArray0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("Newzgrabber.Base64Decoder");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.setLineCount((-368L));
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder1.setReader(sequenceInputStream0);
      base64Decoder1.decodeStream();
      mockFileInputStream0.mark((-1665));
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-366L), base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5216924026780619
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockFile mockFile0 = new MockFile("CLEAR");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.println("CLEAR");
      mockPrintStream0.println((float) (byte) (-98));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "CLEAR";
      objectArray0[3] = (Object) mockPrintStream0;
      objectArray0[4] = (Object) locale0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "CLEAR", objectArray0);
      byte[] byteArray0 = new byte[4];
      mockPrintStream0.println((int) (byte) (-98));
      mockPrintStream0.write(byteArray0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("CLEAR");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      PriorityQueue<Locale> priorityQueue0 = new PriorityQueue<Locale>();
      Locale.lookup(linkedList0, priorityQueue0);
      mockPrintStream0.printf(locale0, "B''", objectArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1:zY'V~ctTc47hU");
      mockPrintStream0.println(false);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      base64Decoder0.decodeStream();
      assertEquals(4L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.582647532242458
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MockFile mockFile0 = new MockFile("Newzgrabber.Base64Decoder");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      byte[] byteArray0 = new byte[9];
      mockPrintStream0.println((float) (byte)51);
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-120);
      mockPrintStream0.write(byteArray0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("Newzgrabber.Base64Decoder");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder1.decodeStream();
      assertEquals(14L, mockFile0.length());
      assertEquals(1L, base64Decoder1.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(".");
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, mockFileOutputStream0);
      base64Decoder0.setTotalLines(1L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      base64Decoder0.setBegin(false);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
