/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:36:45 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2814590054619566
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 2291);
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(true);
      outputFormat1.setTrimText(false);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setEncoding("  ");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent(";I,]");
      outputFormat0.setNewlines(true);
      outputFormat2.setIndent("org.dom4j.io.OutputFormat");
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent(";I,]");
      outputFormat3.isSuppressDeclaration();
      outputFormat1.isSuppressDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      assertTrue(outputFormat0.isNewlines());
      
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat4.isExpandEmptyElements());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5763525794641384
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize((-2560));
      String string0 = "-expandEmpty-lineSeparator";
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty-lineSeparator");
      outputFormat0.setIndent("-expandEmpty-lineSeparator");
      outputFormat1.setLineSeparator("-indentSize");
      outputFormat1.setPadText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty>Z`F9F";
      stringArray0[1] = "-expandEmpty-lineSeparator";
      stringArray0[2] = "-expandEmpty-lineSeparator";
      stringArray0[3] = "-expandEmpty-lineSeparator";
      stringArray0[4] = "/%K+FT|LxQYWTW=";
      stringArray0[5] = "-indentSize";
      stringArray0[6] = "-expandEmpty-lineSeparator";
      int int0 = 5;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 5);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-expandEmpty-lineSeparator\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2613780972780977
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setIndent(">Z`F9Fk");
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = ">Z`F9Fk";
      stringArray0[2] = ">Z`F9Fk";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = ">Z`F9Fk";
      stringArray0[5] = "/%K+FT|LxQYWTW=";
      stringArray0[6] = ">Z`F9Fk";
      stringArray0[7] = "-suppressDeclaration";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-suppressDeclaration";
      stringArray1[1] = ">Z`F9Fk";
      stringArray1[2] = "-suppressDeclaration";
      stringArray1[3] = "<";
      stringArray1[4] = "/%K+FT|LxQYWTW=";
      outputFormat0.parseOptions(stringArray1, 1);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      outputFormat0.setIndent("-suppressDeclaration");
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-915));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -915
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4430212631031933
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize((-2560));
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty-lineSeparator");
      outputFormat0.setIndent("-expandEmpty-lineSeparator");
      outputFormat1.setLineSeparator("-indentSize");
      outputFormat1.setPadText(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setTrimText(false);
      outputFormat1.setIndent(true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.686214871832127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat2 = new OutputFormat("ZH|!=2sSA");
      outputFormat2.setIndent("");
      outputFormat0.setLineSeparator("");
      outputFormat2.setPadText(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat2.setTrimText(false);
      outputFormat1.setIndent(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "=pnCc 60]gH";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "=pnCc 60]gH";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-trimText";
      outputFormat1.setOmitEncoding(true);
      stringArray0[6] = "^MQ+l?uN<`*";
      stringArray0[7] = "=pnCc 60]gH";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setNewlines(false);
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9623443191863599
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "t*Dg";
      stringArray0[3] = "V6";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "/%K+FT|LxQYWTW=";
      stringArray0[6] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[7] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[8] = "G#0dRd^ iE.d";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat("G#0dRd^ iE.d", true, "q.,-}JIFnjtk4! XFg");
      outputFormat1.parseOptions(stringArray0, 2);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat2.isExpandEmptyElements());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4990104312963837
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "{%@wCyYa+xTB,C5";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.isPadText();
      outputFormat0.setIndent("d`G'Je");
      outputFormat0.setIndent("-omitEncoding");
      assertEquals("-omitEncoding", outputFormat0.getIndent());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2755929974347877
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", false, "X=1.y!^GF-fIX6");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(2367);
      OutputFormat outputFormat1 = new OutputFormat("=z.Bps");
      outputFormat1.setOmitEncoding(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[0];
      outputFormat1.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "ZErwg#R6U{";
      stringArray1[1] = "=z.Bps";
      stringArray1[2] = "-indentSize";
      stringArray1[3] = "-indentSize";
      outputFormat0.parseOptions(stringArray1, 5);
      outputFormat0.setIndentSize(5);
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent("ZErwg#R6U{");
      outputFormat2.isExpandEmptyElements();
      outputFormat0.getLineSeparator();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('5');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (5)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.237380902645802
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^MQ+l?uN<`**k:", true, "^MQ+l?uN<`**k:");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^MQ+l?uN<`**k:";
      stringArray0[1] = "^MQ+l?uN<`**k:";
      stringArray0[2] = "^MQ+l?uN<`**k:";
      stringArray0[3] = "^MQ+l?uN<`**k:";
      outputFormat0.parseOptions(stringArray0, 2071);
      outputFormat0.setXHTML(true);
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator("/.");
      outputFormat0.isTrimText();
      outputFormat1.getIndent();
      outputFormat1.setPadText(true);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.45913334031533
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(896);
      outputFormat0.getLineSeparator();
      outputFormat0.isPadText();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1019);
      outputFormat0.setPadText(false);
      outputFormat0.isNewlines();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("\n");
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.getIndent();
      outputFormat1.getEncoding();
      outputFormat0.setIndent("UTF-8");
      OutputFormat.createCompactFormat();
      outputFormat1.setEncoding(":@u5%b?FS'Y^M");
      OutputFormat.createPrettyPrint();
      outputFormat1.isNewlines();
      boolean boolean0 = outputFormat0.isPadText();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("*");
      outputFormat0.setXHTML(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterNTags(784);
      outputFormat0.setNewlines(false);
      outputFormat0.setLineSeparator("");
      outputFormat0.getIndent();
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "  ";
      stringArray0[1] = "";
      stringArray0[2] = "{%@wCyYa+xTB,C5";
      outputFormat0.setNewLineAfterNTags(784);
      stringArray0[3] = "";
      stringArray0[4] = "*";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('I');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (I)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('&');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (&)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.482165329075733
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("UsnB5T=*aVO_r<");
      outputFormat0.setNewlines(false);
      outputFormat0.setEncoding("V6");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "V6";
      stringArray0[1] = "V6";
      stringArray0[2] = "V6";
      stringArray0[3] = "UsnB5T=*aVO_r<";
      stringArray0[4] = "UsnB5T=*aVO_r<";
      stringArray0[5] = "UsnB5T=*aVO_r<";
      stringArray0[6] = "UsnB5T=*aVO_r<";
      stringArray0[7] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setIndent("V6");
      outputFormat1.setEncoding("mz=n(P.*D<y{A");
      outputFormat1.setNewlines(false);
      outputFormat1.parseOptions(stringArray0, 94);
      outputFormat0.getEncoding();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setAttributeQuoteCharacter('\"');
      assertEquals("mz=n(P.*D<y{A", outputFormat1.getEncoding());
      
      String string0 = outputFormat2.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.92819476520619
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setEncoding("=| %`.N>s;A\"(og!,;|");
      String string0 = null;
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      boolean boolean0 = true;
      outputFormat1.setEncoding("");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(true);
      String string1 = null;
      outputFormat0.setIndent((String) null);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 2434);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setEncoding("-lineSeparator");
      boolean boolean0 = false;
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 3025);
      outputFormat0.setIndent(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2247111441283223
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("2%l{$_4,]6;sLj");
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndentSize(1);
      outputFormat0.setLineSeparator("2%l{$_4,]6;sLj");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("2%l{$_4,]6;sLj");
      outputFormat1.setNewLineAfterNTags(1);
      outputFormat0.setNewLineAfterNTags(414);
      outputFormat0.setNewLineAfterNTags(3174);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isOmitEncoding();
      outputFormat0.isXHTML();
      outputFormat0.setXHTML(false);
      assertEquals("2%l{$_4,]6;sLj", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.362843374280337
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize((-2560));
      outputFormat0.setIndent("qQ<WDO)\nG{9TN\"h");
      String[] stringArray0 = null;
      int int0 = 2;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3394381326137395
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("ZH|!=2sSA");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setLineSeparator("U+Y_l3i");
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setTrimText(true);
      outputFormat1.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      assertEquals("U+Y_l3i", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.33800580986368
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("ZH|!=2sSA");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setLineSeparator("U+Y_l3i");
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(":3");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.setTrimText(true);
      outputFormat1.isTrimText();
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertEquals("  ", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6600618646184544
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^MQ+l?uN<`**k:", true, "^MQ+l?uN<`**k:");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^MQ+l?uN<`**k:";
      stringArray0[1] = "^MQ+l?uN<`**k:";
      stringArray0[2] = "^MQ+l?uN<`**k:";
      stringArray0[3] = "^MQ+l?uN<`**k:";
      stringArray0[4] = "^MQ+l?uN<`**k:";
      stringArray0[5] = "^MQ+l?uN<`**k:";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 16);
      outputFormat0.setEncoding("B2c");
      assertEquals("B2c", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = new OutputFormat("%QI4h", true);
      boolean boolean0 = outputFormat1.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.974268351915661
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      outputFormat0.setNewlines(true);
      stringArray0[2] = "";
      stringArray0[3] = "$Jaz0mB";
      stringArray0[4] = "-encoding";
      OutputFormat.createCompactFormat();
      stringArray0[5] = "HEbmNcVv3\"";
      stringArray0[6] = "SqXqZ6j[5rKu*:\"";
      stringArray0[7] = "-In#PuhXZW";
      stringArray0[8] = "$Jaz0mB";
      outputFormat0.parseOptions(stringArray0, 2071);
      outputFormat0.setXHTML(true);
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.isTrimText();
      outputFormat1.getIndent();
      outputFormat1.setPadText(true);
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("H");
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      assertEquals("H", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize((-2375));
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      String string0 = outputFormat0.getIndent();
      assertEquals("", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2422326546673657
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&x2t<0xT");
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize((-794));
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags((-1804303140));
      outputFormat0.setNewlines(false);
      outputFormat0.setLineSeparator("&x2t<0xT");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isPadText();
      outputFormat0.setIndent("6OZ");
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(false);
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize(0);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(true);
      outputFormat0.setLineSeparator("  ");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent("6c(&~@'M,nZ");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("T^M+l?uN<`**k", true);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(boolean0);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("T^M+l?uN<`**k", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8582710085835656
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6435817077336305
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 3025);
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      int int0 = 0;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setTrimText(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 3025);
      int int0 = outputFormat0.parseOptions(stringArray0, 3025);
      assertEquals("-lineSeparator", outputFormat0.getEncoding());
      assertEquals(3025, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6600618646184544
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparaor", false);
      outputFormat0.setEncoding("-lineSeparaor");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparaor";
      outputFormat0.parseOptions(stringArray0, 3037);
      stringArray0[1] = "-lineSeparaor";
      stringArray0[2] = "-lineSeparaor";
      stringArray0[3] = "-lineSeparaor";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("6.+[On");
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("-lineSeparaor", outputFormat0.getEncoding());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewLineAfterNTags((-4656));
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize(756);
      OutputFormat outputFormat1 = new OutputFormat("", false, "");
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("-xhtml>Z`F9Fk");
      assertEquals("-xhtml>Z`F9Fk", outputFormat0.getIndent());
      
      outputFormat1.isExpandEmptyElements();
      String string0 = outputFormat1.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4309360778745295
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isExpandEmptyElements();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent((String) null);
      outputFormat0.setLineSeparator(" ");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isOmitEncoding();
      outputFormat1.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("|f#?6WrvWtE*d");
      outputFormat1.setOmitEncoding(true);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "|f#?6WrvWtE*d";
      stringArray0[1] = "K?";
      stringArray0[2] = "|f#?6WrvWtE*d";
      stringArray0[3] = "|f#?6WrvWtE*d";
      stringArray0[4] = null;
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 4431);
      outputFormat0.setIndent("");
      outputFormat2.isOmitEncoding();
      outputFormat1.getEncoding();
      assertEquals("|f#?6WrvWtE*d", outputFormat1.getIndent());
      
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat2.setNewlines(false);
      assertFalse(outputFormat2.isOmitEncoding());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6904997026278057
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize((-1881300027));
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent((String) null);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setIndent("");
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals("", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', char0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0400432449870047
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize(0);
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "-indent";
      stringArray0[2] = "";
      stringArray0[3] = "r;v\"\"'B*\fcNKS^j'0";
      stringArray0[4] = "gqWy%beF' l0/7";
      stringArray0[5] = "TTT9ULja_85?uw!_m";
      stringArray0[6] = "^FL*]cMx{J:(3l^Pc'";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(">Z`F9F", true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "aYV28";
      stringArray0[1] = ">Z`F9F";
      stringArray0[2] = "-xhtmlJ`;>~dvLsH)*<";
      outputFormat0.setIndent(true);
      stringArray0[3] = ">Z`F9F";
      outputFormat0.setIndentSize(4750);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1794106293));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1794106293
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6912719034000063
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize((-2560));
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("?e'luf!oA", false);
      outputFormat1.setIndent("");
      outputFormat0.setIndent("-newlines");
      outputFormat1.setIndent("yW ;)hEAz{");
      assertEquals("yW ;)hEAz{", outputFormat1.getIndent());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8735586012105023
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("Kj6dkF");
      outputFormat0.setNewlines(false);
      outputFormat0.setEncoding("Kj6dkF");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("=pnCc 60]gH");
      outputFormat0.setLineSeparator("0j6dkF");
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=pnCc 60]gH";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Kj6dkF";
      stringArray1[1] = "Kj6dkF";
      outputFormat0.setIndentSize((-4477));
      stringArray1[2] = "=pnCc 60]gH";
      outputFormat0.setNewLineAfterNTags((-4668));
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent("~UTMs");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getLineSeparator();
      assertEquals("~UTMs", outputFormat0.getIndent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7074515352304802
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^MQ+l?uN<`**k:", true, "^MQ+l?uN<`**k:");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^MQ+l?uN<`**k:";
      stringArray0[1] = "^MQ+l?uN<`**k:";
      stringArray0[2] = "^MQ+l?uN<`**k:";
      stringArray0[3] = "^MQ+l?uN<`**k:";
      stringArray0[4] = "^MQ+l?uN<`**k:";
      stringArray0[5] = "^MQ+l?uN<`**k:";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("\n");
      outputFormat0.setNewlines(false);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.getEncoding();
      assertEquals("\n", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.162427582114509
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(false);
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[3];
      outputFormat0.parseOptions(stringArray0, 1904);
      OutputFormat outputFormat1 = new OutputFormat("  ", true);
      outputFormat1.parseOptions(stringArray0, 1904);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
      
      outputFormat1.isOmitEncoding();
      outputFormat2.setIndentSize(0);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = new OutputFormat("^|'D_zv<6=s=Bhs+R[M", false, "ZH|!=2sSA");
      String string0 = outputFormat3.getEncoding();
      assertEquals("ZH|!=2sSA", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\"I9ht3k";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      outputFormat0.setNewlines(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setOmitEncoding(true);
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText");
      outputFormat0.setIndent("-trimText");
      outputFormat0.setIndent(")");
      outputFormat0.setLineSeparator(")");
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(true);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-i[denize";
      stringArray0[1] = "-trimText";
      stringArray0[2] = ")";
      stringArray0[3] = "V6";
      stringArray0[4] = "-trimText";
      outputFormat0.setIndent(")");
      assertEquals(")", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.2517732168817441
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText");
      outputFormat0.setIndent("-trimText");
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "=H) 7#_]~Uf";
      stringArray0[1] = "V6";
      stringArray0[2] = "V6";
      stringArray0[3] = "=H) 7#_]~Uf";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "=H) 7#_]~Uf";
      stringArray1[1] = "-trimText";
      stringArray1[2] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray1[3] = "-trimText";
      stringArray1[4] = "-trimText";
      stringArray1[5] = "-trimText";
      outputFormat0.parseOptions(stringArray1, 451);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1851392347));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1851392347
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7356013118620264
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("0:8eFc^D-9$C");
      assertEquals("0:8eFc^D-9$C", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(732);
      outputFormat1.setIndent(true);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setIndent("B?lgYG>~m=K");
      outputFormat2.setIndent("~-;_W='3o;`{|+qr");
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "{%@wCyYa+xTB,C5";
      stringArray0[3] = "";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('z');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (z)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "{%@wCyYa+xTB,C5";
      stringArray0[3] = "";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-702));
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-702), int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4515374254936915
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding("-expandEmpty^MQ+l?uN<`**k:");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[1] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[2] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[3] = "-xhtml6.+[OnWv";
      stringArray0[4] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[5] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[7] = "-expandEmpty^MQ+l?uN<`**k:";
      stringArray0[8] = "-expandEmpty^MQ+l?uN<`**k:";
      outputFormat1.parseOptions(stringArray0, 3025);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6435817077336305
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 3025);
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
