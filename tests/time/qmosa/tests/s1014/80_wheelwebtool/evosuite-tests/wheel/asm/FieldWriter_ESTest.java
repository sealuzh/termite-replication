/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:47:05 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "`(D)&j", "/4Dhqfzdc?", "/4Dhqfzdc?", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11((-1277), 1);
      byteVector0.putUTF8("D}rI]6x5;dukP1(2k");
      ByteVector byteVector2 = byteVector1.putUTF8("/4Dhqfzdc?");
      byteVector2.putInt(2);
      ByteVector byteVector3 = byteVector2.putLong((-1L));
      byteVector3.putShort(1659);
      ByteVector byteVector4 = byteVector3.putLong((-1));
      byteVector4.put12((-1), 131072);
      ByteVector byteVector5 = byteVector3.putLong(1659);
      ByteVector byteVector6 = byteVector5.putUTF8("/4Dhqfzdc?");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-4);
      byteVector6.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2239592165010822
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      int int0 = 63228;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 63228, "", "", "", "RuntimeInvisibleAnnotations");
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "[{)", "", (String) null, "`(j");
      Attribute attribute0 = new Attribute("6{8egevZ49m");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5349036392021125
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      classWriter0.invalidFrames = true;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "`(j", "/4Dhqfzdc?", "/4Dhqfzdc?", (Object) null);
      fieldWriter0.visitAnnotation("/4Dhqfzdc?", true);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("['OK_AEBW5`o(Hp");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      classWriter0.invalidFrames = true;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 63228, "2Q~*'b%8}", "RuntimeInvisibleAnnotations", "/4Dhqfzdc?", "2Q~*'b%8}");
      ClassWriter classWriter1 = new ClassWriter(63228);
      ByteVector byteVector0 = classWriter1.pool;
      ByteVector byteVector1 = byteVector0.put11(8, 2);
      ByteVector byteVector2 = byteVector1.putUTF8("^zh{#!Y;uUDf");
      ByteVector byteVector3 = byteVector2.putUTF8("RuntimeInvisibleAnnotations");
      ByteVector byteVector4 = byteVector3.putLong((-367L));
      ByteVector byteVector5 = byteVector4.putShort(2);
      byteVector2.putLong(1);
      ByteVector byteVector6 = new ByteVector(326);
      byteVector6.put12(8, 7);
      ByteVector byteVector7 = byteVector5.putByte(63228);
      byteVector7.putLong(63228);
      byteVector4.putUTF8("RuntimeInvisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.057313896906394
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "`(j", "/4Dhqfzdc?", "/4Dhqfzdc?", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11((-1277), 1);
      ByteVector byteVector2 = byteVector0.putUTF8("D}rI]6x5;dukP1(2k");
      ByteVector byteVector3 = byteVector1.putUTF8("/4Dhqfzdc?");
      ByteVector byteVector4 = byteVector3.putUTF8("qa)@$KX<Iw d:MHy");
      ByteVector byteVector5 = byteVector1.putLong(12L);
      byteVector0.put12((-3198), (-2356));
      byteVector0.putLong((-1277));
      byteVector1.putInt((-316));
      ByteVector byteVector6 = byteVector2.put12(1847, (-537));
      byteVector0.putUTF8("");
      fieldWriter0.put(byteVector5);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector6);
      assertSame(byteVector6, byteVector4);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.49057893774639
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "", "", "");
      ByteVector byteVector0 = new ByteVector(65535);
      ByteVector byteVector1 = byteVector0.put11(3678, 65535);
      ByteVector byteVector2 = byteVector1.putUTF8("");
      byteVector1.putUTF8("");
      byteVector2.putLong(0L);
      byteVector2.putShort(1);
      byteVector2.putUTF8("");
      byteVector0.put12(2, 65555);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteVector2.putByteArray(byteArray0, (byte)1, (byte)0);
      ByteVector byteVector3 = byteVector2.putLong((-346L));
      fieldWriter0.put(byteVector1);
      ByteVector byteVector4 = byteVector3.putByteArray(byteArray0, (byte)0, (byte)4);
      fieldWriter0.put(byteVector4);
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1829));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-23), "/4D)?qfzdc?", "/4D)?qfzdc?", (String) null, "LSM21k';Z'n,");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("/4D)?qfzdc?");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5066217184950532
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      classWriter0.newConst("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("7yg8rs\"C", true);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(50, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte) (-18);
      byteArray0[1] = (byte) (-128);
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-98);
      byteArray0[6] = (byte) (-107);
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Attribute attribute0 = new Attribute("v80hugYP");
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)41;
      ClassWriter classWriter0 = new ClassWriter(1309);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 478, "Hc9?h-fr*h&\"B5,1)#", "wheel.asm.Handler", "RuntimeVisibleAnnotations", "`(j");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort((byte)41);
      ByteVector byteVector2 = byteVector1.putUTF8("`(j");
      ByteVector byteVector3 = byteVector2.putByte((-1270));
      fieldWriter0.put(byteVector3);
      assertSame(byteVector2, byteVector3);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      ClassWriter classWriter0 = new ClassWriter((-1811));
      classReader0.copyPool(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(classReader0, (-1811));
      FieldVisitor fieldVisitor0 = classWriter1.visitField(703, "Deprecated", "org.apache.commons.io.filefilter.EmptyFileFilter", "Signature", "org.apache.commons.io.filefilter.EmptyFileFilter");
      FieldWriter fieldWriter0 = classWriter1.firstField;
      fieldWriter0.visitEnd();
      fieldWriter0.visitEnd();
      assertSame(fieldWriter0, fieldVisitor0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0840532024728213
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3198));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 63228, "", "", "", "RuntimeInvisibleAnnotations");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 3, "", "org.apache.commons.io.filefilter.DirectoryFileFilter", "", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      fieldWriter1.getSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("cWN5=q%Sr-7}!lU", "a!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"a!\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3107), "/4Dhfzdc?", "`(j", "/4Dhfzdc?", (Object) null);
      fieldWriter0.getSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", dataInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.DataInputStream@33feb551
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      String string0 = "`(j";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "`(j", "`(j", "The array of suffixes must not be null", "`(j");
      fieldWriter0.getSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte) (-49);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)114, 1202);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      pushbackInputStream0.markSupported();
      byteArrayInputStream0.reset();
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1919), (String) null, "The list of suffixes must not be null", "e1_-$Qw>NBH", dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1829));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-23), "/4D)?qfzdc?", "/4D)?qfzdc?", (String) null, "LSM21k';Z'n,");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("Deprecated");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 2);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
}
