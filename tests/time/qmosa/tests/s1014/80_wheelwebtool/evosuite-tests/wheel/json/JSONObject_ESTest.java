/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:47:55 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONObject.doubleToString(Double.NaN);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "null";
      stringArray0[1] = "null";
      stringArray0[2] = "null";
      stringArray0[3] = "null";
      stringArray0[4] = "null";
      stringArray0[5] = "null";
      stringArray0[6] = "null";
      stringArray0[7] = "null";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6727090543958525
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      jSONArray0.toString(1630, (-1676));
      jSONArray0.optLong((-1676));
      JSONObject jSONObject1 = jSONObject0.put("Unterminated string", 1630);
      jSONObject1.remove("[]");
      linkedList0.add("[]");
      JSONArray jSONArray1 = new JSONArray();
      jSONArray0.toJSONObject(jSONArray1);
      jSONObject1.getInt("Unterminated string");
      jSONObject0.optDouble("gLQ8|&_p%+.un", 1080.0031);
      jSONObject1.optBoolean("[]");
      jSONObject0.put("BbKAK`~y!;lmtkD}rI]", (-4320L));
      jSONObject1.length();
      Short short0 = new Short((short)27);
      jSONObject0.optJSONArray("wheel.json.JSONObject");
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4534769591490138
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      jSONArray0.optLong((-1676));
      LinkedList<String> linkedList1 = new LinkedList<String>();
      JSONArray jSONArray1 = new JSONArray();
      try { 
        jSONObject0.put((String) null, (Object) jSONArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4852539683745865
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      Float float0 = new Float(Double.NaN);
      try { 
        jSONObject0.put("[]", (Object) float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSON does not allow non-finite numbers.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      Boolean boolean1 = new Boolean(false);
      Boolean.logicalAnd(false, false);
      JSONObject.getNames((Object) boolean0);
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("wM?L", (Object) boolean0);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject1.toJSONArray(jSONArray0);
      assertEquals(1, jSONObject0.length());
      
      String string0 = JSONObject.valueToString(linkedList0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9133715474527935
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Float float0 = new Float(4556.256074759981);
      Float.sum((-1705.4843F), 924.42816F);
      Double double0 = new Double((-1425.6228112389));
      Float float1 = new Float(Double.NaN);
      JSONTokener jSONTokener0 = new JSONTokener("~#6 V");
      Byte byte0 = new Byte((byte) (-40));
      JSONObject jSONObject0 = new JSONObject(byte0);
      String[] stringArray0 = new String[4];
      stringArray0[3] = " $F9v`aOceHe)Q>_(";
      stringArray0[1] = "~#6 V";
      stringArray0[2] = "~#6 V";
      stringArray0[3] = " $F9v`aOceHe)Q>_(";
      jSONObject0.optJSONArray("~#6 V");
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of ~#6 V
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.011138612172325
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<JSONObject, Float> hashMap0 = new HashMap<JSONObject, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = "C7";
      JSONObject jSONObject1 = jSONObject0.accumulate("C7", "C7");
      jSONObject1.keys();
      Float float0 = new Float((-1.0F));
      Float.sum((-1.0F), (-1.0F));
      hashMap0.put(jSONObject1, float0);
      JSONObject.getNames((Object) null);
      String string1 = "I^a~L";
      try { 
        jSONObject0.get("I^a~L");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"I^a~L\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7552281225441584
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-103));
      Byte.toUnsignedInt((byte) (-126));
      JSONObject.numberToString(byte0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "java.lang.Byte@0000000001";
      stringArray0[1] = "java.lang.Byte@0000000001";
      stringArray0[2] = "java.lang.Byte@0000000001";
      stringArray0[3] = "4xz^";
      stringArray0[4] = "java.lang.Byte@0000000001";
      stringArray0[5] = "java.lang.Byte@0000000001";
      stringArray0[6] = "java.lang.Byte@0000000001";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6012392143912488
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      JSONObject.quote("[]");
      linkedList0.add("[]");
      Double double0 = new Double(1630);
      Long long0 = new Long((-1676));
      JSONObject.quote("I9`H");
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "\"I9`H\"";
      JSONObject jSONObject0 = new JSONObject("] is not a JSONObject.", stringArray0);
      jSONObject0.optJSONObject("+k,6<)1f8oV+TU&)%");
      Long long1 = new Long((-1089L));
      JSONObject.testValidity(long1);
      assertFalse(long1.equals((Object)long0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.69725693213572
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      JSONObject.quote("[]");
      linkedList0.add("[]");
      Double double0 = new Double(1630);
      JSONObject jSONObject0 = new JSONObject((Object) "\"[]\"");
      JSONObject jSONObject1 = jSONObject0.putOpt("[]", "[]");
      jSONObject1.isNull("8Id#HwE`=]2(t'");
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray1 = new JSONArray();
      JSONObject jSONObject3 = new JSONObject(jSONArray1);
      StringWriter stringWriter0 = new StringWriter();
      JSONObject jSONObject4 = new JSONObject((Map) hashMap0);
      Writer writer0 = jSONObject4.write(stringWriter0);
      jSONObject1.write(writer0);
      JSONObject jSONObject5 = null;
      try {
        jSONObject5 = new JSONObject("[]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of []
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.148888178005901
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      JSONObject.valueToString(jSONObject0);
      Float.sum(924.42816F, 924.42816F);
      Float.max(1115.1F, 0.0F);
      Byte byte0 = new Byte((byte)113);
      JSONObject jSONObject1 = new JSONObject(jSONArray0);
      try { 
        jSONObject0.getDouble("wheel.json.JSONObject@0000000002");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONObject@0000000002\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7710726884981436
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double.min(4539.9443, 1649.287826905459);
      Float float0 = new Float(0.0F);
      JSONObject.numberToString(float0);
      Long long0 = new Long((-1L));
      Double double0 = new Double((-3369.92319646));
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.putOpt("java.lang.Float@0000000001", float0);
      jSONObject0.isNull("java.lang.Float@0000000001");
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject3 = new JSONObject(jSONObject2);
      StringWriter stringWriter0 = new StringWriter();
      Writer writer0 = jSONObject1.write(stringWriter0);
      jSONObject2.write(writer0);
      JSONObject jSONObject4 = null;
      try {
        jSONObject4 = new JSONObject("java.lang.Float@0000000001");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of java.lang.Float@0000000001
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1353467996131825
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      jSONArray0.toString(1630, (-1676));
      jSONArray0.optLong((-1676));
      JSONObject jSONObject1 = jSONObject0.put("Unterminated string", 1630);
      jSONObject1.remove("[]");
      linkedList0.add("[]");
      JSONArray jSONArray1 = new JSONArray();
      jSONArray0.toJSONObject(jSONArray1);
      jSONObject1.getInt("Unterminated string");
      jSONObject0.optDouble("gLQ8|&_p%+.un", 1080.0031);
      jSONObject1.optBoolean("[]");
      JSONObject jSONObject2 = jSONObject0.put("BbKAK`~y!;lmtkD}rI]", (-4320L));
      jSONObject1.length();
      Short short0 = new Short((short)27);
      JSONObject jSONObject3 = jSONObject0.putOpt("hk%x", jSONArray0);
      jSONObject0.optJSONArray("wheel.json.JSONObject");
      JSONObject.getNames(jSONObject3);
      linkedList0.add("[]");
      jSONObject2.isNull("[]");
      Short short1 = new Short((short)15);
      Double double0 = new Double(3);
      JSONObject.valueToString(double0);
      jSONObject3.length();
      try { 
        jSONObject0.getJSONArray(".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\".\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.603051058951341
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "istrim";
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, 2592, 1260);
      JSONObject jSONObject1 = jSONObject0.put("istrim", 2592);
      jSONObject1.optDouble("null", 0.0);
      jSONObject0.toString(101, 2569);
      jSONObject1.put("7nm*:>LwBy", (Object) "istrim");
      String string1 = ",\n";
      JSONObject.quote(",\n");
      jSONObject0.put("istrim", (long) 2569);
      try { 
        jSONArray0.getJSONObject(98);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray[98] not found.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3612854431130628
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double.min(776.773097, 776.773097);
      Float.sum(924.42816F, 2370);
      Float.max(0.0F, (-2645.4F));
      Byte byte0 = new Byte((byte) (-97));
      JSONObject jSONObject0 = new JSONObject();
      Double double0 = new Double((byte) (-97));
      JSONObject jSONObject1 = jSONObject0.put("put", false);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(jSONObject1, (-132), 2370);
      Short short0 = new Short((short)915);
      double double1 = jSONObject0.optDouble("2)=p+KR1%\"~U3!Y9B");
      assertEquals(1, jSONObject0.length());
      assertEquals(Double.NaN, double1, 0.01);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.795700020768588
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>(65, 65);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.has((String) null);
      String string0 = "\\u";
      jSONObject0.optInt(string0);
      JSONObject jSONObject1 = jSONObject0.put("0..", false);
      jSONObject0.opt("isoptJSONArray");
      jSONObject1.isNull(string0);
      JSONObject jSONObject2 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject3 = new JSONObject(jSONObject2);
      StringWriter stringWriter0 = new StringWriter();
      Writer writer0 = jSONObject3.write(stringWriter0);
      jSONObject0.write(writer0);
      JSONObject jSONObject4 = null;
      try {
        jSONObject4 = new JSONObject("isoptJSONArray");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of isoptJSONArray
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8516809814298747
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 65;
      HashMap<JSONObject, Double> hashMap0 = new HashMap<JSONObject, Double>(65, 65);
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = null;
      jSONObject0.has((String) null);
      String string1 = "\\u";
      jSONObject0.optInt(string1);
      jSONObject0.opt("isoptJSONArray");
      Float float0 = new Float(0.0F);
      HashMap<JSONObject, Float> hashMap1 = new HashMap<JSONObject, Float>();
      hashMap1.put(jSONObject0, float0);
      String string2 = null;
      try { 
        jSONObject0.put((String) null, (Map) hashMap1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6716364627688605
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("] is not a JSONObject.");
      JSONObject jSONObject1 = jSONObject0.put("wheel.json.JSONObject$Null", 2592);
      jSONObject0.toString(2569, 2569);
      jSONObject0.put("(onD", (Object) "] is not a JSONObject.");
      JSONObject.quote("\t");
      JSONObject jSONObject2 = jSONObject1.put("istrim", (long) 2569);
      jSONObject2.length();
      Short short0 = new Short((short)26);
      JSONObject jSONObject3 = new JSONObject();
      jSONObject0.toString();
      jSONObject3.optJSONArray("wheel.json.JSONObject$Null");
      jSONObject1.optJSONArray("qosj'qG7Z^2qio8gj5");
      JSONArray jSONArray0 = jSONObject3.optJSONArray("\t");
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.891819179322502
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = new Object();
      StringWriter stringWriter0 = new StringWriter();
      JSONObject.quote(".");
      Long long0 = new Long((-2002L));
      JSONObject jSONObject1 = jSONObject0.put("[]", (-2002L));
      JSONObject jSONObject2 = jSONObject1.put(".", true);
      try { 
        jSONObject2.getLong("\".\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\".\\\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6026802239747835
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringWriter0.write(2554);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      stringWriter1.append('p');
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".";
      stringArray0[0] = "[]";
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Short short0 = new Short((short) (-2133));
      Integer integer0 = new Integer((-639));
      jSONObject1.accumulate("xe*XDQ%eOwjRcH;mf", integer0);
      assertEquals(1, jSONObject1.length());
      
      jSONObject0.optInt("jLG+v&=bMW]iT5O9;50", 91);
      double double1 = jSONObject0.optDouble("[]");
      assertEquals(Double.NaN, double1, 0.01);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.241940886548153
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      Boolean.logicalXor(false, false);
      Boolean.logicalAnd(true, true);
      JSONObject.getNames((Object) boolean0);
      JSONObject jSONObject0 = new JSONObject();
      Boolean.logicalAnd(true, false);
      JSONObject jSONObject1 = jSONObject0.put("qy]Jly6&.B4>qn=", 1);
      JSONObject.valueToString(boolean0);
      try { 
        jSONObject1.getJSONObject("qy]Jly6&.B4>qn=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"qy]Jly6&.B4>qn=\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject.valueToString((Object) null);
      long long0 = 3601L;
      Long long1 = new Long(3601L);
      try { 
        Long.parseUnsignedLong("null");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"null\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.45769213801594
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Float float0 = new Float(0.0F);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "P.6WoOX:6)UZ";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      Double double0 = new Double(0.0F);
      JSONObject jSONObject1 = jSONObject0.put("tD675;x'&S=OY-ky1+)", (Object) "P.6WoOX:6)UZ");
      Float.max(0.0F, 0.0F);
      JSONObject.quote("P.6WoOX:6)UZ");
      JSONObject jSONObject2 = jSONObject1.put("[", (long) 0);
      jSONObject2.length();
      Short short0 = new Short((short)26);
      JSONObject jSONObject3 = new JSONObject();
      jSONObject3.toString();
      jSONObject0.optJSONArray("@T4?,m");
      jSONObject2.optJSONArray("tD675;x'&S=OY-ky1+)");
      jSONObject3.optJSONArray("P.6WoOX:6)UZ");
      boolean boolean0 = jSONObject0.optBoolean("@T4?,m", true);
      assertEquals(2, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6331577212171906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(2569, 2569);
      jSONObject0.put("istrim", 1.0);
      JSONObject jSONObject1 = jSONObject0.accumulate("mHR", jSONObject0);
      jSONObject0.optInt("istrim", 2592);
      jSONObject0.optLong("9?m{D35p%r.9-*");
      String string0 = jSONObject1.optString("{}", "DSX|Ahn[<CWqc9)zA1I");
      assertEquals(2, jSONObject0.length());
      assertEquals("DSX|Ahn[<CWqc9)zA1I", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.066452969332669
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double.min(4539.9443, 1649.287826905459);
      Double.min(0.0, 3988.24);
      Float float0 = new Float((float) 2370);
      Float.max(2370, (-1705.4843F));
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      assertNotNull(stringArray0);
      
      JSONObject.quote("A JSONObject text must begin with '{'");
      String string0 = JSONObject.quote("true");
      assertEquals("\"true\"", string0);
      
      Double double0 = new Double((-1895.6));
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      jSONObject0.optJSONObject("Y*b?:Z>T0u");
      assertEquals(8, jSONObject0.length());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4423661038979807
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Float float0 = new Float(144.4895F);
      Float.sum(0.0F, (-883.16F));
      Float.isFinite((-883.16F));
      Float.max((-883.16F), (-883.16F));
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      String string0 = "'t)f,{Kq&kp@^5s";
      JSONObject jSONObject2 = jSONObject1.put("'t)f,{Kq&kp@^5s", (double) 144.4895F);
      try { 
        jSONObject2.getJSONArray("'t)f,{Kq&kp@^5s");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"'t)f,{Kq&kp@^5s\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2155447134046895
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      int int0 = (-1676);
      jSONArray0.toString(1630, (-1676));
      jSONArray0.optLong((-1676));
      JSONObject.getNames((Object) "Unterminated string");
      HashMap<Integer, Byte> hashMap0 = new HashMap<Integer, Byte>();
      jSONObject0.put("[]", (Map) hashMap0);
      Float.max(1630, 1630);
      Short short0 = new Short((short)3400);
      JSONObject.getNames((Object) short0);
      String string0 = ",<g4e&>OeQaK8/";
      try { 
        jSONObject0.getInt(",<g4e&>OeQaK8/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",<g4e&>OeQaK8/\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4054390711134843
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = null;
      Double.min(2033.5343533, (-795.42008));
      Float.sum(2370, 0.0F);
      Float.max(2370.0F, 0.0F);
      byte byte0 = (byte)13;
      Byte byte1 = new Byte((byte)13);
      Long long0 = new Long((-838L));
      JSONObject jSONObject1 = new JSONObject(long0);
      Double double0 = new Double(924.42816F);
      Byte byte2 = new Byte((byte)13);
      jSONObject1.putOpt((String) null, byte2);
      jSONObject1.names();
      Long long1 = new Long((-1240L));
      jSONObject0.optLong("){D@YQMr");
      JSONObject.quote(" of ");
      try { 
        jSONObject1.getJSONArray("6U%UDv{C#y>12xP/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"6U%UDv{C#y>12xP/\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.734778764087665
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double.min(4539.9443, 1649.287826905459);
      Double.min(0.0, 3988.24);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(": ");
      LinkedList<Float> linkedList1 = new LinkedList<Float>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList1);
      JSONObject.valueToString("", (-884), 2151);
      Boolean boolean0 = new Boolean(true);
      Boolean.logicalAnd(true, true);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0);
      jSONArray0.optJSONObject(608);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "null";
      stringArray0[1] = ": ";
      stringArray0[2] = ": ";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6022805041885344
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Double double0 = new Double(1649.287826905459);
      Byte byte0 = new Byte((byte) (-97));
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      Double double1 = new Double(1669.06007);
      jSONObject0.put("put", 1321L);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.364194642578165
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.toJSONArray((JSONArray) null);
      JSONObject.valueToString(object0);
      String string0 = "9";
      jSONObject0.optInt("9");
      Float float0 = new Float(0.0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.040882933758216
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Double.min(4556.256074759981, 4556.256074759981);
      Float.sum(924.42816F, 2370);
      Float.max(2370, (-1705.4843F));
      Byte byte0 = new Byte((byte) (-60));
      JSONObject jSONObject0 = new JSONObject(byte0);
      Double double0 = new Double(169.05);
      Float float0 = new Float((-5733.21356));
      String string0 = JSONObject.valueToString(float0, (-7454), 1);
      assertNotNull(string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Object object0 = new Object();
      Long long0 = new Long(1751L);
      String string0 = "!FGz)OH$\">Cw";
      jSONObject0.putOpt("!FGz)OH$\">Cw", "!FGz)OH$\">Cw");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.445207335924273
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Double.min(4556.0, 1649.287826905459);
      Float.sum(924.42816F, 2370);
      Float.max(2370, (-1705.4843F));
      Byte byte0 = new Byte((byte) (-73));
      JSONObject jSONObject0 = new JSONObject(byte0);
      Double double0 = new Double((-1.0));
      jSONObject0.putOpt("put", double0);
      jSONObject0.names();
      Long long0 = new Long((byte) (-73));
      jSONObject0.put("put", (long) (byte) (-73));
      boolean boolean0 = jSONObject0.isNull("true");
      assertEquals(2, jSONObject0.length());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.510316026412821
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      linkedList0.offerFirst("");
      linkedList0.removeFirst();
      stringWriter1.append('p');
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject0.write(writer0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".";
      stringArray0[1] = "[]";
      JSONObject.valueToString(jSONArray0, 98, (-1905));
      try { 
        jSONObject0.getBoolean("[]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"[]\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7480895599985722
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      jSONArray0.toString(1630, (-1676));
      linkedList0.add("[]");
      Double double0 = new Double(1630);
      Long long0 = new Long((-1676));
      String string0 = JSONObject.quote("I9`H");
      assertEquals("\"I9`H\"", string0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "\"I9`H\"";
      JSONObject jSONObject0 = new JSONObject("] is not a JSONObject.", stringArray0);
      jSONObject0.optJSONObject("+k,6<)1f8oV+TU&)%");
      long long1 = jSONObject0.optLong("] is not a JSONObject.", (long) (-1676));
      assertEquals((-1676L), long1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "RzeB_1p";
      jSONObject0.isNull("RzeB_1p");
      Boolean boolean0 = Boolean.TRUE;
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("istrim", (-5983.253120496294));
      try { 
        jSONObject0.getInt((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4707495911558937
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Float.sum(924.42816F, 2370);
      Float.max(2370, 924.42816F);
      Byte byte0 = new Byte((byte) (-97));
      JSONObject jSONObject0 = new JSONObject(byte0);
      Double double0 = new Double((-1.0));
      JSONObject jSONObject1 = jSONObject0.put("put", false);
      jSONObject1.put("put", (long) 969);
      JSONObject.valueToString(double0, 969, 2370);
      Short short0 = new Short((short)0);
      double double1 = jSONObject1.optDouble("put");
      assertEquals(2, jSONObject0.length());
      assertEquals(969.0, double1, 0.01);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.6237180760658338
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      String string0 = JSONObject.quote("[]");
      assertEquals("\"[]\"", string0);
      
      linkedList0.add("[]");
      Double double0 = new Double(1630);
      String string1 = JSONObject.valueToString((Object) null, (-1905), 120);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9731936202008726
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double.min(4556.256074759981, 1649.287826905459);
      Float.sum(924.42816F, 2370);
      Float.max(2370, (-1705.4843F));
      Byte byte0 = new Byte((byte) (-97));
      JSONObject jSONObject0 = new JSONObject(byte0);
      Double double0 = new Double(2370.0F);
      jSONObject0.put("put", false);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, (-1771), 969);
      Short short0 = new Short((short)1807);
      assertEquals((short)1807, (short)short0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8158372872133803
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      stringWriter1.append('p');
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONObject0.write(writer0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".";
      stringArray0[0] = "[]";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      Long long0 = new Long(1L);
      JSONObject.valueToString(long0, 102, 102);
      Long long1 = new Long(0L);
      jSONObject1.optLong("]X~wL'++J7vjpqlf{E");
      JSONObject.quote(",:]}/\"[{;=#");
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 0 of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.21054443255534
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Double.min(4556.256074759981, 1649.287826905459);
      Float.sum(924.42816F, 2370);
      Float.max(2370, (-1705.4843F));
      Byte byte0 = new Byte((byte) (-97));
      JSONObject jSONObject0 = new JSONObject(byte0);
      Double double0 = new Double((-1.0));
      JSONObject jSONObject1 = jSONObject0.put("put", false);
      HashMap<JSONObject, Float> hashMap0 = new HashMap<JSONObject, Float>();
      Float float0 = new Float(924.42816F);
      hashMap0.put(jSONObject0, float0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "put";
      stringArray0[1] = "put";
      stringArray0[2] = "put";
      stringArray0[3] = "put";
      stringArray0[4] = "put";
      stringArray0[5] = "put";
      JSONObject jSONObject2 = new JSONObject(hashMap0, stringArray0);
      HashMap<JSONObject, Boolean> hashMap1 = new HashMap<JSONObject, Boolean>();
      jSONObject2.put(":!A~LQNU)#gL=.|.w", (Map) hashMap1);
      jSONObject1.put(":!A~LQNU)#gL=.|.w", (long) 2370);
      JSONTokener jSONTokener0 = new JSONTokener("put");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of put
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5279290748819596
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Double.min(4539.9443, 1649.287826905459);
      Float float0 = new Float(0.0F);
      String string0 = JSONObject.numberToString(float0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(158);
      stringWriter0.append((CharSequence) "java.lang.Float@0000000001");
      StringWriter stringWriter1 = new StringWriter(2370);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "java.lang.Float@0000000001");
      stringWriter2.append((CharSequence) "java.lang.Float@0000000001");
      Integer integer0 = new Integer(110);
      String string1 = JSONObject.valueToString(integer0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Float float0 = new Float(0.0F);
      String string0 = "";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5064542547300093
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a JSONArray.";
      int int0 = 93;
      JSONObject jSONObject1 = jSONObject0.put("] is not a JSONArray.", 93);
      jSONObject0.toString(93, 2569);
      jSONObject1.put("] is not a JSONArray.", (double) 2569);
      try { 
        jSONObject1.get("] is not a Boolean.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"] is not a Boolean.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6339920975209035
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.toString(2569, 2569);
      jSONObject0.put("istrim", 1.0);
      JSONObject jSONObject1 = jSONObject0.accumulate("mHR", jSONObject0);
      jSONObject0.optInt("istrim", 2592);
      jSONObject0.optLong("9?m{D35p%r.9-*");
      try { 
        jSONObject1.getDouble("getvalueOf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getvalueOf\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.649933846950598
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "Substring bounds error";
      jSONObject0.optDouble("Substring bounds error");
      String string1 = "\\u";
      JSONObject.quote(string1);
      int int0 = (-1178);
      jSONObject0.toString((-1178));
      jSONObject0.optDouble("`A-cN5T!|k6%_R]+$");
      String string2 = "vXt5\\:HE`eL+n>LXT";
      JSONObject jSONObject1 = jSONObject0.put("vXt5:HE`eL+n>LXT", 0);
      jSONObject1.toString(47);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject("\"\\u\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of \"\\u\"
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.names();
      try { 
        jSONObject0.put((String) null, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1807382878069084
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Double.min(4539.9443, 1649.287826905459);
      Object object0 = new Object();
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getJSONObject("\"5.gf\"m}@G3ERzR:O");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"5.gf\\\"m}@G3ERzR:O\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8720520186532996
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSONObject.doubleToString((-1.8605370504908743));
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "";
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.9590960964240387
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Double.min(4556.256074759981, 4556.256074759981);
      Float.sum((-1705.4843F), 924.42816F);
      Float.max(2370, 886.4064F);
      Byte byte0 = new Byte((byte)124);
      Byte.toUnsignedLong((byte)124);
      JSONObject jSONObject0 = new JSONObject(byte0);
      try { 
        jSONObject0.getDouble(" $F9v`aOceHe)Q>_(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\" $F9v`aOceHe)Q>_(\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.386154864539166
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Float float0 = new Float(0.0F);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "P.6WoOX:6)UZ";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.keys();
      Float.sum((-3688.43F), (-3688.43F));
      Double double0 = new Double(0.0F);
      JSONObject.valueToString(double0, 0, 0);
      jSONObject0.optLong("=2sSA5UN\"n3AN(0d", 1029L);
      jSONObject0.optLong("");
      JSONObject.quote("Xk{;0");
      jSONObject0.optLong("", (long) 0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject("");
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8870923714662067
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      short short0 = (short)0;
      Short short1 = new Short((short)0);
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(short1, stringArray0);
      jSONObject0.optBoolean("va", false);
      String string0 = "";
      jSONObject0.optInt("");
      HashMap<JSONObject, Float> hashMap0 = new HashMap<JSONObject, Float>();
      JSONTokener jSONTokener0 = new JSONTokener("vQzpTz{F<&TMfF");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of vQzpTz{F<&TMfF
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.391476936975042
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Float float0 = new Float(0.0F);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "P.6WoOX:6)UZ";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.keys();
      Double double0 = new Double(0.0F);
      JSONObject.valueToString(double0, 0, 0);
      jSONObject0.optLong("=2sSA5UN\"n3AN(0d", 1029L);
      jSONObject0.optLong("P.6WoOX:6)UZ");
      JSONObject.quote("");
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.534058998975951
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      linkedList0.pollFirst();
      jSONArray0.toString();
      jSONArray0.optLong((-1676));
      JSONObject jSONObject1 = jSONObject0.put("Unterminatd tring", 1630);
      jSONObject1.remove("[]");
      linkedList0.add("[]");
      jSONObject1.keys();
      Double double0 = new Double(1630);
      JSONObject.valueToString(jSONObject1, (-1676), (-1676));
      Integer integer0 = new Integer(1630);
      String string0 = null;
      String string1 = "km;J(k&p9n@t6";
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3128868859883003
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Double double0 = new Double(1649.287826905459);
      byte byte0 = (byte) (-97);
      Byte byte1 = new Byte((byte) (-97));
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put("]ZJ_({Gy,O7p", 0L);
      jSONObject1.isNull("]ZJ_({Gy,O7p");
      String string0 = "WR_1dpnL!if1k7]";
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("WR_1dpnL!if1k7]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of WR_1dpnL!if1k7]
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.155199083677665
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Float float0 = new Float((float) 2569);
      JSONObject jSONObject1 = jSONObject0.put("istrim", (Object) float0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "istrim";
      stringArray0[1] = "istrim";
      stringArray0[2] = "wheel.json.JSONObject$Null";
      stringArray0[3] = null;
      stringArray0[4] = "wheel.json.JSONObject$Null";
      stringArray0[5] = "_[}?)c*7";
      stringArray0[6] = "istrim";
      stringArray0[7] = "istrim";
      stringArray0[8] = "issubstring";
      JSONObject jSONObject2 = new JSONObject(jSONObject1, stringArray0);
      Short short0 = new Short((short)1238);
      int int0 = 1052;
      Integer integer0 = new Integer(1052);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("istrim");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of istrim
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.102025525057908
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      boolean boolean1 = false;
      Boolean.logicalXor(false, false);
      Boolean.logicalAnd(false, false);
      JSONObject.getNames((Object) boolean0);
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "wM?L";
      JSONObject jSONObject1 = jSONObject0.put("wM?L", (Object) boolean0);
      LinkedList<Short> linkedList0 = new LinkedList<Short>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONObject1.toJSONArray(jSONArray0);
      String string1 = "000";
      try { 
        jSONObject1.getString("000");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"000\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JSONObject.doubleToString(0.0);
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((Object) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONArray initial value should be a string or collection or array.
         //
         verifyException("wheel.json.JSONArray", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "S |2h";
      stringArray0[1] = "";
      String string0 = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      String string1 = "59zh(X)Z>[pLA\\b_e";
      stringArray0[4] = "59zh(X)Z>[pLA\b_e";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.8423943585863412
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "JSONArray[";
      jSONObject0.remove((String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONObject0.put("Q[i@E", (Collection) linkedList0);
      try { 
        jSONObject0.get("[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"[\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2856701499805623
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = 2592;
      String string0 = "in";
      Object object0 = JSONObject.NULL;
      int int1 = 1260;
      JSONObject.valueToString(object0, 2592, 1260);
      jSONObject0.put("in", 2592);
      Boolean.logicalAnd(true, true);
      jSONObject0.put("islength", 2592);
      JSONObject.valueToString("null", 1260, 1);
      try { 
        jSONObject0.getJSONObject("F$-@nY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"F$-@nY\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.6367430586192193
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Integer integer0 = Integer.valueOf(0);
      JSONObject jSONObject0 = new JSONObject(integer0);
      Integer.compare(0, 0);
      try { 
        jSONObject0.put((String) null, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.25212664127775
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "] is not a JSONArray.";
      jSONObject0.optBoolean("] is not a JSONArray.");
      jSONObject0.opt("Substring bounds error");
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      linkedList0.removeLastOccurrence(jSONObject0);
      JSONObject jSONObject1 = jSONObject0.put(",\n", (Collection) linkedList0);
      Long long0 = new Long(848L);
      Long long1 = new Long((-4843L));
      Long.getLong("getput", long1);
      linkedList0.add(long0);
      String string1 = "mR{iH2\"S}H.-:Ou";
      jSONObject1.optDouble("mR{iH2\"S}H.-:Ou");
      try { 
        jSONObject1.get("getopt");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getopt\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.51383510736266
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Double.min(4556.256074759981, 4556.256074759981);
      Float.sum((-1705.4843F), 924.42816F);
      Double double0 = new Double((-1425.6228112389));
      Float float0 = new Float(Double.NaN);
      JSONTokener jSONTokener0 = new JSONTokener("~#6 V");
      Byte byte0 = new Byte((byte) (-40));
      JSONObject jSONObject0 = new JSONObject(byte0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " $F9v`aOceHe)Q>_(";
      stringArray0[1] = "~#6 V";
      Short short0 = new Short((short)70);
      JSONObject jSONObject1 = new JSONObject();
      jSONObject0.toString();
      jSONObject0.optJSONArray(" $F9v`aOceHe)Q>_(");
      JSONObject jSONObject2 = new JSONObject();
      jSONObject2.optJSONArray("O<sG{=/|ZSh%N");
      jSONObject0.optJSONArray("{\"java.lang.String@0000000003\":\"java.lang.Class@0000000004\"}");
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject3 = new JSONObject(object0, stringArray0);
      try { 
        jSONObject3.getString("S5)azE98icr>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"S5)azE98icr>\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.1185556116489135
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = new JSONObject(jSONObject0);
      jSONObject1.length();
      String string0 = "";
      try { 
        jSONObject1.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.331604122279952
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Double.min(776.773097, 776.773097);
      Float.sum(924.42816F, 2370);
      Float.max(0.0F, (-2645.4F));
      Byte byte0 = new Byte((byte) (-97));
      JSONObject jSONObject0 = new JSONObject(byte0);
      Double double0 = new Double((byte) (-97));
      JSONObject jSONObject1 = jSONObject0.put("put", false);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(jSONObject1, (-132), 2370);
      Short short0 = new Short((short)915);
      assertEquals((short)915, (short)short0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.366238533323703
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      linkedList0.offerFirst("");
      linkedList0.removeFirst();
      stringWriter1.append('p');
      stringWriter0.append('p');
      Writer writer0 = jSONArray0.write(stringWriter0);
      jSONArray0.put((Object) stringWriter1);
      jSONObject0.write(writer0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".";
      stringArray0[1] = "[]";
      JSONObject.valueToString(jSONObject0);
      try { 
        jSONObject0.getBoolean("[]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"[]\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.022429569432946
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.quote("] is not a JSONObject.");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"] is not a JSONObject.\"");
      JSONObject jSONObject1 = new JSONObject(stringWriter0);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "km;J(k&p9n@t6");
      StringWriter stringWriter4 = new StringWriter(97);
      jSONObject0.put("Substring bounds error", 0.0);
      stringWriter3.append('{');
      StringWriter stringWriter5 = new StringWriter();
      stringWriter1.append((CharSequence) "");
      jSONObject1.optJSONArray("0e!8F#lGT");
      jSONObject0.optJSONArray("");
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.493812689403776
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Float float0 = new Float(0.0F);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "P.6WoOX:6)UZ";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.keys();
      Double double0 = new Double(0.0F);
      JSONObject jSONObject1 = jSONObject0.put("tD675;x'&S=OY-ky1+)", (Object) "P.6WoOX:6)UZ");
      JSONObject.valueToString(double0, 0, 0);
      jSONObject0.optLong("=2sSA5UN\"n3AN(0d", 1029L);
      jSONObject0.optLong("");
      try { 
        jSONObject1.getDouble("java.lang.Double@0000000004");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Double@0000000004\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.344132491498883
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Double.min(4556.256074759981, 1649.287826905459);
      Float.sum(924.42816F, 2370);
      Float.max(2370, (-1705.4843F));
      Byte byte0 = new Byte((byte)105);
      JSONObject jSONObject0 = new JSONObject(byte0);
      Double double0 = new Double((-1.0));
      jSONObject0.put("put", false);
      String string0 = JSONObject.valueToString(double0, 969, (-7454));
      Short short0 = new Short((short)0);
      String string1 = JSONObject.valueToString("java.lang.Double@0000000006");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1807382878069084
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "W[\"LlmNSlFM3fdfE4G";
      try { 
        jSONObject0.getBoolean("W[\"LlmNSlFM3fdfE4G");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"W[\\\"LlmNSlFM3fdfE4G\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.58696835319365
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Float float0 = new Float(5464.53F);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "islength";
      stringArray0[1] = "is";
      stringArray0[2] = ".";
      stringArray0[3] = "getgetLong";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      Long long0 = new Long((-1879L));
      jSONObject0.append("'%k", long0);
      jSONObject0.optBoolean("'%k");
      jSONObject0.optLong("'%k");
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Expected a ',' or '}'";
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = null;
      try { 
        jSONObject0.append((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.6189978958658688
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Double.min(4539.9443, 1649.287826905459);
      Double double0 = new Double(4539.9443);
      Byte byte0 = new Byte((byte)92);
      JSONObject jSONObject0 = new JSONObject(double0);
      Double double1 = new Double((-925.25238744));
      try { 
        jSONObject0.put((String) null, (long) (byte)92);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.0093994817375425
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Float float0 = new Float(5464.53F);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "islength";
      stringArray0[1] = "is";
      stringArray0[2] = ".";
      stringArray0[3] = "getgetLong";
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      Long long0 = new Long((-1879L));
      jSONObject0.append("'%k", long0);
      Float.min(5464.53F, 1049.1F);
      Float.isFinite(1.0F);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "is");
      StringWriter stringWriter1 = new StringWriter(108);
      stringWriter1.append((CharSequence) "islength");
      Long long1 = new Long((-674L));
      try { 
        jSONObject0.getLong("is");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"is\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.950089105224377
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Integer integer0 = Integer.valueOf(0);
      JSONObject jSONObject0 = new JSONObject(integer0);
      Integer.compare(0, 0);
      String string0 = "]&";
      try { 
        jSONObject0.getInt("]&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"]&\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.9621693083585323
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      linkedList0.pollFirst();
      Float.sum(924.42816F, 924.42816F);
      Float.max(1115.1F, 0.0F);
      Byte byte0 = new Byte((byte)113);
      JSONObject jSONObject1 = new JSONObject(jSONArray0);
      try { 
        jSONObject0.getDouble((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.pollFirst();
      Short short0 = new Short((short)32);
      String string0 = JSONObject.quote((String) null);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.7424873191022137
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[5];
      stringArray0[0] = " at character ";
      stringArray0[1] = ": ";
      stringArray0[2] = "JSONObject[";
      stringArray0[3] = "Expected a ',' or ']'";
      stringArray0[4] = "istoUnsignedLong";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      int int0 = jSONObject0.optInt("w%Q^Z");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.2322067503076204
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "islength";
      stringArray0[1] = "is";
      stringArray0[2] = ".";
      stringArray0[3] = "getgetLong";
      Long long0 = new Long((-1879L));
      Float.min(5464.53F, 5464.53F);
      Float.isFinite(1.0F);
      Float.max((-1848.3F), (-1879L));
      HashMap<String, Float> hashMap0 = new HashMap<String, Float>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getBoolean("wheel.json.JSONObject$1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"wheel.json.JSONObject$1\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      Boolean.logicalXor(false, false);
      Boolean.logicalAnd(true, false);
      JSONObject.getNames((Object) boolean0);
      Boolean.logicalAnd(false, false);
      Short short0 = new Short((short)123);
      Integer integer0 = new Integer((short) (-2133));
      JSONTokener jSONTokener0 = new JSONTokener("bqy");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of bqy
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Integer integer0 = new Integer(34);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "$v%[h?4c ";
      stringArray0[1] = "fB#y:136+^~G=%=";
      stringArray0[2] = "{#.}?rZ_R1CL";
      stringArray0[3] = "x$}G8Qw&f+,,45";
      stringArray0[4] = "{}";
      stringArray0[5] = "sSW4of?Z-\"ZvD$d";
      stringArray0[6] = "-,5>";
      stringArray0[7] = "getoptString";
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      double double0 = jSONObject0.optDouble("jo", 0.0);
      assertEquals(0.0, double0, 0.01);
  }
}
