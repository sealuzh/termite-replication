/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:20:41 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9971762968966938
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "L";
      StringReader stringReader0 = new StringReader("L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjnewStateCnt = (-1431655763);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      simpleNode0.setIdentifier("L");
      StringWriter stringWriter1 = stringWriter0.append('Y');
      simpleNode0.dump("L", stringWriter1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("&");
      simpleNode1.dump("L", stringWriter0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("wx_");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1606586465749607
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=");
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ExclusiveOrExpression");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ExclusiveOrExpression");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      String string0 = "<<";
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'L';
      charArray0[1] = '8';
      charArray0[2] = ')';
      charArray0[3] = ';';
      charArray0[4] = 'h';
      charArray0[5] = 'l';
      charArray0[6] = 'l';
      charArray0[7] = '5';
      charArray0[8] = 'b';
      stringWriter2.write(charArray0);
      stringWriter2.append((CharSequence) "");
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter2);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 9;
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.getBuffer();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer1);
      int int1 = 40;
      stringWriter0.append('\\');
      String string0 = ";";
      simpleNode0.setIdentifier(";");
      String string1 = "}hbl2w1vk(PNg7";
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter1);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("}hbl2w1vk(PNg7");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.964763373583426
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=");
      simpleNode0.jjtGetNumChildren();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ExclusiveOrExpression");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ExclusiveOrExpression");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'L';
      charArray0[1] = '8';
      charArray0[2] = ')';
      charArray0[3] = ';';
      charArray0[4] = 'h';
      charArray0[5] = 'l';
      charArray0[6] = 'l';
      charArray0[7] = '5';
      Node node0 = simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(node0, 0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4488991463078233
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('4');
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("SU", stringWriter1);
      String string0 = null;
      stringWriter0.write((String) null);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("SU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('');
      char[] charArray0 = new char[3];
      charArray0[0] = '';
      charArray0[1] = 'm';
      charArray0[2] = 'u';
      stringWriter1.write(charArray0);
      SimpleNode simpleNode1 = new SimpleNode(104);
      simpleNode1.setIdentifier("&&");
      simpleNode1.dump("A/grWs{BudCBJ", stringWriter1);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("\"null\"");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0105301834040734
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(52);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '4';
      charArray0[4] = '4';
      charArray0[5] = '4';
      charArray0[6] = '4';
      stringWriter0.write(charArray0);
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter1 = stringWriter0.append('S');
      stringWriter1.append('4');
      simpleNode0.dump(" : ", stringWriter1);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter2 = new StringWriter();
      assertFalse(stringWriter2.equals((Object)stringWriter1));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0486623363144716
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(8);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      simpleNode0.jjtAddChild(simpleNode0, 8);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild((Node) null, 8);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('\'');
      simpleNode0.dump((String) null, stringWriter2);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("]Lg1Lqyn[!^!JR'");
      SimpleNode simpleNode1 = new SimpleNode((-296));
      simpleNode0.jjtAddChild((Node) null, 9);
      simpleNode0.dump("]Lg1Lqyn[!^!JR'", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild((Node) null, (-296));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.42753220301923
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer2);
      StringWriter stringWriter2 = new StringWriter(40);
      StringWriter stringWriter3 = stringWriter0.append((CharSequence) stringBuffer0);
      char[] charArray0 = new char[6];
      stringWriter3.write("</identifier>");
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      stringWriter1.write(charArray0);
      stringWriter1.write("*lshft");
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter4 = new StringWriter();
      simpleNode0.dump("&&", stringWriter3);
      assertEquals("</identifier>mm\u0000\u0000\u0000\u0000*lshft<EnumBody>\n</EnumBody>\n", stringWriter3.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("EnumBody : }", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(52);
      StringWriter stringWriter0 = new StringWriter(1298);
      stringWriter0.close();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "<");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "<");
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer1);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) stringBuffer2);
      StringWriter stringWriter3 = new StringWriter(89);
      stringWriter3.write("<");
      stringWriter3.append((CharSequence) stringBuffer1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'm';
      charArray0[1] = 'i';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      stringWriter1.write(charArray0);
      stringWriter2.write((String) null);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter4 = new StringWriter();
      stringWriter0.append((CharSequence) stringBuffer1);
      simpleNode0.dump("", stringWriter0);
      assertEquals("<<mimmnull<<UnaryExpression>\n  <identifier>*lt</identifier>\n</UnaryExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4396242654263314
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      String string0 = "yT^2}.@k8";
      simpleNode0.jjtAddChild(simpleNode0, 0);
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer1);
      stringWriter0.append((CharSequence) stringBuffer2);
      StringWriter stringWriter1 = new StringWriter(40);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) stringBuffer0);
      char[] charArray0 = new char[6];
      SimpleNode simpleNode1 = new SimpleNode(40);
      simpleNode0.parent = (Node) simpleNode1;
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'm';
      charArray0[4] = 'm';
      charArray0[5] = 'm';
      stringWriter1.write(charArray0);
      stringWriter0.write("}");
      simpleNode0.setIdentifier((String) null);
      StringWriter stringWriter3 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"throws\"", stringWriter2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2608229906374002
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode((-1801251892));
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.dump("yT^2}.@k8", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7736806390558368
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode1.jjtAddChild(simpleNode0, 252);
      simpleNode0.dump("yT^2}.@k8", stringWriter0);
      simpleNode1.jjtGetChild(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      assertEquals(253, simpleNode1.jjtGetNumChildren());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.345465692994298
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode1 = new SimpleNode(9);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.dump(".`%H=k~`+5<?", stringWriter0);
      arrayList0.add("?p7\u00069X6A;W0>]Doig");
      simpleNode1.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.407114655321993
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1299);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ET=|}w_>,cn,7g");
      int int0 = (-1801251892);
      SimpleNode simpleNode1 = new SimpleNode(9);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode1.jjtAddChild(simpleNode0, 0);
      // Undeclared exception!
      try { 
        simpleNode1.dump(".`%H=k~`+5<?", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1299
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1984));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ExclusiveOrExpression");
      stringReader0.skip((-3429L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2419, 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.dump("ExclusiveOrExpression", (Writer) null);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParser javaParser0 = new JavaParser(" ");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1438));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(311);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer2);
      StringWriter stringWriter2 = new StringWriter(40);
      stringWriter0.append((CharSequence) stringBuffer0);
      StringWriter stringWriter3 = new StringWriter(9);
      StringWriter stringWriter4 = stringWriter2.append('m');
      StringWriter stringWriter5 = stringWriter4.append((CharSequence) stringBuffer2);
      stringWriter5.append((CharSequence) stringBuffer1);
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'i';
      charArray0[4] = 'i';
      charArray0[5] = 'i';
      charArray0[6] = 'm';
      stringWriter3.write(charArray0);
      stringWriter0.write("RH:TzPX-ID");
      simpleNode0.setIdentifier("Ru");
      StringWriter stringWriter6 = new StringWriter();
      stringWriter4.append((CharSequence) stringBuffer2);
      simpleNode0.dump((String) null, stringWriter1);
      assertEquals("RH:TzPX-ID<EnumBody>\n  <identifier>Ru</identifier>\n</EnumBody>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("EnumBody : Ru", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.0102426827342157
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "=fkzL>vCV5CB6";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=fkzL>vCV5CB6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=fkzL>vCV5CB6");
      SimpleNode simpleNode0 = new SimpleNode(29);
      simpleNode0.dump("=fkzL>vCV5CB6", (Writer) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 29);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 81);
      simpleNode0.jjtGetChild(81);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2225);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2225
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ExclusiveOrExpQession");
      stringReader0.skip((-3429L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2419, 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+a(2{O4>");
      SimpleNode simpleNode0 = new SimpleNode(266);
      String string0 = "4G=oF/{]U";
      // Undeclared exception!
      try { 
        simpleNode0.toString("Y7z_jK.WWR\"w");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 266
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ExclusiveOrExpression");
      stringReader0.reset();
      stringReader0.skip((-3429L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2419, 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.toString();
      String string0 = simpleNode0.toString("CompilationUnit");
      assertEquals("CompilationUnitCompilationUnit", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 52;
      SimpleNode simpleNode0 = new SimpleNode(52);
      int int1 = 1300;
      StringWriter stringWriter0 = new StringWriter(1300);
      stringWriter0.close();
      stringWriter0.append((CharSequence) "<");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.jjtOpen();
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node0 = javaParser0.currNode;
      stringReader0.mark(1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1335));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.419937681372558
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 10;
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("{s?#ZQ<0", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1801251892));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1801251892
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.443471124665069
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("nt");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.ConditionalOrExpression();
      SimpleNode simpleNode0 = new SimpleNode(1044);
      try { 
        stringReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)91;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)66;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1106052531), (byte)0, (byte)47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager1);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-647));
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }
}
