/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:26:12 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5961235684657833
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\tpCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      charArray0[1] = '\\';
      charArray0[2] = '(';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('B');
      javaCharStream0.getEndColumn();
      try { 
        JavaCharStream.hexval('(');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = 'H';
      charArray0[2] = '\u001B';
      charArray0[3] = '-';
      charArray0[4] = 'H';
      charArray0[5] = '_';
      charArray0[6] = 'y';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5583238943033328
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\tpCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      javaCharStream0.BeginToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(2162);
      stringReader0.read(charBuffer0);
      char char0 = '{';
      StringReader stringReader1 = new StringReader("\tpCOD#3e!UCGB1'<]F");
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0834763040946214
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 80, 4);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-1), 4, 102);
      javaCharStream1.prevCharIsLF = true;
      char char0 = 'V';
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('V');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      char char0 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      StringReader stringReader1 = new StringReader("8ZC");
      int int0 = 814;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 15, 814);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        stringReader1.read(charArray0, 1, 97);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5717608672681744
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\tpCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      
      javaCharStream0.ReInit((Reader) stringReader0, 15, 0, 15);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("-ULj)&Pyf]aeln`&eO");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (-1969));
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "\\pCOD#3e!UCGB1'<]F";
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      char char0 = 'U';
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      char char1 = 'J';
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader3 = new StringReader("pCOD#3e!UCGB1'<]F");
      char[] charArray0 = new char[9];
      charArray0[0] = 'J';
      charArray0[1] = 'J';
      charArray0[2] = 'U';
      charArray0[3] = 'U';
      charArray0[4] = 'U';
      charArray0[5] = 'J';
      charArray0[6] = 'U';
      charArray0[7] = 'U';
      charArray0[8] = 'U';
      stringReader3.read(charArray0);
      CharBuffer.wrap(charArray0);
      stringReader1.read();
      JavaCharStream.hexval('3');
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6183409949707197
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader(".");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-483), 0);
      char[] charArray0 = new char[1];
      charArray0[0] = '>';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2703, (-1969), 2048);
      assertEquals((-1), javaCharStream1.bufpos);
      
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6183409949707197
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("-ULj)&Pyf]aeln`&eO");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1969));
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, (-1349), 13);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("^");
      stringReader0.ready();
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      charArray0[1] = '_';
      charArray0[2] = 'H';
      charArray0[3] = '-';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('D');
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("_G$tN+|PZtdPjPk");
      char[] charArray0 = new char[6];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      charArray0[3] = 'Y';
      charArray0[5] = 'd';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('d');
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('8');
      try { 
        MockFile.createTempFile("", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'U';
      stringReader0.read();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5007962545088982
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.read();
      try { 
        JavaCharStream.hexval('g');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.7046702267238097
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      char[] charArray0 = new char[3];
      charArray0[1] = 'U';
      charArray0[2] = 'J';
      stringReader2.read(charArray0);
      JavaCharStream.hexval('4');
      JavaCharStream.hexval('C');
      File file0 = MockFile.createTempFile("pCOD#3e!UCGB1'<]F", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 4, 4, 4);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4859155013346631
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'U';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, (-1), 102);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6183409949707197
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'I';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = 'c';
      charArray0[7] = 'c';
      CharBuffer.wrap(charArray0);
      StringReader stringReader1 = new StringReader("I!{k2?qL>K][~!");
      JavaCharStream.hexval('c');
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream(stringReader0, 1287, (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.509395601506142
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      int int0 = stringReader0.read();
      javaCharStream0.GetSuffix(79);
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      int int1 = javaCharStream1.getBeginLine();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      char char0 = '<';
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 3485);
      assertEquals((-1), javaCharStream0.bufpos);
      
      char[] charArray0 = new char[6];
      charArray0[0] = 'U';
      charArray0[1] = 'k';
      stringReader0.mark(14);
      charArray0[2] = 'U';
      charArray0[4] = 'U';
      charArray0[5] = 'U';
      CharBuffer.wrap(charArray0);
      stringReader0.read();
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("<*W");
      stringReader0.markSupported();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3164250323253432
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.read();
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = 'Y';
      CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.074156338464633
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "Dw:eRQufl8";
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      StringReader stringReader1 = new StringReader("p!");
      int int0 = 4093;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 94, 4093);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p!");
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("&-d\"g'ejmx");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'L';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      charArray0[1] = '6';
      charArray0[2] = ':';
      charArray0[3] = 'H';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-601), 13, 13);
      JavaCharStream javaCharStream3 = new JavaCharStream(sequenceInputStream0);
      javaCharStream3.bufsize = 77;
      // Undeclared exception!
      try { 
        javaCharStream3.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = 1974;
      StringReader stringReader0 = new StringReader("*>+D/TjFW8Q");
      stringReader0.mark(1974);
      char[] charArray0 = new char[6];
      charArray0[0] = '\u001B';
      charArray0[1] = 'o';
      charArray0[2] = 'V';
      charArray0[3] = 'H';
      charArray0[4] = '-';
      charArray0[5] = '_';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('5');
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[1] = 'U';
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.read();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      char[] charArray0 = new char[3];
      charArray0[1] = 'U';
      charArray0[2] = 'J';
      stringReader2.read(charArray0);
      CharBuffer.wrap(charArray0);
      stringReader2.read();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3164250323253432
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("QVW=9t=OE");
      stringReader1.read();
      try { 
        JavaCharStream.hexval('.');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3025082215358106
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\tpCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(16, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3581652745535546
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("rA8S R!A^~^[q[");
      stringReader0.read();
      stringReader0.mark(118);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2048, 95);
      StringReader stringReader1 = new StringReader("rA8S R!A^~^[q[");
      stringReader1.reset();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      StringReader stringReader2 = new StringReader("4EY%j9E=Y!G@i'(*");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 101, 10);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, (-5), (-3776), 118);
      javaCharStream2.ExpandBuff(false);
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9896976656564385
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.UpdateLineColumn('d');
      javaCharStream0.adjustBeginLineColumn(67, 0);
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      assertEquals(0, javaCharStream1.getBeginColumn());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6183409949707197
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader(".");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-483), 0);
      char[] charArray0 = new char[1];
      charArray0[0] = '>';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2703, (-1969), 2048);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      stringReader0.read();
      stringReader0.markSupported();
      javaCharStream0.maxNextCharInd = (-3496);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.bufpos = 73;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      javaCharStream0.line = 4074;
      String string0 = javaCharStream0.GetImage();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3674724429174536
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      stringReader0.reset();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReadByte();
      javaCharStream0.nextCharBuf = null;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      stringReader0.read();
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream.hexval('e');
      StringReader stringReader0 = new StringReader("l>]$&");
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      stringReader0.reset();
      charArray0[1] = 'e';
      CharBuffer.wrap(charArray0);
      StringReader stringReader1 = new StringReader("l>]$&");
      JavaCharStream.hexval('e');
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      StringReader stringReader1 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("pCOD#3e!UCGB1'<]F");
      char[] charArray0 = new char[5];
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 80, 4);
      StringReader stringReader3 = new StringReader("pCOD#3e!UCGB1'<]F");
      stringReader3.ready();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.clear();
      stringReader0.read(charBuffer0);
      javaCharStream0.FillBuff();
      File file0 = MockFile.createTempFile("`E`+w\"+", "pCOD#3e!UCGB1'<]F");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, (-447), 60, (-4302));
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)73;
      byteArray0[6] = (byte)71;
      byteArray0[7] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(1762, (byte)73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup(0);
      assertEquals(4095, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\tpCOD#3e!UCGB1'<]F");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte) (-10);
      byteArray0[6] = (byte)125;
      byteArray0[7] = (byte)51;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[8] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (-607));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)78, (byte) (-9), 1);
      byteArrayInputStream0.skip(539L);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 95, (int) (byte)1, (-2147));
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("$a@p O6r4p',:JvQzpT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 1793, 0, 0);
      javaCharStream0.bufpos = 77;
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'U';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(68, (-1892));
      assertEquals((-1892), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = (-4109);
      int int1 = (-1746);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-4109), (-1746));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      stringReader0.ready();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A*q=%J?D");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 68, 68, (-523));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("iV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)25;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1863), 2389);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)25, (-1806), 1814);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M8jj^OT5kn-ZffQ; :@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.prevCharIsCR = false;
      stringReader0.skip((-1));
      javaCharStream0.backup((-2368));
      javaCharStream0.backup((-2368));
      int int0 = 0;
      int[] intArray0 = new int[1];
      intArray0[0] = 4735;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.maxNextCharInd = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4736
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2359803118801485
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      stringReader0.reset();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      
      javaCharStream0.tokenBegin = (int) ':';
      StringReader stringReader1 = new StringReader("Dw:eRQufl8");
      stringReader1.mark(0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 0, 58);
      javaCharStream1.available = (-1369);
      char char0 = javaCharStream1.BeginToken();
      assertEquals('D', char0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p!");
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = 0;
      sequenceInputStream0.mark((-3134));
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 10, (-384));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 53);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1146, 53);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-5064), 1, (-5064));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.maxNextCharInd = 0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)38;
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-15));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>+D/TjFW8Q");
      StringReader stringReader1 = new StringReader("p&){* : N\"`2!%");
      stringReader1.markSupported();
      char[] charArray0 = new char[3];
      charArray0[0] = 'Y';
      charArray0[1] = 'Q';
      charArray0[2] = 'f';
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2032), 1793, 78);
      char[] charArray1 = javaCharStream0.GetSuffix(11);
      assertEquals(11, charArray1.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")dnI)D");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 1;
      javaCharStream0.inputStream = (Reader) stringReader0;
      stringReader0.ready();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 41;
      intArray0[3] = 1;
      intArray0[4] = (-1);
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 41;
      intArray0[8] = 2397;
      javaCharStream0.ReadByte();
      StringReader stringReader1 = new StringReader(")dnI)D");
      javaCharStream0.ReInit((Reader) stringReader1, 1, 41);
      javaCharStream0.bufline = intArray0;
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.393353349541597
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 15);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 2300, 2300, (-5154));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup((-242));
      javaCharStream0.getEndColumn();
      assertEquals(241, javaCharStream0.bufpos);
      
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.460685998915806
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("&-d\"g'ejmx");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'L';
      charArray0[1] = '6';
      charArray0[2] = ':';
      charArray0[3] = 'H';
      CharBuffer.wrap(charArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), 1);
      javaCharStream2.prevCharIsLF = true;
      JavaCharStream javaCharStream3 = new JavaCharStream(sequenceInputStream0, (-1), 78, (-1));
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.40449655272755
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pCOD#3e!UCGB1'<]F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      javaCharStream0.BeginToken();
      javaCharStream0.available = 0;
      javaCharStream0.adjustBeginLineColumn((-1), 15);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(15, javaCharStream0.getBeginColumn());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup(2354);
      assertEquals(1741, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.199325386865874
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.adjustBeginLineColumn(0, 3275);
      javaCharStream0.backup((-1692));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.757637858307174
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(0);
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Dw:eRQufl8");
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[2] = 'R';
      charArray0[1] = 'U';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 54, (-1));
      javaCharStream0.adjustBeginLineColumn((-2090), 75);
      assertEquals((-2089), javaCharStream0.getBeginLine());
      assertEquals(75, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("$a@p O6r4p',:JvQzpT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 1793, 0, 0);
      char[] charArray1 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray1.length);
      
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader1, 0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.1817319207582866
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[2] = 's';
      charArray0[3] = 'D';
      charArray0[4] = '?';
      charArray0[4] = '\\';
      stringReader0.read();
      charArray0[6] = '\'';
      charArray0[7] = 'S';
      charArray0[8] = '1';
      stringReader0.read(charArray0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 1099;
      int int1 = 4;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1099, 4);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.8472883508124011
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escaEe chaeacter ay line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      stringReader0.read();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>+D/TjFW8Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (-1091));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('*', char0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = 'R';
      charArray0[2] = '\\';
      charArray0[3] = '8';
      charArray0[4] = '?';
      charArray0[5] = 'G';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      charBuffer0.clear();
      stringReader0.read(charBuffer0);
      StringReader stringReader1 = new StringReader("i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("$a@p O6r4p',:JvQzpT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 1768, 0, 0);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = 86;
      int int1 = 69;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 86, 69, 86);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>+D/TjFW8Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 4089);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('A');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("hd$a3WwIM8\"(<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 557, 15);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(15, javaCharStream0.getBeginColumn());
      assertEquals('h', char0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-5064), 1, (-5064));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.maxNextCharInd = 0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)15;
      StringReader stringReader0 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 13, 13, (-5064));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.adjustBeginLineColumn((-21), (-21));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-21), (-21), 388);
      assertEquals((-21), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      String string0 = "Dw:eRQufl8";
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 889);
      javaCharStream0.ExpandBuff(false);
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = 'h';
      charArray0[2] = 'Q';
      charArray0[3] = '5';
      charArray0[4] = 'a';
      charArray0[5] = 'G';
      charArray0[6] = '6';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-1), 889);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-5064), 1, (-5064));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.maxNextCharInd = 0;
      StringReader stringReader0 = new StringReader("}_qd7");
      javaCharStream0.ReInit((Reader) stringReader0, 2591, 1, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\tpCOD#3e!UCGB1'<]F");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3684, (-348), 1685);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }
}
