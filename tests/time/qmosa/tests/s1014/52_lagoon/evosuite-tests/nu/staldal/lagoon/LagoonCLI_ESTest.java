/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:17:59 GMT 2019
 */

package nu.staldal.lagoon;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LagoonCLI_ESTest extends LagoonCLI_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Password is required but not specified");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Password is required but not specified");
      stringArray0[0] = "Password is required but not specified";
      stringArray0[1] = "9";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      LagoonCLI.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "`Ey-7Z&Bi(o-S)z3}).sitemap";
      stringArray0[1] = "9";
      LagoonCLI.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.7046360973492382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Password is required but not specified");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Password is required but not specified");
      stringArray0[0] = "Password is required but not specified";
      stringArray0[1] = "9";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nu.staldal.lagoon.core.LagoonException");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      LagoonCLI.main(stringArray0);
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Password is required but not specified");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "forne");
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".xml";
      stringArray0[1] = "9";
      stringArray0[2] = "T988N";
      stringArray0[3] = "T988N";
      stringArray0[4] = "Property ";
      stringArray0[5] = "fg={4y'0J*";
      stringArray0[6] = "Password is required but not specified";
      LagoonCLI.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Building website...";
      stringArray0[1] = "force";
      stringArray0[2] = "force";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "EntUttamt4$;N~U";
      stringArray1[1] = "force";
      stringArray1[2] = "Building website...";
      stringArray1[3] = "filea";
      stringArray1[4] = "EntUttamt4$;N~U";
      stringArray1[5] = "HJcy+8T>d";
      stringArray1[6] = "HJcy+8T>d";
      stringArray1[7] = "UK;k{`4<";
      LagoonCLI.main(stringArray1);
      assertEquals(8, stringArray1.length);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "EntUttamt4$;N~U";
      stringArray0[1] = "force";
      stringArray0[2] = "Building website...";
      stringArray0[3] = "$$WN+]r*s";
      stringArray0[4] = "Building website...";
      stringArray0[5] = "force";
      stringArray0[6] = "force";
      stringArray0[7] = "UK;k{`4<";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "X~7ayW 6mvQu<";
      stringArray0[1] = "2";
      stringArray0[2] = "2";
      stringArray0[3] = "m:e";
      stringArray0[4] = "X~7ayW 6mvQu<";
      stringArray0[5] = "ecEed";
      LagoonCLI.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "foce";
      stringArray0[2] = "Incorrect password";
      stringArray0[3] = "http://xml.org/sax/features/namespace-prefixes";
      stringArray0[4] = "Iy=u\"|fQ|SqE(";
      stringArray0[5] = "e~ {R**ZGf05MzzXH.";
      stringArray0[6] = "force.xml";
      // Undeclared exception!
      try { 
        LagoonCLI.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "forne";
      stringArray0[1] = "r}HaIRn`3f8#|!=";
      stringArray0[2] = "forne";
      stringArray0[3] = "forne";
      stringArray0[4] = "forne";
      stringArray0[5] = "space";
      stringArray0[6] = "forne";
      stringArray0[7] = "build";
      stringArray0[8] = "forne";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "forne";
      stringArray1[1] = "build";
      stringArray1[2] = "build";
      LagoonCLI.main(stringArray1);
      assertNotSame(stringArray1, stringArray0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "EntUttamt4$;N~U";
      stringArray0[1] = "force";
      stringArray0[2] = "Buiding website...";
      stringArray0[3] = "$$WN+]r*s";
      stringArray0[4] = "Buiding website...";
      stringArray0[5] = "force";
      stringArray0[6] = "EntUttamt4$;N~U";
      stringArray0[7] = "UK;k{`4<";
      LagoonCLI.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "8_KP";
      stringArray0[1] = "nu.staldal.xtree.NodeWithChildren";
      stringArray0[2] = "`Ey-7Z&GBi(o-S)z3}).sitemap";
      stringArray0[3] = "Property ";
      stringArray0[4] = "P!Ej(o3oSfDgJ8`7eoI";
      stringArray0[5] = ".xml";
      stringArray0[6] = "T988N";
      stringArray0[7] = "?bYxDvK,cIHgV4f3?k";
      stringArray0[8] = "GekNM#c,9)!Po%U";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "GekNM#c,9)!Po%U";
      LagoonCLI.main(stringArray1);
      assertEquals(1, stringArray1.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LagoonCLI.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "r{\"RBIJ?NFsAXNob9";
      stringArray0[1] = "[v";
      stringArray0[2] = ";(F)O<=~6O@[yO>%S";
      stringArray0[3] = "7Ouc";
      stringArray0[4] = "Io5brh@H^uw.";
      stringArray0[5] = " not specified";
      stringArray0[6] = "5[$r^`mBX|s+E`ou8r";
      stringArray0[7] = "u8q^}";
      stringArray0[8] = "EntUttamt4$;N~U.xml";
      LagoonCLI.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.7591815518946927
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LagoonCLI lagoonCLI0 = new LagoonCLI();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "pecified";
      stringArray0[1] = "";
      stringArray0[2] = "`|JCG]&QB7(0l ";
      stringArray0[3] = "targetURL";
      stringArray0[4] = "2#!EJ7I~kwucN#";
      LagoonCLI.main(stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Rf`-t$.b";
      stringArray1[1] = "build";
      stringArray1[2] = ",E`]~n__";
      LagoonCLI.main(stringArray1);
      String[] stringArray2 = new String[9];
      stringArray2[0] = "`IefSU/lY8:";
      stringArray2[1] = "A1McnLWj";
      stringArray2[2] = "";
      stringArray2[3] = "";
      stringArray2[4] = "";
      stringArray2[5] = "";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray2[8] = "nu.staldal.lagoon.core.LagoonException";
      LagoonCLI.main(stringArray2);
      String[] stringArray3 = new String[2];
      stringArray3[0] = "3$v0r5RB8eBm=\"i";
      stringArray3[1] = "";
      LagoonCLI.main(stringArray3);
      assertNotSame(stringArray3, stringArray2);
  }
}
