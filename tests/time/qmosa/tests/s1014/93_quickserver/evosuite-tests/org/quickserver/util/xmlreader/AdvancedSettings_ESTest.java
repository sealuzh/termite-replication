/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:19:04 GMT 2019
 */

package org.quickserver.util.xmlreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.quickserver.util.xmlreader.AdvancedSettings;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdvancedSettings_ESTest extends AdvancedSettings_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.5715377332442775
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.toXML("");
      advancedSettings0.setPerformancePreferencesLatency((-1));
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setClientSocketReceiveBufferSize(10);
      advancedSettings0.toXML("org.quickserver.util.pool.MakeQSObjectPool");
      advancedSettings0.setBacklog((-1));
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setPerformancePreferencesLatency(10);
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.toXML("JbCnX1");
      advancedSettings0.getClientIdentifier();
      advancedSettings0.getCharset();
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.getCharset();
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setClientIdentifier("</use-direct-byte-buffer>\n");
      advancedSettings0.getQSObjectPoolMaker();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("org.quickserver.net.server.impl.OptimisticClientIdentifier");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // org.quickserver.net.server.impl.OptimisticClientIdentifier
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.412223694232555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setSocketLinger((-211));
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.getCharset();
      advancedSettings0.setCharset("");
      advancedSettings0.toXML("ISO-8859-1");
      advancedSettings0.setClientIdentifier("ISO-8859-1");
      advancedSettings0.setCharset("ISO-8859-1");
      advancedSettings0.getClientIdentifier();
      assertEquals("ISO-8859-1", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.477846386759023
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesConnectionTime((-2654));
      String string0 = "t";
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      advancedSettings0.setCharset("");
      advancedSettings1.setPerformancePreferencesBandwidth((-2654));
      advancedSettings1.getMaxThreadsForNioWrite();
      advancedSettings1.setClientIdentifier("");
      advancedSettings1.getClientSocketTcpNoDelay();
      AdvancedSettings advancedSettings2 = new AdvancedSettings();
      advancedSettings2.getClientSocketSendBufferSize();
      advancedSettings1.setClientSocketTcpNoDelay(false);
      advancedSettings0.setPerformancePreferencesConnectionTime((-2654));
      advancedSettings2.getClientSocketSendBufferSize();
      advancedSettings1.getPerformancePreferencesBandwidth();
      advancedSettings1.toXML("");
      advancedSettings2.getClientSocketSendBufferSize();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("t");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // t
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.6638192075514553
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketSendBufferSize(3487);
      advancedSettings0.setPerformancePreferencesLatency(1642);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getSocketLinger();
      advancedSettings0.setClientIdentifier("'aYYh@-ZyO<pw<y:b^;");
      advancedSettings0.setClientSocketTrafficClass(";!D\"m35d/4[9Ti\"");
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.toXML(";!D\"m35d/4[9Ti\"");
      advancedSettings0.setByteBufferSize((-98));
      advancedSettings0.getByteBufferSize();
      advancedSettings0.setMaxThreadsForNioWrite((-769));
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setClientIdentifier("'aYYh@-ZyO<pw<y:b^;");
      assertEquals("'aYYh@-ZyO<pw<y:b^;", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.506937706031966
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.toXML((String) null);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.setPerformancePreferencesConnectionTime(4598);
      advancedSettings0.getClientIdentifier();
      advancedSettings0.getCharset();
      advancedSettings0.setClientIdentifier("W/");
      advancedSettings0.setClientIdentifier("R/6y@");
      advancedSettings0.getBacklog();
      advancedSettings0.getQSObjectPoolMaker();
      assertEquals("R/6y@", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.5536204259420283
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setSocketLinger((-506));
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setClientSocketReceiveBufferSize(1);
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.setPerformancePreferencesConnectionTime(28);
      advancedSettings0.setClientIdentifier("w");
      advancedSettings0.setPerformancePreferencesBandwidth(85);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.getBacklog();
      advancedSettings0.getByteBufferSize();
      advancedSettings0.toXML("");
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.getPerformancePreferencesBandwidth();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientIdentifier("");
      boolean boolean0 = advancedSettings0.getUseDirectByteBuffer();
      assertEquals(1, advancedSettings0.getClientSocketReceiveBufferSize());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.7035420247198974
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize(1593);
      advancedSettings0.setQSObjectPoolMaker("");
      advancedSettings0.setPerformancePreferencesConnectionTime(65536);
      advancedSettings0.setPerformancePreferencesLatency(65536);
      advancedSettings0.setMaxThreadsForNioWrite(1593);
      advancedSettings0.toXML("");
      advancedSettings0.setPerformancePreferencesConnectionTime(65536);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setPerformancePreferencesBandwidth(1593);
      advancedSettings0.setSocketLinger(65536);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setPerformancePreferencesLatency(65536);
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setPerformancePreferencesBandwidth(65536);
      advancedSettings0.setSocketLinger(65536);
      advancedSettings0.setClientIdentifier("");
      assertEquals(65536, advancedSettings0.getPerformancePreferencesConnectionTime());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.838852789084118
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setDebugNonBlockingMode(true);
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      advancedSettings1.setClientSocketTrafficClass("");
      advancedSettings0.setCharset("");
      advancedSettings1.setPerformancePreferencesLatency((-680));
      advancedSettings1.setCharset("");
      advancedSettings1.setPerformancePreferencesConnectionTime(38);
      advancedSettings0.setPerformancePreferencesConnectionTime((-1));
      advancedSettings1.setClientIdentifier("");
      advancedSettings1.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings1.setClientIdentifier("");
      AdvancedSettings advancedSettings2 = new AdvancedSettings();
      advancedSettings2.setCharset("");
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(1);
      advancedSettings1.setClientSocketSendBufferSize((-1));
      advancedSettings2.setClientSocketSendBufferSize(1);
      assertEquals(1, advancedSettings2.getClientSocketSendBufferSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.695402867707801
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesBandwidth((-1));
      advancedSettings0.setPerformancePreferencesLatency((-1));
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      advancedSettings0.setSocketLinger(1766);
      advancedSettings0.setSocketLinger(1766);
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.toXML(")?qfzdc?HBC_");
      advancedSettings0.setPerformancePreferencesConnectionTime((-1945));
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setQSObjectPoolMaker("org.quickserver.util.pool.MakeQSObjectPool");
      advancedSettings0.setPerformancePreferencesLatency((-1945));
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      advancedSettings0.setClientSocketTrafficClass("");
      boolean boolean0 = true;
      advancedSettings0.getQSObjectPoolMaker();
      String string0 = "}DhgSS2eFV";
      advancedSettings0.getPerformancePreferencesLatency();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("}DhgSS2eFV");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // }DhgSS2eFV
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesBandwidth((-1170));
      advancedSettings0.setClientSocketReceiveBufferSize(279);
      advancedSettings0.getSocketLinger();
      advancedSettings0.setByteBufferSize((-1));
      advancedSettings0.setClientSocketTrafficClass("</client-identifier>\n");
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.getSocketLinger();
      advancedSettings0.getBacklog();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getSocketLinger();
      advancedSettings0.getSocketLinger();
      advancedSettings0.getQSObjectPoolMaker();
      advancedSettings0.setClientSocketSendBufferSize(279);
      advancedSettings0.setClientSocketTrafficClass("</client-identifier>\n");
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setPerformancePreferencesConnectionTime(268);
      int int0 = advancedSettings0.getBacklog();
      assertEquals(279, advancedSettings0.getClientSocketSendBufferSize());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5789197885408863
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("f1aPGFf/P2");
      advancedSettings0.toXML("");
      advancedSettings0.setSocketLinger(4588);
      advancedSettings0.setBacklog((-769));
      advancedSettings0.setBacklog(4588);
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.toXML("");
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setPerformancePreferencesConnectionTime(737);
      advancedSettings0.setPerformancePreferencesLatency((-1));
      advancedSettings0.getSocketLinger();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      assertEquals(4588, advancedSettings0.getSocketLinger());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6311316878233564
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setPerformancePreferencesConnectionTime((-2654));
      advancedSettings0.setPerformancePreferencesConnectionTime((-2654));
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      advancedSettings1.setCharset("");
      advancedSettings1.getMaxThreadsForNioWrite();
      advancedSettings1.setClientIdentifier("");
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings1.getClientSocketSendBufferSize();
      advancedSettings1.setClientSocketTcpNoDelay(true);
      advancedSettings1.setPerformancePreferencesConnectionTime(10);
      advancedSettings1.getClientSocketSendBufferSize();
      AdvancedSettings advancedSettings2 = new AdvancedSettings();
      advancedSettings2.setClientSocketReceiveBufferSize((-1460));
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings1.setClientSocketSendBufferSize((-991));
      AdvancedSettings advancedSettings3 = new AdvancedSettings();
      // Undeclared exception!
      try { 
        advancedSettings3.setCharset("t");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // t
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.94218229742502
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketReceiveBufferSize((-2842));
      advancedSettings0.setByteBufferSize(1574);
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings0.setMaxThreadsForNioWrite(1);
      advancedSettings0.setMaxThreadsForNioWrite((-2842));
      advancedSettings0.setDebugNonBlockingMode(false);
      advancedSettings0.setClientSocketSendBufferSize(1);
      advancedSettings0.setPerformancePreferencesLatency(1);
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setSocketLinger(1);
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.getByteBufferSize();
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("B4%n0 d#ALP}AVvKU");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // B4%n0 d#ALP}AVvKU
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9533371806199122
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      AdvancedSettings advancedSettings2 = new AdvancedSettings();
      advancedSettings2.setClientIdentifier("");
      advancedSettings2.setQSObjectPoolMaker("");
      AdvancedSettings advancedSettings3 = new AdvancedSettings();
      advancedSettings3.setClientSocketTcpNoDelay(true);
      AdvancedSettings advancedSettings4 = new AdvancedSettings();
      AdvancedSettings advancedSettings5 = new AdvancedSettings();
      advancedSettings4.setClientIdentifier("[>n_5Q[V3{wam/");
      assertEquals("[>n_5Q[V3{wam/", advancedSettings4.getClientIdentifier());
      
      String string0 = advancedSettings2.getQSObjectPoolMaker();
      assertEquals("", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.692590294962301
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientIdentifier("a;<E<Y e");
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientIdentifier("AY/");
      advancedSettings0.setCharset("");
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setCharset("");
      advancedSettings0.setClientIdentifier("AY/");
      advancedSettings0.getClientSocketReceiveBufferSize();
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      AdvancedSettings advancedSettings2 = new AdvancedSettings();
      advancedSettings0.setClientSocketTrafficClass("AY/");
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings1.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setClientIdentifier("");
      assertEquals("AY/", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.5779852790228426
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketSendBufferSize(3487);
      advancedSettings0.setPerformancePreferencesLatency(1642);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getSocketLinger();
      advancedSettings0.setClientIdentifier("'aYYh@-ZyO<pw<y:b^;");
      advancedSettings0.setClientSocketTrafficClass(";!D\"m35d/4[9Ti\"");
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.toXML(";!D\"m35d/4[9Ti\"");
      advancedSettings0.setByteBufferSize((-88));
      advancedSettings0.getByteBufferSize();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getMaxThreadsForNioWrite();
      advancedSettings0.setClientIdentifier("'aYYh@-ZyO<pw<y:b^;");
      assertEquals(3487, advancedSettings0.getClientSocketSendBufferSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getBacklog();
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setPerformancePreferencesLatency(0);
      int int0 = 1;
      advancedSettings0.setPerformancePreferencesLatency(1);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      int int1 = (-2690);
      advancedSettings0.setPerformancePreferencesLatency(1632);
      advancedSettings0.setClientSocketReceiveBufferSize(767);
      advancedSettings0.setClientSocketSendBufferSize((-2690));
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setPerformancePreferencesConnectionTime(182);
      int int2 = 0;
      advancedSettings0.setMaxThreadsForNioWrite(0);
      advancedSettings0.setMaxThreadsForNioWrite((-1333));
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      String string0 = "63AN0d>i]";
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("63AN0d>i]");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 63AN0d>i]
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setClientSocketSendBufferSize((-2234));
      advancedSettings0.setClientSocketSendBufferSize(1331);
      assertEquals(282, advancedSettings0.getClientSocketReceiveBufferSize());
      
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      int int0 = advancedSettings1.getPerformancePreferencesBandwidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.739571875315638
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.setClientIdentifier("a;<E<Y e");
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientIdentifier("AY/");
      advancedSettings0.setCharset("");
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setCharset("");
      advancedSettings0.getSocketLinger();
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      AdvancedSettings advancedSettings2 = new AdvancedSettings();
      advancedSettings0.setClientSocketTrafficClass("AY/");
      advancedSettings0.setUseDirectByteBuffer(false);
      advancedSettings1.setClientSocketReceiveBufferSize(282);
      assertEquals(282, advancedSettings1.getClientSocketReceiveBufferSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.setClientSocketTrafficClass("t");
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketReceiveBufferSize(616);
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientSocketSendBufferSize(376);
      assertEquals(376, advancedSettings0.getClientSocketSendBufferSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0461659531309886
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setPerformancePreferencesConnectionTime((-2654));
      advancedSettings0.setCharset("");
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getUseDirectByteBuffer();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setCharset("");
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getBacklog();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.getBacklog();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.setClientSocketTrafficClass("p+pWmW");
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setClientIdentifier("2i]z)/");
      assertEquals("2i]z)/", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setPerformancePreferencesLatency((-1));
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.setClientSocketTrafficClass("</client-socket-receive-buffer-size>\n");
      advancedSettings0.setByteBufferSize(0);
      advancedSettings0.setPerformancePreferencesLatency(139);
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setPerformancePreferencesBandwidth(1359);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setClientSocketSendBufferSize(282);
      advancedSettings0.setClientSocketReceiveBufferSize(1);
      assertEquals(1, advancedSettings0.getClientSocketReceiveBufferSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientIdentifier("</client-identifier>\n");
      advancedSettings0.setClientSocketReceiveBufferSize((-2331));
      advancedSettings0.setByteBufferSize((-2331));
      advancedSettings0.setClientSocketSendBufferSize((-2331));
      advancedSettings0.setClientSocketReceiveBufferSize((-2331));
      assertEquals((-2331), advancedSettings0.getClientSocketSendBufferSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setSocketLinger((-1));
      advancedSettings0.setClientSocketReceiveBufferSize(0);
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setBacklog(0);
      advancedSettings0.getSocketLinger();
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.getSocketLinger();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.setPerformancePreferencesLatency(0);
      assertEquals(0, advancedSettings0.getSocketLinger());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.454482887875094
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setBacklog((-1));
      advancedSettings0.setClientIdentifier("Z.tvHW&hT~?i<NU^A4");
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setClientSocketReceiveBufferSize((-2307));
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setClientSocketSendBufferSize(282);
      int int0 = advancedSettings0.getMaxThreadsForNioWrite();
      assertEquals("Z.tvHW&hT~?i<NU^A4", advancedSettings0.getClientIdentifier());
      assertEquals(10, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setMaxThreadsForNioWrite(82);
      int int0 = advancedSettings0.getMaxThreadsForNioWrite();
      assertEquals(82, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setQSObjectPoolMaker("gFQBjCAh_&SQS");
      advancedSettings0.setByteBufferSize(1245);
      advancedSettings0.getQSObjectPoolMaker();
      assertEquals(1245, advancedSettings0.getByteBufferSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setSocketLinger(282);
      advancedSettings0.setClientSocketTrafficClass("</client-socket-send-buffer-size>\n");
      advancedSettings0.setClientSocketSendBufferSize((-2234));
      advancedSettings0.setClientSocketSendBufferSize(1331);
      advancedSettings0.setClientSocketReceiveBufferSize((-2234));
      assertEquals(282, advancedSettings0.getSocketLinger());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.3894863594240063
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getDebugNonBlockingMode();
      advancedSettings0.setPerformancePreferencesLatency((-625));
      advancedSettings0.setPerformancePreferencesLatency((-625));
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setPerformancePreferencesConnectionTime((-625));
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.toXML("");
      advancedSettings0.toXML((String) null);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.getClientIdentifier();
      assertEquals((-625), advancedSettings0.getPerformancePreferencesConnectionTime());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.537128174772269
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setBacklog(2539);
      advancedSettings0.setClientSocketReceiveBufferSize(955);
      advancedSettings0.setClientSocketTrafficClass("6z{6O@N");
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.toXML("</charset>\n");
      advancedSettings0.setClientSocketSendBufferSize(0);
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.getBacklog();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.getPerformancePreferencesConnectionTime();
      advancedSettings0.getClientSocketTrafficClass();
      assertTrue(advancedSettings0.getDebugNonBlockingMode());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.5345393682748254
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      int int0 = (-1);
      advancedSettings0.setClientSocketTrafficClass("</max-threads-for-nio-write>\n");
      advancedSettings0.setPerformancePreferencesLatency(0);
      advancedSettings0.setCharset((String) null);
      advancedSettings0.toXML("");
      advancedSettings0.setPerformancePreferencesConnectionTime((-1));
      advancedSettings0.setPerformancePreferencesConnectionTime((-1));
      advancedSettings0.setClientIdentifier("</client-socket-traffic-class>\n");
      advancedSettings0.getClientSocketTrafficClass();
      boolean boolean0 = true;
      advancedSettings0.setClientIdentifier("</max-threads-for-nio-write>\n");
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("\t<client-socket-tcp-no-delay>");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // \t<client-socket-tcp-no-delay>
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.6426203549633644
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientSocketSendBufferSize((-1));
      advancedSettings0.setClientSocketReceiveBufferSize(1962);
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTrafficClass("1+R$ZUB,,");
      advancedSettings0.setCharset((String) null);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setPerformancePreferencesConnectionTime((-2845));
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.getPerformancePreferencesLatency();
      advancedSettings0.toXML("");
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setCharset((String) null);
      advancedSettings0.getBacklog();
      advancedSettings0.getClientSocketReceiveBufferSize();
      advancedSettings0.setUseDirectByteBuffer(true);
      advancedSettings0.setClientIdentifier((String) null);
      int int0 = advancedSettings0.getBacklog();
      assertEquals(1962, advancedSettings0.getClientSocketReceiveBufferSize());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5145178392589265
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      int int0 = (-2654);
      advancedSettings0.setPerformancePreferencesConnectionTime((-2654));
      advancedSettings0.setCharset("");
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.getClientSocketTcpNoDelay();
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setPerformancePreferencesConnectionTime(0);
      advancedSettings0.getClientSocketSendBufferSize();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setSocketLinger(0);
      advancedSettings0.getPerformancePreferencesConnectionTime();
      String string0 = "a";
      // Undeclared exception!
      try { 
        advancedSettings0.setCharset("a");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // a
         //
         verifyException("org.quickserver.util.xmlreader.AdvancedSettings", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.460455383605455
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("i");
      advancedSettings0.getClientSocketTrafficClass();
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientIdentifier((String) null);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setClientSocketSendBufferSize((-2234));
      advancedSettings0.setClientSocketSendBufferSize(1331);
      advancedSettings0.setClientSocketReceiveBufferSize((-2234));
      advancedSettings0.toXML("i");
      advancedSettings0.setClientIdentifier((String) null);
      assertEquals("i", advancedSettings0.getClientIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.616692132626582
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketTcpNoDelay(false);
      advancedSettings0.setClientSocketReceiveBufferSize(282);
      advancedSettings0.setSocketLinger(282);
      advancedSettings0.setClientIdentifier("");
      advancedSettings0.setClientSocketSendBufferSize(282);
      advancedSettings0.setClientSocketSendBufferSize(282);
      advancedSettings0.setCharset("");
      advancedSettings0.getClientIdentifier();
      advancedSettings0.setClientSocketTrafficClass("");
      advancedSettings0.toXML("IKj03c%}L84=Fh");
      advancedSettings0.getClientIdentifier();
      assertEquals(282, advancedSettings0.getClientSocketSendBufferSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setClientIdentifier("p'0pebl]6.tiT");
      advancedSettings0.setClientSocketTcpNoDelay(true);
      advancedSettings0.setClientSocketReceiveBufferSize((-1));
      advancedSettings0.setClientSocketSendBufferSize((-998));
      advancedSettings0.setClientSocketSendBufferSize((-2234));
      advancedSettings0.setDebugNonBlockingMode(true);
      advancedSettings0.setClientSocketReceiveBufferSize((-2091));
      assertEquals((-2234), advancedSettings0.getClientSocketSendBufferSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AdvancedSettings advancedSettings0 = new AdvancedSettings();
      advancedSettings0.setBacklog(2109);
      assertEquals(2109, advancedSettings0.getBacklog());
      
      AdvancedSettings advancedSettings1 = new AdvancedSettings();
      AdvancedSettings advancedSettings2 = new AdvancedSettings();
      advancedSettings2.setCharset("");
      int int0 = advancedSettings2.getBacklog();
      assertEquals(0, int0);
  }
}
