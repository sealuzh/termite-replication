/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:36:55 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.event.ComponentListener;
import java.awt.event.MouseListener;
import java.awt.geom.Rectangle2D;
import java.awt.image.IndexColorModel;
import java.awt.image.renderable.ParameterBlock;
import java.io.FileDescriptor;
import java.time.Month;
import java.time.ZoneId;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.KeyStroke;
import javax.swing.SpinnerListModel;
import javax.swing.event.ListDataListener;
import javax.swing.plaf.multi.MultiLabelUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9594045983154567
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      stack0.add((VisualPageListItem) null);
      Predicate.isEqual((Object) stack0);
      predicate1.negate();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) predicate0;
      objectArray0[2] = (Object) predicate1;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      stack0.add((VisualPageListItem) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) null);
      jComboBox0.addMouseListener(defaultCaret0);
      visualListModel0.addListDataListener(jComboBox0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      defaultCaret0.intersects(0.0, 772.3841932600675, (double) 0, 0.0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "DEGREES_180", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate.isEqual((Object) stack0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      predicate1.negate();
      predicate3.and(predicate0);
      predicate3.negate();
      Predicate.isEqual((Object) "6_d(V2%05`'I");
      stack0.iterator();
      boolean boolean0 = true;
      visualListModel0.removeElements(1158, (-1486), true);
      int int0 = 2;
      int[] intArray0 = new int[1];
      intArray0[0] = 1158;
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1159
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3080570415126394
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate0);
      predicate3.negate();
      Predicate.isEqual((Object) "6_d(V2%05`'I");
      predicate1.or(predicate4);
      stack0.iterator();
      visualListModel0.removeElements(1158, (-1532), true);
      int[] intArray0 = new int[1];
      intArray0[0] = 1158;
      predicate5.or(predicate3);
      predicate2.negate();
      stack0.removeIf(predicate3);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1158
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate1.negate();
      predicate3.and(predicate0);
      predicate4.negate();
      Predicate.isEqual((Object) "6_d(V2%05`'I");
      boolean boolean0 = true;
      visualListModel0.removeElements(1158, (-1486), true);
      int int0 = 2;
      int[] intArray0 = new int[1];
      intArray0[0] = 1158;
      boolean boolean1 = true;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1158
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      boolean boolean0 = true;
      int int0 = 2;
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(2, 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9594045983154567
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      stack0.add((VisualPageListItem) null);
      Predicate.isEqual((Object) stack0);
      predicate1.negate();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) predicate0;
      objectArray0[2] = (Object) predicate1;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) null);
      jComboBox0.addMouseListener(defaultCaret0);
      visualListModel0.addListDataListener(jComboBox0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      defaultCaret0.intersects(0.0, 772.3841932600675, (double) 0, 0.0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "DEGREES_180", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.317477358555153
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<String> vector0 = new Vector<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) stack0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      predicate3.negate();
      stack0.removeIf(predicate3);
      int[] intArray0 = new int[1];
      intArray0[0] = (-2537);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.removeElements(intArray0, false);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2537
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Iterator<VisualPageListItem> iterator0 = treeSet0.iterator();
      Object object0 = treeSet0.clone();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "v5<:y 0";
      objectArray0[2] = (Object) treeSet0;
      objectArray0[3] = (Object) iterator0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = object0;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualPageListItemArray0[2]);
      Predicate<Object> predicate1 = predicate0.negate();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.addListDataListener(jComboBox0);
      stack0.removeIf(predicate1);
      visualListModel0.removeElementAt(0, true);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.888599504919186
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate.isEqual((Object) visualListModel0);
      int int0 = 319;
      visualListModel0.removeElements(319, 3315, true);
      int[] intArray0 = new int[1];
      intArray0[0] = 319;
      visualListModel0.removeElements(319, 501, true);
      int[] intArray1 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 319
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = null;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = 1;
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      predicate1.negate();
      predicate3.and(predicate0);
      predicate3.negate();
      Predicate.isEqual((Object) "6_d(V2%05`'I");
      boolean boolean0 = true;
      visualListModel0.removeElements(1158, (-1486), true);
      int int0 = 2;
      int[] intArray0 = new int[1];
      intArray0[0] = 1158;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1158
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 0;
      visualListModel0.removeElements(0, 0, true);
      JComboBox<Object> jComboBox0 = null;
      try {
        jComboBox0 = new JComboBox<Object>((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate.isEqual((Object) "6_d(V2%05`'I");
      predicate3.and(predicate4);
      predicate3.or(predicate4);
      predicate3.or(predicate2);
      predicate4.negate();
      stack0.removeIf(predicate1);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 50);
      visualListModel0.moveDownIndex(1151);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3074153952359477
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.addAllElements(0, collection0);
      visualListModel0.moveUpIndex(4);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collection0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.negate();
      predicate0.and(predicate1);
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) 0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      MultiLabelUI multiLabelUI0 = new MultiLabelUI();
      // Undeclared exception!
      try { 
        multiLabelUI0.getPreferredSize(jComboBox0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6166581159129416
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 4412;
      intArray0[1] = 4412;
      intArray0[2] = (-2048);
      intArray0[3] = 4412;
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.getElements();
      Vector<String> vector0 = new Vector<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.setFocusTraversalPolicyProvider(true);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1694267446959503
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Iterator<VisualPageListItem> iterator0 = treeSet0.iterator();
      Object object0 = treeSet0.clone();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "v5<:y 0";
      objectArray0[2] = (Object) treeSet0;
      objectArray0[3] = (Object) iterator0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = object0;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualPageListItemArray0[2]);
      Predicate<Object> predicate1 = predicate0.negate();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      visualListModel0.addListDataListener(jComboBox0);
      stack0.removeIf(predicate1);
      stack0.add(visualPageListItemArray0[1]);
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(907);
      Stack<String> stack1 = new Stack<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(stack1);
      Vector<String> vector0 = new Vector<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>(stack1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.502420099185768
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate.isEqual((Object) "6_d(V2%05`'I");
      predicate3.and(predicate4);
      predicate3.or(predicate4);
      predicate3.or(predicate2);
      predicate4.negate();
      stack0.removeIf(predicate1);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 50;
      intArray0[1] = 50;
      intArray0[2] = 50;
      intArray0[3] = 50;
      intArray0[4] = 50;
      intArray0[5] = 50;
      intArray0[6] = 50;
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.665794045410081
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) stack0);
      predicate0.negate();
      Predicate.isEqual((Object) visualListModel0);
      visualListModel0.removeElements((-1486), 0, true);
      visualListModel0.removeElements(intArray0, true);
      boolean boolean0 = false;
      visualListModel0.removeElements(0, (-1486), false);
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 1158;
      intArray1[2] = (-1486);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel2.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.removeElements(intArray1, false);
      // Undeclared exception!
      try { 
        visualListModel1.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.clearData();
      int int0 = 0;
      visualListModel0.removeElements(0, 0, false);
      visualListModel0.removeElements(0, 367, false);
      JComboBox<Object> jComboBox0 = null;
      try {
        jComboBox0 = new JComboBox<Object>((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DefaultComboBoxModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      List<VisualPageListItem> list0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements((-224), (Collection<VisualPageListItem>) list0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[8];
      intArray0[0] = (-224);
      intArray0[1] = 0;
      intArray0[2] = (-1423);
      intArray0[3] = (-224);
      intArray0[4] = 0;
      intArray0[5] = (-1423);
      intArray0[6] = (-1423);
      intArray0[7] = (-224);
      visualListModel0.clearData();
      visualListModel0.setData(vector0);
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.317580851036449
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(367);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      visualListModel0.addListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, true, true);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jInternalFrame0.addComponentListener((ComponentListener) null);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      jComboBox1.getBounds(rectangle0);
      Integer integer0 = new Integer(367);
      visualListModel0.addListDataListener(jComboBox1);
      jInternalFrame0.getPropertyChangeListeners();
      visualListModel0.subList(3, 3, true);
      visualListModel0.clearData();
      int int0 = (-1);
      visualListModel0.removeElements(0, (-1), true);
      int[] intArray0 = new int[2];
      jInternalFrame0.getFrameIcon();
      intArray0[0] = (int) integer0;
      intArray0[1] = 0;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.subList(367, (-1537), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(367) > toIndex(-1537)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) stack0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      predicate2.or(predicate0);
      stack0.removeIf(predicate3);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<String> vector0 = new Vector<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<String> predicate2 = Predicate.isEqual((Object) stack0);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      predicate1.and(predicate5);
      Predicate.isEqual((Object) predicate2);
      predicate5.negate();
      stack0.removeIf(predicate5);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(809);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, "");
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt(270, (VisualPageListItem) null);
      visualListModel0.moveUpIndex(49);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.351538000244827
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(367);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      visualListModel0.addListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, true, true);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jInternalFrame0.addComponentListener((ComponentListener) null);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Rectangle2D.union(rectangle0, rectangle0, rectangle0);
      jComboBox1.getBounds(rectangle0);
      Integer integer0 = new Integer(367);
      visualListModel0.addListDataListener(jComboBox1);
      jInternalFrame0.getPropertyChangeListeners();
      visualListModel0.subList(3, 3, true);
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      JRadioButton jRadioButton0 = new JRadioButton(defaultEditorKit_CutAction0);
      jInternalFrame0.setContentPane(jRadioButton0);
      visualListModel0.removeElements(0, (-1), true);
      int[] intArray0 = new int[2];
      intArray0[0] = (int) integer0;
      intArray0[1] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7980021635821193
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[1];
      intArray0[0] = 368;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-2287), (-5113), false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel0.reverseElements(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel2.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.removeElements(intArray1, true);
      visualListModel1.rotateClockwiseElements(intArray0);
      assertNotSame(intArray0, intArray1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Predicate.isEqual((Object) visualListModel0);
      boolean boolean0 = false;
      visualListModel0.moveUpIndex(49);
      Vector<VisualPageListItem> vector0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int int0 = 0;
      int int1 = (-461);
      visualListModel0.moveUpIndex((-461));
      visualListModel0.subList(0, 0);
      visualListModel0.getValidElements();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-461));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0426322117102855
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) stack0);
      predicate1.negate();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) predicate0;
      objectArray0[2] = (Object) predicate1;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) null);
      jComboBox0.addMouseListener(defaultCaret0);
      visualListModel0.addListDataListener(jComboBox0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "DEGREES_180", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = (-139);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-139), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-139)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-776));
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      JInternalFrame jInternalFrame0 = new JInternalFrame("#mP*?QW|\"^[", true, true, false);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      jInternalFrame0.addComponentListener((ComponentListener) null);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      jComboBox1.getBounds(rectangle0);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      visualListModel0.addListDataListener(jComboBox0);
      jInternalFrame0.getPropertyChangeListeners();
      visualListModel0.subList(39, 25, false);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.clearData();
      rectangle0.setRect(1841.1428386254825, (double) 39, (double) (-776), (double) 25);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        visualListModel1.removeElementAt(270, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 270
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(368);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, true, true);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jInternalFrame0.addComponentListener((ComponentListener) null);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      jComboBox0.getBounds(rectangle0);
      jComboBox1.getHeight();
      visualListModel0.addListDataListener(jComboBox0);
      jInternalFrame0.getPropertyChangeListeners();
      visualListModel0.subList((-2728), 0, true);
      visualListModel0.clearData();
      visualListModel0.removeElements((-509), 0, true);
      rectangle0.setRect(1095.434565, 1095.434565, (double) (-593), (-592.51432931));
      visualListModel0.getElementAt(0);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.removeElementAt(3463, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3463
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<String> vector0 = new Vector<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      Color color0 = Color.CYAN;
      jComboBox0.setBackground(color0);
      visualListModel0.removeListDataListener(jComboBox0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      predicate0.negate();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      visualListModel0.getElementAt(0);
      objectArray0[2] = null;
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray0);
      jComboBox1.addMouseListener((MouseListener) null);
      visualListModel0.addListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1531));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1531)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5506839473018434
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) (-496);
      floatArray0[1] = (float) (-496);
      boolean boolean0 = false;
      visualListModel0.removeElements((-3033), (-3033), false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Hashtable<RenderingHints.Key, Month> hashtable0 = new Hashtable<RenderingHints.Key, Month>(1202);
      int[] intArray1 = new int[0];
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.getElements();
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray2 = new int[4];
      intArray2[0] = 1202;
      intArray2[1] = 1202;
      intArray2[2] = 1202;
      intArray2[3] = (-496);
      visualListModel0.undeleteElements(intArray2);
      visualListModel0.moveDownIndexes(intArray2);
      visualListModel0.reverseElements(intArray2);
      visualListModel0.rotateClockwiseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.076104579100767
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<String> vector0 = new Vector<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      visualListModel0.removeListDataListener(jComboBox0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      predicate3.negate();
      stack0.removeIf(predicate3);
      int[] intArray0 = new int[1];
      intArray0[0] = (-2537);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.380968209847695
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = true;
      visualListModel0.removeElements((-1828), 1526, true);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = (-1828);
      intArray0[1] = 1526;
      intArray0[2] = (-1828);
      intArray0[3] = 1526;
      intArray0[4] = 1526;
      intArray0[5] = 1526;
      intArray0[6] = (-1828);
      intArray0[7] = (-1828);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "org.pdfsam.guiclient.utils.ImageUtility", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"org.pdfsam.guiclient.utils.ImageUtility\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(367);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.getItemCount();
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, true, true);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      jInternalFrame0.getComponents();
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jInternalFrame0.addComponentListener((ComponentListener) null);
      jInternalFrame0.getNormalBounds();
      Integer integer0 = new Integer(367);
      visualListModel0.addListDataListener(jComboBox0);
      jInternalFrame0.getPropertyChangeListeners();
      visualListModel0.clearData();
      visualListModel0.removeElements(0, (-1), true);
      jInternalFrame0.getFrameIcon();
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.listIterator();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.addListDataListener((ListDataListener) null);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Vector<Object> vector1 = new Vector<Object>(0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      // Undeclared exception!
      try { 
        MockLocalDate.now((ZoneId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // zone
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-3062);
      visualListModel0.moveDownIndex((-3062));
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance((-3062));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) predicate0;
      objectArray0[1] = (Object) predicate0;
      objectArray0[2] = (Object) predicate0;
      objectArray0[3] = (Object) stack0;
      SpinnerListModel spinnerListModel0 = new SpinnerListModel(objectArray0);
      JSpinner jSpinner0 = new JSpinner(spinnerListModel0);
      JSpinner.ListEditor jSpinner_ListEditor0 = new JSpinner.ListEditor(jSpinner0);
      Predicate.isEqual((Object) jSpinner_ListEditor0);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      predicate1.negate();
      predicate3.and(predicate0);
      predicate3.negate();
      int[] intArray0 = new int[1];
      intArray0[0] = 1158;
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) predicate3;
      objectArray1[1] = (Object) predicate2;
      Object object0 = new Object();
      objectArray1[2] = object0;
      objectArray1[3] = (Object) predicate1;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray1);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<String> stack0 = new Stack<String>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<Integer> stack2 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack2);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel1.setData((Vector<VisualPageListItem>) stack1);
      int int0 = (-31);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-31), (-31), (byte[]) null, (byte[]) null, (byte[]) null, (byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[6];
      intArray0[0] = 110;
      intArray0[1] = (-1040);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(3463, (Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.getElements();
      visualListModel0.getElementAt(1815);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.prependAllElements(treeSet0);
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "`r,GB&?ADkw%CUG";
      stringArray0[2] = "`r,GB&?ADkw%CUG";
      stringArray0[3] = "`r,GB&?ADkw%CUG";
      stringArray0[4] = "`r,GB&?ADkw%CUG";
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      // Undeclared exception!
      try { 
        KeyStroke.getKeyStroke((Character) null, 490);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keyChar cannot be null
         //
         verifyException("java.awt.AWTKeyStroke", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayDeque0);
      assertTrue(arrayDeque0.isEmpty());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(368);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      JInternalFrame jInternalFrame0 = new JInternalFrame("", true, true, true);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      jInternalFrame0.addComponentListener((ComponentListener) null);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Rectangle rectangle1 = jComboBox1.getBounds(rectangle0);
      Integer integer0 = new Integer(0);
      visualListModel0.addListDataListener(jComboBox1);
      jInternalFrame0.getPropertyChangeListeners();
      visualListModel0.subList(3, 3, true);
      visualListModel0.clearData();
      rectangle1.setRect((double) 3, 1095.434565, (double) 3, (-1578.01156));
      visualListModel0.getElementAt(3463);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(368, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 368
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Boolean boolean0 = new Boolean(false);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1639));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-196));
      int int0 = (-95);
      visualListModel0.elementsChanged();
      visualListModel0.moveUpIndex((-95));
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-1189), (-1189), true);
      assertNull(collection0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6959678633352593
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) (-496);
      floatArray0[1] = (float) (-496);
      visualListModel0.removeElements((-3033), (-3033), false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Hashtable<RenderingHints.Key, Month> hashtable0 = new Hashtable<RenderingHints.Key, Month>(1202);
      visualListModel0.subList((-3033), (-3033));
      int[] intArray1 = new int[0];
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.getElements();
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray2 = new int[4];
      intArray2[0] = 1202;
      intArray2[1] = 1202;
      intArray2[2] = 1202;
      intArray2[3] = (-496);
      visualListModel0.undeleteElements(intArray2);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.getElements();
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray2);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Iterator<VisualPageListItem> iterator0 = treeSet0.iterator();
      Object object0 = treeSet0.clone();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "v5<:y 0";
      objectArray0[2] = (Object) treeSet0;
      objectArray0[3] = (Object) iterator0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = object0;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jComboBox0.addMouseListener((MouseListener) null);
      visualListModel0.addListDataListener(jComboBox0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>(treeSet0);
      visualListModel0.addAllElements(4412, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      String string0 = "DEGREES_180";
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1000, "v5<:y 0", "DEGREES_180");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }
}
