/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:33:28 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera camera0 = new Camera((-861.0F), (-1.0F), (-879.5319F), (-879.5319F), 1202.0F, 1.5F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(3445.1812F, (-65.9F), 3445.1812F, (-1.0F), 3445.1812F, 3445.1812F, 1782L, camera_Lens0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(27);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoWidth((-432));
      homeEnvironment0.setVideoQuality((-644));
      homeEnvironment0.setVideoWidth((-432));
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.clone();
      assertEquals((-432), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7353390710828336
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera camera0 = new Camera((-861.0F), (-1.0F), (-879.5319F), (-879.5319F), (-879.5319F), 1.5F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(3445.1812F, (-65.9F), 3445.1812F, (-1.0F), 3445.1812F, 3445.1812F, 1782L, camera_Lens0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoFrameRate(27);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera1, "Linux", camera_Lens0, object0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy0);
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth(459);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(27);
      assertEquals(27, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.887511378356885
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2902);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("S~rjE", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(7);
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setGroundColor((-1321));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.setAllLevelsVisible(true);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(">/dD*BF1_]m", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy(">/dD*BF1_]m", propertyChangeListenerProxy1);
      homeEnvironment0.isAllLevelsVisible();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setVideoWidth((-1424));
      homeEnvironment0.setPhotoHeight(462);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.valueOf("GROUND_TEXTURE");
      assertEquals(HomeEnvironment.Property.GROUND_TEXTURE, homeEnvironment_Property1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.3022442933895046
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2902);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(7);
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setGroundColor((-1321));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setVideoWidth((-480));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.getPhotoHeight();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2883091753106415
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2221));
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FILL", propertyChangeListener0);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.setVideoFrameRate(3314);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "$VALUES", "FILL", homeEnvironment1);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundColor();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.setVideoFrameRate(462);
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment1.getPhotoQuality();
      assertEquals(3314, homeEnvironment1.getVideoFrameRate());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6862668983950018
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment.Property.values();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PHOTO_QUALITY");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(14);
      int int0 = 16;
      homeEnvironment0.setVideoQuality(16);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PHOTO_QUALITY");
      homeEnvironment0.setGroundColor(16);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(16);
      homeEnvironment0.getWallsAlpha();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8232201896520577
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment.Property.values();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PHOTO_QUALITY");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(14);
      int int0 = 16;
      homeEnvironment0.setVideoQuality(16);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PHOTO_QUALITY");
      homeEnvironment0.setGroundColor(2);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getGroundColor();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getWallsAlpha();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(684);
      homeEnvironment0.setCeillingLightColor(684);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|D3>6kL", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("|D3>6kL", "LXTV~X:,|qfN4", "LXTV~X:,|qfN4", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, "|D3>6kL", propertyChangeListenerProxy0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera(212.0F, 0.0F, 575.50946F, 400, (-2733.0F), 400, 400, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(homeEnvironment_Property0, "|D3>6kL", propertyChangeListenerProxy0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoFrameRate((-832));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setAllLevelsVisible(false);
      System.setCurrentTimeMillis(240);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(684, homeEnvironment0.getCeillingLightColor());
      assertEquals((-832), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoWidth((-1525));
      Camera camera0 = new Camera((-1050.1821F), (-1050.1821F), 0.0F, 0.0F, (-1050.1821F), 0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      camera0.removePropertyChangeListener(propertyChangeListenerProxy0);
      camera0.setX(0.0F);
      Camera.convertTimeToTimeZone((-1711L), "$V>>*G6*");
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      homeEnvironment0.setCeillingLightColor(606);
      homeEnvironment0.setPhotoWidth(606);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setGroundColor(606);
      homeEnvironment0.setPhotoWidth(19);
      homeEnvironment0.setVideoFrameRate(19);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getPhotoAspectRatio();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(606, homeEnvironment0.getCeillingLightColor());
      assertEquals(19, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(459, 546.0F, 1250.0F, 2571.0571F, 459, (-4.01F));
      predicate3.test(camera0);
      predicate0.or(predicate2);
      Camera camera1 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-46.50789F), 2239.0F);
      Camera camera2 = camera1.clone();
      Predicate.isEqual((Object) camera2);
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      Predicate<Camera> predicate5 = predicate0.negate();
      predicate4.or(predicate5);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate5);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, (-1674), (HomeTexture) null, 459, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-1846));
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.getVideoHeight();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals((-1846), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), (-2833.026F));
      Camera camera1 = camera0.clone();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate5 = predicate3.or(predicate0);
      Predicate<Camera> predicate6 = predicate5.negate();
      Predicate<Camera> predicate7 = predicate0.or(predicate4);
      predicate5.or(predicate6);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      predicate6.or(predicate7);
      predicate7.or(predicate4);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.removeIf(predicate5);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, 6, (HomeTexture) null, (-1674), 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor((-669));
      homeEnvironment1.setLightColor((-1846));
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-669), homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(459, (HomeTexture) null, 459, (HomeTexture) null, (-563), (-563));
      homeEnvironment0.setPhotoQuality((-563));
      homeEnvironment0.setWallsAlpha(765.82F);
      CatalogTexture catalogTexture0 = new CatalogTexture("r{@(++7maJ,v\"c4$ovo", (Content) null, (-735.0F), (-735.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setVideoFrameRate(459);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("r{@(++7maJ,v\"c4$ovo", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-563), (HomeTexture) null, 306, (HomeTexture) null, 8, 8);
      homeEnvironment1.setVideoWidth(306);
      homeEnvironment0.setPhotoHeight(306);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoFrameRate();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals(230, homeEnvironment1.getVideoHeight());
      assertEquals(8.0F, float0, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1021170635140374
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera camera0 = new Camera((-861.0F), (-1.0F), (-879.5319F), (-879.5319F), 1202.0F, 1.5F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(3445.1812F, (-65.9F), 3445.1812F, (-1.0F), 3445.1812F, 3445.1812F, 1782L, camera_Lens0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setGroundColor((-1321));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode2 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode2);
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(459, (HomeTexture) null, 459, (HomeTexture) null, (-563), (-563));
      homeEnvironment0.setPhotoQuality((-563));
      homeEnvironment0.setWallsAlpha(765.82F);
      Predicate<Camera> predicate2 = predicate0.or(predicate1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate2);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(7, (HomeTexture) null, 7, (HomeTexture) null, 7, 567.7F);
      homeEnvironment1.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(2010);
      homeEnvironment2.setPhotoWidth((-563));
      homeEnvironment1.setVideoQuality(46);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment((-2450), (HomeTexture) null, (-2450), 2146733828, 1.5F);
      homeEnvironment3.setVideoWidth((-563));
      assertEquals((-422), homeEnvironment3.getVideoHeight());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      Predicate<Camera> predicate5 = predicate4.negate();
      predicate4.or(predicate5);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate5);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(459, (HomeTexture) null, 300, (HomeTexture) null, (-1674), 300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(1162);
      homeEnvironment1.setPhotoWidth(3359);
      homeEnvironment1.setVideoFrameRate((-4248));
      homeEnvironment1.setPhotoHeight(459);
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.clone();
      assertEquals(3359, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), 2239.0F);
      Camera camera1 = camera0.clone();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate5 = predicate3.or(predicate0);
      Predicate<Camera> predicate6 = predicate5.negate();
      predicate0.or(predicate4);
      predicate5.or(predicate6);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, (-1674), (HomeTexture) null, 459, 300);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-1846));
      assertEquals((-1846), homeEnvironment1.getCeillingLightColor());
      
      homeEnvironment0.setLightColor(459);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera camera0 = new Camera((-861.0F), (-1.0F), (-879.5319F), (-879.5319F), 1202.0F, 1.5F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(3445.1812F, (-65.9F), 3445.1812F, (-1.0F), 3445.1812F, 3445.1812F, 1782L, camera_Lens0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(27);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth(459);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(459, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0059695736425467
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-1050.1821F), (-1050.1821F), 0.0F, 0.0F, 850.32025F, 0.0F);
      camera0.setX(0.0F);
      Camera.convertTimeToTimeZone((-1711L), "$V>>*G6*");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      camera0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera(1.0F, 0.0F, 0.0F, 850.32025F, 850.32025F, 1240.61F, 0L, camera_Lens0);
      camera1.addPropertyChangeListener(propertyChangeListenerProxy0);
      camera1.removePropertyChangeListener(propertyChangeListenerProxy0);
      camera1.setCamera(camera0);
      camera0.setCamera(camera1);
      linkedList0.add(camera0);
      linkedList0.parallelStream();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoHeight((-1066));
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setCeillingLightColor((-1066));
      homeEnvironment0.getVideoHeight();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      assertEquals((-1066), homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(12);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setVideoWidth((-243));
      homeEnvironment0.setPhotoHeight((-243));
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-243), homeEnvironment0.getPhotoHeight());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), 2239.0F);
      Camera camera1 = camera0.clone();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate5 = predicate3.or(predicate0);
      Predicate<Camera> predicate6 = predicate5.negate();
      predicate0.or(predicate4);
      predicate5.or(predicate6);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-4255), (HomeTexture) null, 9, (HomeTexture) null, 300, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(9, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-4255), homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.027215791000468
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(684);
      homeEnvironment0.setCeillingLightColor(684);
      homeEnvironment0.getPhotoWidth();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|D3>6kL", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("|D3>6kL", "LXTV~X:,|qfN4", "LXTV~X:,|qfN4", object0);
      Camera.convertTimeToTimeZone(400, "|D3>6kL");
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      homeEnvironment0.setCeillingLightColor(400);
      homeEnvironment0.setPhotoWidth(400);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)28;
      byteArray0[4] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setGroundColor(1521);
      homeEnvironment0.setPhotoWidth(1521);
      homeEnvironment0.setVideoFrameRate(14);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(1521, homeEnvironment0.getGroundColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.186383112867369
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2902);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(7);
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setGroundColor((-1321));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setVideoWidth((-480));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoHeight(2902);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setAllLevelsVisible(true);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      Predicate<Camera> predicate5 = predicate4.negate();
      predicate4.or(predicate5);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate5);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(606, (HomeTexture) null, 459, 2137, (-2819.9358F));
      homeEnvironment0.setCeillingLightColor(17);
      homeEnvironment0.setPhotoWidth(606);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setGroundColor(606);
      homeEnvironment0.setPhotoWidth((-3978));
      homeEnvironment0.setVideoFrameRate(300);
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-3978), homeEnvironment0.getPhotoWidth());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), 2239.0F);
      Camera camera1 = camera0.clone();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate5 = predicate3.or(predicate0);
      Predicate<Camera> predicate6 = predicate5.negate();
      predicate0.or(predicate4);
      predicate5.or(predicate6);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, (-1674), (HomeTexture) null, 459, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setGroundColor(459);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.getCeillingLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("SC]'['OK_AEBW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.SC]'['OK_AEBW
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), 2239.0F);
      Camera camera1 = camera0.clone();
      Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      predicate4.or(predicate0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, (-1674), (HomeTexture) null, 459, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-1846));
      homeEnvironment0.setLightColor((-759));
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals((-759), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6297127203366895
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-1050.1821F), (-1050.1821F), 0.0F, 0.0F, 850.32025F, 0.0F);
      homeEnvironment0.getVideoCameraPath();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Object object0 = new Object();
      homeEnvironment0.setCeillingLightColor((-123));
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) homeEnvironment0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) camera0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Camera> predicate3 = predicate0.or(predicate2);
      predicate3.negate();
      predicate0.negate();
      predicate3.negate();
      linkedList1.removeIf(predicate0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setCeillingLightColor((-123));
      homeEnvironment2.setLightColor((-3084));
      homeEnvironment0.setVideoCameraPath(linkedList1);
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      assertEquals((-3084), homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture(".tmp", (Content) null, (-2608), 359.5616F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)94;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2608), homeTexture0, (-2608), (-2608), (-2833.026F));
      TexturesCategory texturesCategory0 = new TexturesCategory((String) null);
      catalogTexture0.setCategory(texturesCategory0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setWallsAlpha((byte)13);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, "~j4];Q}l()G6'-tk!<", (Content) null, 1753.9662F, (byte) (-88), ".tmp");
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setLightColor((-13));
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.isAllLevelsVisible();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(13.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(2421L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setPhotoWidth(2863);
      homeEnvironment0.getVideoFrameRate();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("y7 Br^{fFMG9l|1", "&CJ", temporaryURLContent0, (-703.0F), 2863, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getSkyColor();
      TexturesCategory texturesCategory0 = new TexturesCategory("y7 Br^{fFMG9l|1");
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.DrawingMode.values();
      Random.setNextRandom(3713);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      Predicate<Camera> predicate5 = predicate4.negate();
      predicate4.or(predicate5);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate5);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, (-1674), (HomeTexture) null, 459, 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(2146733828);
      homeEnvironment0.setPhotoWidth((-370));
      homeEnvironment1.setVideoQuality((-370));
      homeEnvironment1.setVideoWidth(18);
      assertEquals(14, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9627336194695197
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2471);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(400);
      homeEnvironment0.setPhotoWidth(2471);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(33);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(33);
      homeEnvironment1.setPhotoWidth(4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Object object0 = new Object();
      homeEnvironment1.setCeillingLightColor((-2687));
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) homeEnvironment0);
      Predicate<Camera> predicate1 = predicate0.negate();
      predicate1.negate();
      predicate0.negate();
      linkedList0.removeIf(predicate0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setCeillingLightColor((-2741));
      homeEnvironment2.setLightColor((-2502));
      homeEnvironment2.setPhotoWidth(844);
      assertEquals(844, homeEnvironment2.getPhotoWidth());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.negate();
      Predicate<Camera> predicate3 = predicate2.or(predicate0);
      Predicate<Camera> predicate4 = predicate3.negate();
      predicate3.or(predicate4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, (-1674), (HomeTexture) null, 459, 0.0F);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor(5);
      homeEnvironment0.setLightColor(343);
      homeEnvironment1.getVideoCameraPath();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList1);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(343, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8344319225942862
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setWallsAlpha((-2177.0F));
      CatalogTexture catalogTexture0 = new CatalogTexture("r{@(++7maJ,v\"c4$ovo", (Content) null, (-926.638F), 1047.2F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setGroundTexture(homeTexture1);
      homeEnvironment1.setVideoFrameRate((-1116));
      homeEnvironment0.setLightColor(20);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.300534891680103
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(1513);
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setPhotoWidth(1513);
      homeEnvironment1.setSkyColor(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSkyColor(1513);
      HomeEnvironment.Property.values();
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.setLightColor(722);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "com.eteks.sweethome3d.model.Camera", temporaryURLContent0, 695.382F, 1.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      assertEquals(1513, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PSG4-e;zBCH,`", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(1365);
      homeEnvironment0.setGroundColor(12);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setSkyColor(1756);
      assertEquals(1756, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("B.M8j^OT5n-p", uRLContent0, 0.0F, 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(219, homeTexture0, 13, 13, 1.0F);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(13, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(219, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Content isn't a JAR entry", "Content isn't a JAR entry", uRLContent0, (-620.5272F), 2358.4297F, "~CzG2Sr");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(300, homeTexture0, 9, homeTexture1, 300, 546.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(546.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(9, homeEnvironment2.getSkyColor());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertNotSame(homeEnvironment2, homeEnvironment1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      HomeTexture homeTexture0 = null;
      float float0 = (-1094.8383F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 459, (-1094.8383F));
      homeEnvironment0.clone();
      String string0 = "04G}ww!Mh";
      // Undeclared exception!
      try { 
        MockURL.URL("04G}ww!Mh", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Parts", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.289079294679143
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-489));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoWidth((-1410));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment0.setGroundColor(14);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setPhotoWidth(0);
      homeEnvironment2.setVideoFrameRate((-2450));
      homeEnvironment1.getVideoHeight();
      homeEnvironment0.getVideoHeight();
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.getGroundColor();
      homeEnvironment2.clone();
      assertEquals(0, homeEnvironment0.getVideoWidth());
      assertEquals((-1410), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.503587090335285
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Object object0 = new Object();
      homeEnvironment1.setCeillingLightColor(0);
      Predicate<Camera> predicate0 = Predicate.isEqual(object0);
      Predicate<Camera> predicate1 = predicate0.negate();
      Predicate<Camera> predicate2 = predicate1.or(predicate0);
      linkedList0.removeIf(predicate2);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setCeillingLightColor(0);
      homeEnvironment2.setLightColor(722);
      homeEnvironment2.setVideoCameraPath(linkedList0);
      assertEquals(722, homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.222053336819352
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(684);
      homeEnvironment0.setCeillingLightColor(684);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|D3>6kL", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("|D3>6kL", "LXTV~X:,|qfN4", "LXTV~X:,|qfN4", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, "|D3>6kL", propertyChangeListenerProxy0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera(212.0F, 0.0F, 575.50946F, 400, (-2733.0F), 400, 400, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(homeEnvironment_Property0, "|D3>6kL", propertyChangeListenerProxy0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(1753.9662F);
      homeEnvironment0.setPhotoWidth(2111);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setCeillingLightColor(684);
      homeEnvironment0.getVideoHeight();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoQuality(13684944);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("B.M8j^OT5n-p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.B.M8j^OT5n-p
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(2471);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      HomeEnvironment.DrawingMode.values();
      AspectRatio aspectRatio0 = homeEnvironment0.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setSkyColor((-3318));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("_qQRT)F3qg8]>YN-:P", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoWidth((-757));
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("]BNE}Wh,", propertyChangeListener1);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoFrameRate();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), 2239.0F);
      Camera camera1 = camera0.clone();
      Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      Predicate<Camera> predicate5 = predicate2.or(predicate4);
      predicate5.negate();
      predicate0.or(predicate2);
      predicate5.or(predicate4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, (HomeTexture) null, (-1395), (HomeTexture) null, (-1395), (-1674));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-1395));
      homeEnvironment1.setLightColor(1962);
      assertEquals(1962, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, (HomeTexture) null, 2, (-1539), 0.0F);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(400, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1539), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(5, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(2, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("B.#M8jj^OT5kn-Z", uRLContent0, 0.0F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 219, homeTexture0, 219, 0.0F);
      homeEnvironment0.setSubpartSizeUnderLight(1047.2F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(1047.2F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte) (-49);
      byteArray0[0] = (byte) (-11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-490));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2902);
      homeEnvironment0.setPhotoQuality(2902);
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setVideoFrameRate(400);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object3, (String) null, (Object) null, "Linux");
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setVideoWidth(19);
      homeEnvironment0.setPhotoHeight(400);
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.238846104111004
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1513);
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth(1513);
      homeEnvironment0.setSkyColor(1513);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSkyColor(1513);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray1 = HomeEnvironment.Property.values();
      assertFalse(homeEnvironment_PropertyArray1.equals((Object)homeEnvironment_PropertyArray0));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-489));
      homeEnvironment0.setVideoWidth(0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-1341));
      homeEnvironment0.setVideoWidth((byte) (-11));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality((byte) (-97));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(6, (HomeTexture) null, (-489), (-2276), 191.0F);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte) (-49);
      byteArray0[5] = (byte) (-11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-490));
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), 2239.0F);
      Camera camera1 = camera0.clone();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate5 = predicate3.or(predicate0);
      Predicate<Camera> predicate6 = predicate5.negate();
      predicate0.or(predicate4);
      predicate5.or(predicate6);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, (HomeTexture) null, 605, (HomeTexture) null, 12, 1250.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth((-630));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setVideoFrameRate(605);
      assertEquals(605, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.301727497523871
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(2902);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(7);
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setGroundColor((-1315));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setVideoWidth((-480));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoFrameRate((-480));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, (HomeTexture) null, 13427964, 13427964, 13427964);
      homeEnvironment0.getDrawingMode();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13427964, homeEnvironment0.getLightColor());
      assertEquals(13427964, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1.3427964E7F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.236515101780001
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(3445.1812F, (-65.9F), 3445.1812F, (-1.0F), 3445.1812F, 3445.1812F, 1782L, camera_Lens0);
      linkedList0.add(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoQuality(1730);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setGroundColor(4);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(4);
      homeEnvironment0.setPhotoQuality(1730);
      homeEnvironment0.getPhotoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight((-4.01F));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIEW_3D_RATIO", "q?\"}VYW/Io{%L-MA4", resourceURLContent0, 0.0F, 219, "Fy0F", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13, homeTexture0, 19, 219, 923.0F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      HomeTexture homeTexture2 = homeEnvironment0.getSkyTexture();
      assertEquals(19, homeEnvironment0.getSkyColor());
      assertEquals(923.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(219, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNull(homeTexture2);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-1050.1821F), (-1050.1821F), 0.0F, 0.0F, 850.32025F, 0.0F);
      camera0.setX(0.0F);
      Camera.convertTimeToTimeZone((-1711L), "$V>>*G6*");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      camera0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera(1.0F, 0.0F, 0.0F, 850.32025F, 850.32025F, 1240.61F, 0L, camera_Lens0);
      camera1.setCamera(camera0);
      homeEnvironment0.setGroundColor((-3084));
      homeEnvironment0.setPhotoWidth((-1120));
      homeEnvironment0.setVideoFrameRate(1081);
      homeEnvironment0.getVideoHeight();
      TexturesCategory texturesCategory0 = new TexturesCategory("rq:>dAQ>4Yg");
      System.setCurrentTimeMillis(1081);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-1050.1821F), (-1050.1821F), 0.0F, 0.0F, 850.32025F, 0.0F);
      camera0.setX(0.0F);
      Camera.convertTimeToTimeZone((-1711L), "$V>>*G6*");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$V>>*G6*");
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      camera0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera(1.0F, 0.0F, 0.0F, 850.32025F, 850.32025F, 1240.61F, 0L, camera_Lens0);
      camera1.addPropertyChangeListener(propertyChangeListenerProxy0);
      camera1.removePropertyChangeListener(propertyChangeListenerProxy0);
      camera1.setCamera(camera0);
      camera0.setName("");
      camera0.setCamera(camera1);
      linkedList0.add(camera0);
      linkedList0.parallelStream();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("PITCH", (String) null, (Content) null, 3407, 1.7777778F, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3407, homeTexture0, 8, homeTexture0, 229, 229);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(3407, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(8, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(229, homeEnvironment0.getLightColor());
      assertEquals(229.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.1945366875886965
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(684);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|D3>6kL", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("|D3>6kL", "LXTV~X:,|qfN4", "LXTV~X:,|qfN4", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, "|D3>6kL", propertyChangeListenerProxy0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera(212.0F, 0.0F, 575.50946F, 400, (-2733.0F), 400, 400, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(homeEnvironment_Property0, "|D3>6kL", propertyChangeListenerProxy0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(1753.9662F);
      homeEnvironment0.setPhotoWidth(2111);
      homeEnvironment0.setLightColor((-2221));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setWallsAlpha((-2819.9358F));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-2819.9358F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-2221), int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setAllLevelsVisible(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoAspectRatio((AspectRatio) null);
      homeEnvironment0.getDrawingMode();
      assertEquals(0, homeEnvironment0.getVideoHeight());
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoQuality(10);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("a1|m3;U+Y_l3i}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.a1|m3;U+Y_l3i}
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(684);
      homeEnvironment0.setCeillingLightColor(684);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|D3>6kL", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("|D3>6kL", "LXTV~X:,|qfN4", "LXTV~X:,|qfN4", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, "|D3>6kL", propertyChangeListenerProxy0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera(212.0F, 0.0F, 575.50946F, 400, (-2733.0F), 400, 400, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(homeEnvironment_Property0, "|D3>6kL", propertyChangeListenerProxy0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight(1753.9662F);
      homeEnvironment0.setPhotoWidth(2111);
      homeEnvironment0.setLightColor((-2221));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setWallsAlpha((-2819.9358F));
      homeEnvironment0.setLightColor(2239);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setSubpartSizeUnderLight(2239);
      assertEquals((-2819.9358F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Camera camera0 = new Camera(1250.0F, 1.0F, 2.0F, 1250.0F, (-4.01F), 2239.0F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Camera camera1 = camera0.clone();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) camera1);
      Predicate<Camera> predicate5 = predicate3.or(predicate0);
      Predicate<Camera> predicate6 = predicate5.negate();
      predicate0.or(predicate4);
      predicate5.or(predicate6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2525);
      homeEnvironment0.setPhotoWidth((-1321));
      homeEnvironment0.setVideoQuality(18);
      homeEnvironment0.setVideoWidth(2525);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setVideoFrameRate(19);
      assertEquals(1894, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "B.M8j^OT5n-p", (Content) null, 13, (-563.0F), "B.M8j^OT5n-p");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2417, homeTexture0, 19, homeTexture0, 33, (-1493.8818F));
      homeEnvironment0.setVideoQuality((-1121));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-1121), homeEnvironment0.getVideoQuality());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(2902);
      homeEnvironment0.setPhotoQuality(400);
      homeEnvironment0.setVideoFrameRate(400);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Linux", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object3, (String) null, (Object) null, "Linux");
      propertyChangeEvent0.toString();
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setPhotoHeight(400);
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(400, homeEnvironment0.getPhotoHeight());
      assertEquals(400, int0);
  }
}
