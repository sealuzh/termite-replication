/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:53:26 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindApplet;
import freemind.modes.filemode.FileMode;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.FocusEvent;
import java.util.Properties;
import javax.help.JHelpContentViewer;
import javax.swing.JColorChooser;
import javax.swing.table.JTableHeader;
import javax.swing.text.StyleContext;
import org.apache.batik.svggen.DefaultExtensionHandler;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.xalan.templates.OutputProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JHelpContentViewer jHelpContentViewer0 = new JHelpContentViewer();
      String string0 = "org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener";
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Object[] objectArray0 = new Object[0];
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      Color color0 = styleContext0.getBackground(styleContext_SmallAttributeSet0);
      try { 
        Controller.showCommonJColorChooserDialog(jHelpContentViewer0, "org.apache.batik.bridge.SVGTextElementBridge$DOMChildNodeRemovedEventListener", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      JTableHeader jTableHeader0 = new JTableHeader();
      FocusEvent focusEvent0 = new FocusEvent(jTableHeader0, 0, false);
      focusEvent0.setSource(controller_DisposeOnClose0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      controller_DisposeOnClose0.componentShown(focusEvent0);
      controller_DisposeOnClose0.componentShown(focusEvent0);
      focusEvent0.paramString();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(focusEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controller.getPropertyChangeListeners();
      FileMode fileMode0 = new FileMode();
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Font.decode("user_zoom");
      OutputProperties outputProperties0 = new OutputProperties();
      SVGGeneratorContext sVGGeneratorContext0 = SVGGeneratorContext.createDefault(outputProperties0);
      sVGGeneratorContext0.getImageHandler();
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      Properties properties0 = FreeMindApplet.defaultProps;
      OutputProperties outputProperties1 = new OutputProperties((Properties) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      charArray0[1] = '_';
      charArray0[2] = 'J';
      charArray0[3] = '4';
      charArray0[4] = 'J';
      charArray0[5] = 'J';
      charArray0[6] = 'J';
      charArray0[7] = 'J';
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertTrue(jColorChooser0.getFocusTraversalKeysEnabled());
  }
}
