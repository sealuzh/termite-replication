/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:32:19 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "You have unsaved changes.  Save them now?";
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      String string1 = "=";
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      archiveScanner0.setBasedir(".WAR");
      String string2 = "*";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[0] = "*";
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector1;
      vector1.retainAll(archiveScanner0.dirsExcluded);
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPath("*", "*");
      archiveScanner0.isArchive(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "*", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".WAR0jV.jar05MY5.jar.jar");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "F");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[1];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "*";
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector1 = new Vector<Integer>();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) bufferedInputStream0);
      Predicate<Object> predicate1 = predicate0.negate();
      bufferedInputStream0.markSupported();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate2.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      vector1.removeIf(predicate3);
      archiveScanner0.dirsExcluded = vector1;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("createNode.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changeN.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.addAll((Collection<? extends Integer>) vector1);
      vector0.retainAll(archiveScanner0.dirsExcluded);
      archiveScanner0.includes = archiveScanner0.excludes;
      DirectoryScanner.matchPath("*", "*");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      improvedFile1.getCanonicalFile();
      Vector<Integer> vector2 = new Vector<Integer>();
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      vector2.spliterator();
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis(0L);
      String string0 = "*J0DoTnGSeBQNJ^'\\:";
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "*J0DoTnGSeBQNJ^':");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them nw?", "You have unsaved changes.  Save them nw?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.couldHoldIncluded("You have unsaved changes.  Save them nw?");
      archiveScanner0.processArchive(improvedFile0, "You have unsaved changes.  Save them nw?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "You have unsaved changes.  Save them nw?");
      System.setCurrentTimeMillis((-1395L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them nw?", "You have unsaved changes.  Save them nw?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.couldHoldIncluded("You have unsaved changes.  Save them nw?");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "You have unsaved changes.  Save them nw?", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.82398594673009
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "F");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("You have unsaved changes.  Save them now?/F");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[1];
      improvedFile1.mkdirs();
      ImprovedFile.buildName("F", 1, "l#HJqM#;", improvedFile1);
      stringArray0[0] = "*";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "F";
      stringArray1[1] = "F";
      stringArray1[2] = "*";
      stringArray1[3] = "*";
      archiveScanner0.excludes = stringArray1;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPath("0.# .jar", "0.# .jar");
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.filesExcluded = vector1;
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.processFile("*");
      DirectoryScanner.matchPath("n%n*; ^#G_", ".war");
      boolean boolean0 = archiveScanner0.haveSlowResults;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "PY~G~k~|J[s@=:m", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them nw?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      String[] stringArray0 = new String[8];
      vector0.clear();
      stringArray0[0] = "You have unsaved changes.  Save them nw?";
      stringArray0[1] = "You have unsaved changes.  Save them nw?";
      stringArray0[2] = "You have unsaved changes.  Save them nw?";
      stringArray0[3] = "You have unsaved changes.  Save them nw?";
      archiveScanner0.processFile("You have unsaved changes.  Save them nw?");
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".WAR0jV.jar05MY5.jar.jar");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "F");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[1];
      ImprovedFile.buildName("F", 1, "l#HJqM#;", improvedFile1);
      stringArray0[0] = "*";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "F";
      stringArray1[1] = "F";
      stringArray1[2] = "*";
      stringArray1[3] = "F";
      archiveScanner0.excludes = stringArray1;
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.add((Integer) 1);
      archiveScanner0.dirsExcluded = vector0;
      vector0.add((Integer) 2);
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("createNode.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      improvedFile0.getAbsolutePath();
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "<");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-14);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[1];
      File file0 = ImprovedFile.buildName("<", 1, "l#HJqM#;", improvedFile1);
      stringArray0[0] = "*";
      String[] stringArray1 = new String[4];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray1[0] = "<";
      stringArray1[1] = "<";
      stringArray1[2] = "*";
      stringArray1[3] = "*";
      archiveScanner0.excludes = stringArray1;
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector1;
      archiveScanner0.includes = stringArray1;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l#HJqM#;");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(file0, "d+XkM^$6ZBY@}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "You have unsaved changes.  Save them now?";
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      archiveScanner0.excludes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      vector0.retainAll(archiveScanner0.dirsExcluded);
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      Integer integer0 = new Integer(1);
      System.setCurrentTimeMillis(2);
      String string1 = ".eror.";
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".eror.", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/You have unsaved changes.  Save them now?
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      archiveScanner0.excludes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      vector0.retainAll(archiveScanner0.dirsExcluded);
      archiveScanner0.includes = stringArray0;
      Integer integer0 = new Integer(1);
      System.setCurrentTimeMillis(1L);
      archiveScanner0.processDirectory(improvedFile0, ".eror.", true);
      Integer integer1 = new Integer(0);
      vector0.add((Integer) 2);
      long long0 = 1000000L;
      System.setCurrentTimeMillis(1000000L);
      int int0 = (-762);
      Integer integer2 = new Integer((-1651));
      Integer integer3 = new Integer(33);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer4 = new Integer(3);
      vector1.add(integer4);
      // Undeclared exception!
      try { 
        DirectoryScanner.matchPath((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      vector0.retainAll(archiveScanner0.dirsExcluded);
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPath("*", "*");
      Vector<Integer> vector1 = new Vector<Integer>();
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "You have unsaved changes.  Save them now?";
      archiveScanner0.excludes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      boolean boolean0 = archiveScanner0.haveSlowResults;
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      Integer integer0 = new Integer(1);
      System.setCurrentTimeMillis(2);
      String string0 = ".eror.";
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".eror.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".WAR0jV.jar05MY5.jar.jar");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "F");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      Vector<Integer> vector0 = new Vector<Integer>();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) bufferedInputStream0);
      Predicate<Object> predicate1 = predicate0.negate();
      bufferedInputStream0.markSupported();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate0.negate();
      predicate2.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      vector0.removeIf(predicate3);
      System.setCurrentTimeMillis(1000000L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      String string0 = "=";
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      DirectoryScanner.matchPatternStart("=", "You have unsaved changes.  Save them now?");
      stringArray0[0] = "*";
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      vector0.retainAll(archiveScanner0.dirsExcluded);
      vector0.add((Integer) 1);
      archiveScanner0.includes = stringArray0;
      DirectoryScanner.matchPath("*", "*");
      Vector<Integer> vector1 = new Vector<Integer>();
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "&+z?L.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.892246898188396
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ImprovedFile.createTempImprovedFile("IO error scanningddirectory ", "{v}_V?", improvedFile0);
      DirectoryScanner.match("IO error scanningddirectory ", "e#*E@&geH8:H3>z");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("F.jar");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "F.jar");
      mockPrintStream0.println((-1923.5589));
      mockPrintStream0.println((-294273948));
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0);
      mockPrintStream1.print(2);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "You have unsaved changes.  Save them now?";
      stringArray0[1] = ":@^}'zE+#MS";
      archiveScanner0.setIncludes(stringArray0);
      mockPrintStream0.append((CharSequence) "e#*E@&geH8:H3>z");
      MockPrintStream mockPrintStream2 = new MockPrintStream(printStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(mockPrintStream1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "*D5:5iT-4^&", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".WAR");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      ImprovedFile improvedFile2 = ImprovedFile.createTempImprovedFile("0J2`Tnhr", "", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, ".WAR", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changeN.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      Vector<Integer> vector1 = new Vector<Integer>();
      vector0.addAll((Collection<? extends Integer>) vector1);
      vector0.retainAll(archiveScanner0.dirsExcluded);
      archiveScanner0.includes = archiveScanner0.excludes;
      DirectoryScanner.matchPath("*", "*");
      DirectoryScanner.matchPath(")[f&fhr8G| (]^R", "You have unsaved changeN.  Save them now?");
      Vector<Integer> vector2 = new Vector<Integer>();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, (InputStream) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sequenceInputStream0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) archiveScanner0);
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate<Object> predicate6 = predicate5.or(predicate4);
      vector1.removeIf(predicate6);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(".ear");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) ".ear");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("You have unsaved changes.  Save them now?695..jar");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      PrintStream printStream1 = printStream0.append((CharSequence) "");
      printStream0.write(2316);
      printStream1.println();
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(printStream1);
      try { 
        archiveScanner0.scanArchive(improvedFile0, ".ear");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/You have unsaved changes.  Save them now?
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockPrintStream mockPrintStream0 = new MockPrintStream("You have unsaved changes.  Save them now?");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "You have unsaved changes.  Save them now?");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) charBuffer0);
      mockPrintStream0.print(true);
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("You have unsaved changes.  Save them now?695..jar");
      CharBuffer charBuffer1 = CharBuffer.allocate(3505);
      PrintStream printStream1 = mockPrintStream0.append((CharSequence) charBuffer1);
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = '~';
      charArray0[2] = ']';
      charArray0[3] = ':';
      charArray0[4] = ':';
      charArray0[5] = '&';
      charArray0[6] = 'j';
      charArray0[8] = 'a';
      printStream1.print(charArray0);
      mockPrintStream1.println(true);
      mockPrintStream0.write((-1331));
      MockPrintStream mockPrintStream3 = new MockPrintStream(printStream0, true);
      mockPrintStream0.println();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(printStream1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "You have unsaved chang(s.  Save them now?01AwI1U.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream2 = new FilterOutputStream(filterOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0);
      FilterOutputStream filterOutputStream3 = new FilterOutputStream(filterOutputStream2);
      FilterOutputStream filterOutputStream4 = new FilterOutputStream(bufferedOutputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream2 = new FilterOutputStream(pipedOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream2);
      FilterOutputStream filterOutputStream3 = new FilterOutputStream(bufferedOutputStream0);
      FilterOutputStream filterOutputStream4 = new FilterOutputStream(filterOutputStream2);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(filterOutputStream2);
      bufferedOutputStream0.close();
      FilterOutputStream filterOutputStream5 = new FilterOutputStream((OutputStream) null);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(1141L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream2 = new FilterOutputStream(pipedOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0);
      FilterOutputStream filterOutputStream3 = new FilterOutputStream(filterOutputStream2);
      filterOutputStream2.close();
      FilterOutputStream filterOutputStream4 = new FilterOutputStream(filterOutputStream2);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(filterOutputStream0);
      bufferedOutputStream1.flush();
      bufferedOutputStream1.close();
      FilterOutputStream filterOutputStream5 = new FilterOutputStream(filterOutputStream4);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".EAR");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("6<u<D|_./6s", "ht%U{O=EvExKP|x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6<u<D|_./6s");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".XJAR");
      mockFile0.toPath();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.deleteOnExit();
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "6<u<D|_./6s");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      byte[] byteArray0 = new byte[0];
      pipedInputStream0.read(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream2 = new FilterOutputStream(filterOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0);
      filterOutputStream2.close();
      pipedOutputStream0.flush();
      FilterOutputStream filterOutputStream3 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream4 = new FilterOutputStream(filterOutputStream2);
      archiveScanner0.scandir(improvedFile0, "4Mn#B,$(-?", false);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream2 = new FilterOutputStream(pipedOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream2);
      FilterOutputStream filterOutputStream3 = new FilterOutputStream(pipedOutputStream0);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(filterOutputStream2);
      FilterOutputStream filterOutputStream4 = new FilterOutputStream(pipedOutputStream0);
      FilterOutputStream filterOutputStream5 = new FilterOutputStream(pipedOutputStream0);
      try { 
        archiveScanner0.scandir(improvedFile0, "gC80>.P:2#J,", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/You have unsaved changes.  Save them now?
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Youhave unsaved changes.  Save them ow?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(".Wear");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) ".Wear");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      char[] charArray0 = new char[2];
      mockPrintStream0.append('r');
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte) (-101);
      printStream0.write(byteArray0, 1904, (-2978));
      charArray0[0] = 'Q';
      charArray0[1] = '&';
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList0.pollFirst();
      Locale locale0 = new Locale("+f.5G}Q\"z(yHaic[", "Youhave unsaved changes.  Save them ow?");
      linkedList0.removeFirstOccurrence(locale0);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.lookup(linkedList0, list0);
      printStream0.println(charArray0);
      printStream0.append((CharSequence) "+f.5G}Q\"z(yHaic[");
      improvedFile0.createTempDir();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "+f.5G}Q\"z(yHaic[", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      archiveScanner0.excludes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      vector0.retainAll(archiveScanner0.dirsExcluded);
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      Integer integer0 = new Integer(1);
      System.setCurrentTimeMillis(2);
      String string0 = ".eror.";
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".eror.", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/You have unsaved changes.  Save them now?
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".WAR0jV.jar05MY5.jar.jar");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F.jar");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("6<u<D|_./6s", ":C13R");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":C13R");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      improvedFile0.toPath();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.deleteOnExit();
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, ".JA");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("UQ");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, ".war");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?", "You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("You have unsaved changes.  Save them now?");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "You have unsaved changes.  Save them now?");
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("You have unsaved changes.  Save them now?");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream2);
      mockPrintStream2.append((CharSequence) "You have unsaved changes.  Save them now?");
      mockPrintStream0.write((-1331));
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream2);
      bufferedOutputStream0.close();
      MockPrintStream mockPrintStream3 = new MockPrintStream(bufferedOutputStream0, false);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(filterOutputStream0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }
}
