/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:44:35 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=4.016850528154745
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(2260);
      int[][] intArray0 = new int[0][1];
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixSignificance0.LEFT_PARENTHESES = "x\"vZZA6Bh";
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.getColName(2946);
      resultMatrixSignificance0.addHeader("N2t/<'1}>=n\">", "N2t/<'1}>=n\">");
      Vector<Integer> vector0 = new Vector<Integer>();
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText1.setStdDevPrec(0);
      resultMatrixPlainText1.setEnumerateColNames(true);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.globalInfo();
      resultMatrixPlainText2.setRowName((-1340), "v");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=4.039281045577038
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.setRowNameWidth(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toString();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.countWidthTipText();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = "*";
      stringArray0[3] = "$\bullet$";
      ResultMatrixSignificance.main(stringArray0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.3838763693603506
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getRowName(1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(51, 11);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText0.getRevision();
      resultMatrixGnuPlot0.setMean(1, 1, (-4.57826535));
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.setSignificanceWidth((-2015));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.8644765368009417
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText0.getRevision();
      resultMatrixGnuPlot0.setMean(0, 1, 0);
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.setSignificanceWidth(3301);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.4823930393168556
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      int int0 = 6;
      String[] stringArray0 = new String[8];
      resultMatrixCSV0.LOSS_STRING = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "[";
      stringArray0[3] = "]";
      stringArray0[4] = "[";
      stringArray0[5] = "v";
      stringArray0[6] = "KSs-^b?# B\"-*`}i.";
      stringArray0[7] = "Hi'jNl$K;X<";
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.865282781241094
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.LOSS_STRING = "\"`P2VpQxcb";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.removeFilterName("(");
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setCountWidth(0);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixPlainText0.m_CountWidth = 45;
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.setStdDevPrec((-344));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.doubleToString(1.0, 213);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixSignificance0.setRowNameWidth(1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(1, (-1398));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.8768368003839004
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.setRowNameWidth(1);
      resultMatrixSignificance0.toArray();
      assertEquals(1, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getOptions();
      resultMatrixSignificance1.setColOrder((int[]) null);
      resultMatrixSignificance1.setRowOrder(intArray1);
      resultMatrixSignificance1.setMeanPrec(661);
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.807700588917763
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixHTML0.getRowName(2);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      resultMatrixCSV0.getVisibleColCount();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(959, 0);
      resultMatrixLatex0.clear();
      // Undeclared exception!
      resultMatrixLatex0.toString();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3768228550502393
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 0;
      resultMatrixHTML0.getRowName(2);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getSignificance(1, (-810));
      resultMatrixSignificance0.getCountWidth();
      resultMatrixSignificance0.isMean((-1));
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText1.setMeanPrec(97);
      resultMatrixPlainText1.globalInfo();
      assertEquals(97, resultMatrixPlainText1.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 339);
      resultMatrixGnuPlot0.getRevision();
      assertEquals(339, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.801870693662205
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.getCount(4591);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(2, resultMatrixPlainText0.getVisibleColCount());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      resultMatrixGnuPlot0.setMean(2, 2, 2359.0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(1, 24);
      resultMatrixPlainText1.setPrintColNames(false);
      assertEquals(24, resultMatrixPlainText1.getVisibleRowCount());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n\n# data for the plot\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:1]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.536176574965981
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.padString("-summary data not set-", 0);
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.9273453578272117
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText0.getRevision();
      resultMatrixGnuPlot0.setMean(0, 1057, 0);
      resultMatrixPlainText0.setPrintColNames(false);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=4.11061366608496
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.LOSS_STRING = "\"`P2VpQxcb";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.removeFilterName("(");
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.setStdDevPrec(5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.doubleToString(1.0, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setOptions((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(12, 1);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setCount(1854, (-2829.787));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText1);
      resultMatrixHTML1.getRevision();
      ResultMatrixCSV.main((String[]) null);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4170263404427326
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(790, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.m_StdDevWidth = 0;
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 790;
      intArray0[0] = intArray1;
      resultMatrixCSV0.setSummary(intArray0, intArray0);
      resultMatrixCSV0.setMeanWidth(2);
      resultMatrixCSV0.getDisplayName();
      resultMatrixPlainText0.significanceWidthTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(790, 790);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.65354943402603
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.padString("-summary data not set-", 0);
      boolean boolean0 = true;
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.LOSS_STRING = " ";
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixLatex0.m_StdDevWidth = 0;
      resultMatrixGnuPlot0.getDisplayRow(4397);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(0, (-1144));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=4.03166770444651
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixHTML0.getRowName(2);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      resultMatrixHTML0.setRowNameWidth(2372);
      stringArray0[1] = ")";
      stringArray0[2] = "}#";
      stringArray0[3] = "B?q.V6pAOSjI";
      stringArray0[4] = " ";
      stringArray0[5] = "(";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.setStdDevPrec(31);
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.globalInfo();
      assertEquals(31, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=4.036917691283308
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 25;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 2;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_Wins = intArray0;
      resultMatrixPlainText0.m_HeaderKeys = null;
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText0.getRevision();
      boolean boolean0 = false;
      resultMatrixPlainText0.setColHidden(2, false);
      resultMatrixPlainText0.meanWidthTipText();
      resultMatrixPlainText0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.809241089743977
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.WIN_STRING = ",/T5vK@";
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset       (1)\n-----------------\nrow0             \n", string0);
      
      resultMatrixSignificance0.getPrintColNames();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.toStringRanking();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.64227638710558
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[] doubleArray0 = new double[8];
      resultMatrixSignificance0.setEnumerateRowNames(true);
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 2;
      resultMatrixSignificance0.toArray();
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = (double) 1;
      resultMatrixSignificance0.WIN_STRING = "4PfX#i_|zli,8};";
      doubleArray0[7] = (double) 1;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5820262742416347
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowName(584, "-mean-prec <int>");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      boolean boolean0 = resultMatrixLatex0.isAverage(584);
      assertFalse(boolean0);
      
      resultMatrixLatex0.getDefaultStdDevPrec();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 0;
      resultMatrixLatex0.m_ColOrder = intArray0;
      String string0 = resultMatrixLatex0.padString("", 0);
      assertEquals("", string0);
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray1 = new int[6];
      intArray1[0] = 584;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray1[5] = 1;
      resultMatrixGnuPlot0.m_RowOrder = intArray1;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3691323386865277
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.colNameWidthTipText();
      assertEquals("The maximum width of the column names (0 = optimal).", string0);
      
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 26;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 26;
      intArray2[1] = 1;
      intArray2[2] = (-1511);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 26;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 0;
      intArray5[1] = 26;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 1;
      intArray6[1] = 2;
      intArray6[2] = 1;
      intArray6[3] = 1;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 0;
      intArray7[1] = 10;
      intArray7[2] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray8[2] = 1;
      intArray8[3] = 0;
      intArray8[4] = 2;
      intArray8[5] = 2;
      intArray0[7] = intArray8;
      resultMatrixSignificance0.setRanking(intArray0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.875122523597575
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.setRowNameWidth(1);
      resultMatrixSignificance0.addHeader("", "\"i(");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.getSignificance((-3491), 1785);
      resultMatrixSignificance0.getCountWidth();
      resultMatrixSignificance0.isMean(1785);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      stringArray0[3] = "";
      stringArray0[4] = "v";
      stringArray0[5] = "$\bullet$";
      resultMatrixLatex1.setOptions(stringArray0);
      resultMatrixLatex1.WIN_STRING = "v";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex1);
      resultMatrixPlainText0.setMeanPrec(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.globalInfo();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(10, 1037);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1942270532173964
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[4];
      resultMatrixGnuPlot0.WIN_STRING = "dCpB4V0\u0002C +";
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV0.toStringSummary();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.isMean((-1));
      resultMatrixCSV0.globalInfo();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2461, 2);
      // Undeclared exception!
      resultMatrixSignificance0.toStringHeader();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.9093905424942172
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.m_RowNameWidth = 1;
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixSignificance0.setRowNameWidth(0);
      resultMatrixSignificance0.toArray();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.getOptions();
      resultMatrixPlainText0.m_Wins = null;
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixSignificance0.setColOrder((int[]) null);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixSignificance0.setMeanPrec(1);
      int[][] intArray0 = new int[7][6];
      intArray0[0] = null;
      intArray0[1] = null;
      intArray0[2] = null;
      intArray0[3] = null;
      resultMatrixPlainText0.setMeanPrec(0);
      intArray0[2] = null;
      intArray0[5] = null;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      intArray0[6] = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.393345441510163
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(2260);
      resultMatrixSignificance0.LEFT_PARENTHESES = "x\"vZZA6Bh";
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.getColName(2946);
      resultMatrixSignificance0.addHeader("Imx-Xw[wv_Pf", "7S`(j!-");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.getSignificance(0, 671);
      resultMatrixSignificance0.getCountWidth();
      resultMatrixSignificance0.m_MeanPrec = 0;
      resultMatrixSignificance0.isMean(0);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setMeanPrec(0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(125, 2260);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4065633498694408
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = "Average";
      resultMatrixGnuPlot0.padString("Average", 0);
      resultMatrixGnuPlot0.m_CountWidth = 0;
      resultMatrixGnuPlot0.getRevision();
      int int0 = 850;
      resultMatrixGnuPlot0.getRowName(850);
      resultMatrixGnuPlot0.isSignificance((-538));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(97, (-902));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3263778765983583
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      resultMatrixCSV0.m_Wins = intArray0;
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.WIN_STRING = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixCSV0.getColNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.124365809783805
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.getEnumerateRowNames();
      assertEquals(1, resultMatrixLatex0.getColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (-2851.8978502965);
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.8488265716628147
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.LOSS_STRING = "\"`P2VpQxcb";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.removeFilterName("(");
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.setStdDevPrec(5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.doubleToString(1.0, 0);
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toStringMatrix();
      resultMatrixSignificance0.setRowNameWidth(25);
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(45, 45);
      // Undeclared exception!
      resultMatrixCSV0.toStringMatrix();
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1772678275566455
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.clearSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.toStringSummary();
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "-summary data not set-";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray2[2] = "-summary data not set-";
      stringArray2[3] = "(";
      stringArray2[4] = "-summary data not set-";
      stringArray2[5] = "*";
      stringArray2[6] = " - ";
      stringArray2[7] = "v";
      stringArray0[1] = stringArray2;
      int int0 = resultMatrixHTML1.getColSize(stringArray0, (-3608));
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.898411790100788
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowName(584, "-mean-prec <int>");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getStdDev(584, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDisplayRow(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(125, 0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance1.setEnumerateColNames(true);
      assertEquals(2, resultMatrixSignificance1.getMeanPrec());
      assertTrue(resultMatrixSignificance1.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance1.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance1.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance1.getVisibleRowCount());
      
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getRowCount();
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2296037791383503
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.getDefaultEnumerateRowNames();
      int int0 = (-1);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(1, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.9037400475978674
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.LEFT_PARENTHESES = "";
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 0;
      resultMatrixPlainText0.LEFT_PARENTHESES = "}vW";
      intArray0[6] = 1;
      intArray0[7] = 1;
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.isStdDev(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      resultMatrixGnuPlot0.setShowAverage(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[][] doubleArray0 = new double[4][0];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 1;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = (double) 1;
      doubleArray3[6] = (double) 1;
      doubleArray3[7] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = 0.0;
      doubleArray0[3] = doubleArray4;
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixGnuPlot0.clearRanking();
      assertTrue(resultMatrixGnuPlot0.getShowAverage());
      
      resultMatrixPlainText0.listOptions();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.8350318576163156
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 2);
      resultMatrixSignificance0.setRowNameWidth(1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setColHidden(10, false);
      resultMatrixPlainText0.meanWidthTipText();
      resultMatrixPlainText0.clearRanking();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance0);
      assertEquals(1, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixHTML0.toString();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      resultMatrixSignificance1.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.toStringSummary();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3946024619678
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowStdDev();
      resultMatrixHTML0.m_PrintColNames = true;
      resultMatrixHTML0.getRemoveFilterName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.toStringRanking();
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      
      resultMatrixHTML0.getSignificance(1383, 97);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1383;
      intArray0[2] = 0;
      intArray0[3] = 97;
      intArray0[4] = 2;
      resultMatrixHTML0.clearRanking();
      intArray0[5] = 1;
      intArray0[6] = 1383;
      intArray0[7] = 2;
      intArray0[8] = 97;
      resultMatrixHTML0.setRowOrder(intArray0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      boolean boolean0 = resultMatrixHTML0.isStdDev(26);
      assertFalse(boolean0);
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=4.249598385090942
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(true);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(34, 1);
      int int1 = (-5060);
      resultMatrixCSV0.isRowName((-5060));
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML0.setColName(2, "v");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML0.getDefaultCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3667533410548467
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.padString("-summary data not set-", 0);
      int int0 = resultMatrixLatex0.getDefaultStdDevPrec();
      assertEquals(2, int0);
      
      String string0 = resultMatrixLatex0.padString("$circ$", 688);
      assertEquals("$circstring0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.704790174486088
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.printRowNamesTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.m_StdDevPrec = 1;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3967249172482203
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "dCpB4V0\u0002C +";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getVisibleColCount();
      int int0 = 2039;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2039, 2);
      // Undeclared exception!
      resultMatrixLatex0.clear();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.5902455635134283
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 26);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 26;
      intArray0[2] = 2;
      double[][] doubleArray0 = new double[6][2];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 26;
      doubleArray2[1] = (double) 0;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 26;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) 26;
      doubleArray3[3] = (-1.0);
      doubleArray3[4] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (double) 1;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = (double) 1;
      doubleArray5[1] = (double) 26;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = 0.0;
      doubleArray5[4] = (double) 1;
      doubleArray5[5] = (double) 2;
      doubleArray5[6] = (double) 26;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = 0.0;
      doubleArray6[1] = (double) 26;
      doubleArray6[2] = 0.0;
      doubleArray6[3] = (double) 26;
      doubleArray6[4] = 431.345;
      doubleArray0[5] = doubleArray6;
      resultMatrixCSV0.m_Mean = doubleArray0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.getVisibleColCount();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.clear();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.870305423070256
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3, 3);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.toStringSummary();
      int[][] intArray0 = new int[8][9];
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 3;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 9;
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = 0;
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 1;
      intArray3[6] = 1;
      intArray3[7] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray5[2] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 0;
      intArray6[1] = 3;
      intArray6[2] = 37;
      intArray6[3] = 2;
      intArray6[4] = 9;
      intArray6[5] = 9;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 2;
      intArray7[1] = 1;
      intArray7[2] = 37;
      intArray7[3] = 37;
      intArray7[4] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[5];
      intArray8[0] = 2;
      intArray8[1] = 9;
      intArray8[2] = 2;
      intArray8[3] = 0;
      intArray8[4] = 37;
      intArray0[7] = intArray8;
      resultMatrixLatex0.m_Significance = intArray0;
      resultMatrixLatex0.padString("", 9);
      resultMatrixLatex0.getStdDev((-408), 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getDisplayRow((-188));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(9, 0);
      resultMatrixSignificance0.setEnumerateColNames(false);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getRowCount();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.getDefaultPrintRowNames();
      assertFalse(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.getDefaultShowStdDev();
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.441113612617862
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setRowNameWidth(50);
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(4232, 1);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(4232, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.9177821749690507
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(2260);
      resultMatrixSignificance0.LEFT_PARENTHESES = "x\"vZZA6Bh";
      resultMatrixSignificance0.clearHeader();
      String string0 = resultMatrixSignificance0.getColName(2946);
      assertNull(string0);
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      assertEquals(3, stringArray0.length);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      String[] stringArray1 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray1.length);
      
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2946;
      intArray0[4] = 0;
      intArray0[5] = 2946;
      intArray0[6] = 1;
      intArray0[7] = 2946;
      resultMatrixSignificance2.setColOrder(intArray0);
      assertEquals(25, resultMatrixSignificance2.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance2.getMeanWidth());
      assertEquals(5, resultMatrixSignificance2.getCountWidth());
      assertEquals(0, resultMatrixSignificance2.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance2.getStdDevPrec());
      assertTrue(resultMatrixSignificance2.getPrintRowNames());
      
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance0.setMeanPrec(26);
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      int[][] intArray2 = new int[1][8];
      intArray2[0] = intArray0;
      resultMatrixPlainText0.setSummary(intArray1, intArray2);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.900546258446084
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getRowName(1);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixCSV0.isRowName(1);
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML0.setColName(0, " ");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML0.getDefaultCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowStdDev();
      int[][] intArray0 = new int[0][5];
      resultMatrixHTML0.m_PrintColNames = true;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.705077452283718
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "*";
      stringArray0[3] = "]";
      stringArray0[4] = "[";
      stringArray0[5] = "v";
      stringArray0[6] = "KSs-^b?# B\"-*`}i.";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRowNameWidth(0);
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 45);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=4.061013220056102
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[2];
      intArray1[0] = 25;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 2;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_Wins = intArray0;
      resultMatrixPlainText0.m_HeaderKeys = null;
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.getDefaultMeanPrec();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.countWidthTipText();
      ResultMatrixSignificance.main((String[]) null);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2831315324725323
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[4];
      resultMatrixGnuPlot0.WIN_STRING = "dCpB4V0\u0002C +";
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      resultMatrixGnuPlot0.setMeanWidth(0);
      resultMatrixGnuPlot0.toStringRanking();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.headerKeys();
      resultMatrixGnuPlot0.setColNameWidth((-1905));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }
}
