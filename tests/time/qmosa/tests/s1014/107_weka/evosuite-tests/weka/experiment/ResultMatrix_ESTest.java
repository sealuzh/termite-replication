/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 01:54:19 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2640324261701474
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ColNameWidth = 85;
      resultMatrixSignificance0.m_MeanPrec = 401;
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[8];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 0;
      intArray1[5] = 70;
      intArray1[6] = 3;
      intArray1[7] = 2;
      intArray0[0] = intArray1;
      resultMatrixSignificance0.m_Significance = intArray0;
      resultMatrixSignificance0.m_MeanWidth = 501;
      resultMatrixSignificance0.rowNameWidthTipText();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.getSignificanceCount(3, 401);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.503781078489991
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getRowName(1);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixCSV0.isRowName(2784);
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML0.setColName(0, " ");
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixCSV0.stdDevWidthTipText();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4666280644291554
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowName(0, "*");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.isAverage(273);
      resultMatrixLatex0.getDefaultStdDevPrec();
      resultMatrixGnuPlot0.m_Mean = null;
      resultMatrixLatex0.getStdDev(266, (-355));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.294388703611083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      resultMatrixHTML0.clearRanking();
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixHTML0.getRowName(2);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")";
      stringArray0[1] = ")";
      stringArray0[2] = "}#";
      stringArray0[3] = "B?q.V6pAOSjI";
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      resultMatrixPlainText0.m_ColHidden = booleanArray0;
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText1.setShowAverage(false);
      resultMatrixPlainText1.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixPlainText0.getPrintColNames();
      resultMatrixPlainText0.getMeanPrec();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9349125073377684
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.setRowName(0, "]");
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setCount(104, 0.0);
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex((-243), (-885));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.195444226546769
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.m_RowNameWidth = 1;
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixPlainText0.padString(")", 26, false);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.toStringRanking();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9019660696039558
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowName(584, "-mean-prec <int>");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.isAverage(584);
      resultMatrixLatex0.getDefaultStdDevPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixGnuPlot0.getVisibleRowCount();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8322221703573427
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixHTML0.getRowName(2);
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText0.getRevision();
      resultMatrixGnuPlot0.setMean(0, 1, 2);
      resultMatrixPlainText1.setPrintColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4270637123334216
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.m_RowNameWidth = 1;
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 0;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixSignificance0.setRowNameWidth(0);
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.getOptions();
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixSignificance0.setColOrder((int[]) null);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixSignificance0.setMeanPrec(1);
      int[][] intArray1 = new int[7][6];
      resultMatrixPlainText0.setShowStdDev(true);
      intArray1[0] = null;
      intArray1[1] = null;
      intArray1[2] = null;
      intArray1[3] = null;
      intArray1[4] = null;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      resultMatrixSignificance0.getPrintRowNames();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.888305884521575
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.colNameWidthTipText();
      resultMatrixHTML0.meanWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 26;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 26;
      intArray2[1] = 1;
      intArray2[2] = (-1511);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 26;
      intArray0[3] = intArray4;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getStdDev(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getDefaultEnumerateColNames();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3704655629721922
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 27);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearSummary();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixCSV0.getRowName(1);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixCSV1.isRowName(1414);
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1264, 26);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.5383186520780736
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 27);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setColHidden(986, false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.meanWidthTipText();
      resultMatrixPlainText0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText1);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString(336.143853349, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSignificanceWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clear();
      int[] intArray0 = new int[6];
      intArray0[0] = (-2878);
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 0;
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_StdDevPrec = 26;
      resultMatrixPlainText0.m_CountWidth = 1;
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.setStdDevPrec(2);
      resultMatrixPlainText0.getRowOrder();
      resultMatrixSignificance0.setRowOrder((int[]) null);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.8219909715668416
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.isAverage((-1769));
      resultMatrixLatex0.getDefaultStdDevPrec();
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(12, 0);
      resultMatrixLatex1.padString("*", 2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.271260033111007
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowName(584, "-mean-prec <int>");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.isAverage(584);
      resultMatrixLatex0.getDefaultStdDevPrec();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      resultMatrixLatex0.m_Counts = null;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 0;
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.padString("", 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray1 = new int[6];
      intArray1[0] = 584;
      resultMatrixGnuPlot0.getRowName(1);
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray1[5] = 1;
      resultMatrixGnuPlot0.m_RowOrder = intArray1;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      
      String string0 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.927482988365456
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowName(584, "-mean-prec <int>");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.isAverage(584);
      resultMatrixLatex0.getDefaultStdDevPrec();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 0;
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.padString("", 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.toStringSummary();
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-3033), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5215816413207635
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 27);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setRowNameWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.5803065031159313
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      
      resultMatrixPlainText0.m_RowNameWidth = 1;
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixSignificance0.setRowNameWidth(0);
      resultMatrixSignificance0.toArray();
      resultMatrixPlainText0.getRevision();
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixSignificance0.setColOrder((int[]) null);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.setStdDevPrec(8);
      resultMatrixPlainText0.setEnumerateColNames(false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toArray();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(1, 0);
      resultMatrixPlainText2.getDisplayName();
      resultMatrixPlainText1.globalInfo();
      assertEquals(5, resultMatrixPlainText1.getCountWidth());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.358909266756146
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setRowNameWidth(1);
      resultMatrixSignificance0.setRowNameWidth(354);
      resultMatrixSignificance0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixSignificance1.getOptions();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance3 = new ResultMatrixSignificance(2, 1);
      resultMatrixSignificance3.getRevision();
      ResultMatrixSignificance resultMatrixSignificance4 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setCount(0, (-6.78214234));
      assertEquals(354, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance3);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance3);
      resultMatrixHTML0.getRevision();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.454762770278199
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.setMeanPrec((-1256));
      resultMatrixCSV0.getRowName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 1492);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getRowName(69);
      resultMatrixHTML1.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixCSV0.isRowName(1492);
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML1.setColName(74, "*");
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixHTML1.getDefaultCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("2");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.664101583585685
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getStdDevPrec();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setColName(2, "*");
      ResultMatrixHTML.main((String[]) null);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML0.getDefaultCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3774915404705887
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixCSV0.getRowName(1600);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML1.toStringRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML1);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixCSV0.isRowName((-2908));
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML0.setColName(1, "");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML1.getDefaultCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.3906978855686756
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getRowName(1);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      int int0 = 2784;
      resultMatrixCSV0.isRowName(2784);
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.padString("", 1, false);
      resultMatrixCSV0.enumerateRowNamesTipText();
      boolean boolean0 = false;
      int int1 = 2887;
      resultMatrixCSV0.addHeader("G/]F0WrrYIG2}UGQ", "<td align=\"center\">");
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(27, 2887);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 27);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(50, 1);
      resultMatrixLatex0.addHeader("9\u0001j8 ]]m?5LcP3xo", "");
      assertEquals(50, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3712691441382203
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixPlainText0.m_MeanPrec = 1;
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText0.getRevision();
      resultMatrixGnuPlot0.setMean(20, 0, 2);
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixGnuPlot0.setRowNameWidth(26);
      assertEquals(26, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9245921044180787
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowName(584, "-mean-prec <int>");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.isAverage(584);
      resultMatrixLatex0.getDefaultStdDevPrec();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 2;
      resultMatrixLatex0.getStdDev(0, 3030);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixGnuPlot0.setRowNameWidth(9);
      assertEquals(9, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6101428494184384
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(95, 0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setRowNameWidth((-3664));
      resultMatrixSignificance0.toArray();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance1.getOptions();
      resultMatrixPlainText0.setShowStdDev(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 2;
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.setRowOrder(intArray0);
      resultMatrixSignificance1.setMeanPrec(26);
      assertEquals(26, resultMatrixSignificance1.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(61, 26);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText0.getRevision();
      resultMatrixGnuPlot0.setMean((-282), 0, 5.70001);
      resultMatrixPlainText0.setPrintColNames(true);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(61, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(26, resultMatrixPlainText0.getVisibleRowCount());
      
      resultMatrixGnuPlot0.setRowNameWidth((-2));
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5320302582605256
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 9);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.showStdDevTipText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(9, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText1);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText1.getRevision();
      resultMatrixGnuPlot0.setMean(6, 846, 9);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      resultMatrixPlainText1.setPrintColNames(false);
      resultMatrixPlainText0.getDefaultPrintRowNames();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultStdDevWidth();
      assertEquals(0, resultMatrixCSV1.getCountWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.618268371350764
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(45, 45);
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = " ";
      stringArray0[6] = "*";
      resultMatrixGnuPlot0.m_RowNames = stringArray0;
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      
      resultMatrixGnuPlot0.m_MeanPrec = 40;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(45, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.593779730570053
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(27, 2);
      resultMatrixPlainText1.getDefaultRowNameWidth();
      assertEquals(27, resultMatrixPlainText1.getVisibleColCount());
      
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText1.getDefaultMeanPrec();
      resultMatrixPlainText1.showStdDevTipText();
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText1.getRevision();
      resultMatrixPlainText0.setColHidden(0, false);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      resultMatrixPlainText2.meanWidthTipText();
      resultMatrixPlainText2.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.setMeanPrec(1);
      resultMatrixHTML0.toString();
      resultMatrixHTML0.toStringMatrix();
      assertEquals(1, resultMatrixHTML0.getMeanPrec());
      
      resultMatrixPlainText2.setShowAverage(false);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixSignificance0.getDefaultColNameWidth();
      assertEquals("Whether to display the standard deviation column.", resultMatrixSignificance0.showStdDevTipText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8306041843274805
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(2260);
      resultMatrixSignificance0.LEFT_PARENTHESES = "x\"vZZA6Bh";
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.addHeader("Imx-Xw[wv_Pf", "7S`(j!-");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.getCountWidth();
      resultMatrixSignificance0.m_MeanPrec = 0;
      resultMatrixSignificance0.isMean(2946);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setMeanPrec(0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(125, 2260);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.587406487403034
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(2);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setColHidden((-3385), true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.meanWidthTipText();
      resultMatrixPlainText1.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toString();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>col0</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>v/ /*</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.toStringSummary();
      assertFalse(resultMatrixPlainText0.getShowAverage());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.toStringSummary();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.3315342523614
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setRowNameWidth(2);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance3 = new ResultMatrixSignificance(298, 307);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5744228464467325
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[18];
      intArray1[9] = 1;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 2;
      intArray2[1] = 1;
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_Wins = intArray0;
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText0.getRevision();
      boolean boolean0 = false;
      resultMatrixPlainText0.setColHidden(2, false);
      resultMatrixPlainText0.meanWidthTipText();
      resultMatrixPlainText0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.toString();
      resultMatrixHTML0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.455507242836672
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setStdDevWidth((-660));
      resultMatrixPlainText0.setColHidden(1, false);
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.2794518157267287
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "*";
      stringArray0[3] = "]";
      stringArray0[4] = "[";
      stringArray0[5] = "v";
      stringArray0[6] = "KSs-^b?# B\"-*`}i.";
      stringArray0[7] = "Hi'jNl$K;X<";
      resultMatrixCSV0.setOptions(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(97, 2);
      resultMatrixGnuPlot0.getDisplayRow((-5267));
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-5267), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3773987308623368
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.LOSS_STRING = "\"`P2VpQxcb";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixPlainText0.removeFilterName("(");
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.setStdDevPrec(1);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.setStdDevPrec(5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.setColNameWidth((-8));
      resultMatrixHTML1.doubleToString((-334.546397206755), 2);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixSignificance0.setRowNameWidth(25);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixPlainText0.toStringSummary();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5085860567225313
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "*";
      stringArray0[3] = "]";
      stringArray0[4] = "[";
      stringArray0[5] = "v";
      stringArray0[6] = "KSs-^b?# B\"-*`}i.";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixPlainText0.setStdDevPrec(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText1.setEnumerateColNames(true);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText1.getDisplayName();
      resultMatrixPlainText0.globalInfo();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = 0;
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = "[";
      stringArray0[2] = "*";
      resultMatrixCSV0.RIGHT_PARENTHESES = resultMatrixCSV0.RIGHT_PARENTHESES;
      stringArray0[4] = "[";
      stringArray0[5] = "v";
      stringArray0[6] = "KSs-^b?# B\"-*`}i.";
      stringArray0[7] = "Hi'jNl$K;X<";
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.034764843439823
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateRowNames(false);
      resultMatrixLatex0.setRowName(584, "-mean-prec <int>");
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.isAverage(584);
      resultMatrixLatex0.getDefaultStdDevPrec();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray1 = new int[4][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[9];
      intArray2[0] = 0;
      intArray2[1] = 1;
      intArray2[2] = 10;
      intArray2[3] = 0;
      intArray2[4] = 584;
      intArray2[5] = 2;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray2[8] = 1;
      intArray1[3] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.2522695733518288
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 1;
      resultMatrixHTML0.getRowName(2);
      intArray0[4] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]";
      resultMatrixCSV0.setOptions(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(40, (-4973));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance2.setCount(2784, 351.07606174);
      assertEquals(0, resultMatrixSignificance2.getColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.158499929075535
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.padString("-summary data not set-", 0);
      boolean boolean0 = true;
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.getStdDev(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.LOSS_STRING = " ";
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixLatex0.m_StdDevWidth = 0;
      resultMatrixGnuPlot0.getDisplayRow(4397);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(0, (-1144));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.787588868306674
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      String string0 = resultMatrixHTML0.getRowName(2);
      assertNull(string0);
      
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance1.setCount(87, 6.7);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixSignificance1);
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      
      resultMatrixHTML0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.getDisplayName();
      boolean boolean0 = resultMatrixHTML0.isStdDev(2);
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setRowNameWidth(50);
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(4232, 1);
      resultMatrixSignificance0.getDisplayName();
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, int0);
      assertEquals(4232, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.9834644014718337
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.getStdDev(0, 0);
      resultMatrixLatex0.getStdDev(1543, (-1418));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.5628031685952006
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 27);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixPlainText.main((String[]) null);
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setColHidden(986, false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.meanWidthTipText();
      resultMatrixPlainText0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText1);
      resultMatrixHTML0.setMeanPrec(0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2677029657362886
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.clearSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.toStringSummary();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "-summary data not set-";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = " ";
      stringArray2[1] = " ";
      stringArray2[2] = "-summary data not set-";
      stringArray2[3] = "(";
      stringArray2[4] = "-summary data not set-";
      stringArray2[5] = "*";
      stringArray2[6] = " - ";
      stringArray2[7] = "v";
      stringArray0[1] = stringArray2;
      resultMatrixHTML1.getColSize(stringArray0, (-3608));
      String string0 = resultMatrixHTML1.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.3101721884404385
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setEnumerateColNames(true);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixSignificance0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.WIN_STRING = ",/T5vK@";
      String string0 = resultMatrixSignificance0.toString();
      assertEquals("Dataset       (1)\n-----------------\nrow0             \n", string0);
      
      resultMatrixSignificance0.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.toStringRanking();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.364563219686431
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.LOSS_STRING = "\"`P2VpQxcb";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.removeFilterName("(");
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.setStdDevPrec(5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixHTML0.doubleToString(1.0, 0);
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toStringMatrix();
      resultMatrixSignificance0.setRowNameWidth(25);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixPlainText0.setStdDevPrec(1726);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.059835514041313
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.setRowName(0, "]");
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      resultMatrixLatex0.isAverage(97);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.setCount(1726, (-5.10309048958));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getRevision();
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
      
      resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "*";
      stringArray0[3] = "]";
      stringArray0[4] = "[";
      stringArray0[5] = "v";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.colNameWidthTipText();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getShowStdDev());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 26;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 26;
      intArray2[1] = 1;
      intArray2[2] = (-1511);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 26;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 0;
      intArray5[1] = 26;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 1;
      intArray6[1] = 2;
      intArray6[2] = 1;
      intArray6[3] = 1;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 0;
      intArray7[1] = 10;
      intArray7[2] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray8[2] = 1;
      intArray8[3] = 0;
      intArray8[4] = 2;
      intArray8[5] = 2;
      intArray0[7] = intArray8;
      resultMatrixSignificance0.setRanking(intArray0);
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.colNameWidthTipText();
      resultMatrixHTML0.meanWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 26;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 26;
      intArray2[1] = 1;
      intArray2[2] = (-1511);
      intArray0[1] = intArray1;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 26;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 0;
      intArray5[1] = 26;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 1;
      intArray6[1] = 2;
      intArray6[2] = 1;
      intArray6[3] = 1;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 0;
      intArray7[1] = 10;
      intArray7[2] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray8[2] = 1;
      intArray8[3] = 0;
      intArray8[4] = 2;
      intArray8[5] = 2;
      intArray0[7] = intArray8;
      resultMatrixSignificance0.setRanking(intArray0);
      assertTrue(resultMatrixSignificance0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.873986707618567
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.colNameWidthTipText();
      resultMatrixHTML0.meanWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getDefaultShowStdDev();
      int[][] intArray0 = new int[8][3];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray1[1] = 26;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 26;
      intArray2[1] = 1;
      intArray2[2] = (-1511);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 26;
      intArray0[3] = intArray2;
      int[] intArray5 = new int[2];
      intArray5[0] = 0;
      intArray5[1] = 26;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 1;
      intArray6[1] = 2;
      intArray6[2] = 1;
      intArray6[3] = 1;
      intArray6[4] = 0;
      intArray6[5] = 2;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 0;
      intArray7[1] = 10;
      intArray7[2] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray8[2] = 1;
      intArray8[3] = 0;
      intArray8[4] = 2;
      intArray8[5] = 2;
      intArray0[7] = intArray8;
      resultMatrixSignificance0.setRanking(intArray0);
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.370699421073705
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.removeFilterName("(");
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.setStdDevPrec(5);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML0.doubleToString(1.0, 0);
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixSignificance0.setColNameWidth(0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixSignificance0.setRowNameWidth(25);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      assertEquals(0, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.421657336643253
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(27, 0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setRowNameWidth(1022);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.toArray();
      int[][] intArray0 = new int[5][1];
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 58;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      resultMatrixSignificance1.m_NonSigWins = intArray0;
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance1.getOptions();
      resultMatrixPlainText0.setShowStdDev(true);
      int[] intArray6 = new int[5];
      intArray6[0] = 27;
      intArray6[1] = 26;
      intArray6[2] = 1;
      intArray6[3] = 0;
      intArray6[4] = 2;
      resultMatrixSignificance0.setRowOrder(intArray6);
      resultMatrixSignificance0.setColOrder(intArray6);
      resultMatrixSignificance0.setRowOrder(intArray6);
      resultMatrixSignificance1.setMeanPrec(1);
      assertEquals(1022, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8979325974734658
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(2260);
      resultMatrixSignificance0.LEFT_PARENTHESES = "x\"vZZA6Bh";
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.getColName(2946);
      resultMatrixSignificance0.addHeader("Imx-Xw[wv_Pf", "7S`(j!-");
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.getSignificance(0, 671);
      resultMatrixSignificance0.getCountWidth();
      resultMatrixSignificance0.m_MeanPrec = 0;
      resultMatrixSignificance0.isMean(0);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.setMeanPrec(0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(125, 2260);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.914760071180916
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String string0 = "Average";
      resultMatrixGnuPlot0.padString("Average", 0);
      resultMatrixGnuPlot0.m_CountWidth = 0;
      resultMatrixGnuPlot0.getRevision();
      int int0 = 850;
      resultMatrixGnuPlot0.getRowName(850);
      resultMatrixGnuPlot0.isSignificance((-538));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize(97, (-902));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      resultMatrixCSV0.m_Wins = intArray0;
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.WIN_STRING = "Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixCSV0.getColNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.getEnumerateRowNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (-2851.8978502965);
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.m_StdDevWidth = (-33);
      resultMatrixCSV0.setMeanWidth(2);
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6969008500088405
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[4];
      resultMatrixGnuPlot0.WIN_STRING = "dCpB4V0\u0002C +";
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      resultMatrixGnuPlot0.setMeanWidth(0);
      resultMatrixGnuPlot0.toStringRanking();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      resultMatrixGnuPlot0.setColNameWidth((-1905));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.485540363212098
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getRowName(1);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixCSV0.isRowName(2784);
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML0.setColName(0, " ");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML0.getDefaultCountWidth();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertFalse(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.403772064897697
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.getRowName(2);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixCSV0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixCSV0.getRowName(1);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixCSV0.isRowName(2784);
      resultMatrixHTML0.listOptions();
      resultMatrixCSV0.enumerateRowNamesTipText();
      resultMatrixCSV0.getStdDevPrec();
      resultMatrixHTML0.setColName(0, " ");
      resultMatrixGnuPlot0.getRevision();
      resultMatrixHTML0.getDefaultCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.9512531397341846
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n[1],col0\n", string0);
      
      resultMatrixCSV0.getCount(4591);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.clearRanking();
      resultMatrixLatex0.getDefaultEnumerateRowNames();
      int int0 = (-1);
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(1, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.3712691441382208
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixPlainText0.m_MeanPrec = 1;
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixPlainText0.getRevision();
      resultMatrixGnuPlot0.m_RowNameWidth = 0;
      resultMatrixGnuPlot0.setMean(0, 1057, 0);
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixGnuPlot0.setRowNameWidth(1057);
      assertEquals(1057, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixPlainText0.setStdDevWidth((-607));
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.3971359632012157
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.m_RowNameWidth = 1;
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 0;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixSignificance0.setRowNameWidth(0);
      resultMatrixSignificance0.toArray();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.getOptions();
      resultMatrixPlainText0.setShowStdDev(true);
      resultMatrixSignificance0.setColOrder((int[]) null);
      resultMatrixSignificance0.setRowOrder((int[]) null);
      resultMatrixSignificance0.setMeanPrec(1);
      assertEquals(1, resultMatrixPlainText0.getRowNameWidth());
      
      int[][] intArray1 = new int[7][6];
      intArray1[0] = null;
      intArray1[1] = null;
      intArray1[2] = null;
      intArray1[3] = null;
      intArray1[4] = null;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.404824646296349
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.LEFT_PARENTHESES = "";
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 0;
      resultMatrixPlainText0.LEFT_PARENTHESES = "}vW";
      intArray0[6] = 1;
      intArray0[7] = 1;
      resultMatrixPlainText0.m_RankingWins = intArray0;
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.isStdDev(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      resultMatrixGnuPlot0.setShowAverage(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[][] doubleArray0 = new double[4][0];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 1;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 1;
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = (double) 1;
      doubleArray3[6] = (double) 1;
      doubleArray3[7] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = 0.0;
      doubleArray0[3] = doubleArray4;
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixGnuPlot0.clearRanking();
      assertTrue(resultMatrixGnuPlot0.getShowAverage());
      
      resultMatrixPlainText0.listOptions();
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setPrintRowNames(false);
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.5978436992023823
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "(";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.getSignificanceWidth();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setColHidden(2700, false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText1.meanWidthTipText();
      resultMatrixPlainText0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText1);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.toString();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixPlainText1.toStringSummary();
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.globalInfo();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.toStringSummary();
      assertFalse(resultMatrixLatex1.getRemoveFilterName());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.385767779343535
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ShowStdDev = true;
      resultMatrixSignificance0.LOSS_STRING = "\"`P2VpQxcb";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.setStdDevWidth(0);
      resultMatrixPlainText0.removeFilterName("(");
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setCountWidth(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getRevision();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance1.setCount(51, 1726);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getRevision();
      int int0 = resultMatrixSignificance1.getSignificanceWidth();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.892526676634873
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_NonSigWins = null;
      resultMatrixLatex0.doubleToString(0.0, 1318);
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixLatex0.isStdDev(1318);
      resultMatrixLatex0.isStdDev((-1221));
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.8707533410548467
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.listOptions();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.padString("\begin{table}[thb]\ncaption{label{labelname}Table Caption (Key)}\nscriptsize\n{centering\n\begin{tabular}{cl}\\\nend{tabular}\n}\nend{table}\n", 0);
      resultMatrixLatex0.m_PrintRowNames = true;
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      String string0 = resultMatrixLatex1.padString("Key,\n", 12);
      assertEquals("Key,\n       ", string0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.1824451341194315
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.setOptions((String[]) null);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(116);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.2062651007397753
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 1);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.printRowNamesTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.m_StdDevPrec = 1;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.0921042995729078
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 26);
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 26;
      intArray0[2] = 2;
      double[][] doubleArray0 = new double[6][2];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 26;
      doubleArray2[1] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 26;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) 26;
      doubleArray3[3] = (-1.0);
      doubleArray3[4] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (double) 1;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = (double) 1;
      doubleArray5[1] = (double) 26;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = 0.0;
      doubleArray5[4] = (double) 1;
      doubleArray5[5] = (double) 2;
      doubleArray5[6] = (double) 26;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = 0.0;
      doubleArray6[1] = (double) 26;
      doubleArray6[2] = 0.0;
      doubleArray6[3] = (double) 26;
      doubleArray6[4] = 431.345;
      doubleArray0[5] = doubleArray6;
      resultMatrixCSV0.m_Mean = doubleArray0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.getVisibleColCount();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.clear();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.5986051779973063
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixHTML0.getRowName(2);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText1.getCountWidth());
      assertTrue(resultMatrixPlainText1.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
      
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      stringArray0[4] = "(";
      stringArray0[5] = ")";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.getDefaultShowStdDev();
      assertEquals(6, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getShowStdDev();
      int[][] intArray0 = new int[0][5];
      resultMatrixHTML0.m_PrintColNames = true;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.729267023454784
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(6, 6);
      resultMatrixGnuPlot0.m_ShowAverage = false;
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[5];
      resultMatrixGnuPlot0.setStdDevWidth((-1));
      intArray1[0] = 6;
      intArray1[1] = 2;
      intArray1[2] = 6;
      intArray1[3] = 2;
      intArray1[4] = 6;
      resultMatrixGnuPlot0.TIE_STRING = "4LpAR@b0H7VZ)Em,";
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (-1322.62689813);
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 6;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 6;
      doubleArray0[1] = doubleArray2;
      resultMatrixGnuPlot0.m_StdDev = doubleArray0;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.setStdDevWidth(6);
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("6*:9<K:PqpH2A=F", "u.`Ys~");
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.3177091680759347
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixPlainText0.m_RowNameWidth = 1;
      int[] intArray0 = new int[19];
      intArray0[17] = 1;
      intArray0[1] = 1;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixSignificance0.setRowNameWidth(0);
      resultMatrixSignificance0.toArray();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(1, 4683);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.5686264372205594
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 26);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.setRowNameWidth(50);
      resultMatrixSignificance1.toArray();
      resultMatrixPlainText0.getRevision();
      resultMatrixSignificance0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance3 = null;
      try {
        resultMatrixSignificance3 = new ResultMatrixSignificance((-742), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }
}
