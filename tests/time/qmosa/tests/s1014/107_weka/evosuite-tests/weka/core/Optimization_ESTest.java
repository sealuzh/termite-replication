/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:47:21 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.231739065208693
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(30);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.getRevision();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeElementAt(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      optimization_DynamicIntArray0.removeAllElements();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      optimization_DynamicIntArray0.addElement(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      optimization_DynamicIntArray0.addElement(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",p=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      optimization_DynamicIntArray0.addElement(2);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      assertEquals(3, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[][] doubleArray0 = new double[5][1];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 38;
      doubleArray1[1] = (double) 38;
      doubleArray1[2] = (double) 38;
      doubleArray0[1] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 38;
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(38, 38);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      int[] intArray0 = new int[7];
      intArray0[0] = 38;
      intArray0[1] = 38;
      intArray0[2] = 38;
      intArray0[3] = 38;
      intArray0[4] = 38;
      intArray0[5] = 38;
      intArray0[6] = 38;
      weka.core.matrix.Matrix matrix1 = weka.core.matrix.Matrix.identity(38, 38);
      matrix1.toString();
      matrix1.normF();
      matrix0.setMatrix(intArray0, 38, (-170), matrix1);
      booleanArray0[3] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      Optimization.solveTriangle(matrix0, doubleArray2, false, booleanArray0);
      double[] doubleArray3 = Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray0);
      assertArrayEquals(new double[] {38.0, 0.0, 38.0}, doubleArray3, 0.01);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(2999);
      Random.setNextRandom(6);
      Random.setNextRandom((-669));
      Random.setNextRandom((-669));
      Random.setNextRandom(1703);
      double[][] doubleArray0 = new double[2][1];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) (-669);
      doubleArray1[3] = (double) 1703;
      doubleArray1[4] = (double) 2999;
      doubleArray1[5] = 254.97017612659;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (-1953.9717658874304);
      doubleArray2[1] = (double) 1703;
      doubleArray2[2] = (double) 6;
      doubleArray2[3] = (double) 6;
      doubleArray2[4] = 3.4;
      doubleArray2[5] = (double) 6;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 2999;
      doubleArray2[8] = (double) 1703;
      doubleArray0[1] = doubleArray2;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 1, 1703);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray2, true, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      StringReader stringReader0 = new StringReader("1986");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.read(bufferedReader0);
      double[] doubleArray0 = new double[0];
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertNotSame(doubleArray0, doubleArray1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Random.setNextRandom(2999);
      Random.setNextRandom(6);
      Random.setNextRandom((-669));
      Random.setNextRandom((-669));
      Random.setNextRandom(1703);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 2999;
      doubleArray0[1] = (double) (-669);
      doubleArray0[2] = (double) (-669);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, false, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 38;
      Random.setNextRandom(2);
      Random.setNextRandom(833);
      Random.setNextRandom((-29));
      Random.setNextRandom(2);
      Random.setNextRandom(7);
      double[][] doubleArray1 = new double[7][5];
      doubleArray1[2] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray1, 38, 7);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
      assertArrayEquals(new double[] {38.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {Double.POSITIVE_INFINITY}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[][] doubleArray0 = new double[4][1];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 38;
      doubleArray1[1] = (double) 38;
      doubleArray1[2] = (double) 38;
      doubleArray0[1] = doubleArray1;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 833, 38);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Optimization.solveTriangle(matrix0, doubleArray0[0], true, booleanArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sum:  ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 38;
      Random.setNextRandom(2);
      Random.setNextRandom(833);
      Random.setNextRandom(8);
      Random.setNextRandom(2);
      Random.setNextRandom(7);
      double[][] doubleArray1 = new double[7][5];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray1, 38, 7);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray0, false, (boolean[]) null);
      assertArrayEquals(new double[] {1.0}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(2178);
      optimization_DynamicIntArray0.copy();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.elementAt((-2145));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2145
         //
         verifyException("weka.core.Optimization$DynamicIntArray", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(2178);
      Optimization.DynamicIntArray optimization_DynamicIntArray1 = (Optimization.DynamicIntArray)optimization_DynamicIntArray0.copy();
      assertEquals(0, optimization_DynamicIntArray1.size());
      
      int int0 = optimization_DynamicIntArray0.size();
      assertNotSame(optimization_DynamicIntArray0, optimization_DynamicIntArray1);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[][] doubleArray0 = new double[0][8];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 2231, (-2913));
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) (-2913);
      doubleArray1[1] = (double) 2231;
      doubleArray1[2] = (double) 2231;
      doubleArray1[3] = (double) 2231;
      doubleArray1[4] = (-2217.853);
      doubleArray1[5] = (double) 2231;
      doubleArray1[6] = (double) (-2913);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Random.setNextRandom(2999);
      Random.setNextRandom(6);
      Random.setNextRandom((-669));
      Random.setNextRandom((-669));
      Random.setNextRandom(1703);
      double[][] doubleArray0 = new double[2][1];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) (-669);
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 1703;
      doubleArray1[4] = (double) 2999;
      doubleArray1[5] = 254.97017612659;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (-1953.9717658874304);
      doubleArray2[1] = (double) 1703;
      doubleArray2[2] = (double) 6;
      doubleArray2[3] = (double) 6;
      doubleArray2[4] = 3.4;
      doubleArray2[5] = (double) 6;
      doubleArray2[6] = (double) 1;
      doubleArray2[7] = (double) 2999;
      doubleArray2[8] = (double) 1703;
      doubleArray0[1] = doubleArray2;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 1, 1703);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray2, true, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 38;
      doubleArray0[1] = (double) 38;
      doubleArray0[2] = (double) 38;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 38;
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(38, 38);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      int[] intArray0 = new int[7];
      intArray0[0] = 38;
      intArray0[1] = 38;
      intArray0[2] = 38;
      intArray0[3] = 38;
      intArray0[4] = 38;
      intArray0[6] = 38;
      weka.core.matrix.Matrix matrix1 = weka.core.matrix.Matrix.identity(38, 38);
      String string0 = matrix1.toString();
      matrix1.normF();
      matrix0.setMatrix(intArray0, 38, (-170), matrix1);
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      StringReader stringReader0 = new StringReader(string0);
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 38);
      weka.core.matrix.Matrix.read(bufferedReader0);
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
      assertArrayEquals(new double[] {38.0, 0.0, 0.0}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(2948);
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
