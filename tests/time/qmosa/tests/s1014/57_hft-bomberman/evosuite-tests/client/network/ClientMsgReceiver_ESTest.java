/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:53:02 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTransientConnectionException;
import java.util.Stack;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.ImageIcon;
import messages.global.GlobalChatMsg;
import messages.global.InfoRequestMsg;
import messages.round.PowerUpHitMsg;
import messages.session.SessionParticipationMsg;
import org.apache.log4j.helpers.LogLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "ERROR";
      Stack<String> stack0 = new Stack<String>();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      ImageIcon imageIcon0 = new ImageIcon(string0, string0);
      String string1 = imageIcon0.getDescription();
      Object object0 = new Object();
      Object object1 = new Object();
      String string2 = "Rz";
      String string3 = "Couldn't close input stream";
      MockFile mockFile0 = new MockFile(string2, string3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) byteArray0[0];
      objectArray0[1] = object1;
      objectArray0[2] = object0;
      objectArray0[3] = object1;
      objectArray0[5] = (Object) imageIcon0;
      objectArray0[6] = (Object) mockSocket0;
      mockPrintWriter0.write(string1);
      mockPrintWriter0.printf(string0, objectArray0);
      String string4 = "Couldn't close input stream";
      String string5 = "y{?";
      int int0 = (-516);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException(string4, string5, int0);
      boolean boolean0 = true;
      int int1 = (-780);
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(boolean0, int1, string2);
      clientMsgReceiver0.processMsg(sessionParticipationMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 321);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "Sorry. Session already full!");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("no powerup", 4747);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 321);
      mockInetSocketAddress0.getHostName();
      mockInetSocketAddress0.getHostName();
      mockSocket0.bind(mockInetSocketAddress0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.setPackageAssertionStatus("", true);
      classLoader0.setClassAssertionStatus((String) null, true);
      clientMsgReceiver0.setContextClassLoader(classLoader1);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = "7?hTr@t8h\"";
      int int0 = 0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      MockThread.getDefaultUncaughtExceptionHandler();
      String string1 = "4b/,>;u0";
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg(string1);
      clientMsgReceiver0.getStackTrace();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 321);
          NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "Sorry. Session already full!");
          NetworkHandling.openRemoteTcpServer((EvoSuiteRemoteAddress) null);
          EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("no powerup", 4747);
          NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
          Proxy proxy0 = Proxy.NO_PROXY;
          MockSocket mockSocket0 = new MockSocket();
          MockInetAddress.getLocalHost();
          InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
          MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 321);
          mockInetSocketAddress0.getHostName();
          mockSocket0.bind(mockInetSocketAddress0);
          ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
          LogLog.setQuietMode(false);
          ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
          ClassLoader classLoader1 = classLoader0.getParent();
          classLoader1.setPackageAssertionStatus("127.0.0.1", false);
          ClassLoader.getSystemClassLoader();
          NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "127.0.0.1");
          System.setCurrentTimeMillis(321);
          InfoRequestMsg infoRequestMsg0 = new InfoRequestMsg((-1));
          // Undeclared exception!
          try { 
            clientMsgReceiver0.processMsg(infoRequestMsg0);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("client.network.ClientMsgReceiver", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 321);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "Sorry. Session already full!");
      NetworkHandling.openRemoteTcpServer((EvoSuiteRemoteAddress) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("no powerup", 4747);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 321);
      mockInetSocketAddress0.getHostName();
      mockInetSocketAddress0.getHostName();
      mockSocket0.bind(mockInetSocketAddress0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader.getSystemClassLoader();
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "192.168.1.42");
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(true, (byte)1, "Sorry. Session already full!");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionParticipationMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.session.SessionParticipationMsg", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte)34;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kph");
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = 65610;
      PowerUpHitMsg powerUpHitMsg0 = new PowerUpHitMsg(int0, int0, int0);
      clientMsgReceiver0.processMsg(powerUpHitMsg0);
      clientMsgReceiver0.processMsg(powerUpHitMsg0);
      assertEquals(65610, powerUpHitMsg0.getPowerUpID());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.setPackageAssertionStatus("r&vEjmj:.", false);
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      int int0 = MockThread.MIN_PRIORITY;
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader2.setClassAssertionStatus("s4", false);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "ERROR";
      Stack<String> stack0 = new Stack<String>();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, string0);
      String string1 = imageIcon0.getDescription();
      Object object0 = new Object();
      Object object1 = new Object();
      String string2 = "";
      String string3 = "Couldn't close input stream";
      MockFile mockFile0 = new MockFile(string2, string3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) byteArray0[0];
      objectArray0[1] = object1;
      objectArray0[2] = object0;
      objectArray0[3] = object1;
      objectArray0[5] = (Object) imageIcon0;
      objectArray0[6] = (Object) mockSocket0;
      mockPrintWriter0.write(string1);
      PrintWriter printWriter0 = mockPrintWriter0.printf(string0, objectArray0);
      String string4 = "Couldn't close input stream";
      String string5 = "y{?";
      int int0 = (-516);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException(string4, string5, int0);
      sQLSyntaxErrorException0.printStackTrace(printWriter0);
      String string6 = "";
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(string6, sQLSyntaxErrorException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTransientConnectionException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Socket socket0 = null;
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(socket0, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }
}
