/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:35:53 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6892880693997117
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.code = 0;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1587);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      services_HTTP_Result0.works = true;
      services_HTTP_Result0.time = (long) 1587;
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("YP>-{Oqd62!xHksOP{m", 1587);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.works = true;
      Services.testHTTP("zw?g\"6", 199);
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.toString();
      Services.testHTTP("", 0);
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      services_SIMPLE_Result1.reset();
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur : java.lang.NullPointerException**.\n****", 835);
      services_HTTP_Result2.Error = "**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur : java.lang.NullPointerException**.\n****";
      Services.testSMTP("", 0);
      Services.testPOP3("l\u0004Ihe;hh@,c~)lE", 0);
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      Services.testHTTP("", 0);
      System.setCurrentTimeMillis(5493L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7636717913850872
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", (-3108));
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://?88/!~#~>vtbJLhr&");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**Erreur : java.lang.IllegalArgumentException: port out of range:-3108**");
      services_SIMPLE_Result0.works = false;
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      services_SIMPLE_Result0.time = (long) 0;
      services_SIMPLE_Result0.time = (long) (-3108);
      services_SIMPLE_Result0.reset();
      services_HTTP_Result0.works = false;
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", 0);
      services_HTTP_Result1.Error = "";
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result1.time);
      assertFalse(services_SIMPLE_Result1.works);
      
      services_HTTP_Result1.Error = "";
      services_HTTP_Result1.time = (long) 0;
      Services.testHTTPS("xDx", (-3108));
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("?88/!~#~>vtbJLhr&", (-1));
      assertEquals(73, services_HTTP_Result2.page_weight);
      assertTrue(services_HTTP_Result2.works);
      
      services_HTTP_Result2.Error = "";
      Services.testHTTP("`$r", (-3108));
      Services services0 = new Services();
      Services.testPOP3("", 0);
      Services.testSMTP("", 0);
      Services.HTTP_Result services_HTTP_Result3 = Services.testHTTPS("?88/!~#~>vtbJLhr&", (-1748));
      assertEquals(0L, services_HTTP_Result3.time);
      assertEquals(0, services_HTTP_Result3.page_weight);
      assertFalse(services_HTTP_Result3.works);
      assertEquals(0, services_HTTP_Result3.code);
      
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testPOP3("", 0);
      assertFalse(services_SIMPLE_Result2.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7946485850575375
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", (-3108));
      services_SIMPLE_Result0.works = false;
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      services_SIMPLE_Result0.time = (long) 0;
      services_SIMPLE_Result0.time = (long) (-3108);
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testPOP3("**Erreur : java.lang.IllegalArgumentException: port out of range:-3108**", 0);
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result1.time = (long) 0;
      services_HTTP_Result0.works = false;
      services_SIMPLE_Result1.toString();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", 0);
      assertTrue(services_HTTP_Result1.works);
      
      services_HTTP_Result1.Error = "";
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result2.time);
      assertFalse(services_SIMPLE_Result2.works);
      
      services_HTTP_Result1.Error = "";
      services_HTTP_Result1.time = (long) 0;
      Services.testHTTPS("xDx", (-3108));
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTP("?88/!~#~>vtbJLhr&", (-1));
      services_HTTP_Result2.Error = "";
      Services.testHTTP("`$r", (-3108));
      Services services0 = new Services();
      Services.testPOP3("", 0);
      Services.SIMPLE_Result services_SIMPLE_Result3 = Services.testSMTP("", 0);
      assertEquals(0L, services_SIMPLE_Result3.time);
      assertFalse(services_SIMPLE_Result3.works);
      
      Services.HTTP_Result services_HTTP_Result3 = Services.testHTTPS("?88/!~#~>vtbJLhr&", (-1748));
      assertEquals(0L, services_HTTP_Result3.time);
      assertEquals(0, services_HTTP_Result3.page_weight);
      assertFalse(services_HTTP_Result3.works);
      assertEquals(0, services_HTTP_Result3.code);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6488041417305412
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
      
      services_SIMPLE_Result0.Error = "E~j]t?S/R/dwQ'";
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://**R\u00E9ponse incorrect**:431");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**URL Mal Form\u00E9** (");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.2", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      services_SIMPLE_Result0.Error = "E~j]t?S/R/dwQ'";
      Services.testPOP3((String) null, 0);
      Services services0 = new Services();
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("E~j]t?S/R/dwQ'", (-3379));
      assertEquals(0L, services_SIMPLE_Result1.time);
      assertFalse(services_SIMPLE_Result1.works);
      
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("**R\u00E9ponse incorrect**", 431);
      assertEquals(20, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      services_HTTP_Result0.time = 0L;
      Services.testHTTPS((String) null, (-1));
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("**Erreur d'E/S** (java.io.IOException: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@3101168c) **", 3000);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertEquals(0, services_HTTP_Result1.code);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0L, services_HTTP_Result1.time);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("**", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "ec[;iKX`V5#F'a-(");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "ec[;iKX`V5#F'a-(");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.testPOP3("", (-2470));
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.reset();
      assertEquals(0L, services_SIMPLE_Result1.time);
      assertFalse(services_SIMPLE_Result1.works);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.code = (-2158);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.works = false;
      services_HTTP_Result0.page_weight = 0;
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-305L));
      System.setCurrentTimeMillis(3674L);
      Services.testSMTP("Pc]jq]", (-402));
      System.setCurrentTimeMillis(2022L);
      System.setCurrentTimeMillis((-1234L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1410L));
      System.setCurrentTimeMillis((-1232L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("Pc]jq]", (-402));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }
}
