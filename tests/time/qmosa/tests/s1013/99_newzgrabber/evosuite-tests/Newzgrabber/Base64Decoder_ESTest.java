/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:29:28 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Calendar;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import javax.swing.DebugGraphics;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Locale.forLanguageTag("The following are the lines from the bse64 decode");
      Object object0 = new Object();
      Object object1 = new Object();
      Locale locale1 = Locale.KOREAN;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      Locale.lookupTag(stack0, set0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = object1;
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream((InputStream) null, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      OutputStream outputStream0 = null;
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.setTotalLines(0L);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte)0;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("CC7oY#H('UX0?#/oz/V/oz/V0");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      MockFile mockFile0 = new MockFile("", "oz/V");
      File file0 = MockFile.createTempFile("oz/V", "", (File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      mockPrintStream0.print(true);
      file0.getAbsolutePath();
      Locale locale0 = Locale.FRENCH;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockPrintStream0.print((-1222.1222279756));
      mockFile0.getCanonicalPath();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)13;
      byteArray0[5] = (byte) (-16);
      byteArray0[6] = (byte)0;
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1));
      Integer integer3 = new Integer((byte) (-16));
      Integer.toUnsignedLong(0);
      Integer.getInteger("4pm@", integer3);
      integerArray0[2] = integer2;
      integerArray0[3] = integerArray0[0];
      integerArray0[3] = integer1;
      integerArray0[5] = integerArray0[1];
      Integer integer4 = new Integer((int) integerArray0[0]);
      Integer.sum(1052, 8);
      Integer.getInteger("4pm@", integer4);
      Integer.max((int) integerArray0[3], 97);
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer5;
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("4pm@", (-1));
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream((InputStream) null, 931, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }
}
