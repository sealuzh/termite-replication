/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:33:15 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.180066384203239
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteVector0.length = (-1764);
      ClassWriter classWriter0 = new ClassWriter(1321);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1321, "", "", "", (Object) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-31);
      byteArray1[1] = (byte)3;
      byteArray1[2] = (byte) (-11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 3528, "{V mvIP~&AL1<V", "", (String) null, "{V mvIP~&AL1<V");
      fieldWriter1.visitAnnotation("", false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{V mvIP~&AL1<V");
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.592869308253994
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1885), "", "dJq(DQLXqPpE", "", "dJq(DQLXqPpE");
      Attribute attribute0 = new Attribute(";GFCEm");
      fieldWriter0.visitAnnotation("3gx.u)r- um", false);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte((-1885));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(1321);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 32767, "", "", "", (Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter1 = new ClassWriter(1);
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "", "", "I Lr::;K*@F@", (Object) null);
      ByteVector byteVector1 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(1321);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1321, "", "", "", (Object) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-31);
      byteArray1[1] = (byte)3;
      byteArray1[2] = (byte) (-11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 3528, "{V mvIP~&AL1<V", "", (String) null, "{V mvIP~&AL1<V");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{V mvIP~&AL1<V");
      fieldWriter1.put(byteVector0);
      fieldWriter0.put(byteVector0);
      assertFalse(fieldWriter0.equals((Object)fieldWriter1));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(1321);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3528, "{V mvIP~&AL1<V", "B", (String) null, "{V mvIP~&AL1<V");
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        classWriter0.visitOuterClass((String) null, "RuntimeVisibleParameterAnnotations", "RuntimeVisibleAnnotations");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4929247376625505
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "InnerClasses", "InnerClasses", "]}IoGs745PEre(;m%", "RuntimeInvisibleAnnotations");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.next = fieldWriter1;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)63;
      FieldWriter fieldWriter2 = fieldWriter1.next;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte((byte)0);
      fieldWriter0.put(byteVector0);
      fieldWriter2.put(byteVector0);
      fieldWriter0.visitAnnotation("InnerClasses", true);
      fieldWriter2.getSize();
      fieldWriter2.put(byteVector0);
      int int0 = fieldWriter0.next.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8797176514202678
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      String string0 = "ConstantVaue";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1792), "ConstantVaue", "java/lang/String", "java/lang/String", "java/lang/String");
      Attribute attribute0 = new Attribute("X,outO{}GKd8Bg>XJ9");
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      boolean boolean0 = false;
      fieldWriter0.visitAnnotation("java/lang/String", false);
      fieldWriter0.visitEnd();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "ConstantVaue";
      stringArray0[2] = "X,outO{}GKd8Bg>XJ9";
      classWriter0.visit((-1792), Integer.MAX_VALUE, "ConstantVaue", "ConstantVaue", "ConstantVaue", stringArray0);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      fieldWriter1.put(byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5941499016598986
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1792), "ConstantValue", "java/lang/String", "java/lang/String", "java/lang/String");
      Attribute attribute0 = new Attribute("X,outO{}GKd8Bg>XJ9");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("java/lang/String", false);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(1321);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 32767, "", "", "g#", (Object) null);
      ByteVector byteVector1 = new ByteVector(4096);
      fieldWriter0.put(byteVector1);
      ClassWriter classWriter1 = new ClassWriter(931);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.getSize();
      // Undeclared exception!
      try { 
        fieldWriter1.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0795361191286164
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4100);
      classWriter0.index = 2255;
      Item item0 = classWriter0.newFieldItem("", "k2XeR3JY[", "q75wi9!%lix4hHg ");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4100, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      fieldWriter0.visitAnnotation("k2XeR3JY[", true);
      Item[] itemArray0 = new Item[8];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      itemArray0[7] = item0;
      classWriter0.typeTable = itemArray0;
      fieldWriter0.visitAnnotation("k2XeR3JY[", true);
      ClassWriter classWriter1 = new ClassWriter(2263);
      ByteVector byteVector0 = classWriter1.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attribute attribute0 = new Attribute("owML");
      ClassWriter classWriter0 = new ClassWriter(4096);
      classWriter0.visitOuterClass("owML", "owML", (String) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-674), "owML", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RuntimeVisibleAnnotations");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassWriter classWriter0 = new ClassWriter((-1084));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1084), "T|5irBy<Z%_L959Id48", "", "T|5irBy<Z%_L959Id48", (Object) null);
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector1));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7528731929582104
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1885), "", "dJq(DQLXqPpE", "", "dJq(DQLXqPpE");
      Attribute attribute0 = new Attribute(";GFCEm");
      fieldWriter0.visitAnnotation("3gx.u)r- um", false);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      ByteVector byteVector0 = new ByteVector(4096);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1792), "ConstantVaue", "The array of suffixes must not be null", "The array of suffixes must not be null", "The array of suffixes must not be null");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put11(256, 131072);
      byteVector0.putLong(0L);
      ByteVector byteVector1 = byteVector0.putLong(468L);
      ByteVector byteVector2 = byteVector0.put11((-1792), (-1792));
      byteVector1.putByte(1279);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5809291928889149
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1885), "", "dJq(DQLXqPpE", "", "dJq(DQLXqPpE");
      fieldWriter0.visitAnnotation("3gx.u)r- um", false);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("k", false);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.visitAnnotation(";GFCEm", true);
      ByteVector byteVector0 = new ByteVector(4096);
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      ClassWriter classWriter1 = new ClassWriter((-814));
      fieldWriter0.getSize();
      int int0 = fieldWriter1.getSize();
      assertEquals(64, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "InnerClasses", "InnerClasses", "]}IoGs745PEre(;m%", "RuntimeInvisibleAnnotations");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte)59;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]}IoGs745PEre(;m%");
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("X,outO{}GKd8Bg>XJ9");
      fieldWriter0.getSize();
      Attribute attribute1 = attribute0.next;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      String string0 = "InnerClasses";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "InnerClasses", "InnerClasses", "]}IoGs745PEre(;m%", "RuntimeInvisibleAnnotations");
      Attribute attribute0 = new Attribute((String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)63;
      byte byte0 = (byte)0;
      FieldWriter fieldWriter1 = fieldWriter0.next;
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1792), "ConstantVaue", "java/lang/String", "java/lang/String", "java/lang/String");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-32768), "java/lang/String", (String) null, "<|v", pipedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "InnerClasses", "InnerClasses", "]}IoGs745PEre(;m%", "RuntimeInvisibleAnnotations");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 0, "-~%4=<H<", "InnerClasses", "Synthetic", sequenceInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.SequenceInputStream@1bce3bbd
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2181));
      String string0 = "]}IoGs745PEre(;m%";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "InnerClasses", "InnerClasses", "]}IoGs745PEre(;m%", "RuntimeInvisibleAnnotations");
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      Attribute attribute0 = new Attribute((String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)48;
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "]}IoGs745PEre(;m%", (String) null, "]}IoGs745PEre(;m%", object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
