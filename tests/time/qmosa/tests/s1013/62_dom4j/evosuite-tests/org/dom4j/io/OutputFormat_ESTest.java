/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:38:49 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5351193029103083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "}%FEU708";
      stringArray0[1] = "-indent";
      stringArray0[2] = "";
      stringArray0[3] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.995412454458509
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("kf$/D{1(**_Rg", true, "-indentSize");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.getNewLineAfterNTags();
      OutputFormat outputFormat2 = new OutputFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "LrpX@t[xj8}";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-expandEmptyLLfKcBuSXVR$zVR";
      stringArray0[4] = "kf$/D{1(**_Rg";
      outputFormat2.parseOptions(stringArray0, 2243);
      OutputFormat outputFormat3 = new OutputFormat("LrpX@t[xj8}", true, "NW#vdPbGq");
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.parseOptions(stringArray0, 2243);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.424489394342834
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags(34);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setLineSeparator("kf$/D{1(**_Rg");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "LrpX@t[xj8}";
      stringArray0[1] = "kf$/D{1(**_Rg";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewlines(false);
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("kf$/D{1(**_Rg", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7945462271875283
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("CU8``5d:F", false, "UTF-8");
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      outputFormat1.isNewLineAfterDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9303808555354545
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("7 klatvA>!rj", true, "7 klatvA>!rj");
      outputFormat1.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-indentSize";
      stringArray0[4] = "mj+M`l&qz}=%^,+";
      stringArray0[5] = "7 klatvA>!rj";
      stringArray0[6] = "_SZ0q 5%0?/Iz$";
      stringArray0[7] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.407151330249972
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      outputFormat0.setIndentSize((-104));
      outputFormat0.setIndentSize((-174));
      outputFormat0.setIndent("LLfKcBuSXVR$zVR");
      OutputFormat outputFormat1 = new OutputFormat("xftr4o", false, "-indentSize");
      outputFormat1.setIndent("xftr4o");
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat2 = new OutputFormat((String) null);
      outputFormat2.setOmitEncoding(true);
      int int0 = 0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-padText";
      stringArray0[1] = "xftr4oz 9*)D";
      outputFormat2.setExpandEmptyElements(true);
      stringArray0[2] = "GgXk_YE";
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat0.setNewlines(false);
      outputFormat1.getLineSeparator();
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-773));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -773
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.520566386740246
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(false);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize((-610));
      OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator("eKK2Tv");
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setXHTML(false);
      outputFormat0.setIndent("");
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[0];
      outputFormat0.setNewLineAfterNTags((-342));
      outputFormat0.parseOptions(stringArray0, 4668);
      outputFormat1.isSuppressDeclaration();
      outputFormat1.setIndent("");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.getLineSeparator();
      outputFormat1.getEncoding();
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.isSuppressDeclaration();
      assertEquals("eKK2Tv", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.201793123629589
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = null;
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      outputFormat0.setIndentSize((-1240232911));
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.setIndentSize(593);
      outputFormat0.setIndent("o'e]|N");
      outputFormat1.setTrimText(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.371588645474688
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(true);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "lwi;|y";
      stringArray0[1] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = new OutputFormat("-indentSize", false);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat1.parseOptions(stringArray0, 15);
      outputFormat0.isNewLineAfterDeclaration();
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.078369081049465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize((-248131859));
      outputFormat0.setLineSeparator("k}");
      outputFormat0.setNewLineAfterNTags((-428));
      outputFormat0.setIndent("-xhtmlUTF-8");
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtmlUTF-8";
      stringArray0[1] = "k}";
      stringArray0[2] = "k}";
      stringArray0[3] = "-xhtmlUTF-8";
      outputFormat0.parseOptions(stringArray0, 587);
      outputFormat0.setNewLineAfterNTags(3389);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-xhtmlUTF-8";
      outputFormat0.setIndent(true);
      stringArray1[1] = "-xhtmlUTF-8";
      stringArray1[2] = "k}";
      outputFormat1.setExpandEmptyElements(true);
      stringArray1[3] = "k}";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray1, (-428));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -428
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.11285303678132
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterNTags((-1646));
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setIndent("j\")w");
      OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('5');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (5)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6234176379752818
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, "NW#vdPbGq");
      outputFormat0.setNewLineAfterDeclaration(true);
      int int0 = 0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[1] = null;
      stringArray0[2] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[3] = "?1U";
      stringArray0[4] = "NW#vdPbGq";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = new OutputFormat((String) null, false);
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('#');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (#)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.224143929153847
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat("-encoding", true, ">K wAk-AZZE.}^w");
      outputFormat1.setPadText(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-encoding";
      outputFormat0.parseOptions(stringArray0, 1003);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setIndent("-encoding");
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isNewlines());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.619814540989509
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      outputFormat0.setIndentSize((-104));
      outputFormat0.setIndentSize((-174));
      outputFormat0.setIndent("LLfKcBuSXVR$zVR");
      outputFormat0.setTrimText(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setIndent("LLfKcBuSXVR$zVR");
      assertEquals("LLfKcBuSXVR$zVR", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3769640418028013
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-newlines";
      stringArray0[2] = null;
      stringArray0[3] = "YW-jxqH";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-lineSeparator", true, "Mm6XLm|jm,v~GwCTj");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 1);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("Mm6XLm|jm,v~GwCTj", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-expandEmpty-lineSeparator", outputFormat0.getIndent());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5045749997294995
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_SZ0q 5G0?/Iz$wL", true, "_SZ0q 5G0?/Iz$wL");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "_SZ0q 5G0?/Iz$wL";
      outputFormat1.parseOptions(stringArray0, 1);
      boolean boolean0 = outputFormat1.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6191642429520607
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("");
      outputFormat0.setEncoding("");
      outputFormat0.setIndentSize(2);
      outputFormat0.setIndent("UTF-8");
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.setIndent("");
      outputFormat0.isOmitEncoding();
      char char0 = '7';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('7');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (7)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.102117063514037
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setXHTML(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getIndent();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isPadText();
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize((-1));
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(true);
      boolean boolean0 = outputFormat0.isNewlines();
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.5211797582389175
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding((String) null);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("/^GqLcP");
      outputFormat0.isPadText();
      outputFormat1.setTrimText(false);
      outputFormat1.setIndent((String) null);
      outputFormat1.setNewlines(true);
      outputFormat1.getLineSeparator();
      outputFormat0.isXHTML();
      outputFormat1.isSuppressDeclaration();
      outputFormat0.setNewlines(false);
      outputFormat0.setXHTML(true);
      outputFormat1.isTrimText();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isXHTML();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator("E");
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.setNewlines(false);
      assertEquals("E", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.225227939993955
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize(1163);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[8];
      outputFormat0.setOmitEncoding(false);
      stringArray0[0] = "";
      stringArray0[1] = "h(tn!%jCX!D#u~p";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "QbmG+cJ@:I DvsB";
      stringArray0[5] = "";
      stringArray0[6] = " ^>qVAPYyJ#";
      outputFormat0.setIndent("");
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat1.isXHTML();
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.isTrimText();
      outputFormat1.setXHTML(false);
      outputFormat0.isNewLineAfterDeclaration();
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1624213645176673
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ZH&Lz#-)XEhDoV", true, "ZH&Lz#-)XEhDoV");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("ZH&Lz#-)XEhDoV", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isNewlines());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "ZH&Lz#-)XEhDoV";
      stringArray0[1] = "ZH&Lz#-)XEhDoV";
      stringArray0[2] = "ZH&Lz#-)XEhDoV";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat3.getLineSeparator());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertTrue(outputFormat3.isNewlines());
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isOmitEncoding());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isTrimText());
      assertTrue(outputFormat3.isPadText());
      assertEquals("  ", outputFormat3.getIndent());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.24319204066033
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator((String) null);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("O0y|UH687GW^)");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setNewlines(false);
      String[] stringArray0 = new String[0];
      outputFormat1.parseOptions(stringArray0, 618);
      outputFormat1.parseOptions(stringArray0, 618);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat2.isPadText();
      assertTrue(outputFormat2.isNewlines());
      
      outputFormat2.setNewlines(false);
      boolean boolean0 = outputFormat1.isNewlines();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getIndent();
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3291016900199226
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("LLfKcBuSXVR$zVR");
      outputFormat0.setIndent((String) null);
      outputFormat0.setEncoding((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 1645);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4488991463078236
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_SZ0q 5G0?/Iz$wL", true, "_SZ0q 5G0?/Iz$wL");
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-indentSize";
      stringArray0[4] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[5] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[6] = "-indentSize";
      stringArray0[7] = "-indentSize";
      stringArray0[8] = "-indentSize";
      outputFormat0.setNewLineAfterNTags((-2246));
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4994467946012942
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      stringArray0[2] = "}%FEU708";
      stringArray0[3] = "-indentSize";
      outputFormat0.parseOptions(stringArray0, 0);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4183591261436
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("}%FEU708", false, "UTF-8");
      OutputFormat outputFormat1 = new OutputFormat("lU:H&Yv9VwG^k7kTs!c", true);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.setSuppressDeclaration(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "}%FEU708";
      stringArray0[2] = "}%FEU708";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "}%FEU708";
      stringArray0[5] = "lU:H&Yv9VwG^k7kTs!c";
      stringArray0[6] = "UTF-8";
      stringArray0[7] = "-xhtml";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.parseOptions(stringArray0, 2);
      assertTrue(outputFormat1.isSuppressDeclaration());
      
      OutputFormat outputFormat2 = new OutputFormat("}%FEU708");
      OutputFormat.createCompactFormat();
      outputFormat2.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat2.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.258303007954067
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      outputFormat0.setIndentSize((-104));
      OutputFormat outputFormat1 = new OutputFormat("K<~@#i3T.d@=s\"p", true, "w4 ?WlAQgD\"");
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent((String) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = "'amUM%";
      stringArray0[2] = "w4 ?WlAQgD\"";
      stringArray0[3] = "K<~@#i3T.d@=s\"p";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat2.parseOptions(stringArray0, 4001);
      outputFormat0.getIndent();
      outputFormat0.isNewlines();
      OutputFormat outputFormat3 = new OutputFormat("'amUM%");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getIndent();
      assertEquals("", outputFormat0.getIndent());
      
      boolean boolean0 = outputFormat3.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5407000528031478
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_SZ0q 5G0?/Iz$wL", true, "_SZ0q 5G0?/Iz$wL");
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-indentSize";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(true);
      stringArray0[4] = "_SZ0q 5G0?/Iz$wL";
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setExpandEmptyElements(false);
      assertFalse(outputFormat0.isPadText());
      
      outputFormat0.setPadText(true);
      outputFormat0.setIndent((String) null);
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat outputFormat3 = new OutputFormat("", true);
      outputFormat1.setTrimText(true);
      boolean boolean0 = outputFormat2.isTrimText();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AJZ-Ss94F5", false, "9y>?})yM^FH-Hx}v~W");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "9y>?})yM^FH-Hx}v~W";
      stringArray0[1] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[2] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[3] = "9y>?})yM^FH-Hx}v~W";
      stringArray0[4] = "AJZ-Ss94F5";
      stringArray0[5] = "AJZ-Ss94F5";
      stringArray0[6] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[7] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[8] = "AJZ-Ss94F5";
      outputFormat0.parseOptions(stringArray0, 1349);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("AJZ-Ss94F5", outputFormat0.getIndent());
      assertEquals("9y>?})yM^FH-Hx}v~W", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_SZ0q 5G0?/Iz$wL", true, "_SZ0q 5G0?/Iz$wL");
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[9];
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-indentSize";
      stringArray0[4] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[5] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[6] = "-indentSize";
      stringArray0[7] = "-indentSize";
      stringArray0[8] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2246));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2246
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1645693257162542
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "9y>?})yM^FH-Hx}v~W";
      stringArray0[1] = "9`aa>:";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(1, int0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "-indentSize";
      OutputFormat outputFormat0 = new OutputFormat((String) null, true);
      outputFormat0.setLineSeparator("2S&%cOP5w");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "#o*6xr`agw*[%";
      stringArray0[2] = null;
      int int0 = (-104);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-104));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -104
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AJZ-Ss94F5", false, "9y>?})yM^FH-Hx}v~W");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "AJZ-Ss94F5";
      outputFormat0.setIndent("AJZ-Ss94F5");
      outputFormat0.setIndent("9y>?})yM^FH-Hx}v~W");
      assertEquals("9y>?})yM^FH-Hx}v~W", outputFormat0.getIndent());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1526254461503203
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat("", false, "-omitEncoding");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "}%FEU708";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "l#W /7Zt)` .:";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "}%FEU708";
      stringArray0[6] = "";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.getIndent();
      outputFormat0.isNewlines();
      assertTrue(outputFormat0.isOmitEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat("Ku;<B|");
      outputFormat2.setSuppressDeclaration(false);
      outputFormat2.getIndent();
      boolean boolean0 = outputFormat2.isSuppressDeclaration();
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[6];
      OutputFormat outputFormat0 = new OutputFormat(stringArray0[1]);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-expandEmptyLLfKcBuSXVR$zVR", true, "-expandEmpty-expandEmptyLLfKcBuSXVR$zVR");
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmpty-expandEmptyLLfKcBuSXVR$zVR";
      stringArray0[2] = "=m Rh?3q7E[i6@T";
      stringArray0[3] = "}%FEU708";
      stringArray0[4] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[5] = "}%FEU708";
      stringArray0[6] = "-lineSeparator";
      stringArray0[7] = "_SZ0q 5G0?/Iz$wL";
      outputFormat0.parseOptions(stringArray0, 2686);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.759673390745343
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String string0 = outputFormat0.getIndent();
      assertEquals("  ", string0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "  ";
      stringArray0[1] = "  ";
      stringArray0[2] = "  ";
      stringArray0[3] = "  ";
      stringArray0[4] = "  ";
      stringArray0[5] = "  ";
      outputFormat1.parseOptions(stringArray0, 1461);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isPadText());
      assertTrue(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isTrimText());
      
      outputFormat1.parseOptions(stringArray0, 1461);
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isOmitEncoding());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('k');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (k)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText", false, "-padText");
      outputFormat0.setIndent("-expandEmptyLLfKcBuSXVR$zVR");
      assertEquals("-expandEmptyLLfKcBuSXVR$zVR", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4780709313740186
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      outputFormat0.setIndentSize(1365);
      outputFormat0.setIndentSize((-174));
      outputFormat0.setIndent("");
      outputFormat0.setIndent("LLfKcBuSXVR$zVR");
      outputFormat0.setIndent("*>[e");
      outputFormat0.setIndent("LLfKcBuSXVR$zVR");
      assertEquals("LLfKcBuSXVR$zVR", outputFormat0.getIndent());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("");
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isPadText();
      outputFormat0.setIndentSize(1038);
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true);
      outputFormat0.setLineSeparator("-lineSeparator");
      outputFormat0.setIndentSize((-3626));
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("9c");
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "9c";
      stringArray0[1] = "_[#nVe9GyV:r.";
      outputFormat0.setNewlines(true);
      stringArray0[2] = "";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.setTrimText(true);
      stringArray0[4] = "9c";
      stringArray0[5] = "-lineSeparator";
      stringArray0[6] = "-lineSeparator";
      stringArray0[7] = "9c";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3626));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3626
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4994467946012942
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_SZ0q 5G0?/Iz$wL", false, "_SZ0q 5G0?/Iz$wL");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding("NW#vGd");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "NW#vGd";
      stringArray0[3] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[4] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[5] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[6] = "NW#vGd";
      outputFormat0.parseOptions(stringArray0, 0);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertEquals("NW#vGd", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3263269370134367
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("_SZ0q 5G0?/Iz$wL", false, "-encoding");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "-encoding";
      stringArray0[3] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[4] = "_SZ0q 5G0?/Iz$wL";
      stringArray0[5] = "_SZ0q 5G0?/Iz$wL";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("-encoding", outputFormat0.getEncoding());
      assertEquals(3, int0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("_SZ0q 5G0?/Iz$wL", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String string0 = outputFormat0.getEncoding();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }
}
