/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:33:46 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.bean.BeanMetaData;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.createXMLReader();
      sAXReader0.setStripWhitespaceText(true);
      sAXReader0.getEncoding();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.addHandler((String) null, pruningDispatchHandler0);
      sAXReader0.createXMLReader();
      sAXReader0.isStripWhitespaceText();
      String string0 = "//tmp/4{'K0&#;5S+g{zc$ZPX";
      // Undeclared exception!
      try { 
        MockURL.URL("//tmp/4{'K0&#;5S+g{zc$ZPX", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Parts", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.4897182683864876
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      ElementStack elementStack0 = new ElementStack(0);
      dispatchHandler0.addHandler("http://xml.org/sax/handlers/LexicalHandler", dispatchHandler0);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      SAXReader sAXReader1 = new SAXReader();
      sAXReader1.createXMLReader();
      StringReader stringReader0 = new StringReader("oUpCSqov!Wv");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0, " : ");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("l(To=");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("l(To=", (String) null);
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.4440977644767417
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setEncoding("//tmp/FJAxl^0FJAxl^");
      StringReader stringReader0 = new StringReader("//tmp/FJAxl^0FJAxl^");
      sAXReader0.getDispatchHandler();
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.367650236312253
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.createXMLReader();
      StringReader stringReader0 = new StringReader("oUpCSqov!Wv");
      try { 
        sAXReader0.read((Reader) stringReader0, "/");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:/// : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WARNING: Cannot load DefaultDocumentFactory: ");
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      ElementStack elementStack0 = new ElementStack();
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("http://xml.org/sax/handlers/LexicalHandler", "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-111);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4017, (-2438));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 30, (-2438));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.setProperty("http://xml.org/sax/handlers/LexicalHandler", xMLFilterImpl2);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      ElementStack elementStack0 = new ElementStack(0);
      dispatchHandler0.addHandler("http://xml.org/sax/handlers/LexicalHandler", dispatchHandler0);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("~", "");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "http://xml.org/sax/handlers/LexicalHandler";
      stringArray0[1] = "8^F";
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0, 0);
      ElementStack elementStack1 = new ElementStack();
      sAXReader0.getXMLReader();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 1851);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      String string1 = "P0q8~h{6n{X";
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, defaultHandler2_0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@48464e94 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#S<h*aiIKib");
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("#[s\\@A k9Dh");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("/", "http://xml.org/sax/handlers/LexicalHandler");
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)21;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.resolveEntity("2 gDV5", "2 gDV5");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader();
      sAXReader1.installXMLFilter(xMLFilterImpl0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      try { 
        MockURL.URL("SB}", "//tmp/Error oline 0A:;h9", (-1478), "org.jaxen.expr.DefaultPathExpr", uRLStreamHandler0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-1478
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      sAXReader0.createDefaultEntityResolver((String) null);
      byte byte0 = (byte)16;
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      ElementStack elementStack0 = new ElementStack(0);
      dispatchHandler0.addHandler("http://xml.org/sax/handlers/LexicalHandler", dispatchHandler0);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      ElementStack elementStack1 = new ElementStack();
      elementStack0.getDispatchHandler();
      elementStack0.getDispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      sAXReader0.setErrorHandler((ErrorHandler) null);
      sAXReader0.getErrorHandler();
      try { 
        sAXReader0.setXMLReaderClassName("");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null, false);
      sAXReader0.getErrorHandler();
      sAXReader0.setErrorHandler((ErrorHandler) null);
      sAXReader0.isMergeAdjacentText();
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)18;
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)21;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("9:2k`L^", "RD?`m2Mo'Z&VHflg%M");
      ElementStack elementStack0 = new ElementStack();
      elementStack0.getDispatchHandler();
      elementStack0.getDispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      sAXReader0.setErrorHandler(sAXContentHandler0);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.367650236312253
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)21;
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.createXMLReader();
      StringReader stringReader0 = new StringReader("oUpCSqov!Wv");
      try { 
        sAXReader0.read((Reader) stringReader0, "A");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/A : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.420295386033961
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<SAXParseException> class0 = SAXParseException.class;
      BeanMetaData.get(class0);
      MockFile.createTempFile("Z3*4@:bTJaa2a2&r", "FJAxl^");
      Namespace namespace0 = Namespace.get("m3/nBR$4~X_ei,|9)");
      namespace0.getXPathNameStep();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setValidation(false);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("node", "_r", 92, ">{a!C*zS.pMa%e#", uRLStreamHandler0);
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setIgnoreComments(true);
      sAXReader0.isIgnoreComments();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte) (-51);
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte) (-51);
      byteArray0[6] = (byte) (-51);
      byteArray0[7] = (byte) (-51);
      byteArray0[8] = (byte) (-51);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "//tmp/Z3*4@:bTJaa2a2&r0FJAxl^";
      stringArray0[1] = "org.dom4j.io.SAXHelper";
      String string0 = "Z&sfuFKuDg4c^>s{1J";
      stringArray0[2] = "Z&sfuFKuDg4c^>s{1J";
      stringArray0[3] = "//tmp/(Z1,Cg(#|Y|l%gc_0";
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0, (byte) (-51));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.ElementStack", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.39179823157295
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      ElementStack elementStack0 = new ElementStack(0);
      elementStack0.getDispatchHandler();
      dispatchHandler0.addHandler("http://xml.org/sax/handlers/LexicalHandler", (ElementHandler) null);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("~", "");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)108;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)21;
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.removeHandler("");
      pruningDispatchHandler0.getHandler("");
      pruningDispatchHandler0.getHandler("//tmp/org.jaxen.expr.DefaultPathExpr09D8g<");
      sAXReader0.setDefaultHandler((ElementHandler) null);
      ElementStack elementStack0 = new ElementStack(0);
      ElementStack elementStack1 = new ElementStack();
      ElementStack elementStack2 = new ElementStack();
      elementStack2.getDispatchHandler();
      elementStack2.getDispatchHandler();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "//tmp/org.jaxen.expr.DefaultPathExpr09D8g<";
      stringArray0[1] = "?1z1G6cb`Q|dJHr/";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null, 2519);
      PruningDispatchHandler pruningDispatchHandler1 = new PruningDispatchHandler();
      PruningDispatchHandler pruningDispatchHandler2 = new PruningDispatchHandler();
      PruningElementStack pruningElementStack1 = new PruningElementStack(stringArray0, pruningDispatchHandler1, 58);
      PruningElementStack pruningElementStack2 = new PruningElementStack(stringArray0, (ElementHandler) null);
      // Undeclared exception!
      try { 
        pruningDispatchHandler0.onStart(pruningElementStack2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.DispatchHandler", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.removeHandler("R'PBV('V..nATQ");
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.removeHandler("");
      dispatchHandler0.getHandler(".Z9F6");
      sAXReader0.setDefaultHandler((ElementHandler) null);
      ElementStack elementStack0 = new ElementStack(0);
      ElementStack elementStack1 = new ElementStack();
      elementStack1.getDispatchHandler();
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack((String[]) null, (ElementHandler) null, 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.PruningElementStack", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.getXMLFilter();
      sAXReader0.resetHandlers();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null, false);
      sAXReader1.getEncoding();
      sAXReader0.setXMLReader((XMLReader) null);
      String string0 = "//tmp/Error oline 0A:;h9";
      try { 
        sAXReader0.setXMLReaderClassName("//tmp/Error oline 0A:;h9");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //tmp/Error oline 0A:;h9 not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.setStripWhitespaceText(false);
      String string0 = "yV9v6\"";
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      XMLFilter xMLFilter0 = sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilter0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      String string1 = "";
      xMLFilterImpl3.resolveEntity("", "");
      xMLFilterImpl2.setEntityResolver(xMLFilterImpl3);
      try { 
        sAXReader0.setProperty("yV9v6\"", xMLFilterImpl2);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'yV9v6\"' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.setDispatchHandler(pruningDispatchHandler0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(3, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.366023184719631
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)18, (-442));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (-3014), 2895);
      byteArrayInputStream2.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      int int0 = 2852;
      SAXReader sAXReader0 = new SAXReader((String) null);
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // -3014 Nested exception: -3014
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createContentHandler(xMLFilterImpl0);
      sAXReader0.getDocumentFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      String string0 = "IA";
      ElementStack elementStack0 = new ElementStack();
      ElementStack elementStack1 = new ElementStack();
      elementStack0.getDispatchHandler();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "IA";
      stringArray0[1] = "IA";
      stringArray0[2] = "IA";
      stringArray0[3] = "IA";
      stringArray0[4] = "IA";
      stringArray0[5] = "IA";
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack(stringArray0, (ElementHandler) null, (-833));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.ElementStack", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.4939323273795786
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<SAXParseException> class0 = SAXParseException.class;
      BeanMetaData.get(class0);
      MockFile.createTempFile("Z3*4@:bTJaa2a2&r", "FJAxl^");
      Namespace namespace0 = Namespace.get("m3/nBR$4~X_ei,|9)");
      namespace0.getXPathNameStep();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEntityResolver();
      sAXReader0.setEntityResolver((EntityResolver) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2078), (byte)82);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)85;
      byteArray1[1] = (byte) (-61);
      byteArray1[2] = (byte)85;
      byteArray1[4] = (byte)85;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, 23, 25);
      byteArrayInputStream1.skip((byte)85);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      SAXReader sAXReader1 = new SAXReader(false);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      try { 
        sAXReader1.read((InputStream) byteArrayInputStream2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      String string0 = "R'PBV('V..nATQ";
      sAXReader0.setMergeAdjacentText(false);
      try { 
        sAXReader0.setFeature("R'PBV('V..nATQ", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature 'R'PBV('V..nATQ' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rq/Su*EE}nGJW");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("\" ");
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.addHandler(" {] |5V{X{-zu", dispatchHandler0);
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createDefaultEntityResolver((String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.removeHandler("//tmp/4{'K0&#;5S+g{zc$ZPX");
      dispatchHandler0.removeHandler((String) null);
      DispatchHandler dispatchHandler1 = sAXReader0.getDispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler1);
      ElementStack elementStack0 = new ElementStack((byte)16);
      ElementStack elementStack1 = new ElementStack();
      elementStack0.getDispatchHandler();
      PruningElementStack pruningElementStack0 = null;
      try {
        pruningElementStack0 = new PruningElementStack((String[]) null, dispatchHandler0, 92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.PruningElementStack", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.3886459900319466
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLReader xMLReader0 = null;
      SAXReader sAXReader0 = new SAXReader((XMLReader) null, true);
      sAXReader0.isIgnoreComments();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      InputStream inputStream0 = null;
      String string0 = "org.jaxen.dom.NamespaceNode";
      try { 
        sAXReader0.read((InputStream) null, "org.jaxen.dom.NamespaceNode");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/org.jaxen.dom.NamespaceNode (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/org.jaxen.dom.NamespaceNode (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rq/Su*EE}nGJW");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("rq/Su*EE}nGJW");
      sAXReader_SAXEntityResolver0.resolveEntity("W7;~;XDCk#", "org.jaxen.expr.iter.IterableParentAxis");
      SAXReader sAXReader0 = new SAXReader(false);
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4577358508016443
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.createDefaultEntityResolver((String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl0);
      sAXReader0.createXMLReader();
      StringReader stringReader0 = new StringReader("oUpCSqov!Wv");
      try { 
        sAXReader0.read((Reader) stringReader0, "//tmp/Error on line 0A:;h9");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file://tmp/Error%20on%20line%200A:;h9 : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      InputSource inputSource0 = xMLFilterImpl1.resolveEntity("|", "D]#-mA_");
      assertNull(inputSource0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertNotNull(documentFactory0);
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<SAXParseException> class0 = SAXParseException.class;
      BeanMetaData beanMetaData0 = BeanMetaData.get(class0);
      QName qName0 = QName.get((String) null, (Namespace) null);
      BeanElement beanElement0 = new BeanElement(qName0, qName0);
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      beanElement0.getQualifiedName();
      QName qName1 = beanAttributeList0.getQName(0);
      qName1.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      sAXReader0.isStripWhitespaceText();
      sAXReader0.isIncludeExternalDTDDeclarations();
      URL uRL0 = MockURL.getFileExample();
      assertEquals("some", uRL0.getAuthority());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.275805525146526
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      InputSource inputSource0 = new InputSource(" : ");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol:  :  Nested exception: no protocol:  : 
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      InputSource inputSource0 = new InputSource(" : ");
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "http://xml.org/sax/handlers/LexicalHandler", 27, "http://xml.org/sax/handlers/LexicalHandler", uRLStreamHandler0);
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3594545031847076
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte)18;
      byteArray0[8] = (byte)38;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)38, (byte)18);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-1141), 608);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream1, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // -1141 Nested exception: -1141
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3881291941663134
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)38;
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory0, true);
      try { 
        sAXReader0.read("//tmp/FJAxl^0FJAxl^");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //tmp/FJAxl^0FJAxl^ Nested exception: no protocol: //tmp/FJAxl^0FJAxl^
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Class<SAXParseException> class0 = SAXParseException.class;
      BeanMetaData beanMetaData0 = BeanMetaData.get(class0);
      QName qName0 = QName.get((String) null, (Namespace) null);
      BeanElement beanElement0 = new BeanElement(qName0, qName0);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0, beanMetaData0);
      QName qName1 = beanAttributeList0.getQName(0);
      DocumentFactory documentFactory0 = qName1.getDocumentFactory();
      beanMetaData0.getIndex((String) null);
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      sAXReader0.isIncludeExternalDTDDeclarations();
      URL uRL0 = MockURL.getFileExample();
      assertEquals((-1), uRL0.getDefaultPort());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.isIncludeExternalDTDDeclarations();
      sAXReader0.setStringInternEnabled(false);
      MockFile mockFile0 = new MockFile("gj:fW7");
      sAXReader0.setMergeAdjacentText(true);
      MockFile.createTempFile("gj:fW7", "gj:fW7", (File) mockFile0);
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rq/Su*EE}nGJW");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("\" ");
      sAXReader_SAXEntityResolver0.resolveEntity("`yjpL", "\" ");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "W7;~;XDCk#");
      SAXReader sAXReader0 = new SAXReader((String) null);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.removeHandler("//tmp/Error on line 0A:;h9");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)18, (byte)18);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      assertFalse(byteArrayInputStream2.equals((Object)byteArrayInputStream1));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.4194286881489733
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      ElementStack elementStack0 = new ElementStack(0);
      dispatchHandler0.addHandler("http://xml.org/sax/handlers/LexicalHandler", dispatchHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("//tmp/Error on line 0A:;h9");
      stringReader0.ready();
      SAXReader sAXReader1 = new SAXReader(true);
      try { 
        sAXReader1.read((Reader) stringReader0, "V{3mKcwj}d!hPiUW");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document V{3mKcwj}d!hPiUW : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.336704583890597
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      StringReader stringReader0 = new StringReader("//tmp/FJAxl^0FJAxl^");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "#S<h*aiIKib";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#S<h*aiIKib");
      String string1 = "9D8g<";
      File file0 = MockFile.createTempFile("#S<h*aiIKib", "9D8g<");
      file0.setExecutable(true);
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      ElementStack elementStack0 = new ElementStack(0);
      dispatchHandler0.addHandler("http://xml.org/sax/handlers/LexicalHandler", dispatchHandler0);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)38;
      byteArray0[5] = (byte)38;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)38;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte)38;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)38, 1200);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)38, (byte)0);
      byteArrayInputStream1.reset();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      DefaultDocument defaultDocument0 = new DefaultDocument();
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertTrue(boolean0);
      
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Class<SAXParseException> class0 = SAXParseException.class;
      BeanMetaData.get(class0);
      MockFile.createTempFile("Z3*4@:bTJaa2a2&r", "FJAxl^");
      Namespace namespace0 = Namespace.get("m3/nBR$4~X_ei,|9)");
      QName qName0 = QName.get((String) null, namespace0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)122;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)122, 42);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)122;
      byteArray1[1] = (byte)122;
      byteArray1[2] = (byte)122;
      byteArray1[3] = (byte)122;
      byteArray1[4] = (byte)122;
      byteArray1[5] = (byte)122;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (-1720), (-1));
      byteArrayInputStream0.mark((byte)122);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      qName0.getDocumentFactory();
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      try { 
        sAXReader0.setProperty("Z3*4@:bTJaa2a2&r", dataInputStream0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: Z3*4@:bTJaa2a2&r
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, false);
      sAXReader0.setStripWhitespaceText(true);
      sAXReader0.isStringInternEnabled();
      MockFile mockFile0 = new MockFile("6u.hvp>9=V9a[ktuj");
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      String string0 = "//tmp/Z3*4@:bTJaa2a2&r0FJAxl^";
      MockFile mockFile0 = new MockFile("//tmp/Z3*4@:bTJaa2a2&r0FJAxl^", "//tmp/Z3*4@:bTJaa2a2&r0FJAxl^");
      mockFile0.setExecutable(false);
      SAXReader sAXReader1 = new SAXReader();
      try { 
        sAXReader1.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Class<SAXParseException> class0 = SAXParseException.class;
      BeanMetaData.get(class0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter1);
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)45);
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("FJAxl^");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class FJAxl^ not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-697), 2631);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)18, (byte)18);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#N[GYCp=EUfA]\"");
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.4830268923041636
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Class<SAXParseException> class0 = SAXParseException.class;
      BeanMetaData.get(class0);
      MockFile.createTempFile("Z3*4@:bTJaa2a2&r", "FJAxl^");
      StringReader stringReader0 = new StringReader("//tmp/4{'K0&#;5S+g{zc$ZPX");
      stringReader0.close();
      SAXReader sAXReader0 = new SAXReader(false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl0, false);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader1.addHandler("org.dom4j.io.SAXReader$SAXEntityResolver", dispatchHandler0);
      SAXContentHandler sAXContentHandler0 = sAXReader1.createContentHandler(xMLFilterImpl0);
      sAXReader0.configureReader(xMLFilterImpl0, sAXContentHandler0);
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed Nested exception: Stream closed
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.getXMLFilter();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler((XMLReader) null);
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, sAXContentHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.298155571027304
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "http://xml.org/sax/handlers/LexicalHandler");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/9D8g<09D8g<");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      StringReader stringReader0 = new StringReader("XPath expression uses unbound namespace prefix ");
      try { 
        sAXReader0.read((Reader) stringReader0, "[KVyG>PAZ&q=");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("file://", true);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class file:// not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertNotNull(xMLReader0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.2572735276240543
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "http://xml.org/sax/features/namespaces");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rq/Su*EE}nGJW");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("\" ");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "W7;~;XDCk#");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      StringReader stringReader0 = new StringReader("=U[nh&d7f O");
      try { 
        sAXReader0.read((Reader) stringReader0, "=U[nh&d7f O");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2f738e41 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2f738e41 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.214734015212756
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rq/Su*EE}nGJW");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("\" ");
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, "W7;~;XDCk#");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      try { 
        sAXReader0.setProperty("", "");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      assertNotNull(dispatchHandler0);
      
      ElementStack elementStack0 = new ElementStack(0);
      dispatchHandler0.addHandler("http://xml.org/sax/handlers/LexicalHandler", dispatchHandler0);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.createContentHandler(xMLFilterImpl1);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("~", "");
      String[] stringArray0 = new String[9];
      ElementStack elementStack1 = new ElementStack();
      elementStack0.getDispatchHandler();
      elementStack0.getDispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      sAXReader0.setErrorHandler((ErrorHandler) null);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      assertNotNull(dispatchHandler0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setEncoding((String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)21;
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rq/Su*EE}nGJW");
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      HandlerBase handlerBase0 = new HandlerBase();
      sAXReader0.setErrorHandler(handlerBase0);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1, true);
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      assertFalse(sAXReader1.isMergeAdjacentText());
      assertFalse(sAXReader1.isStripWhitespaceText());
      assertFalse(sAXReader1.isIgnoreComments());
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader1.isStringInternEnabled());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-697), 2631);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)18, (byte)18);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0, ">d7#@");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // -697 Nested exception: -697
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
