/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:08:19 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.PipedInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.009656341980306
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(19);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("#6");
      JavaParser javaParser0 = new JavaParser("#6");
      simpleNode0.setIdentifier("#6");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      StringReader stringReader0 = new StringReader("{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 493, 0, 493);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)24;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SystemInUtil.addInputLine("*;|U*|E");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#6");
      SimpleNode simpleNode1 = new SimpleNode((byte) (-31));
      simpleNode1.parent = (Node) simpleNode0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{", stringWriter0);
      Node node0 = simpleNode1.jjtGetParent();
      assertFalse(node0.equals((Object)simpleNode1));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.16937906138404
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("6");
      simpleNode0.toString("6");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("6", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.append((CharSequence) "#");
      simpleNode0.setIdentifier("<<");
      SimpleNode simpleNode1 = new SimpleNode(2356);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter(0);
      simpleNode0.dump("kk49APRe[)S}>l1q", stringWriter3);
      StringWriter stringWriter4 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter4);
      StringWriter stringWriter5 = stringWriter3.append('1');
      stringWriter5.flush();
      StringWriter stringWriter6 = stringWriter2.append('1');
      simpleNode0.dump("8>~1(;/]12.,kw", stringWriter6);
      stringWriter5.append((CharSequence) "6EnumConstant : 6");
      simpleNode1.dump("6", stringWriter5);
      stringWriter4.append('I');
      simpleNode1.dump("+Q!9RI@&D,8siZJa\u0007", stringWriter3);
      assertEquals("<EnumConstant>\n  <identifier>6</identifier>\n  <identifier>*lshft</identifier>\n</EnumConstant>\n16EnumConstant : 6", stringWriter3.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6190757066442618
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("D");
      simpleNode0.setIdentifier("&");
      StringReader stringReader0 = new StringReader("6");
      StringReader stringReader1 = new StringReader(" )cRB^[AC`p");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      stringReader1.close();
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser2 = new JavaParser(javaParser0.token_source);
      javaParser2.Modifiers();
      simpleNode0.toString("uI");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      stringWriter0.write(0);
      simpleNode0.dump("0%[T9)", stringWriter0);
      assertEquals("\u0000<PackageDeclaration>\n  <identifier>D</identifier>\n  <identifier>*amp</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2283766931186737
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier(">>");
      simpleNode0.toString();
      simpleNode0.setIdentifier("Nn0sLm)X:T\"_!'F");
      Node node0 = simpleNode0.parent;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      SystemInUtil.addInputLine(">=");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("PackageDeclaration : >>", stringWriter0);
      Node node1 = simpleNode0.jjtGetParent();
      assertNull(node1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.toString("");
      simpleNode0.setIdentifier("CompilationUnit : ");
      Node node0 = simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("), ");
      assertSame(simpleNode0, node0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-748));
      StringWriter stringWriter0 = new StringWriter(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.id = 0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.identifiers.add((String) null);
      simpleNode0.identifiers.add("lvy{@[-O");
      simpleNode0.identifiers.add("=Uow}hM^i");
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("=Uow}hM^i", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.587652786215132
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("&&");
      StringReader stringReader0 = new StringReader("&&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser2 = new JavaParser(stringReader0);
      javaParser2.Modifiers();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("FDX]n|5soe", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode((-12437164));
      simpleNode1.dump("&&", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.jjtGetChild(0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-748));
      StringWriter stringWriter0 = new StringWriter(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.id = 0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.identifiers.add((String) null);
      simpleNode0.identifiers.add("lvy{@[-O");
      simpleNode0.identifiers.add("=Uow}hM^i");
      simpleNode0.identifiers.add("ReturnStatement");
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("=Uow}hM^i", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0913440544817936
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.setIdentifier("Java Parser Version 1.1:  Reading from standard input . . .");
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.toString("^8 aPR8");
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("Java Parser Version 1.1:  Reading from standard input . . .");
      simpleNode0.jjtClose();
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('D');
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "Java Parser Version 1.1:  Reading from standard input . . .");
      simpleNode0.dump("^8 aPR8", stringWriter2);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(0);
      assertEquals(2, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7575262809294228
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      StringReader stringReader1 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.dump("b0E", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser1, 413);
      simpleNode1.jjtAddChild(simpleNode2, 8);
      javaParser1.Modifiers();
      SimpleNode simpleNode3 = new SimpleNode(413);
      simpleNode1.toString("FDX]n|5soe");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("CastLookahead", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode2.toString("AnnotationTypeMemberDeclaration");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 413
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5722195482722352
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("D");
      simpleNode0.toString();
      StringReader stringReader0 = new StringReader("D");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      StringReader stringReader1 = new StringReader("");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("D", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.dump("b0E", stringWriter0);
      javaParserTokenManager1.getNextToken();
      SimpleNode simpleNode2 = new SimpleNode(javaParser1, 413);
      simpleNode1.jjtAddChild(simpleNode2, 0);
      javaParser1.Modifiers();
      SimpleNode simpleNode3 = new SimpleNode(413);
      simpleNode1.toString("FDX]n|5soe");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("CastLookahead", stringWriter0);
      simpleNode3.jjtAddChild(simpleNode2, 1);
      // Undeclared exception!
      try { 
        simpleNode2.toString("AnnotationTypeMemberDeclaration");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 413
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7334495354735118
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode((-748));
      StringWriter stringWriter0 = new StringWriter(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.id = 0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild(nodeArray0[0], 1026);
      simpleNode0.identifiers = arrayList0;
      SimpleNode simpleNode1 = new SimpleNode((-748));
      simpleNode0.toString("</|; ?R(X>1");
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("6EnumConstant : 6", stringWriter1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.272882856534606
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      StringReader stringReader0 = new StringReader("VariableDeclaratorId");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("EnumConstant : ");
      JavaParser javaParser1 = new JavaParser(stringReader1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 10, 66, 10);
      javaParser0.ConditionalOrExpression();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser2 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser3 = new JavaParser(stringReader1);
      JavaParser javaParser4 = new JavaParser("S");
      javaParser3.Modifiers();
      simpleNode0.toString("<IDENTIFIER>");
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      simpleNode0.dump("<IDENTIFIER>", stringWriter0);
      assertEquals("<EnumConstant>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.387188887795372
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("M");
      simpleNode0.jjtOpen();
      simpleNode0.toString("M");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("M", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.append((CharSequence) "#");
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = 'w';
      charArray0[2] = '-';
      charArray0[3] = 'J';
      charArray0[4] = 'F';
      charArray0[5] = 'F';
      charArray0[6] = '-';
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, (-26587893));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -26587893. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6105981585090816
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-748));
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("=Uow}hM^i", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode((-2040330191));
      simpleNode1.dump("{", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "#");
      char[] charArray0 = new char[6];
      charArray0[0] = '[';
      charArray0[1] = '-';
      charArray0[2] = 'J';
      charArray0[3] = 'M';
      charArray0[4] = 'w';
      charArray0[5] = 'F';
      stringWriter0.write(charArray0);
      SimpleNode simpleNode0 = new SimpleNode((-1088808359));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1088808359
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("]Wo");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 114);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "#";
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "priva");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)99;
      char char0 = '/';
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (byte)99);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(715);
      StringWriter stringWriter0 = new StringWriter(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte) (-1);
      String string0 = "k==P#{v_608?nBS0";
      SystemInUtil.addInputLine("k==P#{v_608?nBS0");
      char[] charArray0 = new char[2];
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "k==P#{v_608?nBS0");
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = stringWriter1.append('$');
      stringWriter2.flush();
      String string1 = "+Q!9RI@&D,8siZJa\\7";
      // Undeclared exception!
      try { 
        simpleNode0.dump("+Q!9RI@&D,8siZJa\u0007", stringWriter2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 715
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaParser javaParser0 = new JavaParser("nlK@o#F-?#Sq{");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 60);
      simpleNode0.jjtGetNumChildren();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 60);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-88534862));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -88534862
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7576378583071737
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "private");
      simpleNode0.dump("_AH[\"", (Writer) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[2] = (byte)80;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      SystemInUtil.addInputLine((String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      char[] charArray0 = new char[9];
      charArray0[0] = 'E';
      charArray0[1] = '/';
      charArray0[7] = 'E';
      charArray0[3] = '/';
      charArray0[4] = 'm';
      charArray0[5] = 'E';
      charArray0[7] = 'E';
      charArray0[8] = 'E';
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.684075452412368
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-748));
      StringWriter stringWriter0 = new StringWriter(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.id = 0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.identifiers.add("lvy{@[-O");
      simpleNode0.identifiers = arrayList0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("=Uow}hM^i", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("b;Qm}#-^7_");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2021538713));
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-398));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(40);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-3922));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(67);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
