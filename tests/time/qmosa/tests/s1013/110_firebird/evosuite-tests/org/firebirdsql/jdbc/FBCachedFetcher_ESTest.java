/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:59:35 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Delayed;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBResultSetNotUpdatableException;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBCachedLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)114;
      byteArray1[1] = (byte)125;
      byteArray1[2] = (byte)85;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte)41;
      byteArray1[5] = (byte) (-37);
      byteArray1[6] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-37);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)1;
      byteArray3[1] = (byte) (-1);
      byteArray3[2] = (byte)1;
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7020415415986028
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[5][8];
      fBCachedFetcher0.relative((-1932));
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byteArray1[3] = (byte) (-6);
      linkedList0.add(byteArray0);
      byte[][] byteArray2 = linkedList0.poll();
      fBCachedFetcher0.last();
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      linkedList0.add(byteArray2);
      fBCachedFetcher1.next();
      fBCachedFetcher1.updateRow((byte[][]) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.46781180859427
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      linkedList0.listIterator();
      GDSType.getType("");
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.next();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher1.isAfterLast();
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null, fBConnectionProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2271249752026034
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[][] byteArray0 = new byte[3][3];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[4][7];
      byte[] byteArray2 = new byte[0];
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-2);
      byteArray3[1] = (byte) (-2);
      byteArray3[2] = (byte) (-17);
      byteArray3[3] = (byte) (-2);
      byteArray1[1] = byteArray3;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      linkedList1.add(byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][7];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-2);
      byteArray2[1] = (byte) (-2);
      byteArray2[2] = (byte) (-17);
      byteArray2[3] = (byte) (-2);
      byteArray0[1] = byteArray2;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-2);
      byteArray3[1] = (byte) (-17);
      byteArray0[3] = byteArray3;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9280478396261032
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.push(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      byte[][] byteArray1 = new byte[3][3];
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-2);
      byteArray2[1] = (byte)3;
      byteArray2[2] = (byte) (-1);
      byteArray2[3] = (byte) (-96);
      byteArray2[4] = (byte)0;
      byteArray2[5] = (byte) (-66);
      fBCachedFetcher0.updateRow(byteArray1);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-67);
      byteArray1[1] = (byte) (-7);
      byteArray1[2] = (byte)58;
      byteArray1[3] = (byte)117;
      byteArray1[4] = (byte)117;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)58;
      byteArray2[1] = (byte) (-67);
      byteArray2[2] = (byte)58;
      byteArray2[3] = (byte) (-19);
      byteArray2[4] = (byte)58;
      byteArray2[5] = (byte)58;
      byteArray2[6] = (byte)117;
      byteArray2[7] = (byte)117;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-7);
      byteArray3[1] = (byte) (-19);
      byteArray3[2] = (byte)117;
      byteArray3[3] = (byte) (-19);
      byteArray3[4] = (byte) (-7);
      byteArray3[5] = (byte)117;
      byteArray3[6] = (byte)117;
      byteArray3[7] = (byte)58;
      byteArray0[2] = byteArray3;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.46113586831233
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.first();
      assertFalse(fBCachedFetcher0.isFirst());
      
      linkedList1.listIterator();
      byte[][] byteArray0 = new byte[1][8];
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byteArray1[0] = (byte)100;
      byteArray1[1] = (byte)100;
      byteArray1[2] = (byte)100;
      byteArray1[3] = (byte)3;
      fBCachedFetcher0.last();
      byteArray1[4] = (byte)100;
      byteArray1[5] = (byte)100;
      byteArray1[6] = (byte)100;
      byteArray1[5] = (byte)100;
      byteArray0[0] = byteArray1;
      fBCachedFetcher0.relative((-2));
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.633047421424836
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[1][8];
      fBCachedFetcher0.relative((-1932));
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byteArray1[3] = (byte)3;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.last();
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher2.isBeforeFirst();
      fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher2.first();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8545413754689406
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.spliterator();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      linkedList0.listIterator();
      fBCachedFetcher0.close();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.setFetchSize((-1472));
      fBCachedFetcher0.next();
      linkedList0.addLast((byte[][]) null);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertEquals((-1472), fBCachedFetcher0.getFetchSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9069734927962627
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[1][8];
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byteArray1[3] = (byte)3;
      fBCachedFetcher0.last();
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher1.isFirst();
      fBCachedFetcher1.isLast();
      fBCachedFetcher0.previous();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      int int0 = fBCachedFetcher1.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.792150980683102
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.spliterator();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.close();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      linkedList0.addLast((byte[][]) null);
      fBCachedFetcher0.isLast();
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][5];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-66);
      byteArray1[1] = (byte)25;
      byteArray1[2] = (byte)97;
      byteArray1[3] = (byte) (-100);
      byteArray1[4] = (byte) (-17);
      byteArray1[5] = (byte)15;
      byteArray1[6] = (byte) (-98);
      byteArray1[7] = (byte)89;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-125);
      byteArray2[1] = (byte) (-98);
      byteArray2[2] = (byte) (-66);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)97;
      byteArray3[1] = (byte) (-100);
      byteArray3[2] = (byte) (-125);
      byteArray3[3] = (byte) (-98);
      byteArray3[4] = (byte)3;
      byteArray3[5] = (byte) (-17);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-17);
      byteArray4[1] = (byte) (-17);
      byteArray4[2] = (byte)25;
      byteArray4[3] = (byte)3;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)97;
      byteArray5[1] = (byte) (-100);
      byteArray5[2] = (byte)25;
      byteArray5[3] = (byte) (-100);
      byteArray5[4] = (byte) (-98);
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      boolean boolean1 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5985671487553916
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[1][8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.relative((-1932));
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte byte0 = (byte) (-6);
      byteArray1[3] = (byte) (-6);
      linkedList0.add(byteArray0);
      fBCachedFetcher0.last();
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher1.isBeforeFirst();
      String string0 = "M!]rFVC";
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      try { 
        fBResultSet1.updateFloat("M!]rFVC", (float) (byte) (-6));
        fail("Expecting exception: FBResultSetNotUpdatableException");
      
      } catch(FBResultSetNotUpdatableException e) {
         //
         // Underlying ResultSet is not updatable.
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6584259331375506
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[1][8];
      fBCachedFetcher0.relative((-1932));
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byteArray1[3] = (byte) (-6);
      linkedList0.add(byteArray0);
      linkedList0.toArray();
      fBCachedFetcher0.last();
      byteArray0[0] = byteArray1;
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher1.isBeforeFirst();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      String string0 = "";
      GDSType.getType("");
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7636243358889203
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.first();
      linkedList1.listIterator();
      byte[][] byteArray0 = new byte[1][8];
      linkedList0.removeAll(linkedList1);
      linkedList0.add(byteArray0);
      linkedList1.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      linkedList0.listIterator();
      FBResultSet fBResultSet2 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet2);
      linkedList1.add(byteArray0);
      fBCachedFetcher1.afterLast();
      fBCachedFetcher1.previous();
      fBCachedFetcher0.isLast();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher1.relative((-1987));
      fBCachedFetcher1.getRowNum();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6609771148030457
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[1][8];
      fBCachedFetcher0.relative((-1932));
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byteArray1[3] = (byte)3;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.last();
      linkedList0.add(byteArray0);
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.isBeforeFirst();
      fBCachedFetcher0.previous();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      boolean boolean0 = fBCachedFetcher1.first();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-2);
      byteArray1[1] = (byte)3;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-96);
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte) (-66);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6127939610435797
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      int int0 = (-1932);
      fBCachedFetcher0.relative((-1932));
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte byte0 = (byte) (-6);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.last();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8300297690148382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[][] byteArray0 = new byte[3][3];
      byte byte0 = (byte) (-2);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[4][7];
      byte[] byteArray2 = new byte[0];
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-2);
      byteArray3[1] = (byte) (-2);
      byteArray3[2] = (byte) (-17);
      byteArray3[3] = (byte) (-2);
      byteArray1[1] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-2);
      byteArray4[1] = (byte) (-17);
      byteArray4[2] = (byte) (-17);
      byteArray1[2] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-2);
      byteArray5[1] = (byte) (-2);
      byteArray1[3] = byteArray5;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(4128);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.530424947001807
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<byte[][]> predicate1 = predicate0.and(predicate0);
      Predicate<byte[][]> predicate2 = predicate1.negate();
      Predicate<byte[][]> predicate3 = predicate2.and(predicate1);
      predicate3.negate();
      predicate0.or(predicate2);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Delayed[] delayedArray0 = new Delayed[0];
      linkedList0.toArray(delayedArray0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.listIterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.relative(1619);
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.747862495111938
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[5][8];
      fBCachedFetcher0.relative((-1932));
      byte[] byteArray1 = new byte[8];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte byte0 = (byte) (-6);
      byteArray1[3] = (byte) (-6);
      linkedList0.add(byteArray0);
      fBCachedFetcher0.last();
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher1.next();
      fBCachedFetcher1.updateRow(fBResultSet0.row);
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher1.isBeforeFirst();
      String string0 = "M!]rFVC";
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      String string1 = "";
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      linkedList0.listIterator();
      fBCachedFetcher0.isFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1868601258864917
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList1.add(byteArray0);
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-2);
      byteArray2[1] = (byte) (-2);
      linkedList0.add(byteArray0);
      linkedList1.add(byteArray0);
      byteArray2[2] = (byte) (-2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.isLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<byte[][]> predicate1 = predicate0.and(predicate0);
      Predicate<byte[][]> predicate2 = predicate0.and(predicate1);
      predicate2.or(predicate0);
      predicate2.negate();
      predicate0.or(predicate0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.listIterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(fBCachedFetcher0.isEmpty());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList1.add(byteArray0);
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-2);
      byteArray2[1] = (byte) (-2);
      linkedList0.add(byteArray0);
      linkedList1.add(byteArray0);
      byteArray2[2] = (byte) (-2);
      byteArray2[3] = (byte) (-17);
      linkedList0.add(byteArray0);
      linkedList1.add(byteArray0);
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((byte) (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBuffer0.deepCopy();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute((-20));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.331379633350042
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-121);
      byteArray1[1] = (byte)14;
      byteArray1[2] = (byte)62;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)62;
      LinkedHashSet<FBCachedLongVarCharField> linkedHashSet0 = new LinkedHashSet<FBCachedLongVarCharField>();
      linkedList0.removeAll(linkedHashSet0);
      byteArray2[1] = (byte)62;
      byteArray2[2] = (byte) (-121);
      byteArray2[3] = (byte) (-121);
      byteArray2[4] = (byte)100;
      byteArray2[5] = (byte) (-121);
      byteArray2[6] = (byte)14;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.listIterator();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1468025731695666
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][8];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-20);
      byteArray1[1] = (byte)105;
      byteArray1[2] = (byte)122;
      byteArray1[3] = (byte) (-19);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)122;
      byteArray2[1] = (byte)105;
      byteArray2[2] = (byte)105;
      byteArray2[3] = (byte) (-20);
      byteArray2[4] = (byte) (-20);
      byteArray2[5] = (byte) (-20);
      byteArray2[6] = (byte)105;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-20);
      byteArray3[1] = (byte) (-19);
      byteArray3[2] = (byte)122;
      byteArray3[3] = (byte) (-19);
      byteArray3[4] = (byte) (-20);
      byteArray3[5] = (byte)122;
      byteArray3[6] = (byte) (-19);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte) (-19);
      byteArray4[1] = (byte)105;
      byteArray4[2] = (byte) (-20);
      byteArray4[3] = (byte)105;
      byteArray4[4] = (byte)122;
      byteArray4[5] = (byte)122;
      byteArray4[6] = (byte)105;
      byteArray4[7] = (byte)105;
      byteArray4[8] = (byte) (-20);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte)1;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      GDS gDS0 = null;
      DatabaseParameterBuffer databaseParameterBuffer1 = databaseParameterBuffer0.deepCopy();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      IscDbHandle iscDbHandle0 = null;
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer1, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl0.setRsr_id(16384);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper0, (-1892), 16384, isc_stmt_handle_impl0, fBResultSet0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][2];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)123;
      byteArray1[1] = (byte) (-67);
      byteArray1[2] = (byte)43;
      byteArray1[3] = (byte)62;
      byteArray1[4] = (byte)119;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<byte[][]> predicate1 = predicate0.and(predicate0);
      predicate1.negate();
      Predicate<byte[][]> predicate2 = predicate1.negate();
      linkedList0.removeIf(predicate2);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.listIterator();
      GDSType.getType("Result set is TYPE_FORWARD_ONLY");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null, fBConnectionProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.821728596392053
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-2);
      byteArray1[1] = (byte)3;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-96);
      byte byte0 = (byte)0;
      byteArray1[4] = (byte)0;
      linkedList0.add(byteArray0);
      byteArray1[5] = (byte) (-66);
      byteArray1[6] = (byte)84;
      byteArray0[0] = byteArray1;
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.setFetchSize((byte) (-66));
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.relative((byte) (-1));
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.absolute((-1189));
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.close();
      fBCachedFetcher0.isEmpty();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl3.getTr();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_blob_handle_impl1.getTr();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute(41);
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.888599504919186
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.removeExtensionParams();
      GDS gDS0 = null;
      DatabaseParameterBuffer databaseParameterBuffer1 = databaseParameterBuffer0.deepCopy();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      IscDbHandle iscDbHandle0 = null;
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBuffer1, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper0, (-1892), 16384, isc_stmt_handle_impl0, fBResultSet0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      GDSType.getType((String) null);
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }
}
