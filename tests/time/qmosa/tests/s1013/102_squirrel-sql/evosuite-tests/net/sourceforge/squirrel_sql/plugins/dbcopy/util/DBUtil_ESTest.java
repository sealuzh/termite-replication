/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:30:40 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Rw<BQ4a\"t G", "Rw<BQ4a\"t G", "UG>F%5%dJTgt4PcR", "UG>F%5%dJTgt4PcR", (-4), "", (-2021161078), 807, 1184, (-4), "DBUtil.error.unknowntype", "informix has no offset", 807, (-4), "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      Integer integer0 = new Integer(39);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "ofkH$iDk!qcY]", "R1k D:.3G)> >VDE");
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, " ");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      DBUtil.typesAreEquivalent(3, (-1789569704));
      DBUtil.getLastStatementValues();
      DBUtil.getLastStatement();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      System.setCurrentTimeMillis((-4017L));
      System.setCurrentTimeMillis(0L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "4Q`<6mf@'cf2I9|R", (String) null, (String) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBUtil.typesAreEquivalent(3, 15);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      sQLAlias0.setConnectAtStartup(false);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      assertFalse(sQLDriver0.isJDBCDriverClassLoaded());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8688245196701632
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      DBUtil.typesAreEquivalent(1, (-1789569704));
      DBUtil.getLastStatementValues();
      DBUtil.getLastStatement();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      System.setCurrentTimeMillis((-4017L));
      System.setCurrentTimeMillis(0L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "4Q`<6mf@'cf2I9|R", (String) null, (String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), (-7));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = (-310);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("V,Hg[mt", "V,Hg[mt", "V,Hg[mt", "DBUtil.info.bindcloblength", (-310), "IZbtB", (-310), (-932), (-310), 2075, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.info.bindcloblength", 2075, 2075, "/lN\bE$jMolmh/");
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      // Undeclared exception!
      try { 
        connectionWrapper1.prepareCall("kkN(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      ITableInfo iTableInfo0 = null;
      DBUtil.getLastStatement();
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-590));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(27);
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(27);
      IntegerIdentifier integerIdentifier2 = new IntegerIdentifier(14);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias(integerIdentifier0);
      SQLAlias sQLAlias2 = new SQLAlias(integerIdentifier0);
      sQLAlias2.getDriverPropertiesClone();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "6}[KKG", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getPluginsDirectory();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getPluginsDirectory();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "?F|;c[taL_rVbzm", "6P\">AIFc");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "hibernate.dialect");
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 113;
      DBUtil.getLastStatement();
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = (-5);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, (String) null, "0", (-2), ",\n", (-3357), (-5836), (-5), (-5), " from ", ",\n", (-5836), (-5), ",\n");
      DBUtil.isBinaryType(tableColumnInfo0);
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "Key value for constraint (", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.mappingErrorKeyword", "DBUtil.mappingErrorKeyword", "blob", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-339), (String) null, (-339), (-339), 4, 4, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "blob", (-339), (-2120), "blob");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "a<~vr5)^j;k~k-g!M8", "a<~vr5)^j;k~k-g!M8");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin1, (ITableInfo) null, "DBUtil.info.bindcloblength", "Qzej2>G%puR", "_$SV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "hibernate.dialect");
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "}4@GnV>(", "UG>F%5%dJTgt4PcR", "SquirrelPreferences.error.reading");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("useDriverProperties", "org.jfree.data.xy.VectorSeriesCollection", (String) null, (String) null, 597, (String) null, 3529, 2000, 70, (-961), "FH", "useDriverProperties", 2, 2000, "useDriverProperties");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(",\n", "", "_m1j=T<Wu,vU=Y7/Vl", ",\n", 0, "http://ww.suirrelsql.org", 0, 0, 0, 0, "J)x>US$P=", "Au9x:g8rmC", 2651, 158, "");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[7];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals(",\n, ,\n, ,\n, ,\n, ,\n, ,\n, ,\n", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "hibernate.dialect");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "}4@GnV>(", "}4@GnV>(", (String) null, 1889, "", (-1914), (-663), (-663), (-1715), "o0g.", "o0g.", 14, 4000, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.COLUMN;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer0.getDisabledIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.replaceDistinctDataType(4000, tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin1, tableColumnInfo0, "Nj|A.O42Y!'", "-i>wN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5b|<BJ'L1L", ",6C6", ",6C6", ",6C6", (-4), "}UjTY", (-2387), (-4), (-2387), 473, (String) null, "http://www.squirrelsql.org", 508, (-4), ",6C6");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "oU5", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(". Using 'max'", "DomainOrder.ASCENDING", "http://ww.suirrelsql.org", "", 2651, "3", 1845, (-1562), (-7), (-749), (String) null, "Encountered unexpected exception while attempting to determine if schemas are used in table definitions", (-4128), 1004, "Tw.-r");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "http://ww.suirrelsql.org");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatementValues());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBUtil.getLastStatementValues();
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 2010);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("5b|<BJ'L1L", ",6C6", ",6C6", ",6C6", (-19), "/lN\bE$jMolmh/", (-2387), (-19), (-2387), 473, (String) null, "http://www.squirrelsql.org", 508, (-19), ",6C6");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "http://www.squirrelsql.org", "http://www.squirrelsql.org", "select ", (-4603), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2211, 2913, (-4603), (-4603), "http://www.squirrelsql.org", "@y8oa<j:Z_,5@=", (-4603), 958, "DBUtil.error.maptype");
      dBCopyPlugin1.getDestSession();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      vector0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(vector0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" ALTER COLUMN ", (String) null, " ALTER COLUMN ", "Z", 486, "Z", (-2421), 1689, (-142), (-2), "Z", "4Q`<6mf@'cf2I9|R", 486, 1689, " from ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType((-4), tableColumnInfo0, (ISession) null);
      assertEquals((-4), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("where v.SCHEMAID = s.SCHEMAID ", "", (String) null, "\"C(", 91, ",\n", 418, 3173, (-4048), (-1571), "#o3nrWb#1^V\"Wz=Rwq{", "|7?", 663, 64, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      FileSystemHandling.shouldAllThrowIOExceptions();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource1.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("where v.SCHEMAID = s.SCHEMAID ", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(91, tableColumnInfo0, (ISession) null);
      assertEquals(91, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource1.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType("$A7]{FM)-HPl", (Icon) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.INDEX;
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("&U}p2h#alb7g,ZDk", (Icon) null);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLicenceFile();
      applicationFileWrappersImpl2.getPluginsDirectory();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl2);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">'m\"n8'VD{yn2ec");
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(vector0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(15, 15);
      boolean boolean1 = DBUtil.typesAreEquivalent((-663), 9);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.info.bindclobfile", ",6C6", "5^Sx\"khS(e", ",6C6", 0, "5^Sx\"khS(e", (-2692), (-2692), 0, 0, " as ", "5^Sx\"khS(e", (-2040), 0, "%upper");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).getAutoCommit();
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBUtil.convertObjectToTableList(list1);
      connectionWrapper0.getAutoCommit();
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("5^Sx\"khS(e", 70, 200, 96);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("SessionManager.getPreviousSession()-> List empty so returning passed session", "&a$", "&a$", "&a$", (-161), "SessionManager.getPreviousSession()-> List empty so returning passed session", 124, 124, 91, 124, "V5:jI[6Q P@<1D", "%jYMTV@xYGh", 124, (-622), ",\n");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("&a$");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FOREIGN_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, ":8k~J+%Eo;M@tD~", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("hmq-8m;*Bu8,q p#", "yqc", "vZeuAfNYRw*N(E|", "max", 0, "Nresource found forkey ", (-1), (-102), (-102), 3333, "hmq-8m;*Bu8,q p#", "NO", (-4541), 3333, "hmq-8m;*Bu8,q p#");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl((String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      String string1 = ">K";
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBUtil.convertTableToObjectList(list0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.COLUMN;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource2.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType(")A3", (Icon) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      assertEquals("changes.txt", dBCopyPlugin1.getChangeLogFileName());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte)103;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(",\n", "No resource found for key ", "RKfd_oH5V4Z|y+z/sIO", ",\n", 0, ",\n", (-2), (-2), 0, 315, "RKfd_oH5V4Z|y+z/sIO", ")", 582, 315, "No resource found for key ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.replaceDistinctDataType((-167), tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      boolean boolean0 = DBUtil.typesAreEquivalent((-864), (-2028178998));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(153, 93);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" +^#R?sP)", "", "w;;{1KY5,l5g x}n]Gf", "series.default-prefix", (-1941), " +^#R?sP)", (-1941), 40000, (-1941), 40000, "6qa#w=6", "", (-1370), (-1370), "series.default-prefix");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("oU'x6YJ", " +^#R?sP)", "b");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(",66", ",66", ",66");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType.createNewDatabaseObjectType("ZXAkn/");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals(",66", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, (-2985));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, ".tZdL4N5taA", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("hmq-8m;*Bu8,q p#", "yqc", "vZeuAfNYRw*N(E|", "max", 0, "Nresource found forkey ", (-1), (-102), (-102), 3333, "hmq-8m;*Bu8,q p#", "NO", (-4541), 3333, "hmq-8m;*Bu8,q p#");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "hibernate.dialect");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer1 = new DefaultListCellRenderer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-49);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "limitSqlResultTabs", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "newColumnName", (byte) (-49), (String) null, 2048, (byte) (-49), (byte) (-49), (byte) (-49), "http://ww.suirrelsql.org", "~qG$)*%zk|o", (-1908874351), 3483, "|jd>@p8W3 ?a=oaQ6R)");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-49), int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("where v.SCHEMAID = s.SCHEMAID ", "", (String) null, "\"C(", 91, ",\n", 418, (-949), (-4048), (-1571), "#o3nrWb#1^V\"Wz=Rwq{", "|7?", 663, 64, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource1.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(91, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setDestSession((ISession) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Unsupported encoding?", "Unsupported encoding?", 1159, "Unsupported encoding?", 1159, 1834, 1159, 1834, "V,Hg[mt", "YS", (-1626), 27, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1159, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("where v.SCHEMAID = s.SCHEMAID ", "", (String) null, "\"C(", 91, ",\n", 418, (-949), 91, (-1571), "#o3nrWb#1^V\"Wz=Rwq{", "|7?", 663, 64, ",\n");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource1.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(91, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("net.sourceforge.squirrel_sql.fw.dialects.PointbaseDialectExt", (String) null, (String) null, foreignKeyInfo0, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "V,Hg[mt", (String) null, (String) null, 1521);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("hmq-8m;*Bu8,q p#", "yqc", "vZeuAfNYRw*N(E|", "max", 0, "No resource found for key ", (-1), (-102), (-102), 3333, "hmq-8m;*Bu8,q p#", "NO", (-4541), 3333, "hmq-8m;*Bu8,q p#");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("where v.SCHEMAID = s.SCHEMAID ", "", (String) null, "\"C(", 91, ",\n", 418, (-949), (-4048), (-1571), "#o3nrWb#1^V\"Wz=Rwq{", "|7?", 663, 64, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource1.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("hmq-8m;*Bu8,q p#", "yqc", "vZeuAfNYRw*N(E|", "max", (-19), "Nresource found forkey ", (-1), (-102), (-102), 3333, "hmq-8m;*Bu8,q p#", "NO", (-4541), 3333, "hmq-8m;*Bu8,q p#");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("max, max, max, max, max, max, max, max, max", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getPluginsDirectory();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl2);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")BuM.gwZF");
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setAutoCommitEnabled(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("SELECT data_type FROM information_schema.columns where column_name = ? ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBUtil.setLastStatementValues("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((PreparedStatement) null).when(connection0).prepareStatement(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = "xu58hMaS? #H";
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareStatement("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "}4@GnV>(", "}4@GnV>(", (String) null, 1889, "", (-1929), (-663), (-663), (-1715), "o0g.", "o0g.", 14, 4000, "");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(14);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      sQLAlias0.setConnectAtStartup(true);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(27);
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(14);
      SQLAlias sQLAlias0 = new SQLAlias();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "http://ww.suirrelsql.org", "l]wB~IX{J", "l]wB~IX{J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl2);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "^9E2}DT%UpXs5t", "YJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "Caught Excepion while in Loader.getResource. This may be innocuous.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBUtil.setLastStatement("(tn!%jCX!D#u~pyF");
      String string0 = "Opening saved jar: ";
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(0);
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("C%XHlP,oGgXk_YEE7");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"C%XHlP,oGgXk_YEE7\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("Caught Exception while in Loader.getResource. This may be innocuous.", ",\n", "+!f", (ISession) null, true, 86);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
