/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 00:15:29 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.45150517188415
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec(29);
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.toStringKey();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(29, resultMatrixPlainText0.getMeanPrec());
      
      String[][] stringArray0 = new String[9][4];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[3];
      stringArray2[0] = "(";
      stringArray2[1] = "*";
      stringArray2[2] = ")";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[2];
      stringArray3[0] = ")";
      stringArray3[1] = ")";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "v";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[3];
      stringArray5[0] = "(";
      stringArray5[1] = "(";
      stringArray5[2] = "(";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[9];
      stringArray6[0] = "e?3hubX";
      stringArray6[1] = "(";
      stringArray6[2] = " ";
      stringArray6[3] = " ";
      stringArray6[4] = "(";
      stringArray6[5] = ")";
      stringArray6[6] = "v";
      stringArray6[7] = "*";
      stringArray6[8] = "The width of the significance indicator (0 = optimal).";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[0];
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[7];
      stringArray8[0] = "v";
      stringArray8[1] = "v";
      stringArray8[2] = "No value given for -";
      stringArray8[3] = "*";
      stringArray8[4] = "7kV5z,=fvOG";
      stringArray8[5] = " ";
      stringArray8[6] = "(";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[2];
      stringArray9[0] = " ";
      stringArray9[1] = "v";
      stringArray0[8] = stringArray9;
      int int0 = resultMatrixHTML0.getColSize(stringArray0, (-2166));
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9647305658502945
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 109;
      resultMatrixGnuPlot0.m_StdDevPrec = 109;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[0];
      boolean boolean0 = false;
      resultMatrixPlainText0.m_ShowStdDev = false;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[1] = (double) 109;
      boolean boolean1 = false;
      resultMatrixGnuPlot0.m_RemoveFilterName = false;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSize((-712), 17);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.06896649963926
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.setSignificanceWidth(625);
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixPlainText0.getRowCount();
      resultMatrixGnuPlot0.setMean(0, 8, 1);
      String[] stringArray0 = new String[0];
      ResultMatrixCSV.main(stringArray0);
      resultMatrixPlainText0.listOptions();
      resultMatrixSignificance0.getDefaultShowAverage();
      resultMatrixGnuPlot0.getDisplayCol(23);
      resultMatrixCSV0.setRowHidden(23, false);
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.removeFilterName("[");
      resultMatrixSignificance1.getDefaultPrintColNames();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.showAverageTipText();
      ResultMatrixHTML.main(stringArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.9409769905238794
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.clearHeader();
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.RIGHT_PARENTHESES = "v";
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.m_SignificanceWidth = 1539;
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.TIE_STRING = "BWxQ>KP3";
      resultMatrixGnuPlot0.setMean(1, 1, 0.0);
      resultMatrixPlainText0.m_PrintRowNames = false;
      ResultMatrixCSV.main(stringArray0);
      resultMatrixPlainText0.listOptions();
      resultMatrixSignificance0.getDefaultShowAverage();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2409178777895407
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 0;
      intArray0[7] = (-1);
      intArray0[8] = 2;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      int int0 = resultMatrixHTML0.getStdDevPrec();
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(40, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, int0);
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.getColCount();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(13, 1);
      resultMatrixSignificance1.toStringRanking();
      assertEquals(13, resultMatrixSignificance1.getVisibleColCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.9270813398427435
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[6] = "\tWhether to enumerate the row names (prefixing them with \n\t'(x)', with 'x' being the index).\n\t(default: no)";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.colNameWidthTipText();
      resultMatrixPlainText0.setSignificance(0, (-2520), 1);
      resultMatrixPlainText0.toStringKey();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = true;
      String[] stringArray0 = new String[8];
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = ");D>";
      stringArray0[4] = "*";
      stringArray0[5] = ")";
      stringArray0[6] = ")";
      try { 
        resultMatrixHTML0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.064782142107532
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.clearHeader();
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.RIGHT_PARENTHESES = "v";
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.m_SignificanceWidth = 1539;
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.TIE_STRING = "BWxQ>KP3";
      resultMatrixGnuPlot0.setMean(1, 1, 0.0);
      resultMatrixPlainText0.m_PrintRowNames = false;
      ResultMatrixCSV.main(stringArray0);
      resultMatrixPlainText0.listOptions();
      resultMatrixSignificance0.getDefaultShowAverage();
      resultMatrixGnuPlot0.getDisplayCol(1);
      resultMatrixCSV0.setRowHidden(0, false);
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.removeFilterName("v");
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.showAverageTipText();
      ResultMatrixHTML.main(resultMatrixPlainText0.m_ColNames);
      assertTrue(resultMatrixPlainText0.getPrintColNames());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.0735970192057875
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      double[][] doubleArray0 = new double[0][2];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(95, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setColOrder(intArray0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.showStdDevTipText();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "[";
      stringArray0[2] = "Whether to display the standard deviation column.";
      ResultMatrixHTML.main(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = " ";
      stringArray1[1] = "(";
      ResultMatrixGnuPlot.main(stringArray1);
      resultMatrixCSV0.addHeader(")", "(");
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.152816077318019
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.getSignificanceCount(805, (-1722));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      String string1 = resultMatrixPlainText0.getSummaryTitle(0);
      assertEquals("a", string1);
      
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayCol(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowHidden(2, false);
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.removeFilterName("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n");
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.showAverageTipText();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixSignificance0.getOptions();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=4.071163979757924
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.listOptions();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 1);
      resultMatrixHTML1.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.getSummaryTitle((-2893));
      resultMatrixLatex0.padString("(", 0);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML();
      resultMatrixHTML2.LOSS_STRING = "";
      resultMatrixHTML2.clear();
      ResultMatrixHTML resultMatrixHTML3 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML3.getDefaultRowNameWidth();
      resultMatrixLatex0.getColName(2);
      resultMatrixHTML1.getSummaryTitle(0);
      resultMatrixHTML3.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4062512001312175
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      resultMatrixSignificance0.toStringKey();
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      resultMatrixSignificance0.doubleToString(0.0, 2);
      resultMatrixSignificance0.m_ColOrder = intArray1;
      resultMatrixGnuPlot0.setSignificanceWidth(1);
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.getRevision();
      resultMatrixGnuPlot0.getCount((-270));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0850731696244234
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      int int0 = (-2456);
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString(990.5474518, (-4615));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.604041353871141
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec((-1912));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 1);
      resultMatrixLatex0.getColName(0);
      resultMatrixHTML0.getSummaryTitle(1);
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(8);
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.7843830636740505
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixCSV0.setStdDevPrec(2);
      intArray0[5] = 1526;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.colNameWidthTipText();
      String[][] stringArray0 = new String[5][3];
      String[] stringArray1 = new String[1];
      stringArray1[0] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[9];
      stringArray2[0] = "(";
      stringArray2[1] = "*";
      stringArray2[2] = " ";
      stringArray2[3] = " x~w^4h$)&Ao";
      stringArray2[4] = "v";
      stringArray2[5] = "*";
      stringArray2[6] = " ";
      stringArray2[7] = "The maximum width of the column names (0 = optimal).";
      stringArray2[8] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = ")";
      stringArray3[1] = " ";
      stringArray3[2] = "The maximum width of the column names (0 = optimal).";
      stringArray3[3] = "v";
      stringArray3[4] = ")";
      stringArray3[5] = "The maximum width of the column names (0 = optimal).";
      stringArray3[6] = "# the plot commands\n";
      stringArray3[7] = " x~w^4h$)&Ao";
      stringArray3[8] = "(";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[8];
      stringArray4[0] = ")";
      stringArray4[1] = "*";
      stringArray4[2] = "(";
      stringArray4[3] = "(";
      stringArray4[4] = "v";
      stringArray4[5] = " ";
      stringArray4[6] = "# the plot commands\n";
      stringArray4[7] = "(";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[6];
      stringArray5[0] = "The maximum width of the column names (0 = optimal).";
      stringArray5[1] = " ";
      stringArray5[2] = " x~w^4h$)&Ao";
      stringArray5[3] = "s*kx]AXa*}UKLRw";
      stringArray5[4] = "*";
      stringArray5[5] = "Inf";
      stringArray0[4] = stringArray5;
      int int0 = resultMatrixHTML0.getColSize(stringArray0, (-289), true, true);
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(0, int0);
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=4.128580015204665
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = " HYnQ}B7$:WXp1,";
      stringArray0[1] = "";
      stringArray0[2] = "? #H(F>;MBZp%Ng}IcC";
      stringArray0[3] = "header1";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "+9";
      stringArray0[7] = ";[?(";
      stringArray0[8] = "end{tabular}\n";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText0.setStdDevPrec(97);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_ShowStdDev = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
      assertEquals(97, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixGnuPlot0.getColNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.globalInfo();
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixLatex0.getRevision();
      String string0 = resultMatrixLatex0.getSummaryTitle((-1));
      assertEquals("`", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.341629132163693
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.headerKeys();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(544, 0);
      resultMatrixLatex0.toStringRanking();
      assertEquals(544, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.124365809783805
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      double[][] doubleArray0 = new double[0][2];
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.setMeanWidth(26);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2193545669668047
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      resultMatrixLatex0.m_NonSigWins = intArray0;
      resultMatrixLatex0.padString("Qq", 0, false);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 2;
      int[] intArray0 = null;
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      boolean boolean0 = true;
      resultMatrixGnuPlot0.m_PrintRowNames = true;
      resultMatrixGnuPlot0.m_NonSigWins = null;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.267675553528214
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanPrec((-1912));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixPlainText0.meanWidthTipText();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.909478576920061
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3, 3);
      int int0 = 1;
      resultMatrixCSV0.getRowName(1);
      resultMatrixCSV0.getSignificanceCount(1, 3334);
      resultMatrixCSV0.doubleToString(1, 3);
      resultMatrixCSV0.getShowStdDev();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "]";
      stringArray0[4] = "1.000";
      stringArray0[5] = "*";
      stringArray0[6] = "\tWhether to enumerate the row names (prefixing them with \n\t'(x)', with 'x' being the index).\n\t(default: no)";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4823930393168556
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_StdDevPrec = 0;
      resultMatrixCSV0.significanceWidthTipText();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getVisibleRowCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=4.002600120043627
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/";
      stringArray0[1] = "";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clear();
      resultMatrixHTML0.m_ShowAverage = true;
      ResultMatrix resultMatrix0 = null;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.assign((ResultMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.9849622432532743
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 1);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.setColNameWidth((-1108));
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.RIGHT_PARENTHESES = "v";
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.m_SignificanceWidth = 1539;
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixCSV0.m_HeaderKeys = vector0;
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.TIE_STRING = "BWxQ>KP3";
      resultMatrixGnuPlot0.setMean(1, 1, 0.0);
      resultMatrixPlainText0.m_PrintRowNames = false;
      ResultMatrixCSV.main(stringArray0);
      resultMatrixPlainText0.listOptions();
      resultMatrixSignificance0.getDefaultShowAverage();
      resultMatrixGnuPlot0.getDisplayCol(1);
      resultMatrixPlainText0.setRemoveFilterName(true);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=4.094466135376912
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth(393);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean((-1722), 0, 393);
      resultMatrixHTML0.getSignificanceCount(805, 0);
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getSummaryTitle(1);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.setStdDevPrec(110);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setCountWidth(69);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(805);
      assertEquals(69, resultMatrixHTML0.getCountWidth());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance1.setPrintRowNames(true);
      resultMatrixSignificance1.getDefaultShowStdDev();
      assertTrue(resultMatrixSignificance1.getEnumerateColNames());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7498638617864994
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevPrec = 95;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[4] = (double) 95;
      doubleArray2[1] = (double) 95;
      doubleArray2[2] = Double.NaN;
      doubleArray2[3] = (double) 95;
      doubleArray2[4] = (double) 1;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) 0;
      doubleArray3[0] = (double) 0;
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = (double) 2;
      doubleArray3[6] = (double) 95;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[18];
      doubleArray4[0] = (double) 95;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[1];
      doubleArray5[0] = (double) 2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = (double) 95;
      doubleArray3[5] = (double) 1;
      doubleArray6[2] = (double) 2;
      doubleArray6[3] = (double) 2;
      doubleArray6[4] = (double) 95;
      doubleArray0[5] = doubleArray6;
      resultMatrixGnuPlot0.m_StdDev = doubleArray0;
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixGnuPlot0.toString();
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixPlainText0.m_NonSigWins = null;
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden(1, false);
      resultMatrixPlainText0.countWidthTipText();
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.971408424635086
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.m_SignificanceWidth = (-2166);
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.getSignificanceCount(805, (-1722));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setRemoveFilterName(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden(37, true);
      resultMatrixPlainText0.countWidthTipText();
      assertTrue(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.746887515726901
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=4.042974034800482
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.printRowNamesTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.countWidthTipText();
      assertFalse(resultMatrixPlainText0.getShowStdDev());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.7746899109648235
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.addHeader("No value given for -", "No value given for -");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = "";
      stringArray0[3] = ");D>";
      stringArray0[4] = " ";
      stringArray0[5] = ")";
      stringArray0[6] = ")";
      stringArray0[7] = "(";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.m_RemoveFilterName = true;
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.getDefaultRowNameWidth();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.1257298336542227
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.m_MeanWidth = 0;
      resultMatrixPlainText0.setMeanPrec((-1912));
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixSignificance0.setColNameWidth(3284);
      booleanArray0[0] = false;
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = (-499);
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.meanWidthTipText();
      resultMatrixSignificance0.globalInfo();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(3284, resultMatrixSignificance0.getColNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.519936785188337
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.m_RemoveFilterName = true;
      resultMatrixPlainText0.removeFilterName("qUq$eG%u");
      resultMatrixPlainText0.addHeader("", " ");
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      resultMatrixGnuPlot0.m_ColNames = stringArray0;
      resultMatrixPlainText0.m_StdDevPrec = 2;
      resultMatrixPlainText0.getDisplayName();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
      assertEquals(50, resultMatrixPlainText0.getRowNameWidth());
      
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getDefaultPrintRowNames();
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = 0.0;
      doubleArray3[6] = (double) 0;
      doubleArray3[7] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = 0.0;
      doubleArray4[1] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = (double) 0;
      doubleArray6[1] = 0.0;
      doubleArray6[2] = 0.0;
      doubleArray0[5] = doubleArray6;
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      assertFalse(resultMatrixSignificance0.getShowAverage());
      
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.330737490139163
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixSignificance0.m_StdDevPrec = 1727;
      resultMatrixSignificance0.TIE_STRING = "Czp`L";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.getDisplayRow(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[6][6];
      int[] intArray1 = new int[2];
      intArray1[0] = 1955;
      intArray1[1] = 1727;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1727;
      intArray2[3] = 1955;
      intArray2[4] = 0;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 1727;
      intArray3[1] = 1727;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 0;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 0;
      intArray6[1] = 0;
      intArray6[2] = 1727;
      intArray6[3] = 1;
      intArray6[4] = 2;
      intArray6[5] = 1;
      intArray6[6] = 1727;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.meanPrecTipText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.530194935509162
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(35, 79);
      resultMatrixCSV0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 35;
      intArray0[2] = 0;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.m_RankingDiff = intArray0;
      resultMatrixLatex0.m_EnumerateRowNames = false;
      resultMatrixCSV0.toStringKey();
      resultMatrixLatex0.meanPrecTipText();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3419177324522935
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.getDefaultStdDevWidth();
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1821);
      resultMatrixLatex0.toStringRanking();
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1821, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2380, 1);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2380;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (double) 0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 2380;
      doubleArray0[7] = (double) 0;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixSignificance0.enumerateRowNamesTipText();
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.540407556189264
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      boolean boolean0 = true;
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      stringArray0[2] = "*";
      stringArray0[3] = "<SON4+i#Ck1?";
      stringArray0[4] = " ";
      stringArray0[5] = " ";
      stringArray0[6] = " ";
      stringArray0[7] = "-summary data not set-";
      stringArray0[8] = "(";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=4.1047960363938625
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.getSignificanceCount(805, (-1722));
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      assertEquals(0, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(0);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=4.043279318213658
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.setSignificanceWidth(0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(1, 0, 0.0);
      resultMatrixHTML0.getSignificanceCount((-869), (-1722));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(43, 2);
      resultMatrixPlainText2.toStringMatrix();
      resultMatrixPlainText0.getSummaryTitle(1);
      resultMatrixPlainText0.setStdDevPrec(4);
      resultMatrixPlainText1.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(5, 2);
      resultMatrixHTML1.getRowOrder();
      resultMatrixHTML0.setCountWidth((-1212));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.toStringRanking();
      assertEquals(4, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.208676515886898
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = (-2456);
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2;
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.124365809783805
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixLatex0.m_ShowStdDev = true;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.9350971349674895
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-2044), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=4.017746182511969
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.5903461263881695
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3, 3);
      String string0 = resultMatrixCSV0.getRowName(1);
      assertEquals("row1", string0);
      
      resultMatrixCSV0.getSignificanceCount(1, 3334);
      String string1 = resultMatrixCSV0.doubleToString(1, 3);
      assertEquals("1.000", string1);
      
      resultMatrixCSV0.getShowStdDev();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "]";
      stringArray0[4] = "1.000";
      stringArray0[5] = "*";
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int int0 = resultMatrixHTML0.getCountWidth();
      assertEquals(0, int0);
      
      int int1 = resultMatrixHTML0.getStdDevPrec();
      assertEquals(2, int1);
      
      resultMatrixCSV0.clearHeader();
      int int2 = resultMatrixCSV0.getColCount();
      assertEquals(3, int2);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 110);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance0.toStringRanking();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(110, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.1442777200248724
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.clear();
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex((-1367), 665);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.9434042479265
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixSignificance0.printRowNamesTipText();
      resultMatrixSignificance0.m_RowOrder = null;
      int int0 = resultMatrixSignificance0.getStdDevWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.m_StdDevWidth = 0;
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.removeFilterNameTipText();
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.487634764824865
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(72, 0);
      boolean boolean0 = resultMatrixHTML0.isAverage((-2224));
      assertEquals(72, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertFalse(boolean0);
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
  }
}
