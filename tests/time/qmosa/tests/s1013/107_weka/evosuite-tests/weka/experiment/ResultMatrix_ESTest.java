/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 01:22:41 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.760857158681973
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[9][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = (-2456);
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 1;
      intArray0[2] = intArray3;
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      resultMatrixSignificance0.doubleToString((-2450.3397106250804), 0);
      resultMatrixGnuPlot0.setMeanPrec(1);
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.getRevision();
      resultMatrixGnuPlot0.getCount(0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.449251728189839
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setStdDevWidth((-993));
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec((-993));
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSize(2, 2416);
      resultMatrixCSV0.getSummaryTitle(1);
      // Undeclared exception!
      resultMatrixCSV0.clear();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.3995092879810285
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden(485, false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.countWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getColHidden((-2242));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.clear();
      resultMatrixPlainText1.setColName(0, "DPt");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.413808171581231
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setCount(0, 312.42232);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSize(2, 26);
      resultMatrixCSV0.getSummaryTitle(0);
      resultMatrixCSV0.clear();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.435158658284827
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = " HYnQ}B7$:WXp1,";
      stringArray0[1] = "";
      stringArray0[2] = "? #H(F>;MBZp%Ng}IcC";
      stringArray0[3] = "header1";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "ju+9";
      stringArray0[7] = ";[?(";
      stringArray0[5] = "end{tabular}\n";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.removeFilterName("?WI c.o;5i*");
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixCSV0.doubleToString(0.0, 26);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.093394272833746
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[5];
      intArray0[0] = 2469;
      intArray0[1] = 2;
      intArray0[2] = 1;
      resultMatrixLatex0.m_RankingDiff = intArray0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixLatex0.m_RankingDiff = intArray0;
      resultMatrixLatex0.getDefaultPrintColNames();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.5142710319835997
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.clear();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = "v";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.isAverage(1870);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.5353339724059354
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setCount(0, 312.42232);
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[0][9];
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.498717725810524
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[5][0];
      String[] stringArray0 = new String[1];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(653, 0);
      resultMatrixGnuPlot2.m_RowNameWidth = 11;
      resultMatrixGnuPlot1.m_MeanWidth = 2;
      resultMatrixGnuPlot2.setMeanWidth((-3456));
      assertEquals(11, resultMatrixGnuPlot2.getRowNameWidth());
      
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot1.getColHidden(653);
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.652490440206973
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      stringArray0[2] = "*";
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 48);
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.setColNameWidth(0);
      resultMatrixHTML0.globalInfo();
      resultMatrixLatex0.padString("v", 0);
      resultMatrixHTML0.clear();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 97);
      resultMatrixHTML1.getDefaultRowNameWidth();
      resultMatrixLatex0.getColName(1);
      resultMatrixHTML0.getSummaryTitle(1510);
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(1514, 1514);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1824451341194315
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "!p=;etm5?~g<";
      stringArray0[1] = "O";
      stringArray0[2] = "O";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(29, 29);
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getColName(29);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getStdDevWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.getRevision();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[3];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize(1, (-811));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.425555003473302
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[2] = "";
      stringArray0[3] = ");D>";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.removeFilterName((String) null);
      ResultMatrixGnuPlot.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixCSV0.setSize(0, 1);
      resultMatrixCSV0.getSummaryTitle(2);
      resultMatrixCSV0.clear();
      int int0 = resultMatrixGnuPlot0.getDisplayCol(2);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.531420330677219
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[][] stringArray0 = resultMatrixPlainText0.toArray();
      assertEquals(3, stringArray0.length);
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setCount(5, 0.0);
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      resultMatrixCSV0.getSummaryTitle(0);
      resultMatrixCSV0.clear();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getSummaryTitle(2);
      String[][] stringArray1 = new String[9][8];
      stringArray1[0] = null;
      stringArray1[1] = null;
      stringArray1[2] = null;
      stringArray1[3] = null;
      stringArray1[4] = null;
      stringArray1[5] = null;
      stringArray1[6] = null;
      stringArray1[7] = null;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "*";
      stringArray2[1] = ")";
      stringArray1[8] = stringArray2;
      resultMatrixCSV0.getColSize(stringArray1, (-3039), false, false);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      boolean boolean0 = resultMatrixGnuPlot0.getPrintRowNames();
      assertTrue(boolean0);
      
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getSummaryTitle(2);
      assertEquals("c", string0);
      
      resultMatrixCSV0.clear();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      
      resultMatrixGnuPlot0.getDefaultShowAverage();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.3763423060720523
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      resultMatrixPlainText0.toArray();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setSize(0, 222);
      resultMatrixCSV0.getSummaryTitle(2);
      assertTrue(resultMatrixCSV0.getPrintColNames());
      
      resultMatrixCSV0.clear();
      assertFalse(resultMatrixPlainText0.getShowAverage());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.600306801702817
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 32);
      int[][] intArray0 = new int[2][6];
      int[] intArray1 = new int[1];
      resultMatrixHTML0.clear();
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 32;
      intArray2[5] = 2;
      intArray2[6] = 1;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1803, 1);
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixCSV0.clear();
      ResultMatrixHTML.main(stringArray0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      boolean boolean0 = resultMatrixGnuPlot0.getPrintRowNames();
      assertTrue(boolean0);
      
      resultMatrixGnuPlot0.toStringSummary();
      String string0 = resultMatrixGnuPlot0.showStdDevTipText();
      assertEquals("Whether to display the standard deviation column.", string0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8979325974734658
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[5][0];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[3] = 97;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 97;
      resultMatrixGnuPlot0.getColName(97);
      intArray2[2] = (-891);
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 97;
      intArray2[6] = 97;
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = (-891);
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.330840790473418
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden(2, false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.countWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getColHidden(0);
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.toStringSummary();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.400603507544083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex1.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden((-1), true);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex2.getColHidden(19);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.clear();
      resultMatrixPlainText1.setColName(26, "");
      resultMatrixLatex0.setMean(22, 7, (-1736.2794));
      resultMatrixLatex0.addHeader(")", "-~%4=<H<");
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.385952987492303
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3896, 1);
      resultMatrixLatex0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden(2, true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.countWidthTipText();
      resultMatrixLatex0.getColHidden(528);
      resultMatrixGnuPlot0.toStringRanking();
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "(";
      stringArray1[1] = "(";
      stringArray1[2] = " ";
      stringArray1[3] = "";
      stringArray0[0] = stringArray1;
      resultMatrixGnuPlot0.getColSize(stringArray0, 3896);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 111;
      resultMatrixCSV0.setSize(0, 1);
      resultMatrixCSV0.getSummaryTitle(2);
      resultMatrixCSV0.clear();
      resultMatrixGnuPlot0.setSignificance(44, 780, 1100);
      boolean boolean0 = resultMatrixCSV0.isRowName(752);
      assertEquals(0, resultMatrixCSV0.getColCount());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1417070364814803
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(3, 0);
      resultMatrixHTML1.setOptions((String[]) null);
      assertFalse(resultMatrixHTML1.getPrintRowNames());
      
      resultMatrixHTML0.getDefaultRowNameWidth();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      resultMatrixGnuPlot0.toStringRanking();
      assertTrue(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.377199384723431
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = "";
      stringArray0[3] = ");D>";
      stringArray0[4] = " ";
      stringArray0[5] = ")";
      stringArray0[6] = ")";
      stringArray0[7] = "(";
      resultMatrixHTML0.setOptions(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixHTML0.toStringKey();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 3);
      resultMatrixPlainText1.toStringKey();
      assertFalse(resultMatrixPlainText1.getRemoveFilterName());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9972974282744205
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 104);
      resultMatrixCSV0.toStringRanking();
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.setStdDev((-845), (-1), (-572.3156076));
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.395759362954402
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixLatex0.m_ShowStdDev = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getSummaryTitle((-2));
      resultMatrixPlainText0.setStdDevPrec(30);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(30, 69);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setCountWidth((-824));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(1);
      resultMatrixSignificance0.setPrintRowNames(false);
      assertEquals(1, resultMatrixSignificance0.getStdDevPrec());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance1.getDefaultPrintColNames();
      resultMatrixHTML0.getStdDev(47, 1);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4618997385678365
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[2][6];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 1;
      resultMatrixHTML0.clearRanking();
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[5] = 2;
      intArray1[6] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      resultMatrixHTML0.m_NonSigWins = intArray0;
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.597222159208197
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getSignificanceCount(0, 0);
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getSummaryTitle(0);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixPlainText0.setStdDevPrec(1270);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.toArray();
      resultMatrixSignificance1.setStdDevPrec(0);
      resultMatrixSignificance1.setPrintRowNames(true);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.6100955365914214
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificanceCount((-3419), 0);
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setCountWidth(1761);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(5);
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getDefaultShowStdDev();
      assertEquals(1761, resultMatrixHTML0.getCountWidth());
      assertEquals(1761, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.023859753530737
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2172));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      int int0 = (-993);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      int int1 = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 0);
      resultMatrixLatex0.padString("", (-1722), true);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.5177998018149177
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getEnumerateColNames();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.489605729505749
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixHTML0.listOptions();
      resultMatrixHTML0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.padString("\tWhether to remove the classname package prefixes from the\n\tfilter names in datasets.\n\t(default: no)", 3178);
      resultMatrixHTML0.clear();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixLatex0.getColName(2);
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.5711129558924632
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[0];
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixGnuPlot0.getPrintRowNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 16);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      stringArray0[2] = "(";
      stringArray0[3] = "(";
      stringArray0[4] = "(";
      stringArray0[5] = "=";
      stringArray0[6] = "v";
      stringArray0[7] = "*";
      resultMatrixLatex0.setOptions(stringArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.clearSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2, 0);
      resultMatrixHTML1.listOptions();
      resultMatrixHTML1.globalInfo();
      resultMatrixLatex0.padString("(", 20);
      resultMatrixHTML1.clear();
      resultMatrixHTML1.getDefaultRowNameWidth();
      resultMatrixLatex1.getColName((-2528));
      resultMatrixHTML1.getSummaryTitle(1);
      resultMatrixHTML1.getPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(25);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.165917516496863
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      resultMatrixLatex0.m_NonSigWins = intArray0;
      resultMatrixLatex0.padString("Qq", 0, false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowOrder(intArray1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.getStdDevPrec();
      resultMatrixCSV0.clearHeader();
      resultMatrixCSV0.getColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-15), 3264);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.634678803788378
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.m_MeanWidth = 0;
      resultMatrixPlainText0.setMeanPrec((-1912));
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "v";
      stringArray0[1] = "B-$0y";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText1.setStdDevPrec(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot2.getColNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot2);
      resultMatrixLatex0.globalInfo();
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(26, 2);
      String[] stringArray1 = resultMatrixGnuPlot3.getOptions();
      assertEquals(18, stringArray1.length);
      
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixLatex0.getRevision();
      String string0 = resultMatrixLatex0.getSummaryTitle(0);
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals("a", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5485884569292825
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.padString("", (-504));
      resultMatrixCSV0.clear();
      resultMatrixCSV0.printRowNamesTipText();
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3528847721306656
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.padString("Generates the matrix output as HTML.", (-2166));
      resultMatrixHTML0.setMean(0, (-1722), 0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = "v";
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[3] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixHTML0.m_ColHidden = booleanArray0;
      stringArray0[2] = "(";
      stringArray0[3] = "v";
      stringArray0[4] = "(";
      stringArray0[5] = " ";
      stringArray0[6] = ")";
      stringArray0[7] = ")";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.6285514301828625
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec((-993));
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.m_StdDevPrec = (-1927);
      resultMatrixSignificance0.setStdDevPrec((-29));
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixHTML0.getStdDev(1, 550);
      resultMatrixHTML0.enumerateColNamesTipText();
      assertTrue(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.536679082246238
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      resultMatrixGnuPlot0.setColOrder(intArray0);
      resultMatrixCSV0.getRowCount();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.m_MeanWidth = 0;
      resultMatrixPlainText0.setMeanPrec((-1912));
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixSignificance0.setColNameWidth(3284);
      resultMatrixPlainText0.m_PrintRowNames = false;
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = (-499);
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.meanWidthTipText();
      resultMatrixGnuPlot0.setSignificanceWidth((-1912));
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.getRevision();
      assertEquals(3284, resultMatrixSignificance0.getColNameWidth());
      
      resultMatrixGnuPlot0.getCount(48);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.5177998018149177
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixGnuPlot0.getPrintRowNames();
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.clear();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.clearSummary();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.5177998018149177
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixGnuPlot0.getPrintRowNames();
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.285990780715851
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1;
      resultMatrixCSV0.setStdDevPrec(2);
      intArray0[5] = 1526;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 2;
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.setShowStdDev(true);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.colNameWidthTipText();
      String[][] stringArray0 = new String[5][3];
      String[] stringArray1 = new String[1];
      stringArray1[0] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[9];
      stringArray2[0] = "(";
      stringArray2[1] = "*";
      stringArray2[2] = " ";
      stringArray2[3] = " x~w^4h$)&Ao";
      stringArray2[4] = "v";
      stringArray2[5] = "*";
      stringArray2[6] = " ";
      stringArray2[7] = "The maximum width of the column names (0 = optimal).";
      stringArray2[8] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = ")";
      stringArray3[1] = " ";
      stringArray3[2] = "The maximum width of the column names (0 = optimal).";
      stringArray3[3] = "v";
      stringArray3[4] = ")";
      stringArray3[5] = "The maximum width of the column names (0 = optimal).";
      stringArray3[6] = "# the plot commands\n";
      stringArray3[7] = " x~w^4h$)&Ao";
      stringArray3[8] = "(";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[8];
      stringArray4[0] = ")";
      stringArray4[1] = "*";
      stringArray4[2] = "(";
      stringArray4[3] = "(";
      stringArray4[4] = "v";
      stringArray4[5] = " ";
      stringArray4[6] = "# the plot commands\n";
      stringArray4[7] = "(";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[6];
      stringArray5[0] = "The maximum width of the column names (0 = optimal).";
      stringArray5[1] = " ";
      stringArray5[2] = " x~w^4h$)&Ao";
      stringArray5[3] = "s*kx]AXa*}UKLRw";
      stringArray5[4] = "*";
      stringArray5[5] = "Inf";
      stringArray0[4] = stringArray5;
      int int0 = resultMatrixHTML0.getColSize(stringArray0, (-289), true, true);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(0, int0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.6286123713814593
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = " HYnQ}B7$:WXp1,";
      stringArray0[1] = "";
      stringArray0[2] = "? #H(F>;MBZp%Ng}IcC";
      stringArray0[3] = "header1";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "+9";
      stringArray0[7] = ";[?(";
      stringArray0[8] = "end{tabular}\n";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setPrintRowNames(true);
      resultMatrixPlainText0.setStdDevPrec(97);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_ShowStdDev = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixPlainText0.toStringKey();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertEquals(5, resultMatrixPlainText0.getCountWidth());
      assertFalse(resultMatrixPlainText0.getShowAverage());
      
      int int0 = resultMatrixGnuPlot0.getColNameWidth();
      assertEquals(50, int0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixLatex0.getRevision();
      resultMatrixLatex0.getSummaryTitle((-1));
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.headerKeys();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(544, 0);
      resultMatrixLatex0.toStringRanking();
      assertEquals(544, resultMatrixLatex0.getVisibleColCount());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(1276);
      resultMatrixSignificance0.getSignificanceCount(1267, 1267);
      resultMatrixSignificance0.setMeanPrec((-1773));
      assertEquals(1276, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(12, 0);
      resultMatrixLatex0.getRevision();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      double[][] doubleArray0 = new double[0][2];
      resultMatrixSignificance0.m_Mean = doubleArray0;
      resultMatrixSignificance0.setMeanWidth(26);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.5022607250848097
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      resultMatrixLatex0.m_NonSigWins = intArray0;
      resultMatrixLatex0.padString("Qq", 0, false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.clearSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(26);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setCountWidth(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(2878);
      resultMatrixSignificance0.setPrintRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      double[][] doubleArray0 = new double[9][0];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = 2967.73;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2878;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 2;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 1;
      doubleArray3[3] = 156.1372317354544;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 0;
      doubleArray3[6] = (double) 0;
      doubleArray3[7] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = (double) 2;
      doubleArray4[1] = (double) 26;
      doubleArray4[2] = (double) 2;
      doubleArray4[3] = (double) 2;
      doubleArray4[4] = (double) 26;
      doubleArray4[5] = (double) 2;
      doubleArray4[6] = (double) 1;
      doubleArray4[7] = (double) 0;
      doubleArray4[8] = (double) 1;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[1];
      doubleArray5[0] = (double) 1;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (double) 2;
      doubleArray6[1] = (double) 2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[5];
      doubleArray7[0] = (double) 2;
      doubleArray7[1] = (double) 1;
      doubleArray7[2] = (double) 2878;
      doubleArray7[3] = (double) 0;
      doubleArray7[4] = (double) 0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[2];
      doubleArray8[0] = (double) 0;
      doubleArray8[1] = 5321.53741406779;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[3];
      doubleArray9[0] = (double) 0;
      doubleArray9[1] = (double) 0;
      doubleArray9[2] = (double) 0;
      doubleArray0[8] = doubleArray9;
      resultMatrixHTML0.m_StdDev = doubleArray0;
      resultMatrixSignificance1.getDefaultPrintColNames();
      resultMatrixHTML0.getStdDev(1, 0);
      assertEquals(26, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 2;
      int[] intArray0 = null;
      resultMatrixGnuPlot0.setRowOrder((int[]) null);
      boolean boolean0 = true;
      resultMatrixGnuPlot0.m_PrintRowNames = true;
      resultMatrixGnuPlot0.m_NonSigWins = null;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("(");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.52751915084157
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[5][0];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 97;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.151441851711966
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.m_MeanWidth = 0;
      resultMatrixPlainText0.setMeanPrec((-1912));
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixSignificance0.setColNameWidth(3284);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.776208980044734
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[9][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = (-2456);
      intArray2[1] = 1;
      resultMatrixSignificance0.m_MeanWidth = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2;
      intArray0[2] = intArray3;
      resultMatrixSignificance0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultRemoveFilterName();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      String string0 = resultMatrixSignificance0.doubleToString((-2450.3397106250804), 0);
      assertEquals("-2450.", string0);
      
      resultMatrixGnuPlot0.setSignificanceWidth(0);
      resultMatrixSignificance0.clearSummary();
      resultMatrixSignificance0.getRevision();
      resultMatrixGnuPlot0.getCount(0);
      double double0 = resultMatrixGnuPlot0.getStdDev(572, 1800);
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5802339278865576
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      stringArray0[1] = ")";
      resultMatrixHTML0.getSignificanceCount(95, 242);
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle(2);
      resultMatrixPlainText0.setStdDevPrec(805);
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML1.getOptions();
      resultMatrixHTML1.getRowOrder();
      assertEquals(805, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixHTML0.setCountWidth((-1327));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(2096);
      resultMatrixSignificance0.setPrintRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getDefaultShowStdDev();
      assertEquals(0, resultMatrixSignificance1.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.409550426323711
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3, 3);
      int int0 = 1;
      resultMatrixCSV0.getRowName(1);
      resultMatrixCSV0.getSignificanceCount(1, 3334);
      resultMatrixCSV0.doubleToString(1, 3);
      resultMatrixCSV0.getShowStdDev();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      stringArray0[3] = "]";
      stringArray0[4] = "1.000";
      stringArray0[5] = "*";
      stringArray0[6] = "\tWhether to enumerate the row names (prefixing them with \n\t'(x)', with 'x' being the index).\n\t(default: no)";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.992196960885483
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_StdDevPrec = 0;
      resultMatrixCSV0.significanceWidthTipText();
      assertEquals(0, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.382105574670505
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.m_RowNameWidth = 1;
      resultMatrixGnuPlot0.setRowHidden(0, true);
      assertEquals(1, resultMatrixGnuPlot0.getRowNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.countWidthTipText();
      resultMatrixLatex0.getColHidden(3361);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.setEnumerateColNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 34);
      resultMatrixHTML0.getStdDev(550, 1);
      resultMatrixLatex0.getEnumerateRowNames();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.619222953131754
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      resultMatrixHTML0.m_PrintRowNames = true;
      booleanArray0[4] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[1];
      resultMatrixHTML0.clear();
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixHTML0.toStringSummary();
      resultMatrixGnuPlot0.toStringKey();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixCSV0.assign(resultMatrixHTML0);
      resultMatrixCSV0.clear();
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.toStringRanking();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.760912200944244
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 2);
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getEnumerateRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 1);
      resultMatrixPlainText0.clearHeader();
      String[] stringArray0 = new String[0];
      resultMatrixCSV0.RIGHT_PARENTHESES = "v";
      resultMatrixPlainText0.setSignificanceWidth(2);
      resultMatrixPlainText0.m_ColNames = stringArray0;
      resultMatrixPlainText0.m_SignificanceWidth = 1539;
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.5424553087509043
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setPrintColNames(false);
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot2.getPrintRowNames();
      resultMatrixGnuPlot2.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.clear();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.316374559375809
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[5][0];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[3] = 97;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot1.getVisibleColCount());
      
      resultMatrixGnuPlot1.toString();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot2.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(resultMatrixGnuPlot1);
      resultMatrixGnuPlot3.setRowHidden(1, false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.countWidthTipText();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot2.m_HeaderValues = vector0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot3);
      resultMatrixLatex0.getColHidden(32);
      ResultMatrixGnuPlot resultMatrixGnuPlot4 = new ResultMatrixGnuPlot(resultMatrixGnuPlot2);
      assertTrue(resultMatrixGnuPlot2.getEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot5 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot5.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot6 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixLatex0.clear();
      assertEquals(50, resultMatrixGnuPlot3.getRowNameWidth());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.290055159115722
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.padString(" \"plot.dat\"", 1290, true);
      resultMatrixHTML0.setRowNameWidth((-2054));
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      
      resultMatrixHTML0.m_RowNameWidth = 1290;
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.enumerateRowNamesTipText();
      resultMatrixHTML0.getColName(1290);
      int[][] intArray0 = new int[3][7];
      int[] intArray1 = new int[1];
      intArray1[0] = 32;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 2;
      intArray2[1] = 88;
      intArray2[2] = 1290;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray3[3] = 25;
      intArray0[2] = intArray3;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      resultMatrixHTML0.m_ColNameWidth = 88;
      resultMatrixHTML0.globalInfo();
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_StdDevWidth = 2796;
      resultMatrixHTML0.removeFilterName("");
      try { 
        resultMatrixHTML0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.2794518157267283
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ")";
      stringArray0[1] = "The width of the mean (0 = optimal).";
      stringArray0[2] = "";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.02678610025683
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.m_RemoveFilterName = true;
      resultMatrixPlainText0.removeFilterName("qUq$eG%u");
      resultMatrixPlainText0.addHeader("", " ");
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      resultMatrixGnuPlot0.m_ColNames = stringArray0;
      resultMatrixPlainText0.m_StdDevPrec = 2;
      resultMatrixPlainText0.getDisplayName();
      assertTrue(resultMatrixPlainText0.getRemoveFilterName());
      
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      boolean boolean0 = resultMatrixGnuPlot0.getDefaultPrintRowNames();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 2;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = 0.0;
      doubleArray3[6] = (double) 0;
      doubleArray3[7] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = 0.0;
      doubleArray4[1] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = (double) 0;
      doubleArray6[1] = 0.0;
      doubleArray6[2] = 0.0;
      doubleArray0[5] = doubleArray6;
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      assertTrue(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.834737490139163
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixSignificance0.m_StdDevPrec = 1727;
      resultMatrixSignificance0.TIE_STRING = "Czp`L";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.getDisplayRow(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[6][6];
      int[] intArray1 = new int[2];
      intArray1[0] = 1955;
      intArray1[1] = 1727;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1727;
      intArray2[3] = 1955;
      intArray2[4] = 0;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 1727;
      intArray3[1] = 1727;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 0;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 0;
      intArray6[1] = 0;
      intArray6[2] = 1727;
      intArray6[3] = 1;
      intArray6[4] = 2;
      intArray6[5] = 1;
      intArray6[6] = 1727;
      intArray6[7] = 0;
      intArray0[5] = intArray6;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.meanPrecTipText();
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDefaultRemoveFilterName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      
      resultMatrixGnuPlot1.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      
      resultMatrixGnuPlot0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(285, 2);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      assertEquals(285, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(2, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean boolean0 = resultMatrixPlainText0.getDefaultRemoveFilterName();
      assertFalse(boolean0);
      
      resultMatrixPlainText0.getDefaultStdDevWidth();
      assertTrue(resultMatrixPlainText0.getDefaultEnumerateColNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1821);
      resultMatrixLatex0.toStringRanking();
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(1821, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2380, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2380;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (double) 0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 2380;
      doubleArray0[7] = (double) 0;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixSignificance0.enumerateRowNamesTipText();
      resultMatrixSignificance0.getDefaultPrintColNames();
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertFalse(resultMatrixSignificance0.getDefaultShowAverage());
      assertEquals(2380, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.9394080795036506
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[5][0];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[3] = 97;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 97;
      resultMatrixGnuPlot0.getColName(97);
      intArray2[2] = (-891);
      intArray2[3] = 0;
      intArray2[4] = 1;
      resultMatrixGnuPlot0.setRowHidden(42, false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.countWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getColHidden(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot1.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixLatex0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixCSV0.clear();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.6094317805519176
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean((-1), (-993), 183.0);
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getSummaryTitle(0);
      resultMatrixPlainText0.setStdDevPrec(0);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setCountWidth(2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(12);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixHTML0.getStdDev(0, 945);
      assertEquals(2, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.8871876276384967
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[5][0];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 97;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 97;
      intArray2[2] = (-891);
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 97;
      intArray2[6] = 97;
      resultMatrixGnuPlot0.setColOrder(intArray1);
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = (-891);
      resultMatrixGnuPlot0.getPrintRowNames();
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals("Key:\n1 col0\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getSummaryTitle(0);
      resultMatrixCSV0.clear();
      String string1 = resultMatrixGnuPlot0.getSummaryTitle(1);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals("b", string1);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.047074222855931
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      boolean boolean0 = true;
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixPlainText0.toStringSummary();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      stringArray0[2] = "*";
      stringArray0[3] = "<SON4+i#Ck1?";
      stringArray0[4] = " ";
      stringArray0[5] = " ";
      stringArray0[6] = " ";
      stringArray0[7] = "-summary data not set-";
      stringArray0[8] = "(";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.enumerateColNamesTipText();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.605559395172488
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setSignificanceWidth((-2166));
      resultMatrixHTML0.m_ColNameWidth = (-1722);
      resultMatrixHTML0.m_ColNameWidth = (-993);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.setMean(0, (-1722), 0);
      resultMatrixHTML0.getSignificanceCount(805, (-1722));
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle((-993));
      resultMatrixPlainText0.setStdDevPrec(0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getRowOrder();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.toArray();
      resultMatrixSignificance0.setStdDevPrec(0);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertTrue(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.2509410406676773
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      resultMatrixHTML0.setSignificanceWidth((-1052));
      stringArray0[1] = ")";
      stringArray0[2] = "";
      stringArray0[3] = ");D>";
      stringArray0[4] = " ";
      stringArray0[5] = ")";
      stringArray0[6] = ")";
      stringArray0[7] = "(";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.m_RemoveFilterName = true;
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.getStdDevWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.toStringKey();
      assertFalse(resultMatrixHTML0.getPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.5669866712419864
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(";
      resultMatrixHTML0.setMean((-3703), 11, 0);
      boolean boolean0 = true;
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.getSummaryTitle((-3703));
      resultMatrixPlainText0.setStdDevPrec(1);
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance1 = null;
      try {
        resultMatrixSignificance1 = new ResultMatrixSignificance((-278), 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.9913616173293627
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(35, 2);
      String string0 = resultMatrixLatex0.getSummaryTitle((-1026));
      assertEquals("U", string0);
      
      String string1 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n(2) & col1 \\\\\n(3) & col2 \\\\\n(4) & col3 \\\\\n(5) & col4 \\\\\n(6) & col5 \\\\\n(7) & col6 \\\\\n(8) & col7 \\\\\n(9) & col8 \\\\\n(10) & col9 \\\\\n(11) & col10 \\\\\n(12) & col11 \\\\\n(13) & col12 \\\\\n(14) & col13 \\\\\n(15) & col14 \\\\\n(16) & col15 \\\\\n(17) & col16 \\\\\n(18) & col17 \\\\\n(19) & col18 \\\\\n(20) & col19 \\\\\n(21) & col20 \\\\\n(22) & col21 \\\\\n(23) & col22 \\\\\n(24) & col23 \\\\\n(25) & col24 \\\\\n(26) & col25 \\\\\n(27) & col26 \\\\\n(28) & col27 \\\\\n(29) & col28 \\\\\n(30) & col29 \\\\\n(31) & col30 \\\\\n(32) & col31 \\\\\n(33) & col32 \\\\\n(34) & col33 \\\\\n(35) & col34 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string1);
      
      String string2 = resultMatrixLatex0.padString("\begin{table}[thb]\ncaption{label{labelname}Table Caption (Key)}\nscriptsize\n{centering\n\begin{tabular}{cl}\\\n(1) & col0 \\\n(2) & col1 \\\n(3) & col2 \\\n(4) & col3 \\\n(5) & col4 \\\n(6) & col5 \\\n(7) & col6 \\\n(8) & col7 \\\n(9) & col8 \\\n(10) & col9 \\\n(11) & col10 \\\n(12) & col11 \\\n(13) & col12 \\\n(14) & col13 \\\n(15) & col14 \\\n(16) & col15 \\\n(17) & col16 \\\n(18) & col17 \\\n(19) & col18 \\\n(20) & col19 \\\n(21) & col20 \\\n(22) & col21 \\\n(23) & col22 \\\n(24) & col23 \\\n(25) & col24 \\\n(26) & col25 \\\n(27) & col26 \\\n(28) & col27 \\\n(29) & col28 \\\n(30) & col29 \\\n(31) & col30 \\\n(32) & col31 \\\n(33) & col32 \\\n(34) & col33 \\\n(35) & col34 \\\nend{tabular}\n}\nend{table}\n", 2, true);
      assertEquals("\be", string2);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[3][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = (-2456);
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2;
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(true);
      assertTrue(resultMatrixPlainText0.getShowStdDev());
      assertFalse(resultMatrixPlainText0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.m_ShowStdDev = true;
      resultMatrixLatex0.m_ShowStdDev = true;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.927482988365456
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixGnuPlot0.setRowHidden(0, false);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.countWidthTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getColHidden((-550));
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.clear();
      resultMatrixPlainText0.setColName(81, " ");
      assertEquals("The width of the counts (0 = optimal).", resultMatrixGnuPlot0.countWidthTipText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.m_ShowAverage = false;
      resultMatrixSignificance0.m_MeanWidth = 0;
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      resultMatrixSignificance0.setColNameWidth(3284);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV0.setRowNameWidth((-659));
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setPrintRowNames(true);
      resultMatrixCSV1.getDefaultPrintColNames();
      resultMatrixCSV1.m_RemoveFilterName = false;
      resultMatrixCSV1.clearHeader();
      resultMatrixCSV1.getColCount();
      Vector<Object> vector0 = new Vector<Object>();
      assertEquals(10, vector0.capacity());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7886260379670382
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      resultMatrixHTML0.m_PrintRowNames = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[0];
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.getStdDevPrec();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(4129, 2);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.9122258371287506
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[3] = false;
      resultMatrixHTML0.m_PrintRowNames = true;
      booleanArray0[4] = true;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      int[] intArray0 = new int[1];
      double[][] doubleArray0 = new double[1][3];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 1;
      doubleArray0[0] = doubleArray1;
      resultMatrixCSV0.m_Mean = doubleArray0;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixCSV0.setPrintRowNames(true);
      resultMatrixCSV0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixHTML0.getCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixHTML0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot1.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setColName((-1663), "");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixCSV1.getVisibleRowCount());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.435158658284827
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = " HYnQ}B7$:WXp1,";
      stringArray0[1] = "";
      stringArray0[2] = "? #H(F>;MBZp%Ng}IcC";
      stringArray0[3] = "header1";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "+9";
      stringArray0[7] = ";[?(";
      stringArray0[8] = "end{tabular}\n";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setShowStdDev(true);
      assertTrue(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.6273500297285692
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Generates the output as plain text (for fixed width fonts).";
      stringArray0[3] = "CmxQw7|vwd[$po=";
      stringArray0[4] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixGnuPlot0.getPrintRowNames();
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.clear();
      ResultMatrixHTML.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(31, 31);
      resultMatrixSignificance0.getMeanWidth();
      assertEquals(31, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertEquals(31, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.448258616858539
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixSignificance0.printRowNamesTipText();
      assertEquals("Whether to output row names or just numbers representing them.", string0);
      
      resultMatrixSignificance0.m_RowOrder = null;
      int int0 = resultMatrixSignificance0.getStdDevWidth();
      assertEquals(0, int0);
      
      resultMatrixSignificance0.m_StdDevWidth = 0;
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.removeFilterNameTipText();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }
}
