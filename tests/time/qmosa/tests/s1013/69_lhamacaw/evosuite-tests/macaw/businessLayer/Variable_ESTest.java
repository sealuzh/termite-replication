/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:48:00 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.885935950863218
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      User user0 = new User("mVlg", "n!pBY^ef <fr0kZ");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm3);
      ontologyTerm0.setDescription("blank");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm2.setOntologyName("variable.isCoded.label");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8420932571263893
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "user.addressLine1.saveChanges";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("M#+_jII9nZCC;2-pq(");
      ontologyTerm0.setDescription("user.addressLine1.saveChanges");
      ontologyTerm0.setIdentifier(0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCleaningStatus();
      Variable.validateFields(rawVariable0);
      rawVariable0.getOntologyTerms();
      User user0 = new User("", "Vj.O5J9L+RG>d`t");
      user0.setStatus("Unknown");
      user0.setEmail("lG-Y<8w[# 3}I");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        arrayList0.subList(0, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      user0.setAddressLine2("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      User user2 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      derivedVariable0.setLabel("I1W>osA");
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("1M__");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "1M__";
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.columnStart = null;
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getForm();
      rawVariable0.setName("0");
      rawVariable0.isCoded();
      derivedVariable0.getDisplayItemIdentifier();
      rawVariable0.getAlias();
      rawVariable0.getName();
      User user0 = new User((String) null, "user.addressLine2.label");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.846758943887927
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user0 = new User();
      user0.setLastName("");
      user0.setAddressLine1("7icuk");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.clone();
      rawVariable1.setCoded(false);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable2.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user1 = new User();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument1);
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      User user0 = new User();
      user0.setCity("{=4OU4xok2=0IzC");
      derivedVariable0.setAvailability("EZ*tqUq$eG");
      derivedVariable0.setName("#|h#y");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.835268670354971
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      User user0 = new User("mVlg", "n!pBY^ef <fr0kZ");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm1);
      rawVariable1.getYear();
      rawVariable0.clone();
      rawVariable0.setCoded(true);
      rawVariable1.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertTrue(rawVariable0.isCoded());
      
      rawVariable1.setIdentifier(0);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.7861858419175967
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      rawVariable0.setColumnEnd("");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.setCoded(false);
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable2);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable1.getAlias();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable1.removeOntologyTerms(arrayList1);
      ontologyTerm0.setTerm(":aPd*>a");
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user1, rawVariable2, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertNotNull(macawChangeEvent1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0136703360627055
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setCity("{=4OU4xok2=0IzC");
      derivedVariable1.setAvailability("EZ*tqUq$eG");
      derivedVariable0.setName("#|h#y");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd("variable.form.label");
      User user1 = new User("", "{=4OU4xok2=0IzC");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm2);
      ontologyTerm2.setDescription("{o2u%d@&'4t");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("variable.form.label", rawVariable0.getColumnEnd());
      
      ontologyTerm1.setOntologyName("#|h#y");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable1.removeOntologyTerms(arrayList0);
      ontologyTerm2.setTerm("=a3bq|u{1~CyMaS");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      DerivedVariable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.735357971468285
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      List<OntologyTerm> list0 = new LinkedList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      assertEquals(0, rawVariable0.getIdentifier());
      
      rawVariable0.setIdentifier(513);
      User user0 = new User();
      user0.setLastName("_)`UFA`faZ");
      user0.setAddressLine1("7icuk");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList1 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.setCoded(false);
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.getName();
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "f3x$1M5xQeH";
      User user0 = new User("f3x$1M5xQeH", "user.lastName.label");
      user0.setCounty("#|h#y");
      user0.setStatus("user.lastName.label");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCodeBookNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("f3x$1M5xQeH", rawVariable0.getCodeBookNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.970371554814284
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getCleaningDescription();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setNotes("f3x$1M5xQeH");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.getOntologyTerms();
      rawVariable0.getCleaningDescription();
      User user0 = new User("variable.category.label", (String) null);
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable3);
      assertEquals("f3x$1M5xQeH", rawVariable2.getNotes());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.727285202361588
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("}xZKk");
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("1ulqw>*.EogU");
      derivedVariable0.setCleaningDescription("Iu:#.g2;tv-");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setCoded(true);
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      User user0 = new User("8w s9ry*V&_,^3PF", "M");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.629211963537143
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("hq");
      ontologyTerm1.setDescription("hq");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("Zq+i'hT6y3mA'Zzb");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCategory();
      derivedVariable0.setYear(";*}@>p9+<[4\u0006uyzy");
      derivedVariable0.isCoded();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Zq+i'hT6y3mA'Zzb", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.720167345803562
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setDescription("blank");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      Variable.validateFields(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.clone();
      derivedVariable0.questionNumber = "blank";
      rawVariable0.clone();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getName();
      rawVariable0.getDisplayName();
      rawVariable0.clone();
      rawVariable0.getCodeBookNumber();
      User user0 = new User("UNABLE_TO_ASSOCIATE_DOCUMENT", "DTR\"h6j9m}");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.703858247271768
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setCity("{=4OU4xok2=0IzC");
      derivedVariable1.setAvailability("EZ*tqUq$eG");
      user0.setLastName("EZ*tqUq$eG");
      user0.setAddressLine1("0{,#3nY>b(c]w8<");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.setCoded(false);
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-632));
      assertEquals("-632", rawVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable3.isCoded());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0875356160032124
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getValueLabels();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User("general.fieldValue.unknown", "-");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIdentifier(1);
      supportingDocument1.setDocumentCode("pv-oY~`3LY\"");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument3);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList2);
      String string0 = derivedVariable0.getCategory();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      assertFalse(arrayList3.contains(string0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("0~>Id+");
      ontologyTerm1.setTerm("~{.,gvE!o>&Q_r");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7347107054562967
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setDescription("n!pBY^ef <fr0kZ");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm1.setTerm("mVlg");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable0.isNewRecord());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8854116112572354
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      user0.setCity("gL11Z");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      rawVariable1.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-1027));
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("-1027", rawVariable0.getDisplayItemIdentifier());
      assertTrue(rawVariable1.isCoded());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setCity("{=4OU4xok2=0IzC");
      derivedVariable1.setAvailability("EZ*tqUq$eG");
      derivedVariable0.setName("#|h#y");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.734237892217526
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      User user0 = new User("mVlg", "n!pBY^ef <fr0kZ");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm3);
      ontologyTerm0.setDescription("blank");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm2.setOntologyName("variable.isCoded.label");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm0.setTerm("");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.865270146143615
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setNotes("");
      rawVariable0.clone();
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      User user0 = new User("3J&/", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6683905069672833
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnStart("#|h#y");
      rawVariable0.setCodeBookNumber("user.lastName.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "#|h#y";
      stringArray0[1] = "#|h#y";
      stringArray0[2] = "user.lastName.label";
      stringArray0[3] = "#|h#y";
      stringArray0[4] = "#|h#y";
      stringArray0[5] = ",j[1GEnzKFH+$";
      stringArray0[6] = ",j[1GEnzKFH+$";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes(",j[1GEnzKFH+$");
      rawVariable0.clone();
      rawVariable0.getNotes();
      rawVariable1.getFilePath();
      assertEquals("#|h#y", rawVariable1.getColumnStart());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.241489177440648
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("f3x$1M5xQeH");
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setYear("w5R)<M*1");
      derivedVariable0.setCleaningDescription("E1*tqUq$eG");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setCoded(true);
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("E1*tqUq$eG", "SELF_REFERENCING_ALTERNATIVE_VARIABLE");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("w5R)<M*1", derivedVariable0.getYear());
      assertEquals("E1*tqUq$eG", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.8318049509530216
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCleaningDescription("#Mzh");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setCoded(false);
      derivedVariable1.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("j", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.clone();
      derivedVariable0.isNewRecord();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertEquals("variable.name.label", derivedVariable0.getFilePath());
      assertEquals("UNABLE_TO_DISASSOCIATE_DOCUMENT", derivedVariable0.getYear());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.939468887338598
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      ontologyTerm1.setTerm("G;-fA~>Q@i^ru?q6");
      ontologyTerm1.setTerm("");
      OntologyTerm ontologyTerm2 = (OntologyTerm)ontologyTerm1.clone();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setColumnEnd("");
      User user0 = new User("mVlg", "n!pBY^ef <fr0kZ");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm3);
      user0.setFirstName("variable.label.label");
      ontologyTerm0.setDescription("blank");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm2.setOntologyName("variable.isCoded.label");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(0, arrayList1.size());
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getColumnEnd();
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.year.label");
      rawVariable0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = null;
      arrayList0.add((SupportingDocument) null);
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      arrayList1.ensureCapacity((-3056));
      arrayList1.add(rawVariable0);
      arrayList1.retainAll(arrayList0);
      arrayList0.retainAll(arrayList1);
      rawVariable0.removeSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      String string0 = rawVariable0.getYear();
      assertNotNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.addSourceVariables(arrayList2);
      String string1 = rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = null;
      ontologyTerm0.setDescription("]c2iTex]Sd");
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9224967595081845
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABL_TO_CHECK_ALIAS_FIE_PATH_EXISTS");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      user0.setPhone("%;$qp");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setAddressLine1((String) null);
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(false);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(0);
      rawVariable0.getCodeBookNumber();
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7035281807689286
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      User user0 = new User();
      user0.setPostCode((String) null);
      user0.setLastName("1ulqw>*.EogU");
      user0.setAddressLine1((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      rawVariable0.clone();
      rawVariable0.setCoded(true);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7016382450517655
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      rawVariable0.setColumnEnd("");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable1.getYear();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setCoded(true);
      rawVariable1.createVariableSummary();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setIdentifier(0);
      assertEquals(0, rawVariable3.getIdentifier());
      assertFalse(rawVariable3.isCleaned());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7353390710828336
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = null;
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(0);
      assertFalse(rawVariable0.isCoded());
      
      rawVariable1.getCodeBookNumber();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.7649220708921467
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      rawVariable0.setColumnEnd("");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.setCoded(false);
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable1);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      boolean boolean0 = rawVariable2.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable2.getAlias();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user1, rawVariable3, rawVariable0);
      assertTrue(arrayList2.isEmpty());
      
      rawVariable3.removeOntologyTerms(arrayList1);
      ontologyTerm0.setTerm("");
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertNotNull(macawChangeEvent1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      
      rawVariable3.getName();
      assertEquals(0, rawVariable3.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.627120205065521
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("_)`UFA`faZ");
      rawVariable0.setCodeBookNumber("_)`UFA`faZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_)`UFA`faZ";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = "_)`UFA`faZ";
      stringArray0[3] = "_)`UFA`faZ";
      stringArray0[4] = ",j[1GEnzKFH+$";
      stringArray0[5] = "_)`UFA`faZ";
      stringArray0[6] = "_)`UFA`faZ";
      stringArray0[7] = "_)`UFA`faZ";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes("_)`UFA`faZ");
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getCleaningDescription();
      rawVariable0.setNotes("_)`UFA`faZ");
      assertEquals("_)`UFA`faZ", rawVariable0.getCodeBookNumber());
      
      rawVariable1.getOntologyTerms();
      rawVariable1.getCleaningDescription();
      rawVariable1.getOntologyTerms();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.6636093674910186
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("_)`UFA`faZ");
      rawVariable0.setCodeBookNumber("_)`UFA`faZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_)`UFA`faZ";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = "_)`UFA`faZ";
      stringArray0[3] = "_)`UFA`faZ";
      stringArray0[4] = "_)`UFA`faZ";
      stringArray0[5] = "_)`UFA`faZ";
      stringArray0[6] = "_)`UFA`faZ";
      stringArray0[7] = "_)`UFA`faZ";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes("_)`UFA`faZ");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getNotes();
      rawVariable0.getFilePath();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.getAvailability();
      assertEquals("_)`UFA`faZ", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.getForm();
      derivedVariable0.setAvailability("nGJW");
      derivedVariable0.setColumnEnd("");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAlias("");
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertEquals("nGJW", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.748451651637529
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      arrayList0.add(supportingDocument1);
      arrayList0.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList2);
      rawVariable0.setAlias("9nL");
      rawVariable0.clone();
      derivedVariable0.getCleaningDescription();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>(arrayList4);
      derivedVariable0.addSupportingDocuments(arrayList3);
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.getAlias();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setAlias("aC,Fyti74mifNFosjA ");
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getLabel();
      assertEquals("9nL", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("|olgN90!XUl@4du!P'", "");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-2367));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName(",C4f68|Y-8NTIL 3");
      ontologyTerm2.setNameSpace("");
      ontologyTerm2.setOntologyName("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("MISSING_DISPLAY_LIST_VIEWER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals((-2367), rawVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.7006690649781078
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      rawVariable0.setCoded(false);
      rawVariable0.questionNumber = null;
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier(0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.997592473293267
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCleaningDescription("#Mzh");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setCoded(false);
      assertEquals("variable.name.label", derivedVariable0.getFilePath());
      
      derivedVariable1.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSupportingDocument(supportingDocument0);
      DerivedVariable.validateFields(derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("variable.year.label");
      rawVariable0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = null;
      arrayList0.add((SupportingDocument) null);
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      arrayList1.ensureCapacity((-3056));
      arrayList1.add(rawVariable0);
      arrayList1.retainAll(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.1832002435857207
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.name.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCleaningDescription("#Mzh");
      Variable.validateFields(derivedVariable0);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.setCoded(false);
      derivedVariable1.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("j", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription((String) null);
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setQuestionNumber("user.userID.label");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-2367));
      ontologyTerm1.setOntologyName(",C4f68|Y-8NTIL 3");
      ontologyTerm1.setOntologyName("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("variable.isCleaned.saveChanges.changedToNotClean");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges(user0, ontologyTerm2, (OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.122862951756146
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("variable.codeBookNumber.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable2.setYear("");
      derivedVariable2.setCleaningDescription("");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.validateFields(derivedVariable3);
      DerivedVariable.validateFields(derivedVariable1);
      derivedVariable1.hasSameDisplayName(derivedVariable2);
      derivedVariable0.setCoded(false);
      derivedVariable0.getFilePath();
      derivedVariable3.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "1ulqw>*.EogU");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.setForm("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable4);
      User user1 = new User(";t[5IV*>-Mk&pB~", ";t[5IV*>-Mk&pB~");
      assertEquals("", user1.getAddressLine2());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.7482611976592484
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getYear();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>(arrayList0);
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      rawVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("");
      rawVariable0.codeBookNumber = "";
      derivedVariable0.setForm("gOI^S");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setCoded(false);
      rawVariable0.clone();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("gOI^S", derivedVariable0.getForm());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.24259497722783
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("1ulqw>*.EogU");
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.setYear("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      derivedVariable0.setCleaningDescription("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      Variable.validateFields(rawVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_DISASSOCIATE_DOCUMENT", derivedVariable0.getYear());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSupportingDocuments();
      User user0 = new User("IX@S9RmL:{ SAf", "EZ*tqUq$eG");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable3);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6193717272673727
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("1ulqw>*.EogU");
      ontologyTerm0.setTerm("Wn$;{-");
      ontologyTerm0.setTerm("Unknown");
      ontologyTerm0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd("}");
      User user0 = new User((String) null, "H?I");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm1);
      ontologyTerm1.setDescription("`FWr)$UW_}MW");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setOntologyName("Unknown");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      ontologyTerm1.setTerm((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      derivedVariable0.setColumnStart("EZ*tqUq$eG");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCodeBookNumber("luCY`=~x>Ov0");
      assertEquals("luCY`=~x>Ov0", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.778832887201099
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("|olgN90!XUl@4du!P'", "");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-2367));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName(",C4f68|Y-8NTIL 3");
      ontologyTerm2.setNameSpace("");
      ontologyTerm2.setOntologyName("");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ontologyTerm2.setTerm(",C4f68|Y-8NTIL 3");
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setIdentifier(3186);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm0.setTerm("-}RX0nbND.f70Ts*eA");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("3186", rawVariable0.getDisplayItemIdentifier());
      assertEquals(3186, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.887511378356885
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      rawVariable0.setIdentifier((-1247));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.availability.label");
      ontologyTerm0.setNameSpace("UNABLE_TO_CREATE_CATEGORY");
      ontologyTerm2.setOntologyName("G;-fA~>Q@i^ru?q6");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm2.setTerm("variable.cleaningStatus.label");
      rawVariable0.createVariableSummary();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.setIdentifier((-2040109463));
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm1.setTerm("Unknown");
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      user0.setCity("{=4OU4xok2=0IzC");
      derivedVariable1.setAvailability("EZ*tqUq$eG");
      derivedVariable0.setName("#|h#y");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      User user2 = new User((String) null, "");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user2, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription((String) null);
      rawVariable0.addOntologyTerm(ontologyTerm2);
      ontologyTerm2.setOntologyName("");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList2);
      ontologyTerm0.setTerm("e7LCnS!OT6}Y-RPRO8D");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertEquals("", macawChangeEvent0.getUserID());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setCategory("ERROR #");
      rawVariable0.setAvailability("ERROR #");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      String string0 = "";
      derivedVariable0.setColumnStart("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("u");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("user.lastName.label");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("v`+ZS>y7?!");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.944518673497653
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("variable.notes.label", "fmU<xM");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.6683905069672833
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("");
      rawVariable0.setCodeBookNumber("");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = ",j[1GEnzKFH+$";
      stringArray0[2] = ",j[1GEnzKFH+$";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = ",j[1GEnzKFH+$";
      stringArray0[6] = "";
      arrayList0.toArray(stringArray0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setNotes(stringArray0[0]);
      rawVariable0.setIdentifier(1153);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("1153", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      
      String string0 = rawVariable0.getNotes();
      assertNull(string0);
      
      String string1 = rawVariable0.getFilePath();
      assertNotNull(string1);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "EZ*tqUq$eG";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.807426736696812
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("");
      user0.setFirstName("[[](\fQ");
      user0.setCity("");
      user0.setPassword("[[](\fQ");
      user0.setLastName("[[](\fQ");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCleaningStatus("}.{T0$m`w*Lz<K9:P");
      derivedVariable0.setForm("");
      user0.setCity("user.affiliation.saveChanges");
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setName("macaw.businessLayer.Variable");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.addSourceVariables(arrayList2);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.iterator();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.597541791475068
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      User user0 = new User((String) null, "UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.subList(0, 0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIdentifier(0);
      User user1 = new User();
      user1.setPostCode((String) null);
      user1.setLastName("");
      user1.setAddressLine1((String) null);
      User user2 = new User();
      OntologyTerm.detectFieldChanges(user2, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setDescription("|qW");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setOntologyName("");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm0.setTerm("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
