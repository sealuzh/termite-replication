/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:49:46 GMT 2019
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.main.FreeMindApplet;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.ImageCapabilities;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ContainerListener;
import java.awt.event.FocusEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseListener;
import java.sql.Time;
import java.util.Date;
import java.util.Locale;
import javax.help.ForwardAction;
import javax.help.event.HelpHistoryModelEvent;
import javax.swing.InputMap;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JViewport;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.AncestorListener;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.event.MenuKeyEvent;
import javax.swing.table.DefaultTableModel;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.fop.image.FopImage;
import org.apache.fop.image.JpegImage;
import org.apache.fop.pdf.PDFInfo;
import org.apache.xalan.templates.TemplateList;
import org.apache.xml.utils.QName;
import org.apache.xpath.XPathContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import plugins.map.MapDialog;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1390181868851026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getAutoscrolls();
      jDayChooser0.getMinSelectableDate();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.avalon.framework.configuration.DefaultConfiguration";
      stringArray0[1] = "day";
      stringArray0[2] = "day";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[3] = "31";
      stringArray0[4] = "31";
      stringArray0[5] = "day";
      jDayChooser0.dayNames = stringArray0;
      stringArray0[6] = "day";
      jDayChooser0.drawWeeks();
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1445793988625774
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MapDialog mapDialog0 = new MapDialog();
      mapDialog0.getMindMapController();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      int int0 = 49;
      jDayChooser0.setMaxDayCharacters(1);
      int int1 = 49;
      jDayChooser0.setDay(49);
      jDayChooser0.setMaxDayCharacters((-294));
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2687894300107914
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDecorationBordersVisible();
      SystemColor systemColor0 = SystemColor.textHighlight;
      jDayChooser0.getSundayForeground();
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.isDayBordersVisible();
      ForwardAction forwardAction0 = new ForwardAction((Object) null);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.WRITING_MODE_RTL;
      boolean boolean0 = false;
      try { 
        Integer.parseUnsignedInt("day");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"day\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.274246544102149
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getToolkit();
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      jDayChooser0.addAncestorListener(ancestorListener0);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.drawDays();
      jDayChooser0.setFocus();
      jDayChooser0.isWeekOfYearVisible();
      Color color0 = jDayChooser0.getSundayForeground();
      assertEquals((-6029312), color0.getRGB());
      
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-17), 9999, (-357), 153, (-17), 153);
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=-17,MONTH=9999,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=-357,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,HOUR=153,HOUR_OF_DAY=153,MINUTE=-17,SECOND=153,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]", mockGregorianCalendar0.toString());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1963506329418347
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMonth(0);
      MapDialog mapDialog0 = new MapDialog();
      mapDialog0.getMindMapController();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      jDayChooser0.setMaxDayCharacters(49);
      jDayChooser0.setDay(916);
      jDayChooser0.setMaxDayCharacters(0);
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.301191963889812
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setSize(0, 0);
      jDayChooser0.getColorModel();
      JViewport jViewport0 = new JViewport();
      jViewport0.setFocusable(true);
      Dimension dimension0 = jViewport0.getExtentSize();
      jDayChooser0.getSize(dimension0);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.createVolatileImage(1427, 0);
      jDayChooser0.setEnabled(true);
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      imageCapabilities0.clone();
      jDayChooser0.createVolatileImage(0, 1794, imageCapabilities0);
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.setSundayForeground((Color) null);
      jDayChooser0.initDecorations();
      jDayChooser0.getMaxSelectableDate();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.240235895383868
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.validate();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      Date date1 = jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setFocus();
      jDayChooser0.drawDays();
      jDayChooser0.getClientProperty(date1);
      ActionEvent actionEvent0 = new ActionEvent(date1, 12299, "day");
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      MockSimpleDateFormat mockSimpleDateFormat1 = new MockSimpleDateFormat();
      mockSimpleDateFormat1.getCalendar();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(12299, 3530, 12299, (-2913), (-2477));
      FileSystemHandling.shouldAllThrowIOExceptions();
      actionEvent0.setSource(mockGregorianCalendar0);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.util.MockGregorianCalendar cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3793815853191833
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.ITALY;
      jDayChooser0.getHierarchyListeners();
      jDayChooser0.setLocale(locale0);
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 10017, 14, 14, 'p', 1);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(2565);
      jDayChooser0.setEnabled(false);
      KeyEvent.getExtendedKeyCodeForChar(2565);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.getSelectedDay();
      jDayChooser0.setEnabled(false);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3893456575903267
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMonth(0);
      jDayChooser0.addListeners(0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 0, 61441, 61441, '!');
      keyEvent0.consume();
      InputEvent.getModifiersExText(0);
      jDayChooser0.keyTyped(keyEvent0);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem();
      Component component0 = jCheckBoxMenuItem0.getComponent();
      Component component1 = jDayChooser0.add(component0);
      jDayChooser0.remove(component1);
      jDayChooser0.getContainerListeners();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      JDayChooser jDayChooser1 = new JDayChooser();
      Color color0 = jDayChooser1.getWeekdayForeground();
      jDayChooser0.setDecorationBackgroundColor(color0);
      assertEquals((-16754012), color0.getRGB());
      
      TemplateList templateList0 = new TemplateList();
      XPathContext xPathContext0 = new XPathContext(component1, false);
      QName qName0 = new QName("day");
      jDayChooser0.getSelectedDay();
      jDayChooser0.setEnabled(false);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2256070056679143
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMonth(0);
      MapDialog mapDialog0 = new MapDialog();
      mapDialog0.getMindMapController();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      jDayChooser0.setMaxDayCharacters(49);
      jDayChooser0.setDay(916);
      jDayChooser0.setMaxDayCharacters(49);
      jDayChooser0.getMaxDayCharacters();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.getLayoutOrigin();
      InputMap inputMap0 = jDayChooser0.getInputMap();
      inputMap0.getParent();
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getLocale();
      int int0 = 181;
      DefaultTableModel defaultTableModel0 = null;
      try {
        defaultTableModel0 = new DefaultTableModel(181, (-346));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -346
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1336798095581577
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      int int0 = (-17);
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser0, (-17), "", (-17));
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getToolkit();
      jDayChooser_DecoratorButton0.setAutoscrolls(false);
      actionEvent0.paramString();
      actionEvent0.setSource(jDayChooser_DecoratorButton0);
      actionEvent0.paramString();
      actionEvent0.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2358253639551506
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDecorationBordersVisible();
      SystemColor systemColor0 = SystemColor.textHighlight;
      Color.getColor("day", 0);
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      jDayChooser0.isDecorationBackgroundVisible();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.isDayBordersVisible();
      ForwardAction forwardAction0 = new ForwardAction((Object) null);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.WRITING_MODE_RTL;
      boolean boolean0 = false;
      try { 
        Integer.parseUnsignedInt("(8e-)al8ZNp7iR>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"(8e-)al8ZNp7iR>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.3011802354730313
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setSize(0, 0);
      jDayChooser0.getColorModel();
      JViewport jViewport0 = new JViewport();
      jViewport0.setFocusable(true);
      Dimension dimension0 = jViewport0.getExtentSize();
      jDayChooser0.getSize(dimension0);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.createVolatileImage(1427, 0);
      jDayChooser0.setEnabled(true);
      Date date0 = jDayChooser0.getMinSelectableDate();
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      imageCapabilities0.clone();
      jDayChooser0.createVolatileImage(0, 1794, imageCapabilities0);
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.getMinSelectableDate();
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(14, jDayChooser0.getDay());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.3025457592959944
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.init();
      jDayChooser0.getMouseWheelListeners();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-2411));
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jDayChooser0.removeContainerListener((ContainerListener) null);
      JMonthChooser jMonthChooser0 = new JMonthChooser(false);
      jDayChooser0.setMonthChooser(jMonthChooser0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "day";
      stringArray0[1] = "month";
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setMaxSelectableDate((Date) null);
      jDayChooser0.getMinSelectableDate();
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.getMaxDayCharacters();
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser2.setSundayForeground((Color) null);
      jDayChooser1.drawDays();
      jDayChooser2.drawDays();
      assertFalse(jDayChooser2.isDecorationBordersVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3065750591482734
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(0L);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getAutoscrolls();
      JViewport jViewport0 = new JViewport();
      jViewport0.setFocusable(false);
      Dimension dimension0 = jViewport0.getExtentSize();
      jDayChooser0.getSize(dimension0);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.createVolatileImage(1427, 5);
      jDayChooser0.setEnabled(false);
      Date date0 = jDayChooser0.getMinSelectableDate();
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      imageCapabilities0.clone();
      jDayChooser0.createVolatileImage(2311, 1427, imageCapabilities0);
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.getMinSelectableDate();
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(0, int0);
      
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setForeground((Color) null);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(1, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.096578338635442
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Cursor cursor0 = jDayChooser0.getCursor();
      jDayChooser0.setAlignmentX(10.0F);
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JMenuItem jMenuItem0 = jMenu0.add("day");
      menuElementArray0[0] = (MenuElement) jMenuItem0;
      JPopupMenu jPopupMenu0 = new JPopupMenu("day");
      menuElementArray0[1] = (MenuElement) jPopupMenu0;
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("14");
      menuElementArray0[2] = (MenuElement) jCheckBoxMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jDayChooser0, 164, 164, 3, 48, 61443, 61443, true, menuElementArray0, menuSelectionManager0);
      ForwardAction forwardAction0 = new ForwardAction(menuElementArray0[2]);
      forwardAction0.mouseReleased(menuDragMouseEvent0);
      HelpHistoryModelEvent helpHistoryModelEvent0 = new HelpHistoryModelEvent(cursor0, false, false);
      boolean boolean0 = new Boolean(true);
      jDayChooser0.getClientProperty(cursor0);
      ForwardAction forwardAction1 = new ForwardAction((Object) null);
      forwardAction1.historyChanged(helpHistoryModelEvent0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      AWTEventMulticaster.remove((MouseListener) forwardAction0, (MouseListener) forwardAction0);
      jDayChooser_DecoratorButton0.addMouseListener((MouseListener) null);
      // Undeclared exception!
      try { 
        Time.valueOf("hM\"WN7cUu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.sql.Time", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1700989912782065
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getCursor();
      jDayChooser0.setAlignmentX((-1.0F));
      jDayChooser0.setYear(4);
      jDayChooser0.setSize((-2105), 32);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.updateUI();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1337180792574855
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.setBounds(1424, 1424, 1424, 2139095040);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser_DecoratorButton0.isFocusable();
      SystemColor systemColor0 = SystemColor.scrollbar;
      jDayChooser0.setForeground((Color) null);
      Color color0 = jDayChooser0.getWeekdayForeground();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(0, color0.getRed());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.205435033889684
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.focusLost((FocusEvent) null);
      Color color0 = jDayChooser0.getWeekdayForeground();
      assertEquals((-16754012), color0.getRGB());
      
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.getDay();
      int int0 = 228;
      long long0 = (-3145L);
      int int1 = 8771;
      int int2 = 0;
      char char0 = '*';
      MenuElement[] menuElementArray0 = new MenuElement[4];
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, (-657), (-989L), (-2775), (-2775), '#', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyReleased(menuKeyEvent0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }
}
