/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 23:59:51 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8609858528037115
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" .5i~oj");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(31, token1.getTokenType());
      assertEquals(".5", token1.getTokenText());
      
      xPathLexer0.setXPath("X'bkq/}<(");
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9911399522596298
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("V>", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.div();
      Token token2 = xPathLexer1.dollar();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer1.LA(0);
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer1.consume(86);
      xPathLexer2.setXPath("V>V");
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('o');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3972292666361108
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.dollar();
      xPathLexer1.identifier();
      xPathLexer0.setXPath("Z:]*\"k");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.760328270878794
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8001744356759837
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("#>@^8$CS{}");
      xPathLexer0.number();
      Token token0 = xPathLexer1.rightParen();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.nextToken();
      xPathLexer1.setXPath("hM^iIuMb");
      xPathLexer1.star();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5686621657638025
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yY^AR.hMzC-%r{}c");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("Y", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.setXPath("x0>S:M3c/up^6Yj");
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(">", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5875347935795836
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("(", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("B", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      xPathLexer1.setXPath("H;i_c<");
      xPathLexer1.setPreviousToken(token2);
      xPathLexer0.setXPath("6(?B0T|z");
      Token token6 = xPathLexer1.star();
      assertEquals("H", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals(";", token8.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8060311623110747
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      xPathLexer0.comma();
      Token token1 = xPathLexer1.colon();
      assertEquals("G", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(32, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.dollar();
      assertEquals("]", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.setXPath("hM^iIuMb");
      Token token4 = xPathLexer0.star();
      assertEquals("h", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("gQ", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("M", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals("^", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8867661786261019
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      XPathLexer xPathLexer1 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token1 = xPathLexer1.comma();
      assertEquals("2", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("M1?{(ldacf&&CYN,}");
      Token token2 = xPathLexer2.leftBracket();
      assertEquals("M", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer2.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer2.endPosition();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      Token token5 = xPathLexer2.nextToken();
      assertEquals("{(ldacf&&CYN,}", token5.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.consume(17);
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("qf", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer3 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token8 = xPathLexer1.nextToken();
      assertEquals(20, token8.getTokenType());
      assertEquals("*", token8.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.806788066983709
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer1.consume(116);
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("M", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(",blG)SDGj> $?");
      xPathLexer3.operatorName();
      xPathLexer0.whitespace();
      xPathLexer1.star();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.identifier();
      xPathLexer1.setXPath("");
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("IuMb", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer4.leftBracket();
      assertEquals(3, token6.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9475524043450583
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("JKHyw&vS7L");
      xPathLexer1.number();
      xPathLexer0.setXPath("W,w8u");
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3841498523685913
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yY^AR.hMzC-%r{}c");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Y", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("^AR.hMzC-%r{}c", token2.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4617945878837875
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yY^AR.hMzC-%r{}c");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Y", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.132746603800694
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.div();
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      xPathLexer0.dollar();
      xPathLexer1.dollar();
      xPathLexer1.and();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.operatorName();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.not();
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer2.operatorName();
      Token token7 = xPathLexer2.not();
      assertEquals("o", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8571309030705487
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("qf", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("B", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.star();
      Token token6 = xPathLexer0.pipe();
      assertEquals("{", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("Zb", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      char char0 = xPathLexer1.LA(51);
      assertEquals('\uFFFF', char0);
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("P", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.at();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals(":", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.mod();
      Token token10 = xPathLexer0.comma();
      assertEquals("w", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer3.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.856522224232219
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer1.slashes();
      assertEquals("6", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals("(", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("B0T", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("TuR{ER)L");
      char char0 = xPathLexer2.LA(774);
      assertEquals('\uFFFF', char0);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("|", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer2.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.consume(1049);
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("Tu", token7.getTokenText());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("R", token8.getTokenText());
      
      xPathLexer2.consume();
      Token token9 = xPathLexer1.comma();
      assertEquals("?", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("B", token10.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6436984654866271
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.dots();
      assertEquals("X", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token2 = xPathLexer0.equals();
      assertEquals("k", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.colon();
      assertEquals("q", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("/", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(" .5i~oj");
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("'b", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer1.setXPath("X'bkq/}<(");
      Token token6 = xPathLexer1.star();
      assertEquals("X", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("", token7.getTokenText());
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7846323811223488
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("qf", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("B", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("N", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("9", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      xPathLexer0.identifier();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer0.setXPath("2qfB*N<9{ZbP':w9/");
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("2", token9.getTokenText());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("qfB", token10.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1974497930414896
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wg8O&PL_T|!N0E%B");
      Token token0 = xPathLexer0.star();
      xPathLexer0.or();
      String string0 = token0.toString();
      assertEquals("[ (20) (w)", string0);
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("g8", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("O", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.nextToken();
      assertEquals("&PL_T|!N0E%B", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      xPathLexer0.div();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('T');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2855880604228145
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U46ICD nO 6ln'*<");
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer1.endPosition();
      xPathLexer0.comma();
      xPathLexer1.equals();
      xPathLexer0.setXPath("U46ICD nO 6ln'*<");
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3822534759800047
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      xPathLexer0.rightParen();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      xPathLexer1.colon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      xPathLexer2.equals();
      xPathLexer2.literal();
      xPathLexer0.doubleColon();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer1.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6386811434796515
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-961));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9913846016125352
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.slashes();
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      boolean boolean0 = xPathLexer1.isIdentifierChar('.');
      assertTrue(boolean0);
      
      Token token9 = xPathLexer2.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer1.consume();
      xPathLexer2.consume();
      Token token11 = xPathLexer2.not();
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8139774852093355
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("N", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.star();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("{", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("Z", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.identifier();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.setXPath("Ta^6-,F7Hdi");
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("T", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("a", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5173392581854046
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.or();
      Token token1 = xPathLexer0.star();
      assertEquals("^", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
      
      Token token3 = xPathLexer0.comma();
      assertEquals("i", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.setPreviousToken((Token) null);
      xPathLexer0.getXPath();
      xPathLexer2.currentPosition();
      xPathLexer1.div();
      Token token5 = xPathLexer1.leftParen();
      assertEquals(1, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.not();
      assertEquals("c", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer3.dots();
      assertEquals("o", token7.getTokenText());
      
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
      
      Token token9 = xPathLexer2.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.956182565815908
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      xPathLexer1.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer1.dollar();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      xPathLexer2.number();
      xPathLexer1.setXPath("6(?B0T|z");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      xPathLexer3.comma();
      xPathLexer1.notEquals();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6708708593722177
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      xPathLexer1.slashes();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer1.dollar();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      xPathLexer2.number();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer1.setXPath("6(?B0T|z");
      xPathLexer2.star();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.815133327990315
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("hM^iIuMb");
      xPathLexer1.slashes();
      xPathLexer1.leftParen();
      xPathLexer1.at();
      Token token0 = xPathLexer0.dollar();
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("qd 3*Bg{Q:m");
      xPathLexer0.number();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("3=0J}%i");
      xPathLexer1.star();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer2.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7549814371644052
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      char char0 = xPathLexer0.LA(10);
      assertEquals('\uFFFF', char0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.consume(3148);
      XPathLexer xPathLexer3 = new XPathLexer("!%.#ou@vMX");
      xPathLexer3.setXPath("w1)Er7u|SkTYj,P8a");
      xPathLexer0.star();
      Token token5 = xPathLexer3.nextToken();
      assertEquals("w1", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.376953357670018
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token1 = xPathLexer1.colon();
      assertEquals("G", token1.getTokenText());
      
      xPathLexer1.consume(116);
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer2.leftParen();
      xPathLexer2.and();
      xPathLexer2.consume(2);
      xPathLexer0.operatorName();
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6577455563581323
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("M1?{(ldacf&&CYN,}");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(2, int0);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("?{(ldacf&&CYN,}", token6.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("qf", token7.getTokenText());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer4 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token9 = xPathLexer4.doubleColon();
      assertEquals("2q", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9728114071671268
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer1.consume(116);
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("M", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(",blG)SDGj> $?");
      xPathLexer3.operatorName();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer1.star();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(",b", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token6 = xPathLexer4.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("G", token6.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.607844176890106
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('-');
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.literal();
      int int0 = (-3266);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3266));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.881429351523547
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      xPathLexer0.and();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      xPathLexer1.star();
      xPathLexer1.pipe();
      xPathLexer1.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      xPathLexer2.and();
      xPathLexer2.dollar();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer2.operatorName();
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer1.star();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7823061427375761
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer1.consume(116);
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.LA(998);
      char char0 = xPathLexer1.LA(116);
      assertEquals('\uFFFF', char0);
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("M", token3.getTokenText());
      
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer2.consume(998);
      Token token5 = xPathLexer0.notEquals();
      assertEquals("^i", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer2.consume();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8036445137019839
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.LA(0);
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.consume((-2785));
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.96239979647375
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5843535846489494
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("2", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer1.literal();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("<9", token6.getTokenText());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("{", token8.getTokenText());
      
      xPathLexer0.div();
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.9315813157625517
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-1806));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7120248186990845
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("V>", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.consume((-2785));
      xPathLexer0.setXPath("!%.#ou@vMX");
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("%.#ou@vMX", token8.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3981263442133547
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.colon();
      xPathLexer0.isIdentifierStartChar('o');
      xPathLexer0.plus();
      xPathLexer0.literal();
      xPathLexer0.getXPath();
      xPathLexer0.LA(23);
      xPathLexer0.colon();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6840933333154986
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.LA(0);
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.consume((-2785));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.866502387926292
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      int int0 = (-258);
      xPathLexer0.consume((-258));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.1031716164946155
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("qf", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.colon();
      assertEquals("N", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      xPathLexer0.star();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("Zb", token6.getTokenText());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("P", token7.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer0.not();
      assertEquals(":", token9.getTokenText());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("w", token10.getTokenText());
      
      xPathLexer0.rightParen();
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("/", token11.getTokenText());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      xPathLexer0.operatorName();
      Token token13 = xPathLexer0.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer0.rightBracket();
      assertEquals(4, token14.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.6136300064305864
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.currentPosition();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.div();
      int int0 = xPathLexer0.endPosition();
      xPathLexer0.getXPath();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      int int1 = xPathLexer0.endPosition();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.307672253557446
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("6(?B0T|z");
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      Token token3 = xPathLexer1.dollar();
      assertEquals("(", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer1.setPreviousToken(token2);
      assertEquals("(", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      Token token5 = xPathLexer1.plus();
      assertEquals("?", token5.getTokenText());
      
      Token token6 = xPathLexer1.dots();
      assertEquals("B", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.585104743577224
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.equals();
      xPathLexer0.getPreviousToken();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("H6}%<+*%`>");
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer1.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer1.dots();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7885055465816726
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.885295783678741
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("M", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("^", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume();
      xPathLexer1.or();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("Iu", token5.getTokenText());
      
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer2.or();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.relationalOperator();
      int int0 = xPathLexer3.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8619334430857268
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertNotNull(token3);
      
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.or();
      char char0 = xPathLexer0.LA(1542);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.colon();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierStartChar('\uFFFF');
      xPathLexer0.getPreviousToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\uFFFF');
      assertFalse(boolean0);
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer0.endPosition();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.582221392023459
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.setXPath("*vlp^rcThf");
      Token token5 = xPathLexer0.star();
      assertEquals("*", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("vlp", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals("^", token7.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.808830863344651
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X'bkq/}<(");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("X", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("a*EXcKg-a:P)R'$_HT");
      Token token1 = xPathLexer1.notEquals();
      assertEquals("a*", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals("E", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.star();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("/", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifier();
      assertEquals("cKg-a", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      xPathLexer1.setXPath("a*EXcKg-a:P)R'$_HT");
      xPathLexer1.star();
      Token token8 = xPathLexer1.nextToken();
      assertEquals(20, token8.getTokenType());
      assertEquals("*", token8.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer1.whitespace();
      assertEquals("", token9.getTokenText());
      assertEquals((-2), token9.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8860373237201904
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V>V");
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("V>V");
      xPathLexer1.colon();
      xPathLexer1.mod();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      xPathLexer0.rightBracket();
      xPathLexer1.dollar();
      xPathLexer1.operatorName();
      xPathLexer1.whitespace();
      xPathLexer0.star();
      xPathLexer2.doubleColon();
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.notEquals();
      xPathLexer1.slashes();
      xPathLexer0.isIdentifierChar(';');
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.literal();
      xPathLexer0.slashes();
      xPathLexer3.consume();
      xPathLexer1.consume();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.059583357751075
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.isIdentifierChar('-');
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierChar('-');
      xPathLexer0.literal();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.consume();
      assertEquals("", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8241215970255154
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6(?B0T|z");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      Token token3 = xPathLexer0.at();
      assertEquals("?", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("6(?B0T|z");
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("6", token5.getTokenText());
      
      xPathLexer2.setPreviousToken(token2);
      xPathLexer1.setXPath("6(?B0T|z");
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("|", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("z", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.getPreviousToken();
      assertEquals("(", token9.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.529054853735878
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yX{)LPN");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("y", token0.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.consume();
      Token token6 = xPathLexer0.literal();
      assertEquals(27, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals("ken", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer0.setPreviousToken(token3);
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.and();
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer0.mod();
      char char0 = xPathLexer0.LA(1);
      assertEquals('\uFFFF', char0);
      
      Token token12 = xPathLexer0.literal();
      assertNull(token12);
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.1590150894423834
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.literal();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.setXPath("");
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.number();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.consume((-1540));
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.942362240346536
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H0RP4G;-fA~");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("H", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("0RP4G", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\",Ix'hpZ");
      xPathLexer0.or();
      Token token0 = xPathLexer0.pipe();
      assertEquals("\"", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5287388226937182
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-1));
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      xPathLexer0.currentPosition();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.0473649550513584
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("M1?{(ldacf&&CYN,}");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("M", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.number();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(17, int0);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("8G.5");
      xPathLexer3.and();
      Token token5 = xPathLexer3.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("8", token5.getTokenText());
      
      xPathLexer1.and();
      Token token6 = xPathLexer1.rightParen();
      assertEquals("?", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("M1?{(ldacf&&CYN,}");
      xPathLexer4.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer4.star();
      assertEquals("M", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      xPathLexer3.operatorName();
      xPathLexer0.colon();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer6.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer5.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer3.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("G", token11.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.8880913512297433
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1D*Y1Qg!:$nPH");
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.830961554327813
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("*vlp^rcThf");
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("*v", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.consume();
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5570758965887688
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token1 = xPathLexer1.colon();
      assertEquals("G", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(32, token2.getTokenType());
      assertEquals(",", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer2.literal();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("M^", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("hM^iIuMb");
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("h", token6.getTokenText());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals("]", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("i", token9.getTokenText());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("g", token10.getTokenText());
      
      Token token11 = xPathLexer3.minus();
      assertEquals(6, token11.getTokenType());
      assertEquals("M", token11.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.478476371807211
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-2478));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6187432245857365
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-1));
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.literal();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.3664256130043624
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5491018424825471
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.s%xpath.XPathLexer");
      xPathLexer0.div();
      xPathLexer1.literal();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      char char0 = xPathLexer1.LA(51);
      assertEquals('\uFFFF', char0);
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.at();
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer1.mod();
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer2.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer2.leftBracket();
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8155220409532533
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.2428573328411052
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.colon();
      xPathLexer1.literal();
      xPathLexer1.colon();
      xPathLexer1.dollar();
      Token token1 = xPathLexer1.plus();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.3411535729501458
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.6670143288292871
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qWv9aXlQY @QlA/");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("9a", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("XlQY", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals("@", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("Q", token6.getTokenText());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("l", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("/", token9.getTokenText());
      
      xPathLexer0.isIdentifierStartChar('Q');
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(19, int0);
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.73221686433467
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2qfB*N<9{ZbP':w9/");
      Token token0 = xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.893310266783823
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hM^iIuMb");
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("hM^iIuMb");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.colon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer2.equals();
      xPathLexer1.literal();
      xPathLexer2.doubleColon();
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer("6L]8HyMsSXnICgKGq");
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer2.rightParen();
      xPathLexer4.dots();
      xPathLexer3.not();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.rightBracket();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.2650107733982594
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.451447405853203
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("pKT|7");
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("p", token5.getTokenText());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals("K", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("T", token8.getTokenText());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.rightBracket();
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.501736732177657
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.0251626689655935
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G,]gQ=M+`!Uc#w$*|#");
      Token token0 = xPathLexer0.star();
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(",", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("hM^iIuMb");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.not();
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer2.operatorName();
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.2384975770824163
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yY^AR.hMzC-%r{}c");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("yY", token0.getTokenText());
  }
}
