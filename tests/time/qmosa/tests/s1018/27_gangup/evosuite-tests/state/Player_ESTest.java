/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:49:59 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1761414031011608
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player((-4271));
      player0.setDead();
      Party party0 = new Party();
      player0.add(party0);
      player0.setConnected(true);
      Player player1 = new Player((short)4919, "XUQ0R)0~r9apbD", "", (-1105), (-1105));
      player1.reset(true);
      player1.reset(true);
      player0.setDead();
      player0.setDead();
      Player player2 = new Player();
      player0.isJoinOK(player2, true);
      player2.getSubparty();
      player1.toString();
      player0.getIP();
      player2.setMoney((-4271));
      player0.setMoney((-1493.63F));
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, (-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getIP();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.getName();
      player0.type();
      player0.getIP();
      player0.getIP();
      player0.getIP();
      assertFalse(player0.isConnected());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.3812808488052557
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player((-4271), "XUQ0R)0~r9apbD", 10);
      player0.setDead();
      Player player1 = (Player)player0.gangBoss();
      player1.setConnected(false);
      player1.reset(true);
      player0.setJoinOK(player1, false);
      player0.setZ(10);
      player1.setConnected(false);
      player0.setDead();
      player1.setDead();
      byte[] byteArray0 = player0.pack();
      player0.getMoney();
      player1.type();
      System.setCurrentTimeMillis((-1285L));
      player0.unpack(byteArray0);
      player0.getZ();
      float float0 = player1.getZ();
      assertTrue(player1.isDead());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.196939089991099
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(1320, " ", 1320);
      player0.setDead();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-81);
      Player player1 = new Player(0, " ", (byte)7);
      player1.reset(true);
      player0.getZ();
      Player player2 = new Player((-531), "", "z^q)ex>49VS", 10);
      player2.setDead((long) (byte) (-81));
      System.setCurrentTimeMillis((byte) (-106));
      player2.getZ();
      player0.getMoney();
      player0.type();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((-1586));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      player1.getX();
      player2.getIP();
      player2.getTimeOfDeath();
      assertEquals((-81L), player2.getTimeOfDeath());
      
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(2768, "state.Party", (String) null, 3308);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.261950424367441
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1320, " ", " ", 5);
      player0.getSubparty();
      player0.setMoney(1320);
      byte[] byteArray0 = player0.pack();
      player0.getIP();
      Player player1 = new Player(5, "0<", 70);
      player1.reset(false);
      player1.getZ();
      player1.setDead(1175L);
      System.setCurrentTimeMillis(70);
      Player player2 = new Player((-17404), "N$k`q@v)p;FQRDg", 261);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player2.getZ();
      player1.getMoney();
      player0.type();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(70);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      player2.unpack(dataInputStream0);
      player2.getX();
      float float0 = player1.getZ();
      assertTrue(player1.isDead());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.524673352026602
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-1603L));
      Player player0 = new Player(5, "XUQ0R)0~r9apbD", 5);
      player0.pack();
      Player player1 = new Player(14080);
      player0.id = 14080;
      player0.setJoinOK(player1, false);
      player0.setDead(0L, false);
      player1.pack();
      player1.pack();
      player1.gangBoss();
      System.setCurrentTimeMillis(15448L);
      player0.isJoinOK(player1, false);
      MockFile mockFile0 = new MockFile("XUQ0R)0~r9apbD");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        mockPrintStream0.append((CharSequence) "XUQ0R)0~r9apbD", (-2057), 5);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0257505895352663
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "state.Party");
      Player player0 = new Player(861, "Player", 420);
      Party party0 = new Party(420);
      player0.next = party0;
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.gangStrength();
      player0.setY((-2879.6433F));
      player0.id = (-68);
      player0.getMoney();
      player0.getY();
      player0.getMoney();
      player0.setDead((long) (short)4919);
      player0.getName();
      player0.getIP();
      player1.getName();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4919L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-22617), "", "", (-22617));
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setConnected(true);
      int int0 = player0.type();
      assertEquals(5, int0);
      
      player0.getIP();
      System.setCurrentTimeMillis((short)4919);
      player0.getIP();
      player0.getMoney();
      player0.getName();
      System.setCurrentTimeMillis(1L);
      player0.getMoney();
      float float0 = player0.getMoney();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals((-22617), player0.getPictureId());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.174834213558677
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player(5, "XUQ0R)0~r9apbD", 5);
      player0.pack();
      Player player1 = new Player(14080);
      player0.id = 14080;
      player0.setJoinOK(player1, false);
      player0.setDead(0L, false);
      Player player2 = new Player((-4678));
      player0.boss = (Party) player2;
      byte[] byteArray0 = player0.pack();
      player1.pack();
      player1.gangBoss();
      System.setCurrentTimeMillis(15448L);
      player0.isJoinOK(player1, false);
      player1.getPictureId();
      player0.getMoney();
      player0.type();
      System.setCurrentTimeMillis(15448L);
      player0.unpack(byteArray0);
      assertTrue(player0.isDead());
      
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.305663096808308
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(1320);
      player0.setDead();
      player0.setDead();
      player0.setZ(1320);
      player0.pack();
      Player player1 = new Player((short)4919, "", ".$HKP]gu", 0, 0);
      player0.isJoinOK(player1, true);
      player0.gangStrength();
      player0.setConnected(true);
      player0.setDead();
      player1.setDead();
      byte[] byteArray0 = player0.pack();
      player1.isJoinOK(player0, false);
      player1.gangStrength();
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis(1320);
      float float0 = player1.getX();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6278231683858047
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player(8, "XUQ0R)0~r9apbD", 8);
      player0.pack();
      Player player1 = new Player(14080);
      player0.setJoinOK(player1, false);
      player0.pack();
      player0.isJoinOK(player1, false);
      player1.gangStrength();
      player0.isJoinOK(player1, true);
      player1.gangStrength();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte) (-34);
      byteArray0[7] = (byte)55;
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((byte)4);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0549710111377664
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player(5, "XUQ0R)0~r9apbD", 5);
      player0.pack();
      Player player1 = new Player(351);
      player0.setJoinOK(player1, false);
      assertEquals(0L, player1.getTimeOfDeath());
      
      player1.setDead((long) 14080, true);
      player1.pack();
      player0.gangBoss();
      System.setCurrentTimeMillis(1979L);
      player0.isJoinOK(player1, false);
      player0.getPictureId();
      player1.getMoney();
      player0.type();
      System.setCurrentTimeMillis(5);
      player0.pack();
      Player player2 = new Player((short)4919, "uzEZ/D\"u|c_l)%3", "XUQ0R)0~r9apbD", 5);
      player2.getY();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-17404), "wx,#|^+mAcq6JtMZD", "gui.ModuleBrowserDialog$ModuleFilter", (-72));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.518938164216501
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-23));
      Player player1 = new Player((short)4919);
      player0.boss = (Party) player1;
      player0.setX(1.0F);
      player0.getMoney();
      player0.setX((-1609.1971F));
      player0.setMoney(0.0F);
      player0.getX();
      player1.setJoinOK(player0, false);
      player0.setZ((-1662.7F));
      player0.reset(false);
      player0.getIP();
      player0.getStrength();
      player0.getName();
      player1.getTimeOfDeath();
      player1.getSubparty();
      player0.toString();
      player1.getIP();
      player1.setMoney(1.0F);
      player0.setMoney(0.0F);
      player0.gangStrength();
      player0.setY(0.1F);
      player1.isConnected();
      player0.getZ();
      player0.pack();
      player1.getY();
      player0.getIP();
      assertEquals((-1662.7F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      System.setCurrentTimeMillis((-3433L));
      Player player0 = new Player((-22617), "", 0);
      Player player1 = new Player(0, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 616);
      player0.isJoinOK(player1, false);
      player1.getPictureId();
      player1.getMoney();
      player0.type();
      System.setCurrentTimeMillis(1L);
      player0.pack();
      player0.getY();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6829388630505053
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(0, "dg{l%", "", 0);
      player0.isConnected();
      Player player1 = new Player((-520), "gYeYtPP|#i__cnx:", "", (-65), 0);
      player1.getStrength();
      Player player2 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "(uC>G$.>5FC^xP", (short)4919, (short)4919);
      player2.setDead(378L);
      Player player3 = new Player((-65));
      // Undeclared exception!
      try { 
        player3.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.091365419163287
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player((-2703));
      player1.setDead();
      player0.add(player1);
      player0.setConnected(false);
      player0.reset(true);
      player1.setConnected(true);
      player0.setDead();
      player1.setDead();
      player1.setMoney(0.0F);
      player1.setDead((long) (short)4919);
      player0.setDead();
      player0.reset(false);
      player1.toString();
      player1.setX(0.0F);
      player1.gangStrength();
      player1.getMoney();
      player0.isConnected();
      player1.toString();
      assertEquals(4919L, player1.getTimeOfDeath());
      
      Player player2 = new Player((-2703));
      player2.getName();
      String string0 = player2.toString();
      assertEquals("Player-2703", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1067), "i?q", "i?q", (-1));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.pack();
      float float1 = player0.getY();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((-1), player0.getPictureId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(1, "=8FX", 10);
      MockFile mockFile0 = new MockFile("XUQ0R)0~r9apbD", "Z?&'bJS9");
      MockFile mockFile1 = new MockFile(mockFile0, "state.Player$JoinInfo");
      File file0 = mockFile1.getAbsoluteFile();
      MockFile mockFile2 = new MockFile("state.Player$JoinInfo", "=8FX");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("w");
      Player player0 = new Player((-838), "w", "a,E$&Qn`W7dm!S", (-1262), 1264);
      player0.setDead();
      player0.isDead();
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-1067), "i?q", "i?q", (-1));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-58);
      boolean boolean0 = player0.isDead();
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-1), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.18780693821146
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(2768, "dg{l%", 2768);
      player0.setDead();
      Player player1 = new Player(2768);
      player1.add(player0);
      player0.setConnected(false);
      player0.reset(true);
      player0.setJoinOK(player1, false);
      player1.setZ(2768);
      player1.setConnected(true);
      player1.setDead();
      player1.setDead();
      player1.pack();
      player0.setX(0.1F);
      player0.isJoinOK(player1, false);
      player1.gangStrength();
      System.setCurrentTimeMillis((byte) (-34));
      player0.getIP();
      assertEquals(0.1F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System.setCurrentTimeMillis(1979L);
      Player player0 = new Player((-22617), "", "L~\"Q}#]u@&", 4919, (-68));
      player0.gangStrength();
      Player player1 = new Player();
      player1.next = (Party) player0;
      player1.setDead(1392409281320L, true);
      player1.id = (int) (short)4919;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L~\"Q}#]u@&");
      player0.add(player1);
      assertEquals(0L, player0.getTimeOfDeath());
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      player0.setDead();
      player0.type();
      player0.pack();
      player0.getMoney();
      player0.type();
      player0.type();
      player0.type();
      float float0 = player0.getX();
      assertTrue(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      MockFile mockFile0 = new MockFile("gui.ModuleBrowserDialog$ModuleFilter");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 10;
      int int1 = 14080;
      Player player0 = new Player(0);
      Player player1 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3, "y3!{JJN<`]0?WZ&fo", " aL/}:", (-723), (-723));
      player0.getStrength();
      Party party0 = player0.gangBoss();
      party0.id = 0;
      player0.add(party0);
      player0.pack();
      player0.setDead((long) (-723), true);
      player0.setZ((-723));
      player0.getName();
      player0.setConnected(true);
      assertEquals((-723.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(2768, "dg{l%", 2768);
      MockFile mockFile0 = new MockFile("dg{l%", "dg{l%");
      mockFile0.toURI();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-61);
      player0.unpack(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(2768, player0.getPictureId());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(10, "XUQ0R)0~r9apbD", 5);
      byte[] byteArray0 = player0.pack();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      bufferedOutputStream0.write(byteArray0, 10, 1);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(bufferedOutputStream0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 10, (-1));
      byteArrayInputStream0.mark((-653));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertFalse(boolean0);
      
      float float0 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(5, player0.getPictureId());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player(2779, "XUQ0R)0~r9apbD", 10);
      MockFile mockFile0 = new MockFile("XUQ0R)0~r9apbD", "EP$");
      MockFile mockFile1 = new MockFile(mockFile0, "EP$");
      File file0 = mockFile1.getAbsoluteFile();
      MockFile mockFile2 = new MockFile(file0, "XUQ0R)0~r9apbD");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile2, false);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(10, player0.getPictureId());
      
      Player player1 = new Player();
      player1.pack();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-358), "", (-358));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      player0.getName();
      float float0 = player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-358), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.128419031742918
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player((-2703));
      player1.setDead();
      player0.add(player1);
      player0.setConnected(false);
      player0.reset(true);
      player0.reset(true);
      player0.setDead();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.setDead();
      player1.isJoinOK(player0, true);
      player1.getSubparty();
      player0.toString();
      player1.getIP();
      player0.setMoney((-2703));
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setMoney(0.0F);
      player1.getPictureId();
      player0.getMoney();
      int int0 = Packable.UNDEFINED;
      System.setCurrentTimeMillis(2003L);
      float float0 = player1.getY();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(1, "CK$BUPNlp+/DO=6$6", 1);
      player0.setZ(0.0F);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      Player player1 = new Player((-1), ".*[.]class$", "CK$BUPNlp+/DO=6$6", (short)4919, (-2161));
      player0.setJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(".*[.]class$", player1.getIP());
      assertEquals((-2161), player1.getStrength());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(4919, player1.getPictureId());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(5, "OS*w86y+mCfugOcwdH", 293);
      player0.setY(5);
      player0.setDead();
      player0.setMoney(63.36165F);
      assertEquals(63.36165F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(10, "XUQ0R)0~r9apbD", 5);
      MockFile mockFile0 = new MockFile("XUQ0R)0~r9apbD", "XUQ0R)0~r9apbD");
      mockFile0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile(mockFile0, "XUQ0R)0~r9apbD");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, false);
      Player player1 = new Player((byte) (-34), "z02s,Ji@)gWIw@l7;s", (byte) (-89));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte) (-34);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      player1.unpack(byteArray0);
      System.setCurrentTimeMillis((-1817L));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(977, (String) null, (String) null, 977, 977);
      player0.setMoney(991.122F);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.setX((-359.8389F));
      player0.getPictureId();
      player0.isConnected();
      player0.setMoney((-359.8389F));
      player0.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.available();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        dataInputStream0.read(byteArray0, 5, 977);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-2331), "yJj'n(t54B_]c)=C`", (-2331));
      player0.id = 5;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)112;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte) (-72);
      int int0 = player0.getPictureId();
      assertEquals((-2331), int0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int1 = player0.type();
      assertEquals(5, int1);
      
      System.setCurrentTimeMillis((byte)112);
      Player player1 = new Player((-1215));
      player1.unpack(byteArray0);
      player1.getZ();
      float float1 = player1.getZ();
      assertEquals(0.0F, float1, 0.01F);
      
      player1.pack();
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1215", player1.toString());
      
      float float2 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float2, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player(14080);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4ejI=i~ix");
      player0.getSubparty();
      System.setCurrentTimeMillis(0L);
      int int0 = player0.getPictureId();
      assertEquals("Player14080", player0.getName());
      assertEquals(0, int0);
      assertEquals("0.0.0.0", player0.getIP());
      
      Player player1 = new Player((short)4919, "XUQ0R)0~r9apbD", "XUQ0R)0~r9apbD", (short)4919);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(10, "XUQ0R)0~r9apbD", "XUQ0R)0~r9apbD", 5, 10);
      player0.pack();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(bufferedOutputStream0);
      FilterOutputStream filterOutputStream1 = new FilterOutputStream(filterOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      assertTrue(player0.isConnected());
      assertEquals(5, player0.getPictureId());
      assertEquals(10, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(1450);
      player0.setDead(2807L, true);
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.1049922791552107
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player((-2703));
      player1.setDead();
      player0.add(player1);
      player0.setConnected(false);
      player0.reset(true);
      player1.setConnected(true);
      player0.setDead();
      player1.setDead();
      byte[] byteArray0 = player1.pack();
      player1.isConnected();
      player1.gangStrength();
      player1.unpack(byteArray0);
      assertEquals(1392409281320L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(2147324220, "", "", 2147324220);
      player0.getSubparty();
      player0.setMoney(2147324220);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player(5, "", (-3032));
      player0.boss = (Party) player1;
      player0.reset(false);
      player0.getZ();
      player1.setDead((long) 2147324220);
      player0.getZ();
      player0.getMoney();
      player1.type();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((-3032));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      float float0 = player0.getX();
      assertEquals(2.14732416E9F, player0.getMoney(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player(5, "XUQ0R)0~r9apbD", 5);
      player0.pack();
      Player player1 = new Player(14080);
      player0.id = 14080;
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-640), "XUQ0R)0~r9apbD", "XUQ0R)0~r9apbD", 4919);
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertFalse(boolean0);
      
      Player player3 = new Player((-88), "Xlor#RF{^^kQ2RS2", "!8l3])T", 10, 14080);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-58);
      byteArray0[8] = (byte) (-58);
      player1.unpack(byteArray0);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player14080", player1.toString());
      
      player3.pack();
      assertEquals(0.0F, player3.getY(), 0.01F);
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertFalse(player3.isDead());
      assertEquals(0L, player3.getTimeOfDeath());
      assertEquals(10, player3.getPictureId());
      assertEquals("Xlor#RF{^^kQ2RS2", player3.getIP());
      assertTrue(player3.isConnected());
      assertEquals(14080, player3.getStrength());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MockFile mockFile0 = new MockFile("dg{l%", "dg{l%");
      Player player0 = new Player((-1));
      player0.setZ(0.0F);
      player0.gangStrength();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte) (-89);
      byteArray0[5] = (byte) (-89);
      byteArray0[6] = (byte) (-89);
      byteArray0[7] = (byte) (-89);
      byteArray0[8] = (byte) (-89);
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis((byte) (-89));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 314);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.966442007031004
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      System.setCurrentTimeMillis(448L);
      Player player0 = new Player(5, "XUQ0R)0~r9apD", 5);
      player0.pack();
      Player player1 = new Player(14080);
      player0.setJoinOK(player1, true);
      player0.setDead(0L, false);
      player0.pack();
      Player player2 = (Player)player1.gangBoss();
      player0.boss = (Party) player2;
      System.setCurrentTimeMillis(0L);
      player0.isJoinOK(player1, true);
      player0.gangStrength();
      player2.setY(0.1F);
      player0.isBoss();
      assertTrue(player0.isDead());
      
      player1.getZ();
      player2.pack();
      player2.getY();
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1024, "state.Party", 1024);
      player0.setDead();
      player0.setMoney(1024);
      player0.setMoney(1024);
      player0.id = 1024;
      player0.setZ(0.0F);
      player0.setConnected(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setMoney(2035.34F);
      Player player1 = new Player((-1606), "", "state.Party", (short)4919);
      player0.head = (Party) player1;
      System.setCurrentTimeMillis(1024);
      player0.getX();
      player0.pack();
      player0.getMoney();
      System.setCurrentTimeMillis(2384L);
      Party party0 = player0.gangBoss();
      player1.add(party0);
      System.setCurrentTimeMillis(1L);
      player0.getMoney();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(0, "", 702);
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(702, player0.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.36443386453374
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      Player player1 = new Player((-2703));
      player1.setDead();
      player0.add(player1);
      player0.setConnected(false);
      player0.reset(false);
      player1.setConnected(true);
      player0.setDead();
      player1.setDead();
      player1.setMoney(0.0F);
      player1.setDead((long) (short)4919);
      player0.setDead();
      player0.reset(false);
      player1.toString();
      player1.setX(0.0F);
      player1.gangStrength();
      player1.getMoney();
      player0.isConnected();
      player1.toString();
      Player player2 = new Player((-2703));
      player2.getName();
      player2.toString();
      player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player2.pack();
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }
}
