/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Dec 04 03:29:22 GMT 2019
 */

package com.browsersoft.openhre.hl7.impl.regular;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ExpressionMatrixImpl_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.browsersoft.openhre.hl7.impl.regular.ExpressionMatrixImpl"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/ubuntu/termite/projects/75_openhre"); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ubuntu"); 
    java.lang.System.setProperty("user.timezone", "Etc/UTC"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ExpressionMatrixImpl_ESTest_scaffolding.class.getClassLoader() ,
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionImpl",
      "org.apache.axis.deployment.wsdd.WSDDConstants",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionMatrixImpl",
      "org.apache.log4j.DefaultCategoryFactory",
      "com.browsersoft.openhre.hl7.impl.parser.HL7ParserImpl",
      "org.apache.log4j.or.RendererMap",
      "org.apache.axis.constants.Style$Type",
      "com.browsersoft.openhre.hl7.api.config.HL7FieldList",
      "com.browsersoft.openhre.hl7.api.config.HL7SegmentMap",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionElementMapperItemImpl",
      "org.apache.log4j.Level",
      "com.browsersoft.openhre.hl7.api.regular.ExpressionElementMapperItem",
      "com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl",
      "org.apache.axis.components.logger.LogFactory$1",
      "org.apache.log4j.spi.RootCategory",
      "com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl",
      "com.browsersoft.openhre.hl7.api.regular.ExpressionElementMapper",
      "com.browsersoft.openhre.hl7.api.regular.MessageTracer",
      "org.apache.log4j.spi.Filter",
      "com.browsersoft.openhre.hl7.api.config.HL7MessageSegment",
      "org.apache.axis.soap.SOAP11Constants",
      "org.apache.log4j.CategoryKey",
      "com.browsersoft.openhre.hl7.api.regular.ExpressionPart",
      "com.browsersoft.openhre.hl7.api.config.HL7Message",
      "com.browsersoft.openhre.hl7.impl.config.HL7SegmentMapImpl",
      "org.apache.log4j.Layout",
      "com.browsersoft.openhre.hl7.api.regular.Expression",
      "com.browsersoft.openhre.hl7.api.config.HL7DataTypeMap",
      "org.apache.axis.soap.SOAP12Constants",
      "com.browsersoft.openhre.hl7.api.config.HL7TableItem",
      "com.browsersoft.openhre.hl7.api.config.HL7DataType",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageImpl",
      "org.apache.log4j.helpers.Loader",
      "com.browsersoft.openhre.hl7.api.config.HL7TableItemMap",
      "org.apache.log4j.ProvisionNode",
      "org.apache.log4j.Hierarchy",
      "com.browsersoft.openhre.hl7.api.parse.HL7CheckerHandler",
      "com.browsersoft.openhre.hl7.api.config.HL7DataTypePartList",
      "org.apache.log4j.helpers.FileWatchdog",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionPartImpl",
      "org.apache.axis.constants.Enum$Type",
      "com.browsersoft.openhre.hl7.api.config.HL7Segment",
      "org.apache.axis.schema.SchemaVersion1999",
      "com.browsersoft.openhre.hl7.api.config.HL7DataTypePart",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.spi.OptionHandler",
      "com.browsersoft.openhre.hl7.api.config.HL7MessageMap",
      "org.apache.axis.components.logger.LogFactory",
      "com.browsersoft.openhre.hl7.api.regular.MessageTracerHandler",
      "org.apache.log4j.spi.ErrorHandler",
      "org.apache.log4j.spi.VectorWriter",
      "com.browsersoft.openhre.hl7.api.parse.HL7ParserHandler",
      "org.apache.log4j.spi.RendererSupport",
      "org.apache.axis.encoding.TypeMappingImpl",
      "org.apache.axis.constants.Enum",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionElementMapperImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageGroupItemImpl",
      "org.apache.log4j.helpers.OptionConverter",
      "com.browsersoft.openhre.hl7.api.config.HL7Table",
      "com.browsersoft.openhre.hl7.api.parse.ParserException",
      "com.browsersoft.openhre.hl7.impl.config.HL7FieldListImpl",
      "org.apache.log4j.or.ObjectRenderer",
      "org.apache.axis.encoding.TypeMappingDelegate",
      "com.browsersoft.openhre.hl7.api.regular.ExpressionMatrixBuilder",
      "org.apache.log4j.Logger",
      "org.apache.axis.encoding.DeserializerFactory",
      "com.browsersoft.openhre.hl7.api.config.HL7Field",
      "com.browsersoft.openhre.hl7.api.config.HL7Configuration",
      "org.apache.axis.constants.Style",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.Category",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageMapImpl",
      "com.browsersoft.openhre.hl7.impl.regular.MessageTracerImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageSegmentImpl",
      "org.apache.log4j.spi.RepositorySelector",
      "com.browsersoft.openhre.hl7.api.regular.ExpressionMatrix",
      "com.browsersoft.openhre.hl7.api.parse.HL7Checker",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageGroupImpl",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "org.apache.log4j.or.DefaultRenderer",
      "com.browsersoft.openhre.hl7.api.config.HL7MessageGroup",
      "org.apache.log4j.spi.LocationInfo",
      "org.apache.axis.constants.Use$Type",
      "com.browsersoft.openhre.hl7.api.config.InvalidConfigDataStructureException",
      "org.apache.log4j.PropertyWatchdog",
      "com.browsersoft.openhre.hl7.api.config.HL7FieldDependingProcessor",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.commons.logging.impl.Log4JLogger",
      "org.apache.axis.encoding.SerializerFactory",
      "com.browsersoft.openhre.hl7.api.parse.HL7Parser",
      "org.apache.log4j.Appender",
      "org.apache.axis.schema.SchemaVersion2001",
      "org.apache.axis.encoding.TypeMapping",
      "org.apache.axis.schema.SchemaVersion",
      "org.apache.axis.constants.Style$1",
      "org.apache.log4j.spi.HierarchyEventListener",
      "org.apache.axis.constants.Use$1",
      "com.browsersoft.openhre.hl7.api.config.HL7TableMap",
      "com.browsersoft.openhre.hl7.api.config.HL7PatternsForCatchValues",
      "org.apache.axis.Constants",
      "org.apache.axis.constants.Use",
      "com.browsersoft.openhre.hl7.impl.config.HL7SegmentImpl",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.apache.log4j.spi.LoggingEvent",
      "org.apache.axis.soap.SOAPConstants",
      "com.browsersoft.openhre.hl7.api.regular.InvalidExpressionException",
      "org.apache.axis.schema.SchemaVersion2000",
      "org.apache.log4j.spi.NullWriter",
      "org.apache.log4j.spi.ThrowableInformation",
      "org.apache.log4j.Priority",
      "com.browsersoft.openhre.hl7.api.config.HL7MessageGroupItem",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.log4j.LogManager",
      "com.browsersoft.openhre.hl7.api.parse.HL7CheckerState"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ExpressionMatrixImpl_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionMatrixImpl",
      "com.browsersoft.openhre.hl7.impl.regular.MessageTracerImpl",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionElementMapperImpl",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionElementMapperItemImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageMapImpl",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageGroupItemImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageGroupImpl",
      "com.browsersoft.openhre.hl7.impl.regular.ExpressionPartImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7MessageSegmentImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7SegmentImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7FieldListImpl",
      "com.browsersoft.openhre.hl7.impl.config.HL7SegmentMapImpl",
      "com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl",
      "org.apache.axis.components.logger.LogFactory$1",
      "org.apache.axis.components.logger.LogFactory",
      "org.apache.log4j.Level",
      "org.apache.log4j.Priority",
      "org.apache.commons.logging.impl.Log4JLogger",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootCategory",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.apache.axis.constants.Enum",
      "org.apache.axis.constants.Enum$Type",
      "org.apache.axis.constants.Use$Type",
      "org.apache.axis.soap.SOAP11Constants",
      "org.apache.axis.soap.SOAP12Constants",
      "org.apache.axis.soap.SOAPConstants",
      "org.apache.axis.schema.SchemaVersion2001",
      "org.apache.axis.schema.SchemaVersion2000",
      "org.apache.axis.schema.SchemaVersion1999",
      "org.apache.axis.Constants",
      "org.apache.axis.constants.Use",
      "org.apache.axis.constants.Style$Type",
      "org.apache.axis.deployment.wsdd.WSDDConstants",
      "org.apache.axis.constants.Style",
      "com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl",
      "com.browsersoft.openhre.hl7.impl.parser.HL7ParserImpl"
    );
  }
}
