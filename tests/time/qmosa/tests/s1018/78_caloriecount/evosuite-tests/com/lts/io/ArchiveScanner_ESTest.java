/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:33:12 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.PipedInputStream;
import java.net.URI;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ".EAR";
      stringArray0[1] = "-`?&";
      stringArray0[2] = ".EAR";
      stringArray0[3] = "/A3;r=pvL6i";
      stringArray0[4] = ".EAR";
      stringArray0[5] = ".EAR";
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.setExcludes(stringArray0);
      DirectoryScanner.matchPath("+s#7t3BLU]4E)", ".EAR");
      archiveScanner0.setIncludes(stringArray0);
      DirectoryScanner.matchPatternStart("/A3;r=pvL6i", "/A3;r=pvL6i");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "/A3;r=pvL6i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".r~+;E$1x{W;2xY:g", ".r~+;E$1x{W;2xY:g");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".r~+;E$1x{W;2xY:g";
      stringArray0[0] = "-`?&";
      archiveScanner0.myTempdir = improvedFile0;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[6] = ".r~+;E$1x{W;2xY:g";
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.isIncluded(".r~+;E$1x{W;2xY:g");
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setBasedir(".r~+;E$1x{W;2xY:g");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".r~+;E$1x{W;2xY:g", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ".EAR";
      stringArray0[1] = "-`?&";
      Vector<PipedInputStream> vector0 = new Vector<PipedInputStream>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[2] = ".EAR";
      stringArray0[3] = "/A3;r=pvL6i";
      stringArray0[4] = ".EAR";
      stringArray0[5] = ".EAR";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      DirectoryScanner.matchPath("+s#7t3BLU]4E)", ".EAR");
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "Y$gS?PUzgH[Q8@/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".r~+;E$1x{W;2xY:g", ".r~+;E$1x{W;2xY:g");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".r~+;E$1x{W;2xY:g";
      stringArray0[2] = "-`?&";
      stringArray0[6] = ".r~+;E$1x{W;2xY:g";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath("-`?&", ".r~+;E$1x{W;2xY:g");
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPatternStart("3h4l%`d/", "r%fW[K6fN");
      Vector<Object> vector1 = new Vector<Object>();
      System.setCurrentTimeMillis(4556L);
      Vector<String> vector2 = new Vector<String>();
      archiveScanner0.processFile(".r~+;E$1x{W;2xY:g");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".IcU&gQtCQnS", "=");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner1.filesExcluded = vector0;
      archiveScanner1.processFile(".WAR");
      assertNotSame(archiveScanner1, archiveScanner0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      URI uRI0 = MockURI.URI(".EAR");
      URI uRI1 = MockURI.URI(".EAR");
      URI uRI2 = MockURI.aFileURI;
      MockURI.relativize(uRI0, uRI1);
      Vector<Object> vector0 = new Vector<Object>();
      URI uRI3 = MockURI.aFileURI;
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".EAR";
      stringArray0[1] = "b0E";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      archiveScanner0.setIncludes(stringArray0);
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DirectoryScanner.matchPath("-`?&07t<\"xu*d23'h.jar", ".EAR");
      Vector<Object> vector1 = new Vector<Object>();
      Vector<Object> vector2 = new Vector<Object>();
      Vector<String> vector3 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("b0E");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      URI uRI0 = MockURI.URI(".EAR");
      URI uRI1 = MockURI.parseServerAuthority(uRI0);
      URI uRI2 = MockURI.aFileURI;
      MockURI.relativize(uRI0, uRI1);
      Vector<Object> vector0 = new Vector<Object>();
      URI uRI3 = MockURI.aFileURI;
      MockURI.normalize(uRI0);
      improvedFile0.mkdirs();
      Vector<Object> vector1 = new Vector<Object>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".EAR";
      stringArray0[1] = "child, ";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<String> vector2 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".EAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("2cP]*pn!vw<[uy4:bQ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      ImprovedFile improvedFile1 = new ImprovedFile("2cP]*pn!vw<[uy4:bQ", "2cP]*pn!vw<[uy4:bQ");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.filesExcluded = vector1;
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.isArchive(improvedFile0);
      String string0 = "java.io.tmpdir";
      ImprovedFile.createTempFileName("java.io.tmpdir", "java.io.tmpdir", improvedFile0);
      String string1 = "OG=5";
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile1, "OG=5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".EAR";
      stringArray0[1] = "-`?&";
      stringArray0[2] = ".EAR";
      stringArray0[3] = ".EAR";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.isIncluded("EAbR0.WAR.jar.jar");
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setBasedir("WDA@");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".EAR", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ".EEA";
      ImprovedFile improvedFile0 = new ImprovedFile(".EEA", ".EEA");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-`?&";
      stringArray0[1] = "-`?&";
      archiveScanner1.setIncludes(stringArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      vector0.add((Integer) 2);
      DirectoryScanner.matchPath("-`?&", "-`?&");
      archiveScanner1.setIncludes(stringArray0);
      DirectoryScanner.matchPatternStart("23'h", "r%fW*K6fN");
      // Undeclared exception!
      try { 
        archiveScanner1.processArchive(improvedFile0, "-`?&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("You have unsaved changes.  Save them now?");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "You have unsaved changes.  Save them now?";
      stringArray0[1] = "-`?&";
      stringArray0[2] = "You have unsaved changes.  Save them now?";
      stringArray0[3] = "You have unsaved changes.  Save them now?";
      stringArray0[4] = "You have unsaved changes.  Save them now?";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[5] = "You have unsaved changes.  Save them now?";
      stringArray0[6] = "You have unsaved changes.  Save them now?";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.isArchive(improvedFile0);
      archiveScanner1.isArchive(improvedFile0);
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      URI uRI0 = MockURI.URI(".EAR");
      MockURI.parseServerAuthority(uRI0);
      MockURI.create(".ZIP");
      MockFile mockFile0 = new MockFile("A zip file requires at least one entry.");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      improvedFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      improvedFile1.setExecutable(true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".EAR");
      ImprovedFile.createTempImprovedFile("wcyo4)>1q:gM0Q)vV<", ".WA@", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".EAR");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile2 = ImprovedFile.createTempDirectory(".WA@0>.jar0.WA@0>.jar.jar", "", (File) improvedFile1);
      improvedFile2.getAbsolutePath();
      mockFile0.getCanonicalFile();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      Vector<Object> vector0 = new Vector<Object>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      archiveScanner0.scandir(improvedFile2, "/home/ubuntu/termite/projects/78_caloriecount/.EAR/.WA@0>.jar0.WA@0>.jar.jar1", true);
      assertTrue(improvedFile2.canExecute());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", "d%O4l1KkaW(Shp#S$0d%O4l1KkaW(Shp#S$.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner1.isArchive(improvedFile0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".r~+;E$1x{W;2xY:g", ".r~+;E$1x{W;2xY:g");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".r~+;E$1x{W;2xY:g";
      stringArray0[0] = ".r~+;E$1x{W;2xY:g";
      stringArray0[6] = ".r~+;E$1x{W;2xY:g";
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath("-`?&", ".r~+;E$1x{W;2xY:g");
      Vector<Object> vector0 = new Vector<Object>();
      System.setCurrentTimeMillis(2);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, " to a file, ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iJJ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("EAbR");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "EAbR");
      mockFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      mockFile0.setExecutable(true, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "iJJ");
      ImprovedFile.createTempImprovedFile("&{9?'Jzg5fO[F", "&{9?'Jzg5fO[F", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile(".EAR");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      improvedFile0.getAbsolutePath();
      improvedFile0.getCanonicalFile();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".zip");
      FileSystemHandling.setPermissions(evoSuiteFile2, true, true, true);
      Vector<Object> vector0 = new Vector<Object>();
      FileSystemHandling.setPermissions(evoSuiteFile1, false, true, true);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "You have unsaved changes.  Save them now?0You have unsaved changes.  Savy them now?.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iJJ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("EAbR");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "EAbR");
      mockFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      mockFile0.setExecutable(true, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ".WA@");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile(".WA@", ".WA@", mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile(".EAR");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile2);
      mockFile0.getAbsolutePath();
      File file0 = mockFile0.getCanonicalFile();
      file0.toURI();
      mockFile0.mkdirs();
      file0.renameTo(improvedFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "/home/ubuntu/termite/projects/78_caloriecount/EAbR");
      file0.mkdirs();
      Vector<Object> vector0 = new Vector<Object>();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile2, true, true, true);
      System.setCurrentTimeMillis(1);
      int int0 = archiveScanner0.toFileType(mockFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UwYA $RSy)o `BYR");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("E~A");
      ImprovedFile improvedFile1 = new ImprovedFile(mockFile0, ":9a<");
      mockFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      improvedFile1.setExecutable(false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!");
      ImprovedFile improvedFile2 = ImprovedFile.createTempImprovedFile("E~A", "UwYA $RSy)o `BYR", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "+C|w");
      FileSystemHandling.createFolder(evoSuiteFile0);
      improvedFile1.getAbsolutePath();
      File file0 = mockFile0.getCanonicalFile();
      ImprovedFile improvedFile3 = new ImprovedFile(file0);
      improvedFile3.mkdirs();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UwYA $RSy)o `BYR");
      improvedFile2.mkdirs();
      Vector<Object> vector0 = new Vector<Object>();
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      URI uRI0 = MockURI.URI(".EAR");
      URI uRI1 = MockURI.parseServerAuthority(uRI0);
      URI uRI2 = MockURI.create(".ZIP");
      MockURI.resolve(uRI2, ".EAR");
      MockURI.relativize(uRI2, uRI2);
      URI uRI3 = MockURI.relativize(uRI1, uRI2);
      Vector<Object> vector0 = new Vector<Object>();
      URI uRI4 = MockURI.aFTPURI;
      MockURI.parseServerAuthority(uRI1);
      URI uRI5 = MockURI.relativize(uRI4, uRI0);
      MockURI.parseServerAuthority(uRI5);
      MockURI.normalize(uRI3);
      MockURI.normalize(uRI3);
      URI uRI6 = MockURI.aHttpURI;
      MockURI.resolve(uRI4, uRI4);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis(0L);
      try { 
        archiveScanner0.scanArchive(improvedFile0, ".ZIP");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, .EAR
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iJJ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling.setPermissions(evoSuiteFile1, false, true, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("EAbR.jar.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iJJ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("EAbR");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "EAbR");
      mockFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("SRgF^cY0_9");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".r~+;E$1x{W;2xY:g", ".r~+;E$1x{W;2xY:g");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".r~+;E$1x{W;2xY:g";
      stringArray0[0] = "-`?&";
      stringArray0[6] = ".r~+;E$1x{W;2xY:g";
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath("-`?&", "-`?&");
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPatternStart("3h4l%`d/", "r%fW[K6fN");
      Vector<Object> vector0 = new Vector<Object>();
      Vector<String> vector1 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".r~+;E$1x{W;2xY:g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iJJ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("EAbR");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "EAbR");
      mockFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      mockFile0.setExecutable(true, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ".WA@");
      ImprovedFile.createTempImprovedFile(".WA@", ".WA@", mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile(".EAR");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile2);
      mockFile0.getAbsolutePath();
      File file0 = mockFile0.getCanonicalFile();
      mockFile0.mkdirs();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "/home/ubuntu/termite/projects/78_caloriecount/EAbR");
      file0.mkdirs();
      Vector<Object> vector0 = new Vector<Object>();
      FileSystemHandling.setPermissions(evoSuiteFile2, true, true, true);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(file0, "You have unsaved changes.  Save them now?0You have unsaved changes.  Save them now?.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iWJJ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iWJJ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("S RgF^cY0_9");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.toFileType(mockFile0);
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "iJJ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("d%4lKkaW[(Shp#$/.WA@0.WA@");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("EAbR");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "EAbR");
      mockFile0.deleteOnExit();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      mockFile0.setExecutable(true, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ".WA@");
      ImprovedFile.createTempImprovedFile(".WA@", ".WA@", mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile(".EAR");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.createFolder(evoSuiteFile2);
      mockFile0.getAbsolutePath();
      File file0 = mockFile0.getCanonicalFile();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "/home/ubuntu/termite/projects/78_caloriecount/EAbR");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      Vector<Object> vector0 = new Vector<Object>();
      FileSystemHandling.setPermissions(evoSuiteFile2, true, true, true);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(file0, "You have unsaved changes.  Save them now?0You have unsaved changes.  Savy them now?.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EEA", ".EEA");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath(".EEA", "-`?&");
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Object> vector1 = new Vector<Object>();
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, ".EEA", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.EEA/.EEA
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR");
      URI uRI0 = MockURI.URI(".EAR");
      URI uRI1 = MockURI.parseServerAuthority(uRI0);
      URI uRI2 = MockURI.create(".ZIP");
      MockURI.parseServerAuthority(uRI0);
      URI uRI3 = MockURI.aFileURI;
      URI uRI4 = MockURI.relativize(uRI1, uRI2);
      Vector<Object> vector0 = new Vector<Object>();
      URI uRI5 = MockURI.aFTPURI;
      URI uRI6 = MockURI.aFileURI;
      URI uRI7 = MockURI.relativize(uRI5, uRI0);
      MockURI.parseServerAuthority(uRI7);
      MockURI.normalize(uRI4);
      improvedFile0.createTempDir();
      Vector<Object> vector1 = new Vector<Object>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, ".ear", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }
}
