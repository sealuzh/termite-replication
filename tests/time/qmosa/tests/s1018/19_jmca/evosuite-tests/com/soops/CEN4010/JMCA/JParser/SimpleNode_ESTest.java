/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:43:37 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.479870420502566
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringReader stringReader0 = new StringReader("");
      simpleNode0.setIdentifier("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 18);
      StringReader stringReader1 = new StringReader("i.Omgtq");
      StringReader stringReader2 = new StringReader("i.Omgtq");
      JavaParser javaParser1 = new JavaParser(stringReader2);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 0);
      StringReader stringReader3 = new StringReader("w6Fiio*wd");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.dump("i.Omgtq", stringWriter0);
      simpleNode0.dump("*rshft", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      simpleNode1.toString("*rshft");
      String string0 = simpleNode2.toString("F~2_NdyQXv");
      assertEquals("F~2_NdyQXvCompilationUnit", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2328104518524499
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringReader stringReader0 = new StringReader("&");
      simpleNode0.setIdentifier("&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 18);
      StringReader stringReader1 = new StringReader("i.Omgtq,");
      StringReader stringReader2 = new StringReader("i.Omgtq,");
      JavaParser javaParser1 = new JavaParser(stringReader2);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 0);
      StringReader stringReader3 = new StringReader("/R1]x}+Hf@F|%RuY$");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.dump("i.Omgtq,", stringWriter0);
      simpleNode0.dump("*rshft", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode2.toString("V]6,r^Uf");
      assertEquals("V]6,r^UfCompilationUnit", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5590774247673154
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringReader stringReader0 = new StringReader("*rshft");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 3);
      simpleNode1.jjtAddChild(simpleNode0, 10);
      SimpleNode simpleNode2 = new SimpleNode(2895);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump((String) null, stringWriter0);
      simpleNode1.jjtGetNumChildren();
      SimpleNode simpleNode3 = new SimpleNode(2895);
      simpleNode3.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode2, 2895);
      // Undeclared exception!
      try { 
        simpleNode3.jjtGetChild(392);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append(')');
      StringWriter stringWriter1 = new StringWriter();
      StringReader stringReader0 = new StringReader(">>");
      StringWriter stringWriter2 = stringWriter1.append('>');
      simpleNode0.dump("&&", stringWriter2);
      simpleNode0.dump("*le", stringWriter1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1836);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2263282181113064
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      nodeArray0[4] = (Node) simpleNode0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringReader stringReader0 = new StringReader("ForStatement");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      Node node0 = simpleNode0.jjtGetChild(0);
      simpleNode1.jjtAddChild(node0, 0);
      simpleNode0.jjtOpen();
      simpleNode1.jjtOpen();
      simpleNode1.parent = (Node) simpleNode0;
      node0.jjtClose();
      node0.jjtGetNumChildren();
      simpleNode1.jjtAddChild(nodeArray0[3], 1);
      assertEquals(2, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5402095130751898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(717);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("\"!=\"", 1, 1);
      stringWriter0.append('$');
      StringReader stringReader0 = new StringReader("ds(z");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 717);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 717);
      simpleNode0.parent = (Node) simpleNode1;
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(";k>AHx]NV@dqWdo", stringWriter1);
      simpleNode0.jjtGetParent();
      Node node0 = simpleNode1.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.875938214501029
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 14;
      SimpleNode simpleNode0 = new SimpleNode(14);
      StringWriter stringWriter0 = new StringWriter(4);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump(";", stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3479719586584582
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2);
      StringReader stringReader0 = new StringReader("*l<");
      JavaParser javaParser0 = new JavaParser("*l<");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      SimpleNode simpleNode2 = new SimpleNode(2);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("p@e", stringWriter0);
      simpleNode2.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      int int0 = (-2308);
      // Undeclared exception!
      try { 
        simpleNode2.jjtAddChild(simpleNode1, (-2308));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6152804042395514
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2);
      StringReader stringReader0 = new StringReader("*l<");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-24));
      simpleNode1.jjtAddChild(simpleNode0, 0);
      SimpleNode simpleNode2 = new SimpleNode(2);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode1.dump("p@e", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -24
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringReader stringReader0 = new StringReader("&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1938), (-1938));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      simpleNode0.parser = javaParser0;
      JavaParser javaParser1 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, 3);
      simpleNode0.jjtAddChild(simpleNode1, 166);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1035));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1035
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      String string0 = "&";
      StringReader stringReader0 = new StringReader("&");
      simpleNode0.setIdentifier((String) null);
      JavaParser javaParser0 = new JavaParser(stringReader0);
      String string1 = "GrP/2!hiBKG8M)\\@v$o";
      StringReader stringReader1 = new StringReader("GrP/2!hiBKG8M)@v$o");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("&", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2);
      simpleNode0.setIdentifier("we");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "we");
      stringWriter0.close();
      StringWriter stringWriter2 = new StringWriter(2);
      StringWriter stringWriter3 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "we");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 2, 2);
      StringWriter stringWriter4 = new StringWriter();
      stringWriter0.close();
      StringWriter stringWriter5 = new StringWriter(2);
      stringWriter1.close();
      stringWriter0.append((CharSequence) charBuffer0);
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter(61);
      stringWriter7.close();
      stringWriter2.append('q');
      StringWriter stringWriter8 = new StringWriter();
      simpleNode0.dump("G<^bl3", stringWriter6);
      assertEquals("<ImportDeclaration>\n  <identifier>we</identifier>\n</ImportDeclaration>\n", stringWriter6.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ImportDeclaration : we", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser1 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1723706570));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.514098809253309
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringReader stringReader0 = new StringReader("&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      Node node0 = simpleNode1.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("l)%3i8e", stringWriter0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
      
      int int0 = node0.jjtGetNumChildren();
      assertEquals(0, int0);
      
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 3);
      assertEquals(0, simpleNode2.jjtGetNumChildren());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("/R1]x}+Hf@F|%RuY$");
      StringReader stringReader2 = new StringReader("/R1]x}+Hf@F|%RuY$");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 1);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode1 = new SimpleNode(104);
      simpleNode0.jjtAddChild(simpleNode1, 272);
      simpleNode0.jjtAddChild(simpleNode1, 104);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(273, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CompilationUnit");
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtGetNumChildren();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      Node node0 = simpleNode0.parent;
      nodeArray0[1] = null;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtAddChild((Node) null, 3143);
      assertEquals(3144, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = (-275);
      SimpleNode simpleNode0 = new SimpleNode((-275));
      simpleNode0.jjtGetParent();
      int int1 = 1867;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 1867);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-275));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -275
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(717);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.toString();
      String string0 = simpleNode0.toString("CompilationUnit");
      assertEquals("CompilationUnitCompilationUnit", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(717);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      JavaParser javaParser1 = new JavaParser("l(<Wd*");
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, (-1106552649));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1106552649
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>");
      nodeArray0[3] = (Node) simpleNode0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeArray0[4] = (Node) simpleNode0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringReader stringReader0 = new StringReader("ForStatement");
      simpleNode0.jjtGetNumChildren();
      StringReader stringReader1 = new StringReader(">>");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1));
      simpleNode0.jjtGetChild(0);
      assertEquals(7, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      Node node0 = simpleNode0.jjtGetChild(0);
      simpleNode0.jjtOpen();
      node0.jjtAddChild(nodeArray0[4], 0);
      assertEquals(7, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9740566129674715
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringReader stringReader0 = new StringReader("");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 3);
      SimpleNode simpleNode2 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode2.dump(">(Ws=DT", stringWriter0);
      simpleNode1.jjtGetNumChildren();
      simpleNode2.jjtGetNumChildren();
      simpleNode0.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode2.jjtAddChild(simpleNode1, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.311819957418071
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SystemInUtil.addInputLine("8}IiJ9");
      StringReader stringReader0 = new StringReader("A");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.ConditionalAndExpression();
      StringReader stringReader1 = new StringReader("/R1]x}+Hf@F|%RuY$");
      StringReader stringReader2 = new StringReader("/R1]x}+Hf@F|%RuY$");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 1);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        javaParser1.CastLookahead();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(717);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      JavaParser javaParser1 = new JavaParser("l(<Wd*");
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, (-1106552649));
      // Undeclared exception!
      try { 
        simpleNode0.toString("l(<Wd*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1106552649
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
