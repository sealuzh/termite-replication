/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:43:41 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import net.sourceforge.schemaspy.view.DefaultSqlFormatter;
import net.sourceforge.schemaspy.view.SqlFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.092305102659287
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2, 2);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      Config config1 = new Config();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      config1.setPassword("");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 893, 3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String string2 = foreignKeyConstraint1.getDeleteRuleName();
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      assertEquals(893, foreignKeyConstraint1.getUpdateRule());
      assertEquals("Restrict delete", string2);
      
      ForeignKeyConstraint.toString(list0);
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Config config0 = new Config();
      config0.isMeterEnabled();
      config0.setMeta("ZjQqgg:_;!ixW%J}4?");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t&");
      Config config1 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "C", 1, 0);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertTrue(boolean1 == boolean0);
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PGEWp:h~s}Pn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Config config0 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Assuming ", 0, 0);
      DefaultSqlFormatter defaultSqlFormatter0 = new DefaultSqlFormatter();
      config0.setSqlFormatter((SqlFormatter) defaultSqlFormatter0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete", string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5063874375065844
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Config config0 = new Config();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t&");
      Config config1 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TIMESTAMP");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 348, 1);
      foreignKeyConstraint0.isRestrictDelete();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      assertEquals(348, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2, 2);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 0, 1398);
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "", 2, 0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 3, 3);
      Config config0 = new Config();
      foreignKeyConstraint0.isRestrictDelete();
      Integer integer0 = new Integer(3);
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "UTF-8";
      stringArray0[3] = null;
      stringArray0[4] = "UTF-8";
      String string1 = "lem=,ud]";
      stringArray0[5] = "lem=,ud]";
      stringArray0[6] = null;
      stringArray0[7] = "";
      Config config1 = null;
      try {
        config1 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9594045983154569
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.removeChild(tableColumn0);
      tableColumn1.setShortType("N");
      tableColumn1.removeParent(tableColumn0);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn0.removeChild(tableColumn1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "table_id", (-60), 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-60), int0);
      
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      assertEquals((-60), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6969578994547225
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "N", (-16), (-16));
      Integer integer0 = new Integer((-16));
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      int int0 = 46;
      Integer integer1 = new Integer((-16));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      int int1 = 3052;
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 3052, 223);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint2 = null;
      try {
        foreignKeyConstraint2 = new ForeignKeyConstraint(tableColumn1, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=)p@SH4/6RNZeiE\"r");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=)p@SH4/6RNZeiE\"r");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=)p@SH4/6RNZeiE\"r");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Restrict delete:\n Parent cannot be deleted if children exist");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " references ");
      int int0 = 1;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 66, 1);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Config config0 = new Config();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gvDsI])zr");
      Config config1 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 1, 1);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2, 2);
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "aQ0v", 2323, 186);
      String string0 = "net.sourceforge.schemaspy.model.ForeignKeyConstraint";
      int int0 = 761;
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", 761, 186);
      foreignKeyConstraint2.addParentColumn((TableColumn) null);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint1.addChildColumn((TableColumn) null);
      foreignKeyConstraint0.getParentColumns();
      String[] stringArray0 = null;
      Config config0 = null;
      try {
        config0 = new Config((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3103913931272193
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l,8;e)0sz");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2, 2);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C");
      ForeignKeyConstraint.toString(list0);
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      Config config1 = new Config();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      config1.setPassword("");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 893, 3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String string2 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string2);
      assertEquals(893, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UTF-8");
      Config config1 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^%0Xx%'!5TAjJ]c]o", 1, 148);
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
      assertEquals(148, foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.removeParent(tableColumn0);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn0.setType("");
      tableColumn0.removeChild(tableColumn1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn2, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4163993278166287
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Config config0 = new Config();
      Integer integer0 = new Integer(2007);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2007, 2007);
      Integer integer1 = new Integer(2007);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer2 = new Integer(20);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      System.setCurrentTimeMillis((-1L));
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertFalse(boolean1 == boolean0);
      
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getName();
      assertEquals(2007, foreignKeyConstraint0.getDeleteRule());
      assertEquals(2007, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2897869179952366
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-1520));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Zx)vx%!v2mTq", (-1520), 2);
      Integer integer1 = new Integer(122);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer2 = new Integer(122);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string1);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(1460L);
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean1);
      
      foreignKeyConstraint0.getChildColumns();
      Integer integer3 = new Integer(122);
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.getName();
      assertEquals((-1520), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.960047056027876
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Config config0 = new Config();
      config0.isMeterEnabled();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t&");
      Config config1 = new Config();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      config0.setPassword("T3w");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 348, 1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string1);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(348, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.788458655589152
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = null;
      Config config0 = new Config();
      Integer integer0 = new Integer(2007);
      Config config1 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 1, 1);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getParentTable();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", "R", "Restrict delete");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2293495789482387
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w??DXM", 45, (-1520));
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1398, 2);
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      System.setCurrentTimeMillis(1566L);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 87, 1398);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.406402718105602
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "=,m7O{5|^og", 16, 3234);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      Config config0 = new Config();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRule();
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "=,m7O{5|^og", (-3464), 0);
      foreignKeyConstraint1.getChildColumns();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, " or versions greater than ", 546, (-1648));
      foreignKeyConstraint1.getChildColumns();
      Integer integer0 = new Integer(3234);
      foreignKeyConstraint1.getDeleteRuleAlias();
      Integer integer1 = new Integer((-598));
      foreignKeyConstraint2.getChildColumns();
      foreignKeyConstraint1.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(resultSet0).getInt(anyString());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      doReturn((String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyString());
      TableColumn tableColumn0 = null;
      try {
        tableColumn0 = new TableColumn((Table) null, resultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7935868607173573
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Config config0 = new Config();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)121;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-31);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)71;
      byteArray0[8] = (byte) (-87);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte) (-88), (byte) (-88));
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals((-88), foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
      assertEquals((-88), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.689824795026437
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-622), (-622));
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      Config config0 = new Config();
      foreignKeyConstraint0.isRestrictDelete();
      Integer integer0 = new Integer(2007);
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 2007, 45);
      foreignKeyConstraint0.getChildColumns();
      Integer integer1 = new Integer(2007);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer2 = new Integer(30);
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.isRestrictDelete();
      System.setCurrentTimeMillis(1103L);
      foreignKeyConstraint0.isReal();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.606196148718495
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "XwzY*d&\"", (-2529), (-2529));
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      Config config0 = new Config();
      ForeignKeyConstraint.toString(list0);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      Integer integer0 = new Integer((-1033));
      List<TableColumn> list1 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list1);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 2323, 2846);
      foreignKeyConstraint0.getChildColumns();
      Integer integer1 = new Integer((-2529));
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint1.getDeleteRuleAlias();
      Integer integer2 = new Integer(2846);
      foreignKeyConstraint0.getChildColumns();
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      ForeignKeyConstraint.toString(list1);
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleName();
      boolean boolean2 = foreignKeyConstraint1.isRestrictDelete();
      assertTrue(boolean2 == boolean1);
      assertEquals(2846, foreignKeyConstraint1.getDeleteRule());
      assertEquals(2323, foreignKeyConstraint1.getUpdateRule());
      assertFalse(foreignKeyConstraint1.isCascadeOnDelete());
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean3 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(foreignKeyConstraint0.isNullOnDelete());
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PGEWp:h~s}Pn");
      Config config0 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " references ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "PGEWp:h~s}Pn", (-1), 543);
      foreignKeyConstraint0.getChildTable();
      assertEquals((-1), foreignKeyConstraint0.getUpdateRule());
      assertEquals(543, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-gNZ5[W4,");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ARE");
      Config config0 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "IFpM\"?eD!92vhH\"", 2, (-305));
      DefaultSqlFormatter defaultSqlFormatter0 = new DefaultSqlFormatter();
      config0.setSqlFormatter((SqlFormatter) defaultSqlFormatter0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-305), foreignKeyConstraint0.getDeleteRule());
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3137583964942223
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-1520));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Zx)vx%!v2mTq", (-1520), 2);
      Integer integer1 = new Integer(122);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer2 = new Integer(122);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string1);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(1460L);
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean1);
      
      foreignKeyConstraint0.getChildColumns();
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-1520), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string2);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6339002754588328
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-1520));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",3[(UKv gORrMu6_", (-1520), 2);
      Integer integer1 = new Integer((-1520));
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      ForeignKeyConstraint.toString(list0);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "9g&wg1S<|/V{v<YS;A", 134, (-1520));
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals((-13), int0);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getParentColumns();
      System.setCurrentTimeMillis(0L);
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertFalse(boolean1 == boolean0);
      
      foreignKeyConstraint0.getChildColumns();
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string1);
      
      int int1 = foreignKeyConstraint1.getDeleteRule();
      assertEquals(134, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-1520), int1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(P2$", 2, 303);
      Config config0 = new Config();
      foreignKeyConstraint0.isRestrictDelete();
      Integer integer0 = new Integer(303);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(P2$";
      stringArray0[1] = "(P2$";
      Config config1 = new Config(stringArray0);
      // Undeclared exception!
      try { 
        config0.getUser();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Required parameter '-u' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PGEWp:h~s}Pn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IFpM\"?eD!92vhH\"");
      Config config0 = new Config();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t&");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "h", (-1), 3684);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }
}
