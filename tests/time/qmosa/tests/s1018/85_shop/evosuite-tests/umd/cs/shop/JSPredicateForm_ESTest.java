/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:30:11 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2431145414154265
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "";
      jSTerm0.add((Object) "");
      jSTerm0.print();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) jSTerm0);
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.listIterator();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm1);
      int int0 = 2;
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      jSTerm0.listIterator(2);
      jSSubstitution0.print();
      JSPredicateForm jSPredicateForm3 = (JSPredicateForm)jSPredicateForm2.clone();
      jSPredicateForm3.setSize(2671);
      JSPredicateForm jSPredicateForm4 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm2);
      jSPredicateForm2.clonePF();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm2.applySubstitutionPF(jSSubstitution1);
      jSPredicateForm4.standarizerPredicateForm();
      jSPredicateForm3.matches(jSPredicateForm5);
      jSPredicateForm2.equals((JSPredicateForm) jSTerm0);
      jSPredicateForm2.clonePF();
      // Undeclared exception!
      try { 
        jSTerm1.toStr();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2433308511709966
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      jSTerm0.print();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) jSTerm0);
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.listIterator();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      jSTerm0.listIterator(2);
      jSSubstitution0.print();
      JSPredicateForm jSPredicateForm3 = (JSPredicateForm)jSPredicateForm2.clone();
      jSPredicateForm3.setSize(2671);
      JSPredicateForm jSPredicateForm4 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm2);
      jSPredicateForm2.clonePF();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm2.applySubstitutionPF(jSSubstitution1);
      JSPredicateForm jSPredicateForm6 = jSPredicateForm4.standarizerPredicateForm();
      jSPredicateForm3.matches(jSPredicateForm5);
      jSPredicateForm2.equals((JSPredicateForm) jSTerm0);
      jSPredicateForm2.clonePF();
      jSPredicateForm2.setSize(699);
      // Undeclared exception!
      try { 
        jSPredicateForm4.equals(jSPredicateForm6);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1108917967195695
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSTerm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) null);
      jSSubstitution0.add((Object) "");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.matches(jSPredicateForm0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) null);
      StringReader stringReader0 = new StringReader("aW$w)");
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9007452539070404
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSTerm0.equals((JSPredicateForm) null);
      jSSubstitution0.add((Object) "");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) null);
      StringReader stringReader0 = new StringReader("aW$w)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm2.applySubstitutionT(jSSubstitution1);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2945474517952
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0Su");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      Object[] objectArray0 = new Object[8];
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSTerm0.add((Object) jSTerm1);
      streamTokenizer1.parseNumbers();
      objectArray0[2] = (Object) stringReader0;
      objectArray0[4] = (Object) "0Su";
      objectArray0[5] = (Object) "0Su";
      streamTokenizer1.whitespaceChars((-2), (-2));
      jSTerm0.firstElement();
      objectArray0[6] = (Object) "0.0";
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      streamTokenizer1.ordinaryChar((-2));
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution1.removeElements(jSSubstitution2);
      JSTerm jSTerm2 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) jSTerm2);
      System.setCurrentTimeMillis((-2));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9769337589789637
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSSubstitution0.add((Object) jSTerm0);
      jSTerm0.print();
      jSSubstitution0.add((Object) jSTerm0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) jSPredicateForm0);
      jSTerm0.add((Object) jSTerm1);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSPredicateForm1.listIterator();
      jSTerm0.clonePF();
      int int0 = (-2721);
      // Undeclared exception!
      try { 
        jSTerm1.matches(jSPredicateForm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer1.quoteChar(4810);
      JSTerm jSTerm1 = new JSTerm();
      streamTokenizer0.quoteChar((-113214950));
      JSTerm jSTerm2 = new JSTerm(streamTokenizer2);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.095314022074771
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSTerm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      jSSubstitution0.add((Object) "");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.matches(jSPredicateForm0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) null);
      jSPredicateForm0.standarizerPredicateForm();
      System.setCurrentTimeMillis((-2385L));
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.289764746079254
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSSubstitution0.add((Object) jSTerm0);
      jSTerm0.print();
      jSSubstitution0.add((Object) jSTerm0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) jSPredicateForm0);
      jSTerm0.add((Object) jSTerm1);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm2);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.clonePF();
      jSPredicateForm4.print();
      assertTrue(jSPredicateForm1.equals((Object)jSPredicateForm3));
      
      LinkedList<JSPredicateForm> linkedList0 = new LinkedList<JSPredicateForm>();
      jSPredicateForm3.retainAll(jSSubstitution1);
      JSPredicateForm jSPredicateForm5 = jSPredicateForm4.standarizerPredicateForm();
      System.setCurrentTimeMillis((-2721));
      jSTerm1.toStr();
      System.setCurrentTimeMillis((-2721));
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm6 = jSPredicateForm4.applySubstitutionPF(jSSubstitution1);
      jSPredicateForm6.clonePF();
      assertEquals("[, [[]]]", jSPredicateForm2.toString());
      assertTrue(jSPredicateForm4.equals((Object)jSPredicateForm5));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1080982674520863
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      jSTerm0.print();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) jSTerm0);
      jSTerm0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.listIterator();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      int int0 = (-2721);
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm1);
      jSPredicateForm0.clonePF();
      jSTerm0.listIterator(2);
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      jSTerm0.matches(jSPredicateForm2);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm3.iterator();
      JSJshopVars.equalT = 32;
      // Undeclared exception!
      try { 
        jSPredicateForm3.print();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.057009012049778
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      jSTerm0.add((Object) "");
      jSTerm0.standarizerPredicateForm();
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm0);
      jSSubstitution0.add((Object) "");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSJshopVars.interrogation = (-366172151);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0);
      assertFalse(jSSubstitution1.fail());
      
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) null);
      System.setCurrentTimeMillis((-853L));
      boolean boolean1 = jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1086450100492584
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSSubstitution0.add((Object) jSTerm0);
      jSTerm0.print();
      jSSubstitution0.add((Object) jSTerm0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) jSPredicateForm0);
      jSTerm0.add((Object) jSTerm1);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      jSPredicateForm1.listIterator();
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      jSTerm0.matches(jSPredicateForm2);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.clonePF();
      jSSubstitution0.add((Object) jSPredicateForm4);
      JSPredicateForm jSPredicateForm5 = new JSPredicateForm();
      jSPredicateForm5.clear();
      jSTerm0.toStr();
      jSPredicateForm3.toStr();
      // Undeclared exception!
      try { 
        jSTerm1.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9528170179559594
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wf{XO:0-?_@AvSIk");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.lastElement();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      Predicate<JSTerm> predicate0 = Predicate.isEqual((Object) "wf{XO:0-?_@AvSIk");
      Predicate<JSPredicateForm> predicate1 = Predicate.isEqual((Object) "wf{XO:0-?_@AvSIk");
      Predicate<JSTerm> predicate2 = predicate0.and(predicate1);
      Predicate<JSTerm> predicate3 = predicate2.negate();
      Predicate<JSTerm> predicate4 = predicate3.and(predicate0);
      Predicate<JSPredicateForm> predicate5 = predicate1.negate();
      predicate4.or(predicate5);
      jSPredicateForm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      jSSubstitution0.replaceAll(unaryOperator0);
      stringReader0.ready();
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm2.clone();
      Object[] objectArray0 = new Object[2];
      jSSubstitution0.add((Object) null);
      jSPredicateForm0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm1, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8896882783588478
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSSubstitution0.add((Object) jSTerm0);
      jSTerm0.print();
      jSSubstitution0.add((Object) jSTerm0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) jSTerm0);
      jSTerm0.add((Object) jSTerm1);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.listIterator();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      int int0 = (-2721);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.clonePF();
      jSSubstitution0.add((Object) jSPredicateForm3);
      jSTerm0.listIterator(2);
      jSPredicateForm1.applySubstitutionPF(jSSubstitution1);
      jSPredicateForm2.spliterator();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5134049813662336
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "0(u";
      StringReader stringReader0 = new StringReader("0(u");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "0(u");
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm2 = new JSTerm();
      jSSubstitution0.add((Object) jSTerm2);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm3 = new JSTerm(streamTokenizer0);
      jSTerm3.print();
      jSTerm3.matches((JSPredicateForm) jSTerm2);
      JSTerm jSTerm4 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.matches((JSPredicateForm) jSTerm4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.21338732652814
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.quoteChar((-4));
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      streamTokenizer0.ordinaryChar(41);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSSubstitution3.add((Object) jSPredicateForm0);
      jSSubstitution2.add((Object) jSSubstitution3);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) jSSubstitution2;
      objectArray0[1] = (Object) streamTokenizer1;
      objectArray0[2] = (Object) streamTokenizer1;
      objectArray0[3] = (Object) jSSubstitution0;
      objectArray0[4] = (Object) jSSubstitution0;
      jSPredicateForm0.toArray(objectArray0);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm((String) null);
      JSSubstitution jSSubstitution4 = jSTerm0.matches(jSPredicateForm1, jSSubstitution1);
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      jSPredicateForm1.toStr();
      jSTerm0.clonePF();
      jSTerm0.toArray(objectArray0);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.matches(jSPredicateForm2, jSSubstitution4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2095422126762791
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.quoteChar((-4));
      JSTerm jSTerm0 = new JSTerm();
      streamTokenizer0.quoteChar((-4));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.quoteChar((-4));
      JSTerm jSTerm0 = new JSTerm();
      streamTokenizer0.quoteChar((-4));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.slashSlashComments(true);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      System.setCurrentTimeMillis((-4));
      jSTerm1.print();
      assertTrue(jSTerm1.isConstant());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.892744636863848
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "f~&ZO)#";
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      Predicate<JSTerm> predicate0 = Predicate.isEqual((Object) "fo-gw7O.a{!2");
      Predicate<JSTerm> predicate1 = predicate0.negate();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.removeIf(predicate0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution2.add((Object) predicate1);
      JSSubstitution jSSubstitution3 = jSPredicateForm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      jSSubstitution3.removeElements(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSPredicateForm2.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<JSPredicateForm> linkedList0 = new LinkedList<JSPredicateForm>();
      System.setCurrentTimeMillis(0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("JSTerm: Error reading control parameters: ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.reset();
      streamTokenizer0.nextToken();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.870874948416417
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) streamTokenizer0;
      objectArray0[2] = (Object) stringReader0;
      objectArray0[4] = (Object) "0(u";
      objectArray0[5] = (Object) "0(u";
      streamTokenizer1.whitespaceChars((-2), (-2));
      jSTerm0.firstElement();
      objectArray0[6] = (Object) "0.0";
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      streamTokenizer0.ordinaryChar((-2));
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSJshopVars.minus = (-2);
      jSSubstitution0.add(objectArray0[5]);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      Predicate<JSTerm> predicate0 = Predicate.isEqual((Object) "fo-gw7O.a{!2");
      predicate0.negate();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.read();
      jSTerm0.removeIf(predicate0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.forEach(consumer0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSTerm0.equals(jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[4] = (Object) "0(u";
      objectArray0[5] = (Object) "0(u";
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<JSTerm> consumer0 = (Consumer<JSTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.isGround();
      System.setCurrentTimeMillis(0L);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      Predicate<JSTerm> predicate0 = Predicate.isEqual((Object) "fo-gw7O.a{!2");
      predicate0.negate();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.removeIf(predicate0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StringReader cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wf{XO:0-?_@AvSIk");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.lastElement();
      jSTerm0.standarizerPredicateForm();
      JSJshopVars.rightBrac = 2;
      Predicate<JSTerm> predicate0 = Predicate.isEqual((Object) "wf{XO:0-?_@AvSIk");
      Predicate<JSPredicateForm> predicate1 = Predicate.isEqual((Object) "wf{XO:0-?_@AvSIk");
      Predicate<JSTerm> predicate2 = predicate0.and(predicate1);
      Predicate<JSTerm> predicate3 = predicate2.negate();
      Predicate<JSTerm> predicate4 = predicate3.and(predicate0);
      Predicate<JSPredicateForm> predicate5 = predicate1.negate();
      jSTerm0.add((Object) null);
      predicate4.or(predicate5);
      jSTerm0.removeIf(predicate4);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2218396677739918
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution0 = null;
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF((JSSubstitution) null);
      jSPredicateForm1.toStr();
      jSPredicateForm0.toStr();
      jSTerm0.stream();
      jSPredicateForm0.stream();
      JSPredicateForm jSPredicateForm2 = null;
      try {
        jSPredicateForm2 = new JSPredicateForm("f~&ZO)#");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer2);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement(streamTokenizer2);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.parseNumbers();
      streamTokenizer1.sval = null;
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      jSTerm0.stream();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      streamTokenizer2.quoteChar((-4));
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader0);
      streamTokenizer0.wordChars((-4), (-1791176367));
      streamTokenizer5.eolIsSignificant(false);
      streamTokenizer5.quoteChar(41);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.commentChar((-4));
      // Undeclared exception!
      try { 
        jSPredicateForm0.elementAt((-113214950));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) streamTokenizer0;
      objectArray0[2] = (Object) stringReader0;
      objectArray0[4] = (Object) "0(u";
      streamTokenizer1.nval = (double) (-2);
      objectArray0[5] = (Object) "0(u";
      streamTokenizer2.whitespaceChars((-4), (-2));
      jSTerm0.firstElement();
      objectArray0[6] = (Object) "0.0";
      objectArray0[7] = (Object) streamTokenizer2;
      jSTerm0.toArray(objectArray0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm1.forEach(consumer0);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSTerm jSTerm2 = null;
      try {
        jSTerm2 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.whitespaceChars(41, (-945));
      jSTerm0.firstElement();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) jSTerm0;
      objectArray0[1] = (Object) stringReader0;
      objectArray0[2] = (Object) jSTerm0;
      objectArray0[3] = (Object) streamTokenizer0;
      objectArray0[4] = (Object) streamTokenizer0;
      objectArray0[5] = (Object) "f~&ZO)#";
      objectArray0[6] = (Object) streamTokenizer0;
      objectArray0[7] = (Object) jSTerm0;
      objectArray0[8] = (Object) streamTokenizer0;
      jSTerm0.toArray(objectArray0);
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0235102564045175
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSTerm0.standarizerPredicateForm();
      JSTerm jSTerm1 = null;
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSPredicateForm1.matches(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      jSSubstitution1.add((Object) jSPredicateForm2);
      // Undeclared exception!
      try { 
        jSTerm0.listIterator(742);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 742
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2501365552196746
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "e");
      jSTerm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) null);
      jSSubstitution0.add((Object) "e");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.matches(jSPredicateForm0);
      jSTerm0.add((Object) null);
      StringReader stringReader0 = new StringReader("aW$w)");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars((-1084518693), (-1720699463));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = jSTerm1.clonePF();
      jSTerm1.equals(jSPredicateForm1);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1217347121875214
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~&ZO)#");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSTerm0.clonePF();
      jSPredicateForm0.listIterator();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      int int0 = (-2721);
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm2.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.365349639944498
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.add((Object) "");
      jSTerm0.standarizerPredicateForm();
      jSTerm0.equals((JSPredicateForm) null);
      jSSubstitution0.add((Object) "");
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      StringReader stringReader0 = new StringReader("ND=:+1w?7J4h6");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar((-3946));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashSlashComments(true);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      stringReader0.close();
      jSPredicateForm0.iterator();
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[4] = (Object) "0(u";
      objectArray0[5] = (Object) "0(u";
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(u");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
