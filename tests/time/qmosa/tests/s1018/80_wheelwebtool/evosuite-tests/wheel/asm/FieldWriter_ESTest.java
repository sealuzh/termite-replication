/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:16:42 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 2311;
      ClassWriter classWriter0 = new ClassWriter(2311);
      String string0 = "org.apache.commons.io.filefilter.CanWriteFileFiltei";
      String string1 = "org.apache.commons.io.filefilter.CanWriteFileFiltei";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "org.apache.commons.io.filefilter.CanWriteFileFiltei", "15XxlUngLzI6UF~/", "org.apache.commons.io.filefilter.CanWriteFileFiltei", (Object) null);
      String string2 = "DgmQ\\jQTr=&0v";
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByte((-879));
      ByteVector byteVector1 = classWriter0.pool;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte) (-128);
      byteVector1.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2326);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "org.apache.commons.io.filefilter.CanWriteFileFiltei", "15XxlUngLzI6UF~/", "org.apache.commons.io.filefilter.CanWriteFileFiltei", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0616109402358964
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ClassWriter classWriter0 = new ClassWriter((-1259));
      int int0 = 12;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 12, "!zn*Hc$*d_", "^&Y]jic,Lp)", "", "java/lang/Class");
      ClassWriter classWriter1 = new ClassWriter(1);
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("java/lang/Class");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector1 = byteVector0.put11(12, 1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.CanWriteFileFiltei", "15XxlUngLzI6#U`F9~/", "org.apache.commons.io.filefilter.CanWriteFileFiltei", (Object) null);
      Item item0 = classWriter0.key2;
      Item item1 = classWriter0.key3;
      Item item2 = classWriter0.key2;
      Item item3 = classWriter0.key;
      classWriter0.newClass("wheel.asm.ClassReader");
      classWriter0.newLong(4294967295L);
      Item item4 = new Item(49);
      Item item5 = classWriter0.key3;
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation("org.apache.commons.io.filefilter.CanWriteFileFiltei", false);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(644);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        byteVector0.putByteArray(byteArray0, 86, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8945706855324711
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "", "", "", (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream2);
      pipedInputStream2.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream2);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, dataInputStream0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7219189534987311
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.CanWriteFileFiltei", "15XxlUngLzI6#U`F9~/", "org.apache.commons.io.filefilter.CanWriteFileFiltei", (Object) null);
      fieldWriter0.visitAnnotation("15XxlUngLzI6#U`F9~/", false);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByte(0);
      ByteVector byteVector1 = classWriter0.pool;
      fieldWriter0.put(byteVector1);
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.next = fieldWriter0;
      fieldWriter0.visitAnnotation("", true);
      fieldWriter1.next.getSize();
      fieldWriter1.visitAttribute(attribute0);
      fieldWriter1.next.visitAnnotation("", true);
      // Undeclared exception!
      try { 
        fieldWriter1.next.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "org.apache.commons.io.filefilter.CanWriteFileFiltei", "15XxlUngLzI6#U`F9~/", "org.apache.commons.io.filefilter.CanWriteFileFiltei", "org.apache.commons.io.filefilter.CanWriteFileFiltei");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, "", "", "org.apache.commons.io.filefilter.CanWriteFileFiltei", "org.apache.commons.io.filefilter.CanWriteFileFiltei");
      fieldWriter0.next = fieldWriter1;
      fieldWriter0.visitAnnotation("DgmQjQTr=&0v", false);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByte((-879));
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.putLong((-310L));
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 732, "", "", "", "");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = new Attribute("vhqC. ^F");
      Attribute attribute2 = attribute1.next;
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ClassWriter classWriter0 = new ClassWriter((-1259));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!zn*Hc$*d_");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Run?imeVisibleParameterAnnotations");
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter1 = new ClassWriter((-1437));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4493), "", "ConstantValue", "x", "java/lang/Class");
      Attribute attribute0 = new Attribute("!zn*Hc$*d_");
      Attribute attribute1 = new Attribute("java/lang/Class");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attribute attribute2 = attribute0.next;
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ClassWriter classWriter0 = new ClassWriter((-1259));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 12, "!zn*Hc$*d_", "^&Y]jic,Lp)", "", "java/lang/Class");
      ClassWriter classWriter1 = new ClassWriter(1);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(12, 1);
      fieldWriter0.put(byteVector1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(12);
      try { 
        pipedInputStream0.read(byteArray0, 1, 1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5997514783371858
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)115;
      byteArray0[2] = (byte)0;
      Object object0 = new Object();
      ClassWriter classWriter0 = new ClassWriter(1126);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)115, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong(1007L);
      ByteVector byteVector2 = byteVector1.putByte((byte)115);
      fieldWriter0.put(byteVector2);
      ByteVector byteVector3 = new ByteVector(4);
      ByteVector byteVector4 = byteVector3.putInt((byte)115);
      byteVector4.putShort(4);
      byteVector3.putLong((byte)0);
      byteVector4.putShort(1126);
      fieldWriter0.put(byteVector4);
      fieldWriter0.visitAnnotation("[%$E-GG3J", false);
      fieldWriter0.visitAnnotation("[%$E-GG3J", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(52, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      int int0 = (-821);
      ClassWriter classWriter0 = new ClassWriter((-821));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-821), "!zn*Hc$*d_", "java/lang/Class", "!zn*Hc$*d_", "!zn*Hc$*d_");
      ClassWriter classWriter1 = new ClassWriter(14);
      ByteVector byteVector0 = classWriter1.pool;
      byteVector0.put11((-1551), 49);
      fieldWriter0.put(byteVector0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((-821));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "", "", "", (Object) null);
      Attribute attribute0 = new Attribute("F2h\n");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.markSupported();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream1, pipedInputStream0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "", "", "", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 369, " k{}I@3]G", "Fv\\n", "", "");
      Attribute attribute0 = new Attribute((String) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong(4294967295L);
      ByteVector byteVector2 = byteVector1.putByte(4);
      ByteVector byteVector3 = new ByteVector(2);
      byteVector2.putInt(90);
      ByteVector byteVector4 = byteVector0.putShort(90);
      byteVector2.putLong((-1175L));
      ByteVector byteVector5 = byteVector4.putShort(1);
      assertSame(byteVector5, byteVector2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 732, "", "", "", "");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = new Attribute("vhqC. ^F");
      Attribute attribute2 = attribute1.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)115;
      Object object0 = new Object();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong(1007L);
      byteVector1.putByte((byte)115);
      ByteVector byteVector2 = new ByteVector(4);
      ByteVector byteVector3 = byteVector2.putInt((byte)115);
      byteVector3.putShort(4);
      byteVector2.putLong((byte)0);
      byteVector3.putShort(1126);
      ClassWriter classWriter0 = new ClassWriter((byte)115);
      Object object1 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-3225), "", "", "Signature", object1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@530fb63b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClass("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "", "org.apache.commons.io.filefilter.CanWriteFileFilter", "", "");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RuntimeVisibleParameterAnnotations");
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-821));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-821), "!zn*Hc$*d_", "java/lang/Class", "!zn*Hc$*d_", "!zn*Hc$*d_");
      Attribute attribute0 = new Attribute("java/lang/Class");
      Attribute attribute1 = new Attribute((String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attribute attribute2 = attribute0.next;
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 4;
      String string0 = "ON%>%5*?\\QIG]";
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 4, "ON%>%5*?QIG]", "~_38J^X{fX:7P", "", "~_38J^X{fX:7P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
