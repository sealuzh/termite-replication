/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 05:15:22 GMT 2020
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.RenderableComponent;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.321153077820839
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.param("wheel.components.XmlEntityRef", "]");
      assertEquals("Any_1", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.987669764044584
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "java.lang.StringBuffer@0000000004";
      Component component0 = tableBlock0.attributes(stringArray0);
      assertTrue(component0._isGeneratedId());
      assertFalse(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0942682928183194
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      TableBlock tableBlock0 = new TableBlock(table0);
      String[] stringArray0 = new String[8];
      Component component0 = tableBlock0.attributes(stringArray0);
      assertTrue(component0._isGeneratedId());
      assertEquals("Q4U_", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      xmlEntityRef0.afterAdd();
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.401919402542824
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      Component component0 = table0.wBlock("Q4U_");
      assertEquals("Block_1", component0.getComponentId());
      assertEquals("Q4U_", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9401273596196678
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      Component component0 = tableBlock0.tr();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.113539627290935
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Double double0 = new Double((-5656.9407));
      Component component0 = errorPage0.text(double0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3184466278844393
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      table0.sub();
      assertEquals("Table_1", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9172155185650601
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      NumberInput numberInput0 = new NumberInput(table0, "", "java.lang.String@0000000016");
      Component component0 = numberInput0.requestFocus();
      assertFalse(component0._isGeneratedId());
      assertEquals("Table_1", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2305112122117543
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.meta();
      assertEquals("Any_1", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      assertEquals("wheel_ErrorPage", standaloneComponent0.getComponentId());
      assertTrue(image0._isGeneratedId());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      Component component0 = table0.end();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Q4U_", table0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.193261886887935
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      TableBlock tableBlock0 = table0.colgroup();
      tableBlock0.create();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertTrue(tableBlock0._isGeneratedId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.3184466278844393
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      table0.code((Object) "");
      assertEquals("Table_1", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.874640740535752
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      Component component0 = table0.clasS(" >E)~rxpXRS>gx");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Table_1", component0.getComponentId());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1115904793495077
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      ActionExpression actionExpression0 = new ActionExpression("o)^7.mx^!mt$hi0");
      Component component0 = hidden0.actionBinding(actionExpression0);
      assertEquals(" prefix", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(checkbox0._isGeneratedId());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("java/lang/reflect/Method");
      // Undeclared exception!
      try { 
        xmlEntityRef0.var((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.textarea("Opf|xZ{FP");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9096604215404314
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ">frFo;|,NX][H~i,kw");
      // Undeclared exception!
      try { 
        table0.textarea("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8705688894156371
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      DateInput dateInput0 = new DateInput(errorPage0, "asset/wheelCcolponents/jquery.js?expires=88", "asset/wheelCcolponents/jquery.js?expires=88", stringBuffer0);
      // Undeclared exception!
      try { 
        dateInput0.textInput("Could not find component with id '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.482203083453435
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      Table table0 = new Table(checkbox0, "!}ll?hT10SqIlbnJ");
      Component component0 = table0.sup();
      Text text0 = new Text(table0, component0);
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        text0.strike((Object) mockDate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("5vfv1*.mG%");
      // Undeclared exception!
      try { 
        xmlEntityRef0.s((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7094727765842133
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      Hidden hidden0 = new Hidden(textInput0, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      // Undeclared exception!
      try { 
        hidden0.reset("=?Xk-^$d_bx&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("");
      // Undeclared exception!
      try { 
        errorPage0.radioGroup("|~E", (ISelectModel) null, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.047559296044747
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      // Undeclared exception!
      try { 
        hidden0.numberInput("ins");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0704930404278246
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      // Undeclared exception!
      try { 
        hidden0.message((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8095142558492818
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      // Undeclared exception!
      try { 
        table0.message("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4441171369589885
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "asset/wheel/components/jquery.js?expires=88", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, " prefix", " prefix");
      Block block0 = new Block(hidden0);
      Component component0 = block0.map("A{)`9uf:Re");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(component0._isGeneratedId());
      assertTrue(checkbox0._isGeneratedId());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.113539627290935
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.img("EM(4e|$z?-g<n[", "1c9'1");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.imageSubmit("|l*n~k", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.imageSubmit("", "F,'8l/q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.308761080498052
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      Block block0 = new Block(table0, "ZA`4bQPK5JWbe(5qVr");
      // Undeclared exception!
      try { 
        block0.hidden("]vsR}{/b|&.5MBjOm9B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3041587116405955
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      NumberInput numberInput0 = new NumberInput(table0, "org.mvel.util.ExecutionStack", (String) null);
      Hidden hidden0 = new Hidden(numberInput0, "java.lang.String@0000000013", "asset/wheel/components/jquery.js?expires=88");
      Block block0 = new Block(hidden0);
      // Undeclared exception!
      try { 
        block0.hidden("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.186936022399185
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", "; prefix");
      // Undeclared exception!
      try { 
        hidden0.h2((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.389887914456021
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableRow tableRow0 = table0.tr();
      Image image0 = new Image(tableRow0, "", "");
      // Undeclared exception!
      try { 
        image0.find("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id  on the page.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("q+Q[");
      // Undeclared exception!
      try { 
        xmlEntityRef0.end("wheel.components.XmlEntityRef");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression 'wheel.components.XmlEntityRef'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.991509361356614
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      checkbox0.el("zmrbo-eiwa i");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(checkbox0._isGeneratedId());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.dateFormat(":j[.#G", ":j[.#G");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern ':j[.#G'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1285490048751514
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      // Undeclared exception!
      try { 
        checkbox0.checkbox("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.246213836677445
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "java.lang.String@0000000016", "");
      // Undeclared exception!
      try { 
        hidden0.b((Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8413903748459728
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.attribute("r", "r");
      assertFalse(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.366169282445685
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      Component component0 = table0.actionBinding("$H92c");
      assertFalse(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(image0._isGeneratedId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.985053187904615
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.actionBinding("");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(component0._isGeneratedId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2151215609245614
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.acronym((Object) null);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.53503852273645
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      assertEquals("Any_1", any0.getComponentId());
      
      any0._setComponentId("5-QG:");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5171063970610275
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      StandaloneComponent standaloneComponent0 = table0._getTopLevelComponent(false);
      assertFalse(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", standaloneComponent0.getComponentId());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.24808450616181
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      Calendar calendar0 = table0.date();
      // Undeclared exception!
      try { 
        xmlEntityRef0.var((Object) calendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.246213836677445
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      // Undeclared exception!
      try { 
        checkbox0.sup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.sup();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.150060224484236
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextArea textArea0 = new TextArea(errorPage0, "hJ:g", "");
      // Undeclared exception!
      try { 
        textArea0.span((Object) "z-0K");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.045576462153323
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, (CharSequence) null);
      // Undeclared exception!
      try { 
        image0.s();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.791759469228055
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      Hidden hidden0 = new Hidden(textInput0, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      // Undeclared exception!
      try { 
        hidden0.s();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6307991045856431
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TextArea textArea0 = new TextArea(errorPage0, "?*YVK", "hJ:g");
      // Undeclared exception!
      try { 
        table0.remove((Component) textArea0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "]", (String) null, "i4(|hXCTH0nz -");
      Table table0 = new Table(dateInput0, "i4(|hXCTH0nz -");
      // Undeclared exception!
      try { 
        table0.remove("abbr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "java.lang.StringBuffer@0000000004", "java.lang.StringBuffer@0000000004");
      // Undeclared exception!
      try { 
        hidden0.q();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.0173636234482513
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        dateInput0.placeholder("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.177886941777099
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "3IF", "asset/wheel/components/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        dateInput0.noscript();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        errorPage0.message("java.lang.StringBuffer@0000000004", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2882094593364797
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      FileInput fileInput0 = new FileInput(table0, "java.lang.String@0000000016", "");
      // Undeclared exception!
      try { 
        fileInput0.li();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      // Undeclared exception!
      try { 
        textInput0.li();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.246213836677445
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      // Undeclared exception!
      try { 
        checkbox0.label();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.48915175368826
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      Any any0 = tableBlock0.col();
      FileInput fileInput0 = new FileInput(any0, "pC<aTq(@1", "pC<aTq(@1");
      // Undeclared exception!
      try { 
        fileInput0.kbd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.kbd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2151922093961676
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Image image0 = new Image(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(image0, "8`]", "java.lang.String@0000000021", "");
      // Undeclared exception!
      try { 
        dateInput0.ins((Object) "$H92c");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.246213836677445
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      // Undeclared exception!
      try { 
        checkbox0.i((Object) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      Hidden hidden0 = new Hidden(textInput0, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      // Undeclared exception!
      try { 
        hidden0.i();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.548175449408096
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        dateInput0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("wheel.components.XmlEntityRef");
      // Undeclared exception!
      try { 
        xmlEntityRef0.h5();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.2151922093961676
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Checkbox checkbox0 = new Checkbox(text0, "+2\"9!U", "+2\"9!U");
      // Undeclared exception!
      try { 
        checkbox0.h2();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.5117810419821933
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      InitialFieldValue initialFieldValue0 = new InitialFieldValue(any0, "java.lang.StringBuffer@0000000004");
      // Undeclared exception!
      try { 
        any0.em((Object) initialFieldValue0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.dt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.0261206329699606
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextArea textArea0 = new TextArea(errorPage0, "assetwheel/components/jqery.js?expires=88", "var");
      // Undeclared exception!
      try { 
        textArea0.dl();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, (String) null, ":9dp}wY:/#]#");
      TextArea textArea0 = new TextArea(checkbox0, ":9dp}wY:/#]#", "java.lang.StringBuffer@0000000004");
      // Undeclared exception!
      try { 
        textArea0.dl();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("asset/wheel/colponents/jquery.js?expires=88");
      Short short0 = new Short((short)2681);
      // Undeclared exception!
      try { 
        xmlEntityRef0.big((Object) short0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.440253045460538
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableRow tableRow0 = table0.tr();
      Image image0 = new Image(tableRow0, "", "");
      // Undeclared exception!
      try { 
        image0.bdo("hJ:g");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.224228946236883
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/colponents/jquery.js?expires=88", "", "asset/wheel/colponents/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        dateInput0.address();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.246213836677445
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      // Undeclared exception!
      try { 
        checkbox0.acronym((Object) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.245171589411516
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      // Undeclared exception!
      try { 
        checkbox0.a();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.6715952780212542
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.end();
      assertEquals("wheel_ErrorPage", component0.getComponentId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("wheel.components.XmlEntityRef");
      // Undeclared exception!
      try { 
        xmlEntityRef0.end((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression 'null'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.dateFormat("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported type given for dateFormat. Supported types are: Date, Calendar, Long/long .
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.3157414641287954
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      ElExpression elExpression0 = new ElExpression("");
      table0.h1((Object) elExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Table_1", table0.getComponentId());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("(Ljava/lang/String;)Lorg/mvel/integration/VariableResolver;");
      List<Component> list0 = errorPage0.findAll(elExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertNotNull(list0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.514876679949544
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableRow tableRow0 = table0.tr();
      Image image0 = new Image(tableRow0, "", "");
      Table table1 = new Table(image0, "hJ:g");
      assertEquals("hJ:g", table1.getComponentId());
      
      table1.id("");
      boolean boolean0 = table1.equals(table0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.3633728302490375
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableRow tableRow0 = table0.tr();
      Image image0 = new Image(tableRow0, "", "");
      Table table1 = new Table(image0, "hJ:g");
      boolean boolean0 = table1.equals(table0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(boolean0);
      assertTrue(image0._isGeneratedId());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7104932300550038
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ":[ JYp-LL|^=y]<u{");
      boolean boolean0 = table0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals(":[ JYp-LL|^=y]<u{", table0.getComponentId());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.6715952780212542
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      boolean boolean0 = table0.equals(table0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.563127163870547
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      boolean boolean0 = table0.equals(any0);
      assertEquals("Any_1", any0.getComponentId());
      assertFalse(boolean0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("hJ:g", table0.getComponentId());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.5297061990576545
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9Z6Ddc");
      xmlEntityRef0._clear();
      assertEquals("9Z6Ddc", xmlEntityRef0.getComponentId());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.48819539284578
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      Component component0 = tableBlock0.br();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Any_2", component0.getComponentId());
      assertEquals("hJ:g", table0.getComponentId());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.171115529932704
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      table0.getComponents();
      assertTrue(image0._isGeneratedId());
      assertEquals("$H92c", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.6417347121875212
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "TF/\u0002[pSt!:Cqt", "TF/\u0002[pSt!:Cqt");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5090671321924054
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "java.lang.String@0000000013");
      TableBlock tableBlock0 = table0.thead();
      assertTrue(tableBlock0._isGeneratedId());
      
      tableBlock0.id("java.lang.String@0000000013");
      assertFalse(tableBlock0._isGeneratedId());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6628426781734196
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      assertEquals("Any_1", any0.getComponentId());
      
      tableBlock0.id("");
      tableBlock0.attributes((String[]) null);
      assertFalse(tableBlock0._isGeneratedId());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.985053187904615
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("7k#5w^}");
      Form form0 = new Form(errorPage0, "hJ:g", actionExpression0);
      // Undeclared exception!
      try { 
        form0.id("61 @:a-VFSd");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.402517941654973
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Checkbox checkbox0 = new Checkbox(text0, "+2\"9!U", "+2\"9!U");
      // Undeclared exception!
      try { 
        checkbox0.id("+2\"9!U");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.2859319511147946
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.renderHint("");
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try { 
        tableBlock0._render(mXSerializer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.611133394366695
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try { 
        tableBlock0._render(mXSerializer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.1687771717920876
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      FileInput fileInput0 = new FileInput(tableBlock0, "", "");
      List<RenderableComponent> list0 = fileInput0._getRenderableChildren();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(fileInput0._isGeneratedId());
      assertEquals("hJ:g", table0.getComponentId());
      assertNotNull(list0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5834900377462335
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      // Undeclared exception!
      try { 
        any0.find("Failed to initialize SimpleDateFormat with pattern '");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id Failed to initialize SimpleDateFormat with pattern ' on the page.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        tableBlock0.attributes(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.1496070846975623
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      Table table1 = table0.renderHint(stringBuffer0);
      assertTrue(image0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Q4U_", table1.getComponentId());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7768429883314822
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Table table1 = table0.renderHint("2]VG_86%}/,`&D");
      Table table2 = table1.renderHint("IHBKa");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("hJ:g", table2.getComponentId());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.cite();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.4121343884149504
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1102), 47, 47, 53, 47, 107);
      Component component0 = table0.em((Object) mockGregorianCalendar0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertEquals("hJ:g", table0.getComponentId());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.4121343884149504
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.h1();
      assertFalse(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.387421064274461
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableRow tableRow0 = table0.tr();
      ActionExpression actionExpression0 = new ActionExpression((String) null);
      Form form0 = new Form(tableRow0, "java.lang.String@0000000013", actionExpression0);
      Component component0 = table0.cite((Object) form0);
      assertTrue(component0._isGeneratedId());
      assertFalse(form0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.398027969062415
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = errorPage0.h5((Object) table0);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("hJ:g", table0.getComponentId());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2655196455710818
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(17, 17, 17);
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      InitialFieldValue initialFieldValue0 = new InitialFieldValue(date0, "^F*c@W5/\"^");
      Component component0 = errorPage0.ins((Object) initialFieldValue0);
      Component component1 = component0.dfn();
      assertTrue(component1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.noscript();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("nZu*Q31!YB");
      // Undeclared exception!
      try { 
        xmlEntityRef0.q();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.1914339105429956
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      TextArea textArea0 = new TextArea(errorPage0, "hJ:g", "");
      // Undeclared exception!
      try { 
        textArea0.pre((Object) dateInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try { 
        xmlEntityRef0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.166084939249829
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      Text text0 = new Text(errorPage0, errorPage0);
      Checkbox checkbox0 = new Checkbox(text0, "+2\"9!U", "+2\"9!U");
      // Undeclared exception!
      try { 
        checkbox0.addFirst(link0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.161873195506941
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      ActionExpression actionExpression0 = new ActionExpression("K%[g\"b,h5b&");
      // Undeclared exception!
      try { 
        table0.form((String) null, actionExpression0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A Form must always have a given componentId.
         //
         verifyException("wheel.components.Form", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.5761302408175735
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      // Undeclared exception!
      try { 
        tableBlock0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.4109207168582683
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      TableBlock tableBlock0 = new TableBlock(table0);
      Component component0 = tableBlock0.label((Object) "Q4U_");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.7094727765842133
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      Hidden hidden0 = new Hidden(textInput0, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      // Undeclared exception!
      try { 
        hidden0.reset((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1612871195761536
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      // Undeclared exception!
      try { 
        image0.ol();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.462042093641796
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      DateInput dateInput0 = new DateInput(table0, "\"q0", "hJ:g", "");
      Component component0 = table0.big((Object) dateInput0);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(dateInput0._isGeneratedId());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("hJ:g");
      // Undeclared exception!
      try { 
        xmlEntityRef0.wBlock("hJ:g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.2422139058407913
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ">ZZx7U;sb^}Ln%*&#");
      TableRow tableRow0 = table0.tr();
      tableRow0.selectModel();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(tableRow0._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      // Undeclared exception!
      try { 
        link0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.8407487285692812
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      TextArea textArea0 = new TextArea(errorPage0, "hJ:g", "");
      textArea0._setParent(dateInput0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(textArea0._isGeneratedId());
      assertEquals("INF", dateInput0.getComponentId());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.7917594692280554
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "~i)2@~-gSN;%&mw;", "~i)2@~-gSN;%&mw;");
      // Undeclared exception!
      try { 
        radio0.style();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.textarea((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.108294218918939
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/colponents/jquery.js?expires=88", "", "asset/wheel/colponents/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        dateInput0.textInput((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = null;
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ElExpression elExpression0 = new ElExpression("rG|qFvYagJmn[=P@2");
      // Undeclared exception!
      try { 
        errorPage0.radioGroup(string0, dynamicSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.177886941777099
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        dateInput0.sub();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.7094727765842133
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      Hidden hidden0 = new Hidden(textInput0, "=?Xk-^$d_bx&", "=?Xk-^$d_bx&");
      // Undeclared exception!
      try { 
        hidden0.submit("33");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "null", "g451wZ");
      // Undeclared exception!
      try { 
        checkbox0.link();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.4109207168582683
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      ActionExpression actionExpression0 = new ActionExpression("j\"USl");
      Form form0 = new Form(image0, "j\"USl", actionExpression0);
      Component component0 = form0.cite();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(form0._isGeneratedId());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.9915093613566137
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      // Undeclared exception!
      try { 
        table0.message("hJ:g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.strike();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.04319187054512
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      ElExpression elExpression0 = new ElExpression("java.lang.String@0000000016");
      // Undeclared exception!
      try { 
        table0.h1((Object) elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression java.lang.String@0000000016 in class wheel.ErrorPage
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.48819539284578
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      // Undeclared exception!
      try { 
        any0.noframes();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.2343358078055116
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "null", "g451wZ");
      // Undeclared exception!
      try { 
        checkbox0.i();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.410920716858268
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      TableBlock tableBlock0 = new TableBlock(table0);
      Component component0 = tableBlock0.dd((Object) image0);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.530663547272704
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.title("var");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.412134388414951
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.script();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("hJ:g", table0.getComponentId());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.2864814473430326
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      TableBlock tableBlock0 = new TableBlock(table0);
      // Undeclared exception!
      try { 
        tableBlock0.hidden((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.6078379461469563
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, errorPage0);
      errorPage0.small((Object) link0);
      Text text0 = new Text(errorPage0, errorPage0);
      Checkbox checkbox0 = new Checkbox(text0, "+2\"9!U", "+2\"9!U");
      assertFalse(checkbox0._isGeneratedId());
      
      checkbox0.id("+2\"9!U");
      assertTrue(text0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.440253045460538
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      Component component0 = table0.li((Object) image0);
      Component component1 = component0.h2();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component1._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=2.379042103983462
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "asset/wheel/components/jquery.js?expires=88", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, " prefix", " prefix");
      Block block0 = new Block(hidden0);
      block0.sub((Object) "");
      assertTrue(checkbox0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(hidden0._isGeneratedId());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h5();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.46649128651976
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.bdo("hJ:g");
      assertFalse(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.177886941777099
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "", "INF", "");
      Label label0 = new Label(checkbox0, "");
      // Undeclared exception!
      try { 
        dateInput0.h3((Object) label0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.4863123719331677
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = errorPage0.button();
      NumberInput numberInput0 = new NumberInput(table0, "java.lang.String@0000000016", "r");
      // Undeclared exception!
      try { 
        numberInput0.code((Object) component0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.401919402542824
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      ActionExpression actionExpression0 = new ActionExpression("j\"USl");
      Form form0 = new Form(image0, "j\"USl", actionExpression0);
      Component component0 = form0.dt();
      assertFalse(form0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Block_1", component0.getComponentId());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.047559296044747
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      TextArea textArea0 = new TextArea(checkbox0, (String) null, "wheel.components.ValidationError");
      // Undeclared exception!
      try { 
        textArea0.numberInput("input", (CharSequence) "(Ljava/lang/String;)Lorg/mvel/integration/VariableResolver;");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=2.4885369220536298
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Image image0 = new Image(errorPage0, "", "asset/wheel/components/jquery.js?expires=88");
      Table table0 = new Table(image0, "Ay9VgB");
      Component component0 = table0.sup();
      Radio radio0 = new Radio(component0, "java.lang.String@0000000005", "./)O/Lx6pM/Y");
      // Undeclared exception!
      try { 
        radio0.text(table0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.4109207168582683
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      Component component0 = table0.h4((Object) "Q4U_");
      assertTrue(component0._isGeneratedId());
      assertEquals("Q4U_", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.abbr();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.4121343884149504
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.h4();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertEquals("hJ:g", table0.getComponentId());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.2919626577952807
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      Link link0 = new Link(hidden0, errorPage0);
      link0.span((Object) checkbox0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(checkbox0._isGeneratedId());
      assertFalse(hidden0._isGeneratedId());
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.420885158543925
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.b();
      // Undeclared exception!
      try { 
        component0.dateInput("uu-r%33P+S~!", "internal error: threshold must be less than capacity: ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.186936022399185
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/colponents/jquery.js?expires=88", "", "asset/wheel/colponents/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      // Undeclared exception!
      try { 
        hidden0.b((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 158
  /*Coverage entropy=2.4274329171215987
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Component component0 = table0.p((Object) tableBlock0);
      Component component1 = component0.entity("hJ:g");
      assertEquals("hJ:g", component1.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 159
  /*Coverage entropy=2.1992248143896265
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Checkbox checkbox0 = new Checkbox(text0, "+2\"9!U", "+2\"9!U");
      // Undeclared exception!
      try { 
        checkbox0.passwordInput("+2\"9!U");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 160
  /*Coverage entropy=2.5028722478417
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "java.lang.String@0000000013");
      TableBlock tableBlock0 = table0.thead();
      Any any0 = tableBlock0.col();
      errorPage0.var((Object) any0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Any_1", any0.getComponentId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 161
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.ins();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 162
  /*Coverage entropy=2.387421064274461
  */
  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableRow tableRow0 = table0.tr();
      Image image0 = new Image(tableRow0, "", "");
      // Undeclared exception!
      try { 
        image0.object();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 163
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.acronym();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 164
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object object0 = new Object();
      Component component0 = errorPage0.tt(object0);
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 165
  /*Coverage entropy=2.3685282065189734
  */
  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "java.lang.String@0000000013", "");
      errorPage0.abbr((Object) hidden0);
      assertTrue(hidden0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 166
  /*Coverage entropy=2.0303263285883424
  */
  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.div();
      assertEquals("Block_1", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 167
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 168
  /*Coverage entropy=2.242973226438147
  */
  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      // Undeclared exception!
      try { 
        dateInput0.nbsp();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 169
  /*Coverage entropy=1.8407487285692812
  */
  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "asset/wheel/components/jquery.js?expires=88", "asset/wheel/components/jquery.js?expires=88");
      String string0 = dateInput0.getComponentName();
      assertEquals("DateInput", string0);
      assertFalse(dateInput0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(checkbox0._isGeneratedId());
  }

  /**
  //Test case number: 170
  /*Coverage entropy=2.1112165458116356
  */
  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Submit submit0 = new Submit(errorPage0, "hJ:g", "hJ:g");
      // Undeclared exception!
      try { 
        submit0.fieldset();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 171
  /*Coverage entropy=2.045576462153323
  */
  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      // Undeclared exception!
      try { 
        text0.strike((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 172
  /*Coverage entropy=1.9974465815025308
  */
  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.a();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 173
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.del();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 174
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("asset/wheel/colponents/jquery.js?expires=88");
      // Undeclared exception!
      try { 
        xmlEntityRef0.s((Object) errorPage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 175
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.address();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 176
  /*Coverage entropy=2.6138132842079385
  */
  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      ActionExpression actionExpression0 = new ActionExpression("unterminated '['");
      Component component0 = table0.li((Object) "java.lang.StringBuffer@0000000004");
      Component component1 = component0.actionBinding(actionExpression0);
      assertEquals("hJ:g", table0.getComponentId());
      assertTrue(component1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 177
  /*Coverage entropy=2.2305112122117543
  */
  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.dl();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Block_1", component0.getComponentId());
  }

  /**
  //Test case number: 178
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Component component0 = errorPage0.samp((Object) stringBuffer0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 179
  /*Coverage entropy=2.479958899508112
  */
  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      TableBlock tableBlock0 = table0.colgroup();
      tableBlock0.img("2MD/cA0z]Ewc}{4d:", "");
      tableBlock0._clear();
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("$H92c", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 180
  /*Coverage entropy=1.8705688894156371
  */
  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, (String) null, "INF");
      // Undeclared exception!
      try { 
        hidden0.numberInput((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 181
  /*Coverage entropy=2.329283576517379
  */
  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      table0.i((Object) table0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Table_1", table0.getComponentId());
  }

  /**
  //Test case number: 182
  /*Coverage entropy=2.108169769053504
  */
  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      DateInput dateInput0 = new DateInput(table0, "java.lang.StringBuffer@0000000004", "wc fjg>`.2tK", (CharSequence) null);
      // Undeclared exception!
      try { 
        dateInput0.wrapSelf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 183
  /*Coverage entropy=1.9096604215404314
  */
  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "java.lang.String@0000000013");
      // Undeclared exception!
      try { 
        table0.checkbox("`jQ7v{7g#{XisEI");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 184
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 185
  /*Coverage entropy=2.412134388414951
  */
  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("+{H`-KoO_");
      Form form0 = new Form(errorPage0, "+{H`-KoO_", actionExpression0);
      Component component0 = form0.blockquote();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(form0._isGeneratedId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 186
  /*Coverage entropy=2.316913081459933
  */
  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      Block block0 = new Block(checkbox0, "#|H;Mf");
      Block block1 = block0.placeholder("#|H;Mf");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(checkbox0._isGeneratedId());
      assertEquals("#|H;Mf", block1.getComponentId());
  }

  /**
  //Test case number: 187
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h3();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 188
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h6();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 189
  /*Coverage entropy=2.4121343884149504
  */
  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.s();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 190
  /*Coverage entropy=2.2422139058407913
  */
  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ">ZZx7U;sb^}Ln%*&#");
      TableRow tableRow0 = table0.tr();
      Component component0 = tableRow0.requestFocus();
      assertFalse(table0._isGeneratedId());
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 191
  /*Coverage entropy=1.4941751382893083
  */
  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.dateInput("hJ:g", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 192
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.small();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 193
  /*Coverage entropy=2.4109207168582683
  */
  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      Boolean boolean0 = Boolean.FALSE;
      Component component0 = table0.kbd((Object) boolean0);
      assertEquals("$H92c", table0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 194
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.samp();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 195
  /*Coverage entropy=2.3490818396444615
  */
  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.li();
      component0.label();
      assertEquals("Block_1", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 196
  /*Coverage entropy=2.4019194025428234
  */
  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "$H92c");
      Block block0 = new Block(table0, "ZA`4bQPK5JWbe(5qVr");
      Component component0 = block0.map("");
      assertEquals("Block_1", component0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 197
  /*Coverage entropy=2.4109207168582683
  */
  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Image image0 = new Image(table0, "", "");
      Component component0 = tableBlock0.dfn((Object) image0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertTrue(component0._isGeneratedId());
  }

  /**
  //Test case number: 198
  /*Coverage entropy=1.985053187904615
  */
  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.actionBinding((String) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("hJ:g", component0.getComponentId());
  }

  /**
  //Test case number: 199
  /*Coverage entropy=2.556939592905656
  */
  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      Class<Object> class0 = Object.class;
      Hidden hidden0 = new Hidden(any0, "", "|cp4w6AH$NM0c|.F4]");
      // Undeclared exception!
      try { 
        hidden0.h2((Object) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 200
  /*Coverage entropy=1.9135484277609518
  */
  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      Component component0 = table0.clasS("");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(component0._isGeneratedId());
  }

  /**
  //Test case number: 201
  /*Coverage entropy=2.203399008114057
  */
  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.legend();
      assertTrue(component0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 202
  /*Coverage entropy=2.410920716858268
  */
  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Table table0 = new Table(image0, "Q4U_");
      Component component0 = table0.kbd();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(component0._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  /**
  //Test case number: 203
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = errorPage0.toString();
      assertEquals("<div id=\"wheel_ErrorPage\"/>", string0);
  }

  /**
  //Test case number: 204
  /*Coverage entropy=2.2305112122117543
  */
  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.dd();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Block_1", component0.getComponentId());
  }
}
