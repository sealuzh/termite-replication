/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:30:09 GMT 2019
 */

package wheel.components;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1_serializer.MXSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.XmlSerializerWrapper;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.Radio;
import wheel.components.Select;
import wheel.components.StandaloneComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.978613875787662
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "4zFDdkb%u.,");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      String string0 = null;
      // Undeclared exception!
      try { 
        tableBlock0.remove((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.975450270362052
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "h)86KUF]!XM'+P";
      Component component0 = errorPage0.bdo("h)86KUF]!XM'+P");
      component0.afterAdd();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        errorPage0.checkbox("h)86KUF]!XM'+P");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.05386891907846
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Block block0 = errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "b");
      table0.tr();
      table0.colgroup();
      table0.getPage();
      ElExpression elExpression0 = new ElExpression("pKzA9+&iO\"G");
      Checkbox checkbox0 = new Checkbox(table0, "b", "b");
      Class<Any> class0 = Any.class;
      XmlPullWrapperFactory.newInstance("k]^&l,a;%5\"i2J+l7x", class0);
      ElExpression elExpression1 = new ElExpression("pKzA9+&iO\"G");
      elExpression1.codePoints();
      ActionExpression actionExpression0 = new ActionExpression("DFjP<(~BCF$'!:kv");
      ActionExpression actionExpression1 = actionExpression0.javascript("pKzA9+&iO\"G");
      Form form0 = new Form(block0, "h6", actionExpression1);
      Form form1 = form0.renderHint("pKzA9+&iO\"G");
      assertEquals("h6", form0.getComponentId());
      
      Form form2 = form1.id("h6");
      actionExpression1.getStrippedDomEvent();
      form2.id("Qu3E9>?5>=F9");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.174070509555286
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "b");
      TableRow tableRow0 = table0.tr();
      TableBlock tableBlock0 = table0.colgroup();
      TableBlock tableBlock1 = tableBlock0.id("b");
      tableBlock1.i((Object) stringBuffer0);
      TableBlock tableBlock2 = new TableBlock(tableBlock1);
      tableBlock1.col();
      tableBlock0.addRenderAfter(tableRow0);
      Class<Image> class0 = Image.class;
      XmlPullWrapperFactory.newInstance("", class0);
      ElExpression elExpression0 = new ElExpression("");
      TableRow tableRow1 = new TableRow(errorPage0);
      tableRow1.td();
      String string0 = null;
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.078134137747428
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      image0.getPage();
      DateInput dateInput0 = new DateInput(errorPage0, "INF", "$H92c", stringBuffer0);
      Image image1 = new Image(image0, "$H92c", stringBuffer0);
      ElExpression elExpression0 = new ElExpression("$H92c");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-436), 48, 82, 27, 1085);
      Table table0 = new Table(dateInput0, "$H92c");
      TableBlock tableBlock0 = table0.tbody();
      tableBlock0.getEngine();
      Any any0 = tableBlock0.col();
      ActionExpression actionExpression0 = new ActionExpression("INF");
      String string0 = "meta";
      ActionExpression actionExpression1 = actionExpression0.javascript("meta");
      ActionExpression actionExpression2 = actionExpression1.submissible(true);
      // Undeclared exception!
      try { 
        any0.abbr((Object) actionExpression2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7535162343277757
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "h)86KUF]!XM'+P";
      Class<Object> class0 = Object.class;
      String string1 = "strike";
      Hidden hidden0 = new Hidden(errorPage0, "h)86KUF]!XM'+P", "strike");
      TableRow tableRow0 = new TableRow(errorPage0);
      Block block0 = new Block(errorPage0);
      Link link0 = new Link(hidden0, class0);
      Component component0 = null;
      // Undeclared exception!
      try { 
        hidden0.ul();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2219223862878623
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = "WS1g";
      Block block0 = errorPage0.placeholder("WS1g");
      String string1 = "b";
      String string2 = "java.lang.String@0000000006";
      Table table0 = new Table(block0, "java.lang.String@0000000006");
      table0.tr();
      TableBlock tableBlock0 = table0.colgroup();
      TableBlock tableBlock1 = tableBlock0.id("pKzA9+&iO\"G");
      TableBlock tableBlock2 = new TableBlock(tableBlock0);
      tableBlock1.col();
      // Undeclared exception!
      try { 
        errorPage0.reset("b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.542594314061076
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      String string0 = "\"i:FFMsp#c,^|hkhR4";
      Image image0 = new Image(errorPage0, stringBuffer1, stringBuffer0);
      Component component0 = errorPage0.addRenderAfter(image0);
      String string1 = "$H92c";
      String string2 = "hr";
      Checkbox checkbox0 = new Checkbox(component0, "\"i:FFMsp#c,^|hkhR4", "hr");
      // Undeclared exception!
      try { 
        checkbox0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "h)86KUF]!XM'+P";
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        errorPage0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5030114181137564
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      String string0 = "\"i:FFMsp#c,^|hkhR4";
      Image image0 = new Image(errorPage0, stringBuffer1, stringBuffer0);
      Component component0 = errorPage0.addRenderAfter(image0);
      String string1 = "$H92c";
      String string2 = "hr";
      Checkbox checkbox0 = new Checkbox(component0, "\"i:FFMsp#c,^|hkhR4", "hr");
      checkbox0.hashCode();
      Label label0 = new Label(image0, (Object) null);
      Component component1 = null;
      Link link0 = null;
      try {
        link0 = new Link((Component) null, component0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.641962640552856
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer1, stringBuffer0);
      image0.getComponents();
      errorPage0.addRenderAfter(image0);
      String string0 = "$H92c";
      String string1 = "<?xml version=\"1.0\"";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("<?xml version=\"1.0\"");
      String string2 = "var";
      xmlEntityRef0.addInternalRenderHint("var");
      // Undeclared exception!
      try { 
        xmlEntityRef0.s();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.201793123629589
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9Z6Ddc");
      String string0 = null;
      ElExpression elExpression0 = new ElExpression("9Z6Ddc");
      ElExpression elExpression1 = elExpression0.errorMessage((String) null);
      String string1 = "W{&gMatZJ";
      ElExpression elExpression2 = elExpression1.errorMessage("W{&gMatZJ");
      Form form0 = new Form("caused by: ");
      form0.findAll(elExpression2);
      Form form1 = form0.addFormValidationError("java.lang.String@0000000006");
      // Undeclared exception!
      try { 
        form1.getComponents();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.158488363025696
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer1, stringBuffer0);
      image0.getComponents();
      Component component0 = errorPage0.addRenderAfter(image0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      Table table0 = new Table(component0, "$H92c");
      Component component1 = table0.rawText("$H92c");
      table0.clasS(stringBuffer0);
      TableBlock tableBlock0 = table0.tfoot();
      Any any0 = tableBlock0.col();
      Link link0 = new Link(standaloneComponent0, any0);
      errorPage0.strike((Object) link0);
      table0.renderHint(stringBuffer0);
      DateInput dateInput0 = new DateInput(component1, (String) null, "$H92c", stringBuffer0);
      Radio radio0 = new Radio(image0, "\"i:FFMsp#c,^|hkhR4", (String) null);
      // Undeclared exception!
      try { 
        dateInput0.q((Object) radio0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = "strike";
      String string1 = " Wrefix";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("8;{$B0x\",vh,");
      Submit submit0 = new Submit(xmlEntityRef0, "YNW.0Jg|9`1u", "}");
      // Undeclared exception!
      try { 
        xmlEntityRef0.rawText(submit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.13197603628875
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.cite();
      Component component1 = component0.big((Object) " prefix");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "8;{$B0x\",vh,";
      stringArray0[1] = "8;{$B0x\",vh,";
      stringArray0[2] = "/ayaZMFEnBN";
      stringArray0[3] = "Failed to initialize SimpleDateFormat with pattern '";
      stringArray0[4] = " prefix";
      stringArray0[5] = "8;{$B0x\",vh,";
      Component component2 = component1.area(stringArray0);
      Integer integer0 = new Integer(10);
      Checkbox checkbox0 = new Checkbox(errorPage0, "8;{$B0x\",vh,", "/ayaZMFEnBN");
      Hidden hidden0 = new Hidden(errorPage0, "br", "org.mvel.optimizers.impl.refl.ReflectiveAccessorOptimizer");
      Submit submit0 = new Submit(component2, "Failed to initialize SimpleDateFormat with pattern '", "Ccv'M!H(GKhgVp^");
      FormElement formElement0 = submit0.value((String) null);
      Block block0 = new Block(formElement0);
      // Undeclared exception!
      try { 
        block0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "strike";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("8;{$B0x\",vh,");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef(" prefix");
      MXSerializer mXSerializer0 = new MXSerializer();
      // Undeclared exception!
      try { 
        xmlEntityRef0.get("strike");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0713922463144465
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Block block0 = errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "");
      Component component0 = block0.br();
      assertEquals("Any_1", component0.getComponentId());
      
      Boolean boolean0 = Boolean.TRUE;
      StringBuffer stringBuffer1 = new StringBuffer();
      Image image0 = new Image(table0, stringBuffer1, stringBuffer0);
      Component component1 = table0.kbd();
      assertEquals("Block_1", component1.getComponentId());
      
      ErrorPage errorPage1 = new ErrorPage();
      errorPage1.create();
      table0.colgroup();
      assertEquals("Table_1", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0844959477396947
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "4zFDdkb%u.,";
      Table table0 = new Table(errorPage0, "4zFDdkb%u.,");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      Table table1 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table1.tr();
      Hidden hidden0 = new Hidden(table0, " prefix", " prefix");
      TableRow tableRow1 = new TableRow(tableRow0);
      Block block0 = new Block(hidden0);
      Link link0 = new Link(tableRow0, table0);
      Component component0 = null;
      Checkbox checkbox0 = new Checkbox((Component) null, "U1yLX$", "p");
      // Undeclared exception!
      try { 
        tableRow0.encode("T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0608091454186535
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.selectModel();
      Component component0 = errorPage0.h5();
      errorPage0.strike();
      component0.sub();
      Double double0 = new Double(0.0);
      Component component1 = component0.dfn((Object) double0);
      component1.date();
      // Undeclared exception!
      try { 
        component1.encode("{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.strike();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5444597642864526
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.div();
      String string0 = null;
      Form form0 = new Form((String) null);
      form0.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char char0 = '>';
      char char1 = 'K';
      // Undeclared exception!
      try { 
        form0.isValid((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.839684266227635
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.div();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      // Undeclared exception!
      try { 
        component0.multiSelect((String) null, dynamicSelectModel0, (CharSequence) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.574830137445034
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      String string1 = "INF";
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      String string2 = "_5";
      String string3 = "<GF{Y";
      Checkbox checkbox1 = new Checkbox(errorPage0, "<GF{Y", "_5");
      // Undeclared exception!
      try { 
        checkbox0.isInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      String string1 = null;
      Form form1 = form0.addFormValidationError((String) null);
      Form form2 = form1.addFormValidationError((String) null);
      form2.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char[] charArray0 = new char[6];
      charArray0[1] = 'd';
      String string2 = "";
      Form.Method form_Method0 = Form.Method.POST;
      Form form3 = form2.addFormValidationRule("", (String) null);
      // Undeclared exception!
      try { 
        form1.label((Object) form3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.985271416237593
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Component component0 = errorPage0.addRenderAfter(image0);
      Image image1 = new Image(component0, "$H92c", "$H92c");
      ElExpression elExpression0 = new ElExpression("h6");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1085, 13, 652, (-436), 13);
      Table table0 = new Table(component0, "h6");
      TableBlock tableBlock0 = table0.tbody();
      Any any0 = tableBlock0.col();
      // Undeclared exception!
      try { 
        any0.abbr((Object) table0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.711488505692464
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      DateInput dateInput0 = new DateInput(errorPage0, "INF", "$H92c", stringBuffer0);
      String string0 = " prefix";
      Hidden hidden0 = new Hidden(standaloneComponent0, (String) null, "2dfk:[");
      TableRow tableRow0 = new TableRow(dateInput0);
      image0.renderSelf = true;
      TextInput textInput0 = new TextInput(hidden0, "h6", "I)I%P}^");
      Block block0 = new Block(textInput0);
      Object object0 = new Object();
      Link link0 = new Link(textInput0, object0);
      Checkbox checkbox0 = new Checkbox(tableRow0, "java.lang.StringBuffer@0000000004", "12umbq:=Nqu");
      // Undeclared exception!
      try { 
        checkbox0.object();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.105141829110963
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "hJ:g";
      stringArray0[1] = "Tfoot component can be added only to a Table.";
      stringArray0[2] = "Failed to initialize SimpleDateFormat with pattern '";
      // Undeclared exception!
      try { 
        tableBlock0.area(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0437546861767
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "4zFDdkb%u.,");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      Table table1 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table1.tr();
      Hidden hidden0 = new Hidden(table0, " prefix", " prefix");
      TableRow tableRow1 = new TableRow(tableRow0);
      Block block0 = new Block(hidden0);
      Link link0 = new Link(tableRow0, table0);
      Checkbox checkbox0 = new Checkbox((Component) null, "U1yLX$", "p");
      checkbox0.value("$kEHB{@Z>lD->@*X");
      Long long0 = new Long(1L);
      Link link1 = new Link(errorPage0, any0);
      Text text0 = new Text(tableRow0, long0);
      text0.isCdata();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try { 
        xmlEntityRef0.form("4zFDdkb%u.,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "9Z6DCdc";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9Z6DCdc");
      // Undeclared exception!
      try { 
        xmlEntityRef0.tt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2362929832687897
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      Table table1 = table0.renderHint(stringBuffer0);
      Table table2 = (Table)table1.actionBinding("$H92c");
      TableBlock tableBlock0 = table2.tfoot();
      tableBlock0.renderHint(stringBuffer0);
      Any any0 = (Any)tableBlock0.br();
      table1.script();
      errorPage0.h5((Object) tableBlock0);
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      dateInput0.defaultTagName();
      // Undeclared exception!
      try { 
        any0.addFirst(image0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.711059977991209
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Class<Object> class0 = Object.class;
      Hidden hidden0 = new Hidden(errorPage0, "h)86KUF]!XM'+P", "kyf");
      TableRow tableRow0 = new TableRow(errorPage0);
      Block block0 = new Block(errorPage0);
      Link link0 = new Link(hidden0, class0);
      String string0 = "java.lang.String@0000000006";
      Checkbox checkbox0 = new Checkbox((Component) null, "h)86KUF]!XM'+P", "java.lang.String@0000000006");
      checkbox0.value("kyf");
      Long long0 = new Long(0L);
      Link link1 = new Link(hidden0, "java.lang.String@0000000006");
      TimeZone timeZone0 = TimeZone.getTimeZone("!zP");
      Locale locale0 = Locale.FRANCE;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);
      Text text0 = new Text(tableRow0, mockGregorianCalendar0);
      // Undeclared exception!
      try { 
        text0.em((Object) block0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.650931578744304
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "";
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      String string1 = " prefix";
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      TableRow tableRow0 = new TableRow(hidden0);
      Block block0 = new Block(hidden0);
      Link link0 = new Link(errorPage0, hidden0);
      FormElement formElement0 = checkbox0.value("12umbq:=Nqu");
      Long long0 = new Long((-1L));
      Link link1 = new Link(formElement0, long0);
      Text text0 = new Text(tableRow0, hidden0);
      // Undeclared exception!
      try { 
        text0.dt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.712302035985763
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      DateInput dateInput0 = new DateInput(errorPage0, "INF", "$H92c", stringBuffer0);
      Hidden hidden0 = new Hidden(standaloneComponent0, (String) null, "2dfk:[");
      TableRow tableRow0 = new TableRow(dateInput0);
      image0.renderSelf = true;
      TextInput textInput0 = new TextInput(hidden0, "h6", "I)I%P}^");
      FormElement formElement0 = textInput0.value("java.lang.StringBuffer@0000000004");
      Block block0 = new Block(formElement0);
      Object object0 = new Object();
      Link link0 = new Link(formElement0, object0);
      Checkbox checkbox0 = new Checkbox(tableRow0, "java.lang.StringBuffer@0000000004", "12umbq:=Nqu");
      FormElement formElement1 = checkbox0.value(" prefix");
      Long long0 = new Long((-1L));
      Link link1 = new Link(checkbox0, "java.lang.StringBuffer@0000000004");
      Text text0 = new Text(standaloneComponent0, dateInput0);
      Submit submit0 = new Submit(formElement1, " prefix", "8Es^KKaZ+Tmo");
      // Undeclared exception!
      try { 
        text0.dt((Object) submit0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "9Z6DCd";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9Z6DCd");
      // Undeclared exception!
      try { 
        xmlEntityRef0.u();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.917252621679459
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.sup();
      String string0 = "Component with id ";
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        errorPage0.checkbox("Component with id ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.9829870850652376
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      String string0 = "";
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory.newInstance("", class0);
      Image image0 = new Image(table0, "", "hJ:g");
      tableBlock0.col();
      tableBlock0.dfn((Object) class0);
      // Undeclared exception!
      try { 
        image0.add(any0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.1983080317920685
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = "pKzA9+&iO\"G";
      Block block0 = errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "");
      TableRow tableRow0 = table0.tr();
      block0.param(stringBuffer0, "pKzA9+&iO\"G");
      Block block1 = tableRow0.id("");
      Block block2 = tableRow0.id("");
      block0.br();
      TableBlock tableBlock0 = new TableBlock(block1);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      Text text0 = new Text(tableBlock0, block2);
      // Undeclared exception!
      try { 
        text0.blockquote();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7423862541833204
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9Z6Ddc");
      ElExpression elExpression0 = new ElExpression("9Z6Ddc");
      ElExpression elExpression1 = elExpression0.errorMessage((String) null);
      ElExpression elExpression2 = elExpression1.errorMessage("W{&gMatZJ");
      Form form0 = new Form("caused by: ");
      form0.findAll(elExpression2);
      MXSerializer mXSerializer0 = new MXSerializer();
      int int0 = (-916);
      mXSerializer0.text((char[]) null, 2, (-916));
      form0._renderActions(mXSerializer0);
      String string0 = "o#d+1fZ";
      DateInput dateInput0 = new DateInput(xmlEntityRef0, (String) null, "o#d+1fZ", (CharSequence) null);
      // Undeclared exception!
      try { 
        form0.htmlText(dateInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.9151498703648615
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      String string0 = "$H92c";
      image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      table0.clasS("$H92c");
      table0.renderHint(stringBuffer0);
      String string1 = null;
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      // Undeclared exception!
      try { 
        image0.dateInput("$H92c", "y(hZT?:1NW-'noYR");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.235844892583323
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Block block0 = errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "");
      TableRow tableRow0 = table0.tr();
      Block block1 = tableRow0.id("");
      tableRow0.id("");
      block0.br();
      TableBlock tableBlock0 = new TableBlock(block1);
      Boolean boolean0 = Boolean.TRUE;
      block1.button();
      tableBlock0.dfn((Object) boolean0);
      String string0 = "title";
      StringBuffer stringBuffer1 = new StringBuffer();
      DateInput dateInput0 = new DateInput(tableBlock0, "", "", "pKzA9+&iO\"G");
      Image image0 = new Image(table0, stringBuffer1, stringBuffer0);
      String string1 = "ZO\\0\\xU~}1S&^J?.8`";
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        image0.rawText(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0643642064007244
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "hJ:g";
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = table0.tfoot();
      Class<Object> class0 = Object.class;
      tableBlock0.var((Object) "hJ:g");
      // Undeclared exception!
      try { 
        errorPage0.checkbox("hJ:g");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.041241024148964
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "uJ2z";
      Table table0 = new Table(errorPage0, "uJ2z");
      table0.tfoot();
      Class<Object> class0 = Object.class;
      table0.del();
      // Undeclared exception!
      try { 
        errorPage0.checkbox("uJ2z");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2488215410938253
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Component component0 = null;
      String string0 = "Y4i**mDE<>M6";
      Hidden hidden0 = new Hidden((Component) null, "java.lang.StringBuffer@0000000004", "Y4i**mDE<>M6");
      FormElement formElement0 = hidden0.value("java.lang.StringBuffer@0000000004");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      Select select0 = new Select(formElement0, "java.lang.StringBuffer@0000000004", "java.lang.StringBuffer@0000000004", "java.lang.StringBuffer@0000000004", stringSelectModel0, false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.StringBuffer@0000000004";
      stringArray0[1] = "java.lang.StringBuffer@0000000004";
      stringArray0[2] = "Y4i**mDE<>M6";
      select0._setSubmitValue(stringArray0);
      String string1 = "org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate";
      ElExpression elExpression0 = new ElExpression("org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate");
      ElExpression elExpression1 = elExpression0.errorMessage("org.mvel.conversion.ShortCH$9");
      // Undeclared exception!
      try { 
        hidden0.radioGroup("java.lang.StringBuffer@0000000004", stringSelectModel0, elExpression1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.687086084456039
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Class<Object> class0 = Object.class;
      Hidden hidden0 = new Hidden(errorPage0, "h)86KUF]!XM'+P", "strike");
      TableRow tableRow0 = new TableRow(errorPage0);
      Link link0 = new Link(hidden0, class0);
      Checkbox checkbox0 = new Checkbox((Component) null, "h)86KUF]!XM'+P", "java.lang.String@0000000006");
      Checkbox checkbox1 = new Checkbox(tableRow0, "strike", "h)86KUF]!XM'+P");
      Long long0 = new Long(2503L);
      Link link1 = new Link(hidden0, "java.lang.String@0000000006");
      TimeZone.getTimeZone("!zP");
      Locale locale0 = Locale.FRANCE;
      Radio radio0 = new Radio(errorPage0, "strike", "");
      DateInput dateInput0 = new DateInput(errorPage0, "strike", "java.lang.String@0000000006", "!zP");
      Short short0 = new Short((short) (-1));
      // Undeclared exception!
      try { 
        dateInput0.q((Object) short0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.481353454031408
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      String string1 = null;
      Form form1 = form0.addFormValidationError((String) null);
      Form form2 = form1.addFormValidationError((String) null);
      form2.getRewindFormElements();
      // Undeclared exception!
      try { 
        form2.checkbox("C* @ZXOK`jF]A\"5SX5:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.531205013338496
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      // Undeclared exception!
      try { 
        image0.blockquote();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      String string1 = null;
      Form form1 = form0.addFormValidationError((String) null);
      Form form2 = form1.addFormValidationError((String) null);
      form2.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char[] charArray0 = new char[6];
      mXSerializer0.getProperty("");
      charArray0[1] = 'd';
      String string2 = "";
      Form.Method form_Method0 = Form.Method.POST;
      form0.setMethod(form_Method0);
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        form2.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.278583906804195
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = "pKzA9+&iO\"G";
      Block block0 = errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "");
      TableRow tableRow0 = table0.tr();
      Block block1 = tableRow0.id("");
      tableRow0.id("");
      block1.h6();
      block0.br();
      TableBlock tableBlock0 = new TableBlock(block1);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        tableBlock0.textarea("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      String string1 = "kbd";
      Checkbox checkbox0 = new Checkbox(form0, (String) null, "kbd");
      // Undeclared exception!
      try { 
        checkbox0.param("kbd", "kbd");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      String string1 = null;
      Form form1 = form0.addFormValidationError((String) null);
      Form form2 = form1.addFormValidationError((String) null);
      form2.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = 'd';
      String string2 = "";
      Form.Method form_Method0 = Form.Method.POST;
      form0.setMethod(form_Method0);
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        form0.span((Object) mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0339830360795412
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      table0.tr();
      String string0 = "";
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory.newInstance("", class0);
      Image image0 = new Image(table0, "", "hJ:g");
      StandaloneComponent standaloneComponent0 = image0.getPage();
      String string1 = "position ";
      Integer integer0 = new Integer((-67));
      table0.eval(integer0);
      image0._setComponentId("hJ:g");
      table0.renderHint("hJ:g");
      // Undeclared exception!
      try { 
        image0.h6((Object) standaloneComponent0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Form form0 = new Form("");
      Form form1 = form0.addFormValidationError((String) null);
      Form form2 = form1.addFormValidationError("\"1JK/8");
      form2.getRewindFormElements();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      xmlEntityRef0.action("\"1JK/8");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try { 
        xmlEntityRef1.q();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2217657204079875
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "pKzA9+&iO\"G";
      Block block0 = errorPage0.placeholder("pKzA9+&iO\"G");
      TableRow tableRow0 = new TableRow(errorPage0);
      Submit submit0 = new Submit(tableRow0, "|S", "pKzA9+&iO\"G");
      block0.h6((Object) submit0);
      Table table0 = new Table(errorPage0, "");
      TableRow tableRow1 = table0.tr();
      Block block1 = tableRow1.id("");
      tableRow1.id("");
      TableBlock tableBlock0 = new TableBlock(block1);
      // Undeclared exception!
      try { 
        tableBlock0.textarea("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9Z6Ddc");
      ElExpression elExpression0 = new ElExpression("9Z6Ddc");
      ElExpression elExpression1 = elExpression0.errorMessage((String) null);
      ElExpression elExpression2 = elExpression1.errorMessage("W{&gMatZJ");
      Form form0 = new Form("caused by: ");
      form0.findAll(elExpression2);
      Form form1 = form0.addFormValidationError("java.lang.String@0000000006");
      ActionExpression actionExpression0 = new ActionExpression("");
      ActionExpression actionExpression1 = actionExpression0.submissible(true);
      ActionExpression actionExpression2 = actionExpression1.event((String) null);
      ActionExpression actionExpression3 = actionExpression2.setOwner(form1);
      ActionExpression actionExpression4 = actionExpression3.parameter(elExpression1);
      // Undeclared exception!
      try { 
        form0.h6((Object) actionExpression4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.1905962571651867
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = table0.tfoot();
      TableBlock tableBlock1 = tableBlock0.renderHint("k#$t#&~CpgWc0'^H|");
      TableRow tableRow0 = tableBlock1.tr();
      tableRow0.id("k#$t#&~CpgWc0'^H|");
      Block block0 = tableBlock0.id("hJ:g");
      tableRow0.br();
      TableBlock tableBlock2 = new TableBlock(tableRow0);
      Boolean boolean0 = Boolean.TRUE;
      Byte byte0 = new Byte((byte)0);
      tableBlock2.dfn((Object) byte0);
      DateInput dateInput0 = new DateInput(block0, "k#$t#&~CpgWc0'^H|", "", "hJ:g");
      Image image0 = new Image(tableBlock1, "", "");
      String string0 = "ZO\\0\\xU~}1S&^J?.8`";
      dateInput0.defaultTagName();
      tableRow0._wrapComponentId("");
      // Undeclared exception!
      try { 
        dateInput0.meta();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.366223079511071
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Block block0 = errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "");
      TableRow tableRow0 = table0.tr();
      TableRow tableRow1 = table0.tr();
      tableRow0.id("");
      block0.br();
      TableBlock tableBlock0 = new TableBlock(tableRow1);
      Boolean boolean0 = Boolean.TRUE;
      tableBlock0.dfn((Object) boolean0);
      String string0 = "title";
      StringBuffer stringBuffer1 = new StringBuffer();
      DateInput dateInput0 = new DateInput(tableBlock0, "", "", "pKzA9+&iO\"G");
      Image image0 = new Image(table0, stringBuffer1, stringBuffer0);
      dateInput0.defaultTagName();
      tableRow0._wrapComponentId("(Ljava/lang/Object;)Z");
      // Undeclared exception!
      try { 
        dateInput0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot add a form element. No surrounding form found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.398805401317134
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      String string1 = "kbd";
      Checkbox checkbox0 = new Checkbox(form0, (String) null, "kbd");
      // Undeclared exception!
      try { 
        checkbox0.a();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2182015803480533
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      Table table1 = (Table)table0.clasS("$H92c");
      table0.renderHint(stringBuffer0);
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      Form form0 = new Form((String) null);
      form0.addFormValidationRule((String) null, "");
      TableBlock tableBlock0 = table1.thead();
      TableBlock tableBlock1 = tableBlock0.id("");
      tableBlock1.dfn((Object) image0);
      StringBuffer stringBuffer1 = new StringBuffer();
      DateInput dateInput1 = new DateInput(standaloneComponent0, "button", "", "$H92c");
      Any any0 = tableBlock0.col();
      any0._classReferenceFromHints();
      Image image1 = null;
      try {
        image1 = new Image(form0, "", "java.lang.String@0000000022");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8452479048092028
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "e5\" 0VT");
      ActionExpression actionExpression0 = new ActionExpression("e5\" 0VT");
      Table table1 = table0.renderHint(actionExpression0);
      TableBlock tableBlock0 = table1.thead();
      table1.tbody();
      Hidden hidden0 = new Hidden(tableBlock0, "div", "div");
      hidden0.value("q");
      hidden0.defaultDomEvent();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("div", hidden0.getComponentId());
      assertTrue(tableBlock0._isGeneratedId());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.0441063068031413
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "8;{$B0x\",vh,";
      Component component0 = errorPage0.cite();
      Component component1 = component0.big((Object) " (prefi?");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " (prefi?";
      stringArray0[1] = "8;{$B0x\",vh,";
      stringArray0[2] = "/ayaZMFEnBN";
      stringArray0[3] = "Failed to initialize SimpleDateFormat with pattern '";
      stringArray0[4] = " (prefi?";
      stringArray0[5] = "8;{$B0x\",vh,";
      component1.area(stringArray0);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("8;{$B0x\",vh,");
      errorPage0.h5((Object) " (prefi?");
      // Undeclared exception!
      try { 
        xmlEntityRef0.p((Object) " (prefi?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.0172363307811425
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJg");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.addRenderAfter(errorPage0);
      tableBlock0.col();
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory.newInstance("", class0);
      Image image0 = new Image(table0, "", "hJg");
      // Undeclared exception!
      try { 
        image0.big((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "w4{#8nN2NDtWvc?6", ",r3)$[l/ -tk*/Xn");
      FormElement formElement0 = radio0.value("");
      // Undeclared exception!
      try { 
        formElement0.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.1232472648493323
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      table0.h4();
      Any any0 = tableBlock0.col();
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory.newInstance("", class0);
      Image image0 = new Image(table0, "", "hJ:g");
      image0.getPage();
      Table table1 = new Table(errorPage0, "position ");
      Integer integer0 = new Integer((-67));
      table1.eval(integer0);
      image0._setComponentId("hJ:g");
      table0.renderHint("hJ:g");
      DateInput dateInput0 = new DateInput(tableBlock0, "(lh\"jItPq_*", "Xb", "");
      String string0 = "no";
      FileInput fileInput0 = new FileInput(image0, (String) null, "no");
      Any any1 = new Any(any0, "hJ:g");
      // Undeclared exception!
      try { 
        any1.map("java.lang.StringBuffer@0000000004");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.2411683033911434
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory.newInstance("", class0);
      Image image0 = new Image(table0, "", "hJ:g");
      image0.getPage();
      Table table1 = table0.id("hJ:g");
      Integer integer0 = new Integer((-67));
      table1.eval(integer0);
      image0._setComponentId("hJ:g");
      Table table2 = table0.renderHint("hJ:g");
      String string0 = null;
      String string1 = "(lh\"jItPq_*";
      DateInput dateInput0 = new DateInput(tableBlock0, "(lh\"jItPq_*", "Xb", "");
      FileInput fileInput0 = new FileInput(image0, (String) null, "no");
      table2.h1();
      // Undeclared exception!
      try { 
        fileInput0.kbd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Form form0 = new Form("");
      Form form1 = form0.addFormValidationRule((String) null, "");
      Form form2 = form1.addFormValidationError("\"1JK/8");
      form2.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = 'd';
      ActionExpression actionExpression0 = new ActionExpression((String) null);
      ActionExpression actionExpression1 = actionExpression0.setOwner(form2);
      ActionExpression actionExpression2 = actionExpression1.javascript("2b!");
      actionExpression2.submitForm(true);
      actionExpression2.event((String) null);
      // Undeclared exception!
      try { 
        form2.form("F-22|8^'fV", actionExpression1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Form form0 = new Form("");
      Form form1 = form0.addFormValidationError((String) null);
      Form form2 = form1.addFormValidationError("\"1JK/8");
      form2.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = 'd';
      ActionExpression actionExpression0 = new ActionExpression((String) null);
      ActionExpression actionExpression1 = actionExpression0.setOwner(form2);
      ActionExpression actionExpression2 = actionExpression1.javascript("2b!");
      actionExpression2.event((String) null);
      // Undeclared exception!
      try { 
        form2.form("F-22|8^'fV", actionExpression1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.3327496243122545
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      Component component0 = table0.clasS("$H92c");
      table0.renderHint(stringBuffer0);
      Table table1 = table0.renderHint("$H92c");
      table0.actionBinding("Uu<rXuQoykAj");
      TableBlock tableBlock0 = new TableBlock(table1);
      Block block0 = tableBlock0.renderHint("Uu<rXuQoykAj");
      Component component1 = block0.br();
      assertEquals("Any_1", component1.getComponentId());
      
      component0.script();
      tableBlock0.dfn((Object) "Uu<rXuQoykAj");
      errorPage0.h5((Object) image0);
      DateInput dateInput0 = new DateInput(table0, "", "java.lang.StringBuffer@0000000004", "java.lang.StringBuffer@0000000004");
      standaloneComponent0.var();
      dateInput0.defaultTagName();
      Checkbox checkbox0 = new Checkbox(dateInput0, (String) null, "");
      FormElement formElement0 = checkbox0.label("action");
      TextArea textArea0 = new TextArea(formElement0, (String) null, "A^4{_^*?I}kP(n&");
      textArea0.value("input");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(dateInput0._isGeneratedId());
      assertTrue(formElement0._isGeneratedId());
      assertEquals("Checkbox_1", checkbox0.getComponentId());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.9675614082100275
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer1, stringBuffer0);
      Component component0 = errorPage0.addRenderAfter(image0);
      image0.getPage();
      Table table0 = new Table(component0, "$H92c");
      Component component1 = table0.rawText("$H92c");
      table0.clasS(stringBuffer0);
      table0.renderHint(stringBuffer0);
      DateInput dateInput0 = new DateInput(component1, (String) null, "$H92c", stringBuffer0);
      Radio radio0 = new Radio(image0, "\"i:FFMsp#c,^|hkhR4", (String) null);
      // Undeclared exception!
      try { 
        dateInput0.q((Object) radio0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.1002068931303617
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory.newInstance("", class0);
      Image image0 = new Image(table0, "", "hJ:g");
      image0.getPage();
      Integer integer0 = new Integer((-67));
      table0.eval(integer0);
      image0._setComponentId("hJ:g");
      table0.renderHint("hJ:g");
      DateInput dateInput0 = new DateInput(table0, "Invalid number format", "page", (CharSequence) null);
      FileInput fileInput0 = new FileInput(tableBlock0, "position ", "button");
      // Undeclared exception!
      try { 
        fileInput0.kbd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.306312520276421
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      String string0 = null;
      ElExpression elExpression0 = new ElExpression((String) null);
      ElExpression elExpression1 = elExpression0.errorMessage("\"i:FFMsp#c,^|hkhR4");
      Image image0 = new Image(errorPage0, stringBuffer0, elExpression1);
      String string1 = "[] from ";
      String string2 = "{!";
      Locale locale0 = new Locale("\"i:FFMsp#c,^|hkhR4", "[] from ", "{!");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      Byte byte0 = new Byte((byte)28);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef("{!");
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar((byte)28, (-1879048209), (byte)46);
      mockGregorianCalendar0.getWeekYear();
      // Undeclared exception!
      try { 
        xmlEntityRef0.q();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.053421396290417
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      tableBlock0.col();
      Table table1 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table1.tr();
      String string0 = "ul";
      Image image0 = new Image(table1, "hJ:g", "ul");
      image0.getPage();
      Table table2 = new Table(table1, "");
      Component component0 = table0.clasS("");
      Table table3 = new Table(table0, "6`#qH@1Jws30mt]");
      table1.renderHint("ul");
      ElExpression elExpression0 = new ElExpression("HDnvCIouW\"eL");
      elExpression0.chars();
      Table table4 = new Table(tableRow0, ":");
      table4.renderHint("6`#qH@1Jws30mt]");
      DateInput dateInput0 = new DateInput(table3, "6`#qH@1Jws30mt]", "hJ:g", "ul");
      FileInput fileInput0 = new FileInput(component0, "Y;q7DoDZjRFBA@`kP<", (String) null);
      // Undeclared exception!
      try { 
        fileInput0.kbd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.206562089720928
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "4zFDdkb%u.,";
      Table table0 = new Table(errorPage0, "4zFDdkb%u.,");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      Table table1 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table1.tr();
      String string1 = "ul";
      Block block0 = tableRow0.id("ul");
      block0.id("ul");
      tableBlock0.br();
      TableBlock tableBlock1 = new TableBlock(any0);
      Boolean boolean0 = Boolean.TRUE;
      ElExpression elExpression0 = new ElExpression("ul");
      String string2 = "script";
      // Undeclared exception!
      try { 
        errorPage0.fileInput("script");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.255363257318921
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "4zFDdkb%u.,");
      TableBlock tableBlock0 = new TableBlock(table0);
      Any any0 = tableBlock0.col();
      Table table1 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table1.tr();
      Block block0 = tableRow0.id("ul");
      block0.id("ul");
      tableBlock0.br();
      TableBlock tableBlock1 = new TableBlock(any0);
      Boolean boolean0 = Boolean.TRUE;
      Any any1 = tableBlock1.col();
      tableBlock1.dfn((Object) any1);
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(any0, "ul", (CharSequence) null);
      // Undeclared exception!
      try { 
        image0.radio((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7822798149319588
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "8;{$B0x\",vh,";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("8;{$B0x\",vh,");
      errorPage0.h5((Object) " prefix");
      // Undeclared exception!
      try { 
        xmlEntityRef0.p((Object) " prefix");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.3542363014285748
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      Table table1 = table0.renderHint(stringBuffer0);
      table1.actionBinding("$H92c");
      TableBlock tableBlock0 = new TableBlock(table1);
      Block block0 = tableBlock0.renderHint(stringBuffer0);
      tableBlock0.br();
      table1.script();
      tableBlock0.dfn((Object) block0);
      errorPage0.big((Object) tableBlock0);
      errorPage0.h5((Object) tableBlock0);
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      standaloneComponent0.var();
      dateInput0.defaultTagName();
      String string0 = "";
      TextArea textArea0 = new TextArea(standaloneComponent0, "input", "");
      // Undeclared exception!
      try { 
        textArea0.entity("input");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "e";
      Form form0 = new Form("e");
      String string1 = null;
      Form form1 = form0.addFormValidationError((String) null);
      String string2 = "\"1JK/8";
      Form form2 = form1.addFormValidationError("\"1JK/8");
      form2.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = 'd';
      charArray0[2] = '~';
      // Undeclared exception!
      try { 
        form2.placeholder("\"1JK/8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.231972654829181
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      errorPage0.placeholder("pKzA9+&iO\"G");
      Table table0 = new Table(errorPage0, "b");
      table0.tr();
      TableBlock tableBlock0 = table0.colgroup();
      TableBlock tableBlock1 = tableBlock0.id("b");
      TableBlock tableBlock2 = new TableBlock(tableBlock1);
      tableBlock1.col();
      Class<Image> class0 = Image.class;
      XmlPullWrapperFactory.newInstance("", class0);
      Image image0 = new Image(tableBlock2, stringBuffer0, (CharSequence) null);
      ElExpression elExpression0 = new ElExpression("");
      // Undeclared exception!
      try { 
        image0.fileInput("", elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = "expected 'yes' or 'no' after standalone and not ";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("expected 'yes' or 'no' after standalone and not ");
      // Undeclared exception!
      try { 
        xmlEntityRef0.pre();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.0213868674106066
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      String string0 = "$H92c";
      image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      table0.clasS("$H92c");
      table0.renderHint(stringBuffer0);
      errorPage0.q();
      String string1 = null;
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      Form form0 = new Form((String) null);
      Form form1 = form0.addFormValidationRule((String) null, "");
      Class<Submit> class0 = Submit.class;
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance((String) null, class0);
      XmlSerializerWrapper xmlSerializerWrapper0 = xmlPullWrapperFactory0.newSerializerWrapper();
      form1._renderActions(xmlSerializerWrapper0);
      FileInput fileInput0 = null;
      try {
        fileInput0 = new FileInput((Component) null, "6eAom5fFrSs}nJ", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6205518703834842
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "hJ:g";
      Table table0 = new Table(errorPage0, "hJ:g");
      TableBlock tableBlock0 = new TableBlock(table0);
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance("", class0);
      xmlPullWrapperFactory0.newPullParserWrapper();
      XmlSerializerWrapper xmlSerializerWrapper0 = xmlPullWrapperFactory0.newSerializerWrapper();
      // Undeclared exception!
      try { 
        tableBlock0._render(xmlSerializerWrapper0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2381624607742934
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      StandaloneComponent standaloneComponent0 = image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      Table table1 = table0.renderHint(stringBuffer0);
      Table table2 = (Table)table1.actionBinding("$H92c");
      TableBlock tableBlock0 = table2.tfoot();
      tableBlock0.renderHint(stringBuffer0);
      tableBlock0.br();
      table1.script();
      errorPage0.h5((Object) tableBlock0);
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      dateInput0.defaultTagName();
      String string0 = "(";
      TextArea textArea0 = new TextArea(standaloneComponent0, "input", "(");
      // Undeclared exception!
      try { 
        textArea0.entity("input");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.9943733190477415
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      StringBuffer stringBuffer1 = new StringBuffer();
      ErrorPage errorPage0 = new ErrorPage();
      Component component0 = errorPage0.h2();
      Component component1 = component0.actionBinding("oj4GN6/]DFAX");
      assertTrue(component1._isGeneratedId());
      
      errorPage0.create();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.1546777295296606
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      DateInput dateInput0 = new DateInput(checkbox0, "asset/wheel/components/jquery.js?expires=88", "INF", "asset/wheel/components/jquery.js?expires=88");
      Hidden hidden0 = new Hidden(dateInput0, "", " prefix");
      Block block0 = new Block(hidden0);
      block0.getComponentName();
      block0.map("A{)`9uf:Re");
      // Undeclared exception!
      try { 
        block0.hidden("b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.9308298164078836
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      errorPage0.attribute("$H92c", "$H92c");
      StandaloneComponent standaloneComponent0 = image0.getPage();
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      dateInput0.genericFieldErrorMessage = null;
      standaloneComponent0.blockquote();
      dateInput0.defaultTagName();
      TextArea textArea0 = new TextArea(standaloneComponent0, "6WIV@#lK[S.w=Ny/f", "");
      FormElement formElement0 = textArea0.value("");
      assertTrue(formElement0._isGeneratedId());
      
      errorPage0.create();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0061452078894675
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      errorPage0.addRenderAfter(image0);
      image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      String string0 = "Y";
      Hidden hidden0 = new Hidden(image0, "Y", "Y");
      table0.rawText(hidden0);
      table0.clasS("$H92c");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "$H92c");
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = ')';
      charArray0[2] = 'R';
      charArray0[3] = 'v';
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-1), charArray0, (-1), 17);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      MXSerializer mXSerializer0 = new MXSerializer();
      Locale locale0 = Locale.KOREA;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      byte byte0 = (byte)46;
      Byte byte1 = new Byte((byte)46);
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("kbd");
      // Undeclared exception!
      try { 
        xmlEntityRef0.var((Object) "kbd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.721127477493977
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("8;{$B0x\",vh,");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef(" prefix");
      Component component0 = errorPage0.object();
      Label label0 = new Label(component0, errorPage0);
      MXSerializer mXSerializer0 = new MXSerializer();
      assertEquals(0, mXSerializer0.getDepth());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.0269598435690006
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = " prefix";
      String string1 = "8;{$B0x\",vh,";
      ActionExpression actionExpression0 = new ActionExpression("BQ{[Y*a}DE");
      actionExpression0.javascript("BQ{[Y*a}DE");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "8;{$B0x\",vh,";
      // Undeclared exception!
      try { 
        errorPage0.buildComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.9295986650375077
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = "9Z6DCdc";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9Z6DCdc");
      xmlEntityRef0._clear();
      String string1 = "-FQ{D\"zII[bgMcZRm";
      String string2 = "style";
      // Undeclared exception!
      try { 
        xmlEntityRef0.strike((Object) "style");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.0569235931627183
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      Component component0 = errorPage0.addRenderAfter(image0);
      Image image1 = new Image(component0, "$H92c", "$H92c");
      ElExpression elExpression0 = new ElExpression("h6");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1085, 13, 652, (-436), 13);
      Table table0 = new Table(component0, "h6");
      TableBlock tableBlock0 = table0.tbody();
      Any any0 = tableBlock0.col();
      Text text0 = new Text(component0, errorPage0);
      Radio radio0 = new Radio(component0, "'Da#n`t|7`gxQ", "h6");
      Text text1 = new Text(any0, radio0);
      text1.isCdata();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("$H92c");
      // Undeclared exception!
      try { 
        xmlEntityRef0.b();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.789130544806024
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      errorPage0.h2();
      image0.getPage();
      errorPage0.q();
      Form form0 = new Form((String) null);
      form0.addFormValidationRule((String) null, "");
      Class<Submit> class0 = Submit.class;
      XmlPullWrapperFactory.newInstance((String) null, class0);
      // Undeclared exception!
      try { 
        form0.h5();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.962283934611486
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      String string0 = "$H92c";
      Table table0 = new Table(errorPage0, "$H92c");
      table0.clasS("$H92c");
      // Undeclared exception!
      try { 
        table0.id("$H92c");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.8683356386441297
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableRow tableRow0 = table0.tr();
      Block block0 = tableRow0.id("ul");
      block0.id("ul");
      assertFalse(tableRow0._isGeneratedId());
      assertEquals("Table_1", table0.getComponentId());
      
      Boolean boolean0 = Boolean.TRUE;
      StringBuffer stringBuffer0 = new StringBuffer();
      ErrorPage errorPage1 = new ErrorPage();
      errorPage0.create();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      String string1 = null;
      // Undeclared exception!
      try { 
        form0.id((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.9582945652082837
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      tableBlock0.col();
      String string0 = "";
      Class<Object> class0 = Object.class;
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance("", class0);
      xmlPullWrapperFactory0.newPullParserWrapper();
      Class<XmlEntityRef> class1 = XmlEntityRef.class;
      XmlPullWrapperFactory xmlPullWrapperFactory1 = XmlPullWrapperFactory.newInstance("", class1);
      XmlSerializerWrapper xmlSerializerWrapper0 = xmlPullWrapperFactory1.newSerializerWrapper();
      // Undeclared exception!
      try { 
        tableBlock0._render(xmlSerializerWrapper0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // setOutput() must called set before serialization can start
         //
         verifyException("org.xmlpull.mxp1_serializer.MXSerializer", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.2492105004633363
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "strike";
      Checkbox checkbox0 = new Checkbox(errorPage0, "strike", "strike");
      DateInput dateInput0 = new DateInput(checkbox0, "strike", "strike", "strike");
      String string1 = " prefix";
      String string2 = "8;{$B0x\",vh,";
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("8;{$B0x\",vh,");
      XmlEntityRef xmlEntityRef1 = new XmlEntityRef(" prefix");
      // Undeclared exception!
      try { 
        checkbox0.end("h6");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression 'h6'.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = null;
      Form form0 = new Form((String) null);
      String string1 = "kbd";
      // Undeclared exception!
      try { 
        form0.dt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.0283849288121396
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringBuffer stringBuffer0 = new StringBuffer();
      Image image0 = new Image(errorPage0, stringBuffer0, stringBuffer0);
      image0.getPage();
      Table table0 = new Table(image0, "$H92c");
      table0.clasS("$H92c");
      table0.renderHint(stringBuffer0);
      errorPage0.q();
      DateInput dateInput0 = new DateInput(errorPage0, "$H92c", (String) null, stringBuffer0);
      Form form0 = new Form((String) null);
      String string0 = null;
      form0.addFormValidationRule((String) null, "");
      Class<Submit> class0 = Submit.class;
      XmlPullWrapperFactory.newInstance((String) null, class0);
      // Undeclared exception!
      try { 
        form0.h5();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "";
      Form form0 = new Form("");
      Form form1 = form0.addFormValidationError((String) null);
      Form form2 = form1.addFormValidationError((String) null);
      form2.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = 'a';
      Form.Method form_Method0 = Form.Method.POST;
      form0.setMethod(form_Method0);
      mXSerializer0.setPrefix((String) null, "");
      form2.addRenderAfter(form0);
      charArray0[3] = '>';
      charArray0[4] = 'K';
      mXSerializer0.getFeature("wheel_ErrorPage");
      charArray0[5] = '>';
      // Undeclared exception!
      try { 
        form0.table();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Block block0 = null;
      try {
        block0 = new Block((Component) null, "wheel.components.NumberInput");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.71747278103407
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = "Attributes must be given in name, value pairs.";
      Form form0 = new Form("Attributes must be given in name, value pairs.");
      Form form1 = form0.addFormValidationRule("kdb", "kdb");
      String string1 = null;
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      Select select0 = new Select(form1, (String) null, "Attributes must be given in name, value pairs.", stringSelectModel0, (CharSequence) null);
      // Undeclared exception!
      try { 
        form1.addFormElement(select0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "java.lang.StringBuffer@0000000004", "java.lang.StringBuffer@0000000004");
      FormElement formElement0 = checkbox0.fieldBinding("optgroup");
      // Undeclared exception!
      try { 
        formElement0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.049695504613939
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("BQ{[Y*a}DE");
      ActionExpression actionExpression1 = actionExpression0.javascript("BQ{[Y*a}DE");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "8;{$B0x\",vh,";
      ActionExpression actionExpression2 = actionExpression1.parameters(objectArray0);
      ActionExpression actionExpression3 = actionExpression2.submitForm(true);
      Form form0 = new Form(errorPage0, " prefix", actionExpression3);
      Form form1 = form0.addFormValidationError("b");
      form1.addFormValidationError("java.lang.StringBuffer@0000000004");
      form1.getRewindFormElements();
      MXSerializer mXSerializer0 = new MXSerializer();
      ActionExpression actionExpression4 = new ActionExpression("h1");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("java.lang.StringBuffer@0000000004");
      ActionExpression actionExpression5 = actionExpression3.setOwner(xmlEntityRef0);
      actionExpression5.javascript("Tfoot component can be added only to a Table.");
      ActionExpression actionExpression6 = actionExpression0.submitForm(true);
      ActionExpression actionExpression7 = actionExpression6.event("F-22|8^'fV");
      Form form2 = (Form)form1.form("h6", actionExpression7);
      assertTrue(form2._isBuilt());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("h6", actionExpression3.getSourceId());
  }
}
