/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 03:33:09 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.ENGLISH;
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      Newzgrabber.IsBatch = true;
      base64Decoder0.ProgressSet = true;
      Newzgrabber.verbose = true;
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0910596228402674
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-71), (-71));
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Getting ready to setup the filter model0ABORT");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("Getting ready to setup the filter model", "ABORT", (File) mockFile0);
      mockFile0.toURL();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      mockFile0.toURL();
      file0.setReadable(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      mockFile0.renameTo(file0);
      MockFile.createTempFile("ABORT", ",]-%=<)Zh|\"[NfOEE'");
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte) (-90);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      PrintStream printStream0 = DebugGraphics.logStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(printStream0);
      Locale locale0 = Locale.UK;
      Object[] objectArray0 = new Object[0];
      mockPrintStream0.printf(locale0, "", objectArray0);
      Object[] objectArray1 = new Object[7];
      objectArray1[0] = (Object) printStream0;
      objectArray1[1] = (Object) "";
      objectArray1[2] = (Object) locale0;
      objectArray1[3] = (Object) mockPrintStream0;
      objectArray1[4] = (Object) "";
      Object object0 = new Object();
      objectArray1[5] = object0;
      objectArray1[6] = (Object) bufferedCustomInputStream0;
      PrintStream printStream1 = mockPrintStream0.printf(locale0, "", objectArray1);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream1);
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }
}
