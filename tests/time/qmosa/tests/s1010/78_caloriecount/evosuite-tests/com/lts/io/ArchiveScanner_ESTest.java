/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:51:09 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".EAR0=$qJ.jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.892246898188396
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile("cUX[Q&5]3$dIv\"", "cUX[Q&5]3$dIv\"");
      MockFile.createTempFile("com.lts.io.ImprovedFile", "cUX[Q&5]3$dIv\"", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "cUX[Q&5]3$dIv\"";
      stringArray0[1] = "cUX[Q&5]3$dIv\"";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      improvedFile0.getAbsoluteFile();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "ce", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "cUX[Q&5]3$dIv\"";
      ImprovedFile improvedFile0 = new ImprovedFile("cUX[Q&5]3$dIv\"", "cUX[Q&5]3$dIv\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "cUX[Q&5]3$dIv\"";
      stringArray0[1] = "cUX[Q&5]3$dIv\"";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      improvedFile0.getAbsoluteFile();
      URI uRI0 = MockURI.aFileURI;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "cUX[Q&5]3$dIv\"", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      byte byte0 = (byte)18;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ";Eo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      File file0 = improvedFile0.getAbsoluteFile();
      DirectoryScanner.matchPatternStart(";Eo", ";Eo");
      improvedFile0.deleteOnExit();
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(";Eo/;Eo/;Eo0 nt?['Xva|N8");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, true);
      improvedFile0.deleteOnExit();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(file0, ";Eo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "e*AWT aE:>_AGzVr'b");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte) (-2);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      vector0.listIterator();
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis(2);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.filesExcluded = vector1;
      System.setCurrentTimeMillis((-1L));
      archiveScanner0.processFile(";Eo");
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis((byte)18);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)2;
      byte byte0 = (byte)6;
      byteArray0[2] = (byte)6;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      improvedFile0.getAbsoluteFile();
      boolean boolean0 = false;
      DirectoryScanner.matchPatternStart(";Eo", ";Eo");
      improvedFile0.deleteOnExit();
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(";Eo/;Eo/;Eo0 nt?['Xva|N8");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      File file0 = MockFile.createTempFile(";Eo", " nt?['Xva|N8", (File) improvedFile0);
      file0.toURI();
      try { 
        archiveScanner0.processDirectory(file0, ";Eo", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/;Eo/;Eo/;Eo0 nt?['Xva|N8
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("[.7S}qf4z1]");
      improvedFile0.toPath();
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      URI uRI0 = MockURI.aFileURI;
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[6];
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "H3X<.Qh%na";
      stringArray0[1] = "H3X<.Qh%na";
      stringArray0[2] = "H3X<.Qh%na";
      stringArray0[3] = "[.7S}qf4z1]";
      stringArray0[4] = "[.7S}qf4z1]";
      stringArray0[5] = "[.7S}qf4z1]";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "H3X<.Qh%na", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.basedir = (File) archiveScanner0.myTempdir;
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector1;
      vector0.add((Object) "PphD[n");
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis(1);
      archiveScanner0.processArchive(archiveScanner1.basedir, "!.Tl&6l.jar");
      System.setCurrentTimeMillis(2);
      // Undeclared exception!
      try { 
        archiveScanner1.processArchive(archiveScanner0.myTempdir, "PphD[n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "e*AWT aE:>_AGzVr'b");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)6;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "e*AWT aE:>_AGzVr'b";
      stringArray0[1] = ";Eo";
      stringArray0[2] = ".ZIP";
      stringArray0[3] = "e*AWT aE:>_AGzVr'b";
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis((byte)18);
      System.setCurrentTimeMillis(0L);
      archiveScanner0.processFile(";Eo");
      System.setCurrentTimeMillis(1);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      vector1.add(object0);
      vector1.listIterator();
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(0L);
      archiveScanner0.processFile("d)PB<)");
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "e*AWT aE:>_AGzVr'b");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)6;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      vector0.listIterator();
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(";Eo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-19);
      byteArray0[2] = (byte) (-19);
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      DirectoryScanner.matchPatternStart(";Eo", ";Eo");
      improvedFile0.deleteOnExit();
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.isExcluded(";Eo");
      improvedFile0.deleteOnExit();
      DirectoryScanner.matchPatternStart(";Eo", ";Eo");
      improvedFile0.setExecutable(true);
      System.setCurrentTimeMillis((byte) (-19));
      try { 
        archiveScanner0.processDirectory(improvedFile0, ";Eo", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/;Eo/;Eo
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)6;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = ";Eo";
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      improvedFile0.setExecutable(true);
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ";Eo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ImprovedFile improvedFile0 = new ImprovedFile("O?_}bzvy", "O?_}bzvy");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile(".EAR", "=$qJ", improvedFile0);
      ImprovedFile improvedFile2 = improvedFile1.tempBackup();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "*GxgW]<1`)n6J^7[{k,", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[2] = (byte)2;
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = ";Eo";
      ImprovedFile improvedFile0 = new ImprovedFile(";Eo", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";Eo";
      stringArray0[1] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      improvedFile0.getAbsoluteFile();
      boolean boolean0 = false;
      DirectoryScanner.matchPatternStart(";Eo", ";Eo");
      improvedFile0.deleteOnExit();
      archiveScanner0.excludes = stringArray0;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ";Eo");
      File file0 = MockFile.createTempFile(";Eo", " nt?['Xva|N8", (File) improvedFile0);
      URI uRI0 = MockURI.aFileURI;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(file0, ";Eo", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis((-3606L));
      System.setCurrentTimeMillis(2);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(archiveScanner0.myTempdir);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(archiveScanner0.myTempdir);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(archiveScanner0.myTempdir, "d)PB<)", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".ear/.ear");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile("P", ";Eo");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "P";
      stringArray0[1] = "P";
      stringArray0[2] = "P";
      stringArray0[3] = "P";
      stringArray0[4] = ";Eo";
      stringArray0[5] = ";Eo";
      stringArray0[6] = ";Eo";
      stringArray0[7] = ";Eo";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.listIterator();
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0910596228402674
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("xq=$J");
      improvedFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      archiveScanner2.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath("xq=$J", "xq=$J");
      ArchiveScanner archiveScanner3 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner3.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.listIterator();
      archiveScanner1.addDefaultExcludes();
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner1.processFile("xq=$J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0238736061572697
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", ".jar.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.addDefaultExcludes();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(2);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      archiveScanner2.haveSlowResults = false;
      archiveScanner2.filesIncluded = archiveScanner0.filesNotIncluded;
      vector0.add((Object) archiveScanner2.filesIncluded);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(archiveScanner0.myTempdir);
      ArchiveScanner archiveScanner4 = new ArchiveScanner(archiveScanner0.myTempdir);
      archiveScanner4.isArchive(archiveScanner0.myTempdir);
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.159813847226612
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.addDefaultExcludes();
      System.setCurrentTimeMillis((-3606L));
      System.setCurrentTimeMillis(2);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      archiveScanner2.filesIncluded = archiveScanner0.filesNotIncluded;
      ArchiveScanner archiveScanner3 = new ArchiveScanner(archiveScanner0.myTempdir);
      ImprovedFile improvedFile1 = archiveScanner0.myTempdir.createTempDir();
      ArchiveScanner archiveScanner4 = new ArchiveScanner(improvedFile1);
      ArchiveScanner archiveScanner5 = new ArchiveScanner(archiveScanner0.myTempdir);
      int int0 = archiveScanner5.toFileType(improvedFile1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4572637190629707
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      archiveScanner0.myTempdir.createTempDir("=$J0", "9^`(>Z");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(archiveScanner0.myTempdir);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "d)PB<)", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "xq=$J");
      DirectoryScanner.matchPath("xq=$J", "xq=$J");
      MockFile mockFile0 = new MockFile("xq=$J");
      MockFile mockFile1 = new MockFile("Y%Os6f!)?PdnY [", "xq=$J");
      File file0 = mockFile1.getAbsoluteFile();
      mockFile1.mkdir();
      file0.mkdir();
      mockFile1.mkdir();
      mockFile1.toURL();
      mockFile1.setLastModified(0L);
      mockFile1.mkdir();
      mockFile1.getAbsolutePath();
      mockFile0.mkdir();
      mockFile0.toURL();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "com.lts.io.ArchiveScanner");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("k^O]9Bg1DtE}sr?n E", "SrW9p&");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir("=Yn1FM$FK>g`38xs$", "9^`(>Z");
      improvedFile1.setWritable(false, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile1, "_azwE^W*.8a!{W", false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.flush();
      pipedOutputStream0.write((-118));
      DirectoryScanner.matchPath("9^`(>Z", "SrW9p&");
      System.setCurrentTimeMillis(0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream(7);
      pipedInputStream1.mark((-214));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream2, pipedInputStream2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0238736061572697
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "9!@s+GEUESYl|");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.addDefaultExcludes();
      System.setCurrentTimeMillis((-3606L));
      System.setCurrentTimeMillis(2);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      archiveScanner2.filesIncluded = archiveScanner0.filesNotIncluded;
      vector0.add((Object) archiveScanner2.filesIncluded);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(archiveScanner0.myTempdir);
      archiveScanner3.filesNotIncluded = archiveScanner2.filesIncluded;
      ArchiveScanner archiveScanner4 = new ArchiveScanner(archiveScanner0.myTempdir);
      boolean boolean0 = archiveScanner4.isArchive(archiveScanner0.myTempdir);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.addDefaultExcludes();
      System.setCurrentTimeMillis((-3606L));
      System.setCurrentTimeMillis(2);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      archiveScanner2.filesIncluded = archiveScanner0.filesNotIncluded;
      ArchiveScanner archiveScanner3 = new ArchiveScanner(archiveScanner0.myTempdir);
      ArchiveScanner archiveScanner4 = new ArchiveScanner(archiveScanner0.myTempdir);
      try { 
        archiveScanner4.scandir(archiveScanner0.myTempdir, ".jar.jar", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.jar.jar/d)PB<)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.addDefaultExcludes();
      System.setCurrentTimeMillis((-3606L));
      System.setCurrentTimeMillis(2);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      archiveScanner2.haveSlowResults = false;
      archiveScanner2.filesIncluded = archiveScanner0.filesNotIncluded;
      vector0.add((Object) archiveScanner2.filesIncluded);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(archiveScanner0.myTempdir);
      try { 
        archiveScanner2.scandir(archiveScanner0.myTempdir, "d)PB<)", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.jar.jar/d)PB<)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.myTempdir = null;
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("xq=$J", "xq=$J");
      DirectoryScanner.matchPath("xq=$J", "xq=$J");
      MockFile mockFile0 = new MockFile("xq=$J");
      mockFile0.setReadable(true);
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(" to a file, ", "@n");
      File file0 = mockFile1.getAbsoluteFile();
      improvedFile0.mkdir();
      mockFile0.mkdir();
      mockFile0.mkdir();
      MockFile mockFile2 = new MockFile("@n", "@n");
      mockFile2.toURL();
      MockFile mockFile3 = new MockFile("Y%Os6f!)?PdnY [", "Y%Os6f!)?PdnY [");
      mockFile3.mkdir();
      mockFile3.mkdir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(file0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".jar.jar", "d)PB<)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.myTempdir = improvedFile0;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.addDefaultExcludes();
      System.setCurrentTimeMillis((-3606L));
      System.setCurrentTimeMillis(2);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      archiveScanner2.filesIncluded = archiveScanner0.filesNotIncluded;
      vector0.add((Object) archiveScanner2.filesIncluded);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(archiveScanner0.myTempdir);
      archiveScanner3.filesNotIncluded = archiveScanner2.filesIncluded;
      try { 
        archiveScanner1.scanArchive(archiveScanner0.myTempdir, ".jar.jar");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/.jar.jar/d)PB<)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
