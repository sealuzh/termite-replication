/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:47:28 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.786100866302153
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(779);
      homeEnvironment0.setCeillingLightColor(779);
      Camera camera0 = new Camera((-131.0F), 779, (-2613), 1710.9F, 678.6908F, 1710.9F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(25);
      linkedList0.add((Camera) null);
      Camera camera1 = new Camera(331.0F, (-1679.0513F), (-1534.5155F), 167.0F, 1020.09F, (-3064));
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      homeEnvironment0.setCeillingLightColor((-2613));
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 331;
      CatalogTexture catalogTexture0 = new CatalogTexture("UBqqGl>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-29), homeTexture0, 6, homeTexture0, 331, (-29));
      homeEnvironment1.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(19);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 6, homeTexture0, 331, (-776.0F));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.getVideoCameraPath();
      HomeEnvironment.Property.values();
      homeEnvironment1.getVideoHeight();
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment2.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      homeEnvironment0.setSkyColor(779);
      homeEnvironment0.setCeillingLightColor(779);
      Camera camera0 = new Camera((-131.0F), 779, (-2613), 1710.9F, 678.6908F, 1710.9F);
      camera0.setName("4");
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(2146513809);
      linkedList0.add((Camera) null);
      Camera camera1 = new Camera(1020.09F, 779, 1.0F, 2146513809, (-155.56255F), (-1679.0513F));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setCeillingLightColor(2106);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.963826488286453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(777);
      homeEnvironment0.setCeillingLightColor(777);
      Camera camera0 = new Camera((-131.0F), 777, (-2613), 1710.9F, 678.6908F, 1710.9F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(6);
      linkedList0.add((Camera) null);
      Camera camera1 = new Camera(331.0F, (-1679.0513F), (-1534.5155F), 167.0F, 1020.09F, (-3064));
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      homeEnvironment0.setCeillingLightColor((-2613));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-2613), homeEnvironment0.getGroundColor());
      assertEquals((-2613), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2427292778436665
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-2613));
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.setPhotoQuality((-2613));
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setLightColor((-548));
      homeEnvironment0.setSkyColor(1601);
      homeEnvironment0.setVideoFrameRate(8);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoWidth((-2613));
      homeEnvironment0.getLightColor();
      HomeEnvironment.Property.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("GROUND_TEXTURE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.GROUND_TEXTURE
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBqqGl>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-29), homeTexture0, 6, homeTexture0, 331, (-29));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(19);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 6, homeTexture0, 331, (-776.0F));
      homeEnvironment2.setPhotoHeight(6);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      HomeEnvironment.Property.values();
      homeEnvironment1.getVideoHeight();
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(13684944, homeTexture0, 331, homeTexture1, (-131), 240);
      homeEnvironment2.setVideoWidth((-1834));
      homeEnvironment4.setPhotoWidth(331);
      homeEnvironment0.getSkyTexture();
      assertEquals((-2250.8176F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.157299376986305
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(19);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      homeEnvironment0.setCeillingLightColor((-29));
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      homeEnvironment1.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment2.setVideoCameraPath(list0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment3.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setGroundColor(6);
      homeEnvironment3.getSkyColor();
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      homeEnvironment1.setGroundTexture(homeTexture0);
      assertEquals(19, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.2228255375915524
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 0, homeTexture0, 6, 6);
      homeEnvironment0.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setCeillingLightColor(19);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      Object object0 = new Object();
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(6);
      homeEnvironment2.isObserverCameraElevationAdjusted();
      homeEnvironment1.setVideoFrameRate(845);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment1.getVideoAspectRatio());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-2903.435F), (-131), (-2260.2346F), (-1924.8F), 4132.38F, (-131));
      linkedList0.add(camera0);
      camera0.setPitch((-3676.12F));
      homeEnvironment0.setVideoFrameRate((-131));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      Camera camera1 = new Camera(480.922F, (-2334.1736F), 0.0F, 3213.1033F, 1.0F, 455.7167F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment.Property.values();
      homeEnvironment0.clone();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBqqGl>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-29), homeTexture0, 6, homeTexture0, 331, (-29));
      homeEnvironment1.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      homeEnvironment0.setSubpartSizeUnderLight((-776.0F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.setCeillingLightColor(320);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 6, homeTexture0, (-917), 19);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      HomeEnvironment.Property.values();
      homeEnvironment1.getVideoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(19, homeTexture0, 331, homeTexture0, 19, (-476.8F));
      homeEnvironment4.setVideoWidth((-2424));
      homeEnvironment1.setPhotoWidth(6);
      homeEnvironment4.clone();
      assertEquals((-2424), homeEnvironment4.getVideoWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2427292778436665
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-2613));
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.setPhotoQuality((-2613));
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor((-2613));
      homeEnvironment1.setSkyColor(1234);
      homeEnvironment1.setVideoFrameRate(1601);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment1.setWallsAlpha(1867.8762F);
      homeEnvironment1.setVideoWidth(320);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 0, homeTexture0, 6, 6);
      homeEnvironment0.setVideoQuality(331);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(18, homeTexture0, 0, 6, 0);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-2783), homeTexture1, 0, (HomeTexture) null, 4, (-2783));
      homeEnvironment2.setSkyColor(2);
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setVideoFrameRate(651);
      homeEnvironment2.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(2219.2698F);
      homeEnvironment2.setVideoWidth(651);
      assertEquals(488, homeEnvironment2.getVideoHeight());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.29918083530993
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)111;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setSkyColor((-2613));
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.setPhotoQuality((-2613));
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyColor(1601);
      homeEnvironment0.setVideoFrameRate(8);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setWallsAlpha((-2613));
      homeEnvironment0.setVideoWidth((-2613));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-2613), homeEnvironment0.getVideoWidth());
      assertEquals(1.7777778F, float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.2427292778436665
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-2613));
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.setPhotoQuality((-2613));
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyColor(1601);
      homeEnvironment0.setVideoFrameRate(8);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha((-2613));
      homeEnvironment0.setVideoWidth((-2613));
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals((-1470), homeEnvironment0.getVideoHeight());
      assertEquals((-2613.0F), float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.1159676421035494
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      homeEnvironment0.setSkyColor((-2613));
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.setPhotoQuality((-2613));
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyColor(1601);
      homeEnvironment0.setVideoFrameRate(8);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha((-2613));
      homeEnvironment0.setVideoWidth((-2613));
      int int0 = homeEnvironment0.getVideoWidth();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2613), int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.299069690214901
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-2613));
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.setPhotoQuality((-2613));
      homeEnvironment0.setVideoQuality((-2613));
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoFrameRate((-273));
      homeEnvironment0.setWallsAlpha(445.75452F);
      homeEnvironment0.setVideoWidth((-913));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-2613), homeEnvironment0.getVideoQuality());
      assertEquals((-514), int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6195259631210703
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 0, homeTexture0, 6, 6);
      homeEnvironment0.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setCeillingLightColor(19);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      Object object0 = new Object();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor((-775));
      homeEnvironment0.clone();
      assertEquals((-775), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0416090960169697
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-2613));
      homeEnvironment0.setCeillingLightColor(8);
      homeEnvironment0.setPhotoQuality((-2613));
      homeEnvironment0.setSubpartSizeUnderLight(1.7777778F);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.clone();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getVideoCameraPath();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      homeEnvironment0.setGroundColor((-1816));
      homeEnvironment0.getSkyColor();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "5O9V:=A&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 5O9V:=A&
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.9454908168625717
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1465);
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.getLightColor();
      homeEnvironment2.setVideoFrameRate(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment2.setWallsAlpha(445.75452F);
      homeEnvironment1.setVideoWidth(11);
      boolean boolean0 = homeEnvironment2.isObserverCameraElevationAdjusted();
      assertEquals(445.75452F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add((Camera) null);
      linkedList0.toArray();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1641, (HomeTexture) null, 0, (-1657), 5.4F);
      homeEnvironment0.setCeillingLightColor((-450));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add((Camera) null);
      homeEnvironment0.setLightColor(0);
      Camera camera0 = new Camera(6.0F, (-3830.0F), 1.0F, 331.0F, (-3830.0F), (-1.0F));
      homeEnvironment0.setVideoCameraPath(linkedList1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      Camera camera0 = new Camera((-776.0F), 25.114F, 932.82684F, 932.82684F, (-1.0F), 8.18727F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      homeEnvironment0.setVideoFrameRate(300);
      linkedList1.add(camera0);
      Camera camera1 = new Camera((-103.8772F), (-1918.0F), (-103.8772F), (-29), (-1.0F), 1.3333334F);
      homeEnvironment0.setVideoCameraPath(linkedList1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoFrameRate(9);
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      homeEnvironment0.setVideoWidth(0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth(741);
      assertEquals(741, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1239058144637433
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(3363);
      homeEnvironment0.setSkyColor(6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("}", propertyChangeListener0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoQuality(331);
      homeEnvironment2.getLightColor();
      homeEnvironment1.setVideoFrameRate(0);
      homeEnvironment1.getVideoFrameRate();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      int int0 = homeEnvironment2.getVideoHeight();
      assertEquals(6, homeEnvironment0.getSkyColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(779);
      byte[] byteArray0 = new byte[4];
      homeEnvironment0.setSkyColor(779);
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setCeillingLightColor(779);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2127298830112085
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 0, homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(19);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      Object object0 = new Object();
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment3.getVideoCameraPath();
      homeEnvironment2.setVideoCameraPath(list0);
      homeEnvironment3.setVideoQuality(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.getSkyColor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment2.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBqqGl>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-29), homeTexture0, 6, homeTexture0, 331, (-29));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.setCeillingLightColor(19);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 6, homeTexture0, 331, (-776.0F));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      HomeEnvironment.Property.values();
      homeEnvironment1.getVideoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(19, homeTexture0, 331, homeTexture1, (-131), 240);
      homeEnvironment2.setVideoWidth((-1834));
      homeEnvironment4.setPhotoWidth(331);
      homeEnvironment4.clone();
      assertEquals(331, homeEnvironment4.getPhotoWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3812808488052557
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(1465);
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.getLightColor();
      homeEnvironment2.getVideoAspectRatio();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.getPhotoHeight();
      homeEnvironment3.getVideoCameraPath();
      homeEnvironment2.setSkyColor(6256);
      homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment2.setGroundColor(1374389538);
      HomeEnvironment homeEnvironment4 = homeEnvironment0.clone();
      homeEnvironment4.setObserverCameraElevationAdjusted(true);
      homeEnvironment2.getVideoFrameRate();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment homeEnvironment5 = new HomeEnvironment();
      homeEnvironment5.setDrawingMode(homeEnvironment_DrawingMode0);
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(0, homeEnvironment1.getPhotoHeight());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.755739480438498
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setPhotoHeight(300);
      homeEnvironment0.setPhotoHeight((-2011));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(300);
      homeEnvironment0.getLightColor();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoFrameRate(414);
      homeEnvironment2.setVideoFrameRate(0);
      homeEnvironment0.getPhotoWidth();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals((-2011), homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "abbot.util.PathClassLoader$Factory", temporaryURLContent0, 0, (-492.5288F), "abbot.util.PathClassLoader$Factory");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.clone();
      homeEnvironment0.getGroundTexture();
      assertEquals(3052.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.1004790618760354
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 284, homeTexture0, 6, 6);
      homeEnvironment0.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setCeillingLightColor(27);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      CatalogTexture catalogTexture1 = new CatalogTexture("Linux", "jar:", (Content) null, 784.2F, 1.7777778F, "pM6r5i p");
      catalogTexture0.compareTo(catalogTexture1);
      Object object0 = new Object();
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor(284);
      homeEnvironment0.getSkyColor();
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      homeEnvironment2.setVideoWidth((-2146782999));
      homeEnvironment1.setPhotoWidth((-2146782999));
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBqqGl>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-29), homeTexture0, 6, homeTexture0, 331, (-29));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(19);
      homeEnvironment0.setSkyTexture(homeTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 6, homeTexture0, 331, (-776.0F));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      HomeEnvironment.Property.values();
      homeEnvironment1.getVideoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      System.setCurrentTimeMillis(320);
      homeEnvironment1.getGroundTexture();
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment3.setCeillingLightColor(2613);
      assertEquals(2613, homeEnvironment3.getCeillingLightColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6;");
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("m mIzZPuEh", uRLContent0, 533L, (-3102.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-565), homeTexture0, (-565), homeTexture0, 779, (-3102.0F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor((-565));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-565), homeEnvironment1.getSkyColor());
      assertEquals((-3102.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals((-565), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(779, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(3363);
      homeEnvironment0.setSkyColor(6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.setPhotoHeight(1);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setVideoQuality(1);
      homeEnvironment0.getLightColor();
      homeEnvironment2.setVideoFrameRate(0);
      homeEnvironment0.setVideoFrameRate(3363);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.getPhotoWidth();
      int int0 = homeEnvironment2.getCeillingLightColor();
      assertEquals(1, homeEnvironment0.getVideoQuality());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.4305933888494136
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(387);
      homeEnvironment0.setVideoQuality((-1980));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoFrameRate(400);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-793));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment1.getGroundColor();
      homeEnvironment0.setSkyColor((-793));
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setGroundColor(1448);
      assertEquals((-1980), homeEnvironment0.getVideoQuality());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6847854169135204
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      homeEnvironment0.setPhotoQuality((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(779);
      homeEnvironment0.setCeillingLightColor(779);
      int int0 = (-3064);
      float float0 = (-131.0F);
      float float1 = 678.6908F;
      Camera camera0 = new Camera((-131.0F), 779, (-2613), 1710.9F, 678.6908F, 1710.9F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(6);
      linkedList0.add((Camera) null);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor((-2613));
      homeEnvironment0.getSkyColor();
      String string0 = "WALLS_ALPHA";
      try { 
        MockURL.URL("FILL_AND_OUTLINE");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: FILL_AND_OUTLINE
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.963826488286453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(779);
      homeEnvironment0.setCeillingLightColor(779);
      Camera camera0 = new Camera((-131.0F), 779, (-2613), 1710.9F, 678.6908F, 1710.9F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(6);
      linkedList0.add((Camera) null);
      homeEnvironment0.setWallsAlpha(331.0F);
      Camera camera1 = new Camera(331.0F, (-1679.0513F), (-1534.5155F), 167.0F, 1020.09F, (-3064));
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      homeEnvironment0.setCeillingLightColor((-2613));
      homeEnvironment0.getPhotoQuality();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-2613), int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.359747399048139
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.retainAll(linkedList1);
      homeEnvironment0.setVideoFrameRate(8);
      Camera camera0 = new Camera(8, (-131), (-16.1811F), (-131), (-1604.8633F), (-16.1811F));
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(420);
      linkedList0.add(camera0);
      Camera camera1 = new Camera((-16.1811F), (-3581.7F), (-2250.8176F), 331.0F, 6.931525F, (-2512.0562F));
      homeEnvironment0.setVideoCameraPath(linkedList2);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      homeEnvironment0.setWallsAlpha(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_WIDTH;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor(13);
      homeEnvironment1.clone();
      assertEquals(13, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.938311329683084
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight(533L);
      homeEnvironment0.setCeillingLightColor(1965);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("u", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Camera camera0 = new Camera(647.67F, 1.3333334F, 647.67F, 1.3684944E7F, 2037.71F, (-628.6968F));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(320);
      linkedList0.add(camera0);
      Camera camera1 = new Camera((-548.0F), 2509.576F, 0.0F, 320, 2.0F, 1.3333334F);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setGroundColor(320);
      homeEnvironment0.clone();
      assertEquals(533.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf(";xea.scj.|$J-_~)=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.;xea.scj.|$J-_~)=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      camera0.setPitch((-103.8772F));
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      homeEnvironment0.getGroundTexture();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth(8);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("(cr%{lrtD>'6P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.(cr%{lrtD>'6P
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(3363);
      homeEnvironment0.setSkyColor(6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-312.9F), (-1887.0F), 1.3333334F, 2226.18F, 6, 3363, (-2560L), camera_Lens0);
      Camera camera1 = camera0.clone();
      camera1.setPitch(1418.84F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", "c)1_GUrVP}S", camera1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.setSkyColor(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getSkyTexture();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(3363);
      homeEnvironment0.setSkyColor(6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getLightColor();
      homeEnvironment2.setVideoFrameRate(6);
      homeEnvironment0.getCeillingLightColor();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(6, homeEnvironment2.getVideoFrameRate());
      assertEquals(3363, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 0, homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment0.setCeillingLightColor((-215));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", (String) null, object0, "u");
      homeEnvironment1.setSubpartSizeUnderLight(3018.01F);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("u", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("u", propertyChangeListenerProxy1);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setPhotoWidth(10);
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoFrameRate(8);
      Camera camera0 = new Camera(8, (-131), (-16.1811F), (-131), (-1605.4755F), (-16.1811F));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment0.setVideoFrameRate(414);
      Camera camera1 = new Camera((-131), 1.0F, (-2251.5105F), (-2250.8176F), 414, (-2251.5105F));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth(414);
      homeEnvironment0.setPhotoWidth((-131));
      assertEquals(414, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      camera0.setTime(0);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setCeillingLightColor(1601);
      homeEnvironment0.getPhotoQuality();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      System.setCurrentTimeMillis(3052);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getDrawingMode();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      Camera camera0 = new Camera(0, (-1.0F), 0.0F, (-200.242F), (-1605.4755F), 0.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoFrameRate((-2599));
      linkedList0.add(camera0);
      Camera camera1 = new Camera((-16.1811F), (-16.1811F), (-2250.8176F), 2653.0F, 0.0F, (-131));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment1.getVideoAspectRatio();
      assertEquals((-2599), homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("3'mcoV:", temporaryURLContent0, (-573), (-573));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-573), homeTexture0, (-1117), (-1117), 2263.0005F);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor((-2613));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(779);
      homeEnvironment0.setCeillingLightColor(779);
      Camera camera0 = new Camera((-131.0F), 779, (-2613), 1710.9F, 678.6908F, 1710.9F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      linkedList0.add((Camera) null);
      Camera camera1 = new Camera(1471.488F, 779, 455.7167F, 819.0054F, 1710.3F, 1.0F);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m0kqp~Tn1", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoHeight((-699));
      homeEnvironment0.setSubpartSizeUnderLight((-699));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setPhotoWidth((-699));
      homeEnvironment1.getWallsAlpha();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("RATIO_16_9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.RATIO_16_9
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight(1465);
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.setLightColor((-708));
      Camera camera0 = new Camera((-708), 2406, 0.0F, 587.13F, (-1170.3085F), 2366.388F);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "", "", object0);
      homeEnvironment1.setSubpartSizeUnderLight(0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("y{2f", propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment2.setPhotoWidth((-2522));
      homeEnvironment1.setAllLevelsVisible(false);
      assertEquals((-708), homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBqqGl>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, (-29), homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-29), homeTexture0, 6, homeTexture0, 331, (-29));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.setCeillingLightColor(19);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, homeTexture0, 6, homeTexture0, 331, (-776.0F));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      HomeEnvironment.Property.values();
      homeEnvironment1.getVideoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      HomeTexture homeTexture3 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment4 = new HomeEnvironment((-4246), homeTexture2, (-131), homeTexture3, 240, 19);
      HomeEnvironment homeEnvironment5 = new HomeEnvironment();
      homeEnvironment5.setVideoWidth((-29));
      HomeEnvironment homeEnvironment6 = new HomeEnvironment((-93), homeTexture1, 320, homeTexture3, (-93), 8.0F);
      homeEnvironment6.setPhotoWidth(314);
      assertEquals(314, homeEnvironment6.getPhotoWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.9383113296830845
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1922, (HomeTexture) null, 1922, (HomeTexture) null, 1922, 1922);
      homeEnvironment0.setVideoQuality(1922);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoWidth(1922);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      HomeEnvironment.Property.values();
      Random.setNextRandom(1922);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setPhotoHeight(6);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      Random.setNextRandom(8);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(1922, homeEnvironment0.getPhotoWidth());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = 0;
      homeEnvironment1.setPhotoHeight(0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.getLightColor();
      homeEnvironment2.setVideoFrameRate(0);
      try { 
        MockURL.URL("VIDEO_FRAME_RATE", "VIDEO_FRAME_RATE", 6, "VIDEO_FRAME_RATE");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: video_frame_rate
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoFrameRate(8);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ALL_LEVELS_VISIBLE");
      Camera camera0 = new Camera(8, (-131), (-16.1811F), (-131), (-1605.4755F), (-16.1811F));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment0.setVideoFrameRate(414);
      linkedList0.add(camera0);
      Camera camera1 = new Camera((-131), 1.0F, (-2251.5105F), (-2250.82F), 414, (-2251.5105F));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.322102232945105
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-3785));
      homeEnvironment0.setPhotoHeight((-1));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setVideoWidth((-1));
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getSkyTexture();
      homeEnvironment1.setSkyColor((-1));
      homeEnvironment1.setLightColor((-1616));
      homeEnvironment0.setCeillingLightColor(15);
      homeEnvironment1.setPhotoHeight((-1439));
      homeEnvironment1.setWallsAlpha(0.0F);
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.clone();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment1.setPhotoWidth(8);
      assertEquals((-1), homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getVideoQuality();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("GROUND_TEXTURE", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "com.eteks.sweethome3d.model.AspectRatio", object0, propertyChangeListenerProxy0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("GROUND_TEXTURE", "GROUND_TEXTURE", (Object) null, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setVideoFrameRate((-179));
      homeEnvironment0.setVideoFrameRate(19);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoWidth();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(19, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(3052);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(3052.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 1.0F, (-1394));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1394), homeTexture0, 0, homeTexture0, (-1823), (-569.62006F));
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-569.62006F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1394), homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1823), homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.clone();
      assertEquals(3052.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      Camera camera0 = new Camera((-103.8772F), (-103.8772F), 0, 0, (-720.5917F), 1549.4857F);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object1, ";xea.scj.|$J-_~)=", homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundColor(727);
      homeEnvironment0.clone();
      assertEquals(3052.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("il#D", "il#D", (Content) null, 1.0F, (-1861.14F), "il#D", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 1.7777778F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(1.7777778F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, int0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("UBql>", (Content) null, 331, (-776.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(331, homeTexture0, 0, homeTexture0, 6, 6);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(6);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight((-2250.8176F));
      CatalogTexture catalogTexture1 = new CatalogTexture("u", (Content) null, 1.5F, 1784.0F, false);
      catalogTexture0.compareTo(catalogTexture1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.setCeillingLightColor(320);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("UBql>", "", (Object) null, (Object) null);
      homeEnvironment1.setSubpartSizeUnderLight(320);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy0);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment1.setPhotoWidth(13684944);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals((-2250.8176F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.921015278026703
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(26);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setVideoWidth((-93));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      linkedList0.add((Camera) null);
      homeEnvironment0.setLightColor(2406);
      Camera camera0 = new Camera(6.0F, (-131), (-303.32F), (-93), 6.0F, 0.0F);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.921015278026703
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(26);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setVideoWidth((-93));
      homeEnvironment0.setVideoFrameRate((-131));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add((Camera) null);
      homeEnvironment0.setLightColor(2406);
      Camera camera0 = new Camera(6.0F, (-131), (-303.32F), (-93), 6.0F, 0.0F);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertEquals((-131), int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("P`XjX$A<~c", "P`XjX$A<~c", uRLContent0, 1125.08F, 243.5665F, "P`XjX$A<~c");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, homeTexture0, (-2259), 2117, 1125.08F);
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-2259), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1125.08F, float0, 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2117, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, (Content) null, 1.0F, 1.0F, "_=,lyS!CL':\"");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      int int0 = 1535;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-20), homeTexture0, (-311), 1535, 1.0F);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setVideoQuality((-304));
      homeEnvironment0.setPhotoQuality((-20));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setWallsAlpha(0.0F);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, (Content) null, 1.0F, 1.0F, "_=,lyS!CL':\"");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-311), 1538, 1.0F);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setVideoQuality((-304));
      homeEnvironment0.setPhotoQuality(0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1796), (-1796), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1796), homeTexture0, (-1796), (-1796), (-1796));
      homeEnvironment0.setVideoQuality(2);
      assertEquals(2, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(13427964);
      homeEnvironment0.setLightColor(13427964);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoFrameRate((-1256));
      homeEnvironment0.setVideoQuality((-1256));
      homeEnvironment0.setPhotoQuality((-1256));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-1256), homeEnvironment0.getVideoFrameRate());
      assertEquals((-1256), int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object0, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("x", "x", object1, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setGroundColor(3052);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(3052);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(3052.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("&", resourceURLContent0, (-2250.8176F), 1.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int0);
      
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }
}
