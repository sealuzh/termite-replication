/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:11:38 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.955118433802073
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("X%", "X%");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setIdentifier(72);
      rawVariable1.setCleaned(true);
      rawVariable1.setCodeBookNumber("X%");
      rawVariable1.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.createVariableSummary();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("X%", rawVariable1.getCodeBookNumber());
      
      rawVariable2.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.097608773824397
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.validateFields(valueLabel2);
      valueLabel2.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel1);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getDisplayName();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setAvailability("");
      User user0 = new User(" type=", "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(72);
      rawVariable0.setCleaned(false);
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getQuestionNumber();
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(derivedVariable3);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.getLabel();
      rawVariable0.getCodeBookNumber();
      rawVariable0.createVariableSummary();
      User user1 = new User();
      User user2 = new User("", "");
      Variable.detectFieldChanges(user2, derivedVariable2, derivedVariable2);
      derivedVariable2.removeSourceVariable(rawVariable0);
      assertEquals("72", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.9392719038789616
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel1);
      ValueLabel.validateFields(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("dl>GG-0J(n|)$A1xy");
      derivedVariable1.getCleaningDescription();
      User user1 = new User("", "blank");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable0);
      derivedVariable1.setCoded(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      derivedVariable0.getFilePath();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      rawVariable0.getValueLabels();
      rawVariable0.getOntologyTerms();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean1 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(boolean1 == boolean0);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.8945345374035827
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel2, valueLabel3);
      ValueLabel.validateFields(valueLabel3);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel1);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getDisplayName();
      derivedVariable2.setAvailability("blank");
      derivedVariable2.form = "EDIT";
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("");
      Variable.validateFields(derivedVariable2);
      rawVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.1585219781738383
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      User user0 = new User("", "]y'!!yMOF6p+w");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("RlZ])nNL4e|Ov");
      derivedVariable0.getNotes();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.setIdentifier(72);
      rawVariable0.setCleaned(false);
      rawVariable1.setCodeBookNumber("JNa7^?cDZlYqHe{NE");
      rawVariable0.getQuestionNumber();
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      rawVariable1.createVariableSummary();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, rawVariable1);
      assertEquals(72, rawVariable1.getIdentifier());
      
      derivedVariable1.removeSourceVariable(rawVariable2);
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.759615437459086
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getDisplayName();
      derivedVariable1.setAvailability(" type=");
      User user0 = new User("", "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(72);
      rawVariable0.setCleaned(true);
      rawVariable0.setCodeBookNumber("JNa7^?cDZlYqHe{NE");
      rawVariable0.getQuestionNumber();
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable0);
      derivedVariable1.getLabel();
      rawVariable1.getCodeBookNumber();
      rawVariable1.createVariableSummary();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, rawVariable1);
      derivedVariable0.removeSourceVariable(rawVariable1);
      rawVariable0.getAvailability();
      rawVariable0.clone();
      assertEquals("JNa7^?cDZlYqHe{NE", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.099394995559468
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User((String) null, "<in0");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("sQdqqDt%M`");
      Variable.validateFields(rawVariable0);
      rawVariable0.setNotes("<in0");
      rawVariable0.setQuestionNumber("<in0");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.getCleaningDescription();
      Variable.validateFields(rawVariable0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList0);
      rawVariable0.isNewRecord();
      assertEquals("<in0", rawVariable0.getNotes());
      
      derivedVariable1.getValueLabels();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8218052146640686
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel0, valueLabel2);
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getDisplayName();
      derivedVariable1.setAvailability(" type=");
      assertEquals(" type=", derivedVariable1.getAvailability());
      
      derivedVariable0.getCleaningDescription();
      User user1 = new User("", "");
      derivedVariable0.setCoded(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = null;
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.88093485711655
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("X%", "X%");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setIdentifier(72);
      rawVariable1.setCleaned(true);
      rawVariable1.setCodeBookNumber("X%");
      rawVariable1.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      rawVariable1.form = "";
      rawVariable0.getCodeBookNumber();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.createVariableSummary();
      User user1 = new User();
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable0);
      assertEquals(72, rawVariable0.getIdentifier());
      
      rawVariable2.getSupportingDocuments();
      assertEquals("Unknown", rawVariable2.getAvailability());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getLabel();
      derivedVariable0.getIdentifier();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.isCleaned();
      derivedVariable0.getDisplayName();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("variable.columnStart.label");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.setCodeBookNumber("SxBP~[p_4{I");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getCategory();
      assertEquals("variable.columnStart.label", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1152701327203047
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("|p.9B H>)&oZS }rm3", "RlZ])nNL4e|Ov");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setEmail("T");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      rawVariable0.setIdentifier(1533);
      rawVariable0.setCleaned(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("T");
      rawVariable0.getQuestionNumber();
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable1.getLabel();
      rawVariable2.getCodeBookNumber();
      rawVariable0.createVariableSummary();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.158239192737288
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("|p.9B H>)&oZS }rm3", "RlZ])nNL4e|Ov");
      user0.setIdentifier((-1968526675));
      derivedVariable0.setColumnStart((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setLabel("UNABLE_TO_CHECK_DOCUMENT_DUPLICATES");
      derivedVariable0.getNotes();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.form = "|p.9B H>)&oZS }rm3";
      rawVariable0.setIdentifier(1533);
      rawVariable0.setName(">-K");
      Variable.validateFields(rawVariable0);
      assertEquals(">-K", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      String string0 = rawVariable0.getCodeBookNumber();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      
      String string1 = rawVariable0.getAlias();
      assertEquals("", rawVariable0.getName());
      assertTrue(string1.equals((Object)string0));
      
      String string2 = derivedVariable0.getName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNotNull(string2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.774992591124235
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      User user0 = new User("", "]y'!!yMOF6p+w");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("RlZ])nNL4e|Ov");
      derivedVariable0.getNotes();
      user0.setEmail("RlZ])nNL4e|Ov");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("RlZ])nNL4e|Ov", rawVariable1.getLabel());
      
      rawVariable2.getNotes();
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.getFilePath();
      rawVariable0.setCleaned(false);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean0);
      
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_CHECK_DOCUMENT_DUPLICATES");
      derivedVariable0.getNotes();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.7836438451030356
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("");
      valueLabel1.clone();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(730);
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.addSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable2);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.9060837897170657
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getDisplayName();
      derivedVariable1.setAvailability(" type=");
      derivedVariable0.getCleaningDescription();
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Variable.validateFields(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable2);
      derivedVariable0.setFilePath("");
      derivedVariable0.getFilePath();
      derivedVariable0.setIsNewRecord(true);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable1);
      assertEquals(" type=", derivedVariable1.getAvailability());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9167460195023938
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaningDescription("variable.questionNumber.label");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.setIsNewRecord(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.addValueLabel((ValueLabel) null);
      rawVariable0.setCoded(false);
      assertEquals("variable.questionNumber.label", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setFilePath("general.fieldValue.unknown");
      derivedVariable0.getFilePath();
      derivedVariable0.setIsNewRecord(true);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = null;
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.getNotes();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setName((String) null);
      SupportingDocument supportingDocument0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.627323234076236
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("SxBP~[p_4{I", rawVariable0.getColumnEnd());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.getColumnEnd();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0514474029629954
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1);
      ontologyTerm0.setTerm("gf$C*tFV");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      derivedVariable0.isNewRecord();
      derivedVariable0.getIdentifier();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("gf$C*tFV");
      arrayList2.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      arrayList2.add(valueLabel1);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.setValueLabels(arrayList2);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getSourceVariables();
      derivedVariable0.setNotes("gf$C*tFV");
      arrayList1.stream();
      derivedVariable0.getDisplayName();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.666203723103655
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.questionNumber = null;
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable2.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9698092248500694
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setFilePath("0");
      derivedVariable0.setColumnStart("0");
      derivedVariable0.setCoded(true);
      derivedVariable0.getYear();
      derivedVariable0.getIdentifier();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("0", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7950553449261375
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCodeBookNumber("-Y");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable2.getSupportingDocuments();
      assertEquals("-Y", derivedVariable2.getCodeBookNumber());
      
      rawVariable0.getCodeBookNumber();
      rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.99413180373588
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("65@2telEce2[Dw", "65@2telEce2[Dw");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.setLabel("1hD");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getNotes();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      valueLabel1.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel1);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.setIdentifier(15);
      rawVariable0.setName("qp(j\"");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.getLabel();
      User user1 = new User("ontologyTerm.term.saveChanges", "MpL.4<");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setIdentifier(15);
      assertEquals("1hD", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.049365467169134
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "";
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      arrayList0.add(0, supportingDocument0);
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable1.setLabel("Ryq");
      derivedVariable0.getOntologyTerms();
      derivedVariable1.setQuestionNumber("Ryq");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getName();
      // Undeclared exception!
      try { 
        derivedVariable1.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1262368167947456
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.setFilePath("#Wxv|0boZ]lkb}n@");
      rawVariable0.setForm("");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setQuestionNumber("#Wxv|0boZ]lkb}n@");
      ontologyTerm1.setIdentifier((-1378));
      rawVariable0.setCleaningStatus("");
      rawVariable0.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setCodeBookNumber("=S\"&3[>c57H,Yl6");
      derivedVariable1.setOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      assertEquals("=S\"&3[>c57H,Yl6", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7926143025735883
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("n;zo2X%sQ8P7L`");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("n;zo2X%sQ8P7L`");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("y4p}V~.1M");
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setIdentifier(2937);
      User user0 = new User("Bb+Cy\"Ik $v?8I*O2", "n;zo2X%sQ8P7L`");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1109));
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertEquals("n;zo2X%sQ8P7L`", derivedVariable0.getForm());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable2);
      derivedVariable1.clone();
      derivedVariable2.getFilePath();
      derivedVariable2.setCodeBookNumber("");
      derivedVariable1.getName();
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9699627658515864
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setAlias("JIc#3*2n7");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      derivedVariable0.getNotes();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.getDisplayName();
      valueLabel1.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setIdentifier(1533);
      rawVariable0.setName("N;L6._cQp\"%ilP1sU");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      rawVariable0.getCleaningStatus();
      assertEquals("1533", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.0211613254218035
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.setCodeBookNumber("oH$-s4aa x(=?z?");
      rawVariable0.getQuestionNumber();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getLabel();
      rawVariable1.getCodeBookNumber();
      rawVariable1.createVariableSummary();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("oH$-s4aa x(=?z?", rawVariable0.getCodeBookNumber());
      
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8623417620344114
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("|p.9B H>)&oZS }rm3", "RlZ])nNL4e|Ov");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setLabel("UNABLE_TO_CHECK_DOCUMENT_DUPLICATES");
      derivedVariable0.getNotes();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.setIdentifier(1533);
      rawVariable0.setName("");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      rawVariable0.getLabel();
      assertEquals("1533", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("<in0");
      rawVariable0.questionNumber = "G3";
      rawVariable0.createVariableSummary();
      rawVariable0.getDisplayName();
      assertEquals("<in0", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.069946239856828
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("SUPPORTING_DOCUMENT", "|p.9B H>)&oZS }rm3");
      derivedVariable0.columnEnd = "SUPPORTING_DOCUMENT";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setLabel("variable.cleaningDescription.label");
      derivedVariable0.getNotes();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setIdentifier(1533);
      rawVariable0.setName(" 3<c)");
      Variable.validateFields(rawVariable0);
      assertEquals("1533", rawVariable0.getDisplayItemIdentifier());
      assertEquals(1533, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.70816141220136
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("n;zo2X%sQ8P7L`");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("n;zo2X%sQ8P7L`");
      ontologyTerm0.setTerm("");
      ontologyTerm0.setNameSpace("/t@qv,N!s'=#");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.setName("/t@qv,N!s'=#");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.8683219448919495
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCleaned(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnStart((String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable2);
      rawVariable1.getCodeBookNumber();
      rawVariable1.setForm("SxBP~[p_4{I");
      rawVariable1.clone();
      rawVariable0.setCleaned(true);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setCodeBookNumber("SxBP~[p_4{I");
      rawVariable2.getQuestionNumber();
      RawVariable rawVariable4 = new RawVariable();
      Variable.validateFields(rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getLabel();
      rawVariable0.getCodeBookNumber();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.761392617485683
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = null;
      derivedVariable0.setColumnEnd("user.city.saveChanges");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      String string0 = "mGD;";
      supportingDocument0.setDescription("mGD;");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.setCoded(true);
      derivedVariable0.getIdentifier();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.clone();
      derivedVariable0.setCategory("user.city.saveChanges");
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.8656762650010674
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      valueLabel1.setEditingOperationType((ValueLabel.EditingOperationType) null);
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User("(rTJ7qC'~_RHp0", "!ZzH");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.getDisplayName();
      valueLabel1.setLabel(" type=");
      valueLabel2.setMissingValue(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setIdentifier(593);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("-");
      Variable.validateFields(rawVariable0);
      rawVariable1.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable2.cloneAttributes(derivedVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable2.getAlternativeVariable();
      assertEquals("-", rawVariable2.getDisplayName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.columnEnd = ",\"0(\"uJmfAQ1";
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.getDisplayName();
      valueLabel0.setLabel(" type=");
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAlias("");
      derivedVariable0.setFilePath("");
      String string0 = derivedVariable0.getYear();
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("r");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.getFilePath();
      User user0 = new User();
      user0.setEmail(":T{1R");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("r", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.9331095730056105
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setCleaned(false);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setAlias("JIc#3*2n7");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setDescription("JIc#3*2n7");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(false);
      rawVariable0.setColumnStart("?}eBZ}f~3_;Hv?,e");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getCodeBookNumber();
      rawVariable0.setForm("");
      rawVariable1.clone();
      rawVariable1.setCleaned(true);
      rawVariable0.setCodeBookNumber("ONTOLOGY_TERM");
      rawVariable1.getQuestionNumber();
      assertEquals("JIc#3*2n7", rawVariable1.getAlias());
      
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(rawVariable2);
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setCategory("");
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.clone();
      derivedVariable0.isCoded();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        arrayList1.remove(327);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 327, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("Qhnl/!U|_dtE-FfA5");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-27));
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnStart();
      assertEquals("Qhnl/!U|_dtE-FfA5", rawVariable0.getCategory());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("fDWZ)w-");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCategory("9dm`;VEvI_i 2~'");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setForm("");
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList1);
      assertEquals("9dm`;VEvI_i 2~'", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.ensureCapacity(0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setIdentifier(0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setDescription((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCodeBookNumber();
      rawVariable0.setForm(">Oy!T?:AC");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.8659474835429033
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("MISSING_DISPLAY_LIST_SELECTOR");
      rawVariable0.clone();
      rawVariable0.setCleaned(false);
      rawVariable0.setCodeBookNumber("MISSING_DISPLAY_LIST_SELECTOR");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getQuestionNumber();
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      assertEquals("MISSING_DISPLAY_LIST_SELECTOR", rawVariable0.getCodeBookNumber());
      
      rawVariable2.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSourceVariable(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "variable.codeBookNumber.label";
      rawVariable0.setCleaned(false);
      rawVariable0.setQuestionNumber("variable.codeBookNumber.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setYear("");
      ontologyTerm0.setTerm("");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setName("{_Pt");
      rawVariable0.getName();
      rawVariable0.getCleaningDescription();
      assertEquals("variable.codeBookNumber.label", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.setYear("a1q,rv8");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.form = "general.fieldValue.blank";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setFilePath("");
      rawVariable0.setForm("");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setQuestionNumber("");
      ontologyTerm0.setIdentifier(446);
      rawVariable0.setCleaningStatus("=S\"&3[>c57H,Yl6");
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.validateFields(valueLabel3);
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel2, valueLabel3);
      ValueLabel.validateFields(valueLabel3);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel1);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getDisplayName();
      derivedVariable2.setAvailability("blank");
      assertEquals("blank", derivedVariable2.getAvailability());
      
      derivedVariable0.getCleaningDescription();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.150915284550773
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel2, valueLabel3);
      ValueLabel.validateFields(valueLabel3);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel1);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getDisplayName();
      derivedVariable2.setAvailability("blank");
      derivedVariable0.getCleaningDescription();
      User user1 = new User("wlJD'6w", "blank");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      Variable.validateFields(derivedVariable2);
      derivedVariable0.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCodeBookNumber();
      rawVariable0.createVariableSummary();
      derivedVariable2.setCleaningStatus("blank");
      User user2 = new User();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable3);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable4);
      assertEquals("blank", derivedVariable2.getAvailability());
      
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(false);
      rawVariable0.setCleaningDescription("");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.iterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.isCleaned();
      rawVariable0.getCleaningStatus();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setFilePath("Unknown");
      assertEquals("Unknown", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.spliterator();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      valueLabel0.setMissingValue(false);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAlias("-b15b2bG5zxr<th7A");
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setCleaningDescription("-b15b2bG5zxr<th7A");
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.614904818248016
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.questionNumber = null;
      User user0 = new User("n;zo2X%sQ8P7L`", "/mG6I#;i`");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.666203723103655
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.questionNumber = null;
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.8976371986512865
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      User user0 = new User("", "]y'!!yMOF6p+w");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setLabel("]y'!!yMOF6p+w");
      valueLabel0.setMissingValue(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier(1533);
      rawVariable0.setName("]y'!!yMOF6p+w");
      Variable.validateFields(rawVariable1);
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      assertEquals(1533, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5807156256483044
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.70721070718777
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("");
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setIdentifier(2937);
      User user0 = new User("", "-");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1109));
      arrayList0.add(supportingDocument1);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable1.getFilePath();
      derivedVariable1.setCodeBookNumber("B3e=!9");
      assertEquals("B3e=!9", derivedVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.809819621763259
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      User user0 = new User("qwIzA>\"\"Y", "qwIzA>\"\"Y");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.7997955377152293
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      User user0 = new User("-", "]y'!!yMOF6p+w");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setLabel("]y'!!yMOF6p+w");
      valueLabel0.setMissingValue(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1563);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningDescription("");
      rawVariable1.setCodeBookNumber("RlZ])nNL4e|Ov");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getQuestionNumber();
      RawVariable rawVariable3 = new RawVariable();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getCodeBookNumber();
      rawVariable0.getName();
      assertEquals("1563", rawVariable0.getDisplayItemIdentifier());
      
      rawVariable4.getAlias();
      assertFalse(rawVariable4.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.843527069383092
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("|p.9B H>)&oZS }rm3", "RlZ])nNL4e|Ov");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      user0.setLastName("j]Az-!XW3V.");
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.506807702251549
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.0494615932866
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setLabel("variable.questionNumber.label");
      derivedVariable1.getNotes();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel2.setMissingValue(false);
      derivedVariable1.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      rawVariable0.setIdentifier(1533);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("");
      Variable.validateFields(derivedVariable0);
      derivedVariable1.addSourceVariable(rawVariable1);
      rawVariable0.getValueLabels();
      assertEquals("1533", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.8935147911123833
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("variable.questionNumber.label");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.setIsNewRecord(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaned(true);
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable2, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.842433123445637
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(false);
      rawVariable0.setCodeBookNumber("JNa7^?cDZlYqHe{NE");
      rawVariable0.getQuestionNumber();
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      rawVariable0.getCodeBookNumber();
      rawVariable0.createVariableSummary();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("JNa7^?cDZlYqHe{NE", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      String string0 = rawVariable0.getCodeBookNumber();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getLabel());
      
      int int0 = derivedVariable1.getIdentifier();
      assertEquals(0, int0);
      
      String string1 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string1);
      
      String string2 = rawVariable0.getFilePath();
      assertTrue(string2.equals((Object)string0));
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.0121902685004995
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("65@2telEce2[Dw", "65@2telEce2[Dw");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.setLabel("1hD");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getNotes();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      valueLabel0.setMissingValue(true);
      derivedVariable2.addValueLabel(valueLabel1);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      assertEquals("1hD", derivedVariable1.getLabel());
      
      rawVariable0.setIdentifier(15);
      rawVariable0.setName("mntkCaQ.");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      rawVariable0.getLabel();
      User user1 = new User((String) null, "1hD");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      boolean boolean0 = derivedVariable2.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("p7)$zumW");
      rawVariable0.setColumnEnd("");
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "user.status.saveChanges";
      rawVariable0.form = "";
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.columnStart = "";
      User user0 = new User("CANCEL", "user.status.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.9236467894834073
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.setName("SxBP~[p_4{I");
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.cloneAttributes(derivedVariable0);
      ontologyTerm0.setTerm("SxBP~[p_4{I");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("SxBP~[p_4{I", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7903336705349573
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCodeBookNumber("zi0wd}hZ(");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber("SxBP~[p_4{I");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      derivedVariable0.setIsNewRecord(false);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setLabel("X%");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAlias("general.fieldValue.blank");
      derivedVariable0.setFilePath("");
      derivedVariable0.getYear();
      assertEquals("general.fieldValue.blank", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAvailability(" type=");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.758394184018364
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("general.fieldValue.blank");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.listIterator();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.containsSourceVariable(rawVariable2);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSupportingDocument(supportingDocument0);
      derivedVariable2.removeSourceVariable(derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.setCodeBookNumber("oH$-s4aa x(=?z?");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable3.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = null;
      try {
        arrayList2 = new ArrayList<SupportingDocument>((-1141046512));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1141046512
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
