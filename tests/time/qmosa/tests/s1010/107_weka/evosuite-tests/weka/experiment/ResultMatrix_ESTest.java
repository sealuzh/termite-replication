/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 22:31:28 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.666150180275129
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setSize(69, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setMean(2, (-5503), (-2226.343889184192));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.5544608280347942
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[2];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      int int0 = (-2645);
      resultMatrixSignificance0.setRowNameWidth((-2645));
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(661, (-27));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.648839030135659
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setSize(69, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_StdDevPrec = (-1881);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "<td><b>";
      stringArray0[2] = "<td><b>";
      stringArray0[3] = " ";
      resultMatrixPlainText0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String[][] stringArray1 = new String[3][0];
      stringArray1[0] = stringArray0;
      String[] stringArray2 = new String[3];
      stringArray2[0] = ")";
      stringArray2[1] = "<td><b>";
      stringArray2[2] = "]";
      stringArray1[1] = stringArray2;
      stringArray1[2] = stringArray0;
      resultMatrixCSV0.getColSize(stringArray1, 3192);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowName((-228), " ");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.clearSummary();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.844305326698263
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_StdDevPrec = (-1881);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "<td><b>";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = (-1881);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = (-1881);
      intArray2[5] = 0;
      intArray2[6] = (-1881);
      intArray0[1] = intArray2;
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.setPrintRowNames(true);
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setRowName((-1881), "$\bullet$");
      resultMatrixHTML0.m_RowOrder = intArray2;
      resultMatrixHTML0.setSummary(intArray0, intArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance1.toStringRanking();
      resultMatrixHTML0.setCount(2563, 0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6833418702181717
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(true);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      assertEquals(2, resultMatrixGnuPlot0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 45;
      intArray0[5] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.setMean(2, 2, 0);
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.777956318177189
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.setPrintRowNames(true);
      String[][] stringArray0 = new String[3][4];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "v";
      stringArray1[1] = " ";
      stringArray1[2] = "*";
      stringArray1[3] = "*";
      stringArray1[4] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[2] = stringArray2;
      String[] stringArray3 = new String[2];
      stringArray3[0] = "*";
      int[][] intArray1 = new int[2][5];
      intArray1[0] = intArray0;
      intArray1[1] = null;
      resultMatrixPlainText0.m_NonSigWins = intArray1;
      stringArray3[1] = "(";
      resultMatrixPlainText0.getRevision();
      stringArray0[2] = stringArray3;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.0650469916099863
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][0];
      resultMatrixHTML0.setRanking(intArray0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixHTML0.getRevision();
      resultMatrixCSV0.getMean((-1), 2);
      resultMatrixCSV0.getDisplayName();
      int[] intArray1 = new int[7];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 25;
      intArray1[4] = (-1);
      intArray1[5] = 1;
      intArray1[6] = 0;
      resultMatrixCSV0.setRowOrder(intArray1);
      resultMatrixCSV0.setMean(0, 1, 1453.095346975402);
      resultMatrixCSV0.significanceWidthTipText();
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][8];
      boolean boolean0 = true;
      resultMatrixHTML0.setEnumerateColNames(true);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2190540484348276
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixHTML0.getRevision();
      resultMatrixCSV0.getMean(1949, 2);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setMean(0, 1, 1453.095346975402);
      resultMatrixCSV0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.395931820577418
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixHTML0.getAverage(3);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int int0 = resultMatrixSignificance0.getColNameWidth();
      assertEquals(0, int0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(27, 2);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      assertEquals(27, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      assertTrue(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 2;
      intArray1[4] = 1;
      intArray1[3] = 1;
      intArray1[6] = 1;
      intArray1[7] = 2;
      intArray1[8] = 1;
      resultMatrixCSV0.setRowOrder(intArray1);
      resultMatrixCSV0.setMean(0, 57, 2290.1);
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.689119634502147
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[2];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setRowNameWidth(26);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2043, 1);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 26;
      intArray0[2] = 2;
      intArray0[3] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.setMean(97, 2, 1);
      resultMatrixGnuPlot0.setCount(0, 0.0);
      resultMatrixSignificance0.setRowNameWidth(0);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 1);
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      intArray0[3] = 97;
      intArray0[4] = 97;
      intArray0[5] = 1;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.setColNameWidth(82);
      resultMatrixPlainText0.padString("BR+7}a[5]B_G", 0);
      resultMatrixPlainText0.removeFilterNameTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 1161);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.6720107926859673
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 45;
      intArray0[5] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.setMean(2, 2, 0);
      assertEquals(2, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.239601027581031
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.trimString((String) null, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.774342220194881
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      
      resultMatrixPlainText0.m_StdDevPrec = (-1881);
      String[] stringArray0 = new String[9];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getMeanPrec();
      resultMatrixLatex0.showAverageTipText();
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex0.setSignificanceWidth(2);
      assertEquals((-1881), resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.783847570090688
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.setPrintRowNames(true);
      String[][] stringArray0 = new String[3][4];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "v";
      stringArray1[1] = " ";
      stringArray1[2] = "*";
      stringArray1[3] = "*";
      stringArray1[4] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[2];
      stringArray3[0] = "*";
      int[][] intArray1 = new int[2][5];
      intArray1[0] = intArray0;
      intArray1[1] = null;
      resultMatrixPlainText0.m_NonSigWins = intArray1;
      stringArray3[1] = "(";
      resultMatrixPlainText0.getRevision();
      stringArray0[2] = stringArray3;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getColSize(stringArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.377623168935292
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 1);
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      intArray0[3] = 97;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getRowHidden(4);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setStdDevWidth(4549);
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 1;
      resultMatrixHTML0.setColOrder(intArray1);
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.getColSize(stringArray0, 2);
      assertEquals(4549, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixHTML0.setRowName(95, "*");
      resultMatrixCSV0.clearSummary();
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.363708426746307
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSignificanceWidth(3155);
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.getRowName(5);
      resultMatrixGnuPlot0.TIE_STRING = " ";
      resultMatrixGnuPlot0.getRowHidden((-1165));
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixHTML0.setPrintColNames(false);
      resultMatrixHTML0.getRowName(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 5;
      resultMatrixCSV0.m_ShowAverage = false;
      intArray0[2] = (-1165);
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixHTML0.setRowName(26, "4uR];?WYvy)UU8m4");
      resultMatrixCSV0.clearSummary();
      assertEquals(3155, resultMatrixHTML0.getSignificanceWidth());
      
      resultMatrixGnuPlot0.getRowName(86);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8501274359005797
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 1);
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      resultMatrixPlainText0.padString("H.-/", 97);
      resultMatrixPlainText0.removeFilterNameTipText();
      int int0 = 69;
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(69, 2571);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0273535469104145
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_PrintColNames = false;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setSignificanceWidth((-646));
      resultMatrixCSV0.removeFilterName((String) null);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("*", 2);
      resultMatrixPlainText0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setStdDevPrec(97);
      resultMatrixSignificance0.listOptions();
      resultMatrixSignificance0.toStringKey();
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4247262062184958
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSignificanceWidth(3155);
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.getRowName(5);
      resultMatrixGnuPlot0.TIE_STRING = " ";
      resultMatrixGnuPlot0.getRowHidden((-1165));
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setStdDevWidth((-1165));
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 5;
      resultMatrixCSV0.m_ShowAverage = false;
      intArray0[2] = (-1165);
      intArray0[3] = 1;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.setPrintRowNames(false);
      resultMatrixCSV0.getColSize(stringArray0, 0);
      resultMatrixHTML0.setRowName(26, "4uR];?WYvy)UU8m4");
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.getDefaultShowAverage();
      resultMatrixHTML0.setMeanWidth(177);
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.413279052849767
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.clear();
      Vector<Vector<String>> vector0 = new Vector<Vector<String>>();
      Vector<String> vector1 = new Vector<String>();
      Vector<String> vector2 = new Vector<String>();
      vector2.spliterator();
      vector0.add((Vector<String>) null);
      Vector<String> vector3 = new Vector<String>();
      vector0.remove((Object) vector3);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setMeanPrec(1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.setStdDevWidth(3322);
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.toString();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixCSV1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.173325077125065
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 1);
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getRowHidden(97);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setStdDevWidth(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot((-1165), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.4602945882718297
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 1);
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringSummary();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixCSV0.setSignificanceWidth(2);
      resultMatrixCSV0.removeFilterName("Average");
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getCount(0);
      resultMatrixCSV0.toStringSummary();
      assertEquals(2, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.546335115248052
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      resultMatrixHTML0.getColHidden((-2526));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(3338, 2);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6561421318043656
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixCSV0.getMean((-3721), 0);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setMean(0, (-654), Double.NaN);
      resultMatrixCSV0.trimString("LGG", 24);
      assertEquals(2, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      resultMatrixGnuPlot0.m_ColHidden = booleanArray0;
      resultMatrixGnuPlot0.setMeanWidth(0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getRevision();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1837;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 1;
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertTrue(resultMatrixPlainText0.getDefaultPrintColNames());
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1824451341194315
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = null;
      resultMatrixHTML0.setOptions((String[]) null);
      resultMatrixHTML0.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.0617289070863762
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.LEFT_PARENTHESES = null;
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 0;
      intArray0[5] = 2;
      resultMatrixHTML0.WIN_STRING = null;
      intArray0[6] = 0;
      resultMatrixHTML0.m_RankingWins = intArray0;
      resultMatrixHTML0.setOptions((String[]) null);
      resultMatrixHTML0.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.290216823317803
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixSignificance0.WIN_STRING = "mean-width";
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixSignificance0.setStdDevPrec(0);
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.248034073718318
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "*";
      stringArray0[3] = "(";
      stringArray0[4] = " ";
      stringArray0[5] = "(";
      stringArray0[6] = "v";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.LEFT_PARENTHESES = null;
      int[] intArray0 = new int[5];
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML1.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9678486540041416
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 1);
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      intArray0[3] = 97;
      intArray0[4] = 97;
      intArray0[5] = 1;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.padString("xh6j##", 1);
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixPlainText0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setStdDevPrec(0);
      resultMatrixSignificance0.toStringKey();
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.041480576700527
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(97, 1);
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      intArray0[3] = 97;
      intArray0[4] = 97;
      intArray0[5] = 1;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.padString("BR+7}a[5]B_G", 0);
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixPlainText0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.setStdDevPrec((-1243));
      resultMatrixSignificance0.listOptions();
      resultMatrixSignificance0.toStringKey();
      int[][] intArray1 = new int[0][9];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray1, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.642940642196168
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.toStringSummary();
      int[][] intArray0 = new int[7][5];
      int[] intArray1 = new int[7];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 26;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 1;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 26;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 26;
      intArray2[7] = 0;
      intArray2[8] = 7;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = 0;
      intArray3[3] = 1;
      intArray3[4] = 2;
      intArray3[5] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 0;
      intArray5[1] = 2;
      intArray5[2] = 1;
      intArray5[3] = (-2785);
      intArray5[4] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[0];
      intArray0[5] = intArray6;
      int[] intArray7 = new int[9];
      intArray7[0] = 0;
      intArray7[1] = (-2785);
      intArray7[2] = 0;
      intArray7[3] = 0;
      intArray7[4] = 0;
      intArray7[5] = 7;
      intArray7[6] = 1;
      intArray7[7] = 1;
      intArray7[8] = 2;
      intArray0[6] = intArray7;
      resultMatrixSignificance0.m_NonSigWins = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setSize(69, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      resultMatrixSignificance0.toStringMatrix();
      assertEquals(2, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.473507028172072
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      intArray0[3] = 97;
      intArray0[4] = 97;
      resultMatrixPlainText0.m_RowOrder = intArray0;
      intArray0[5] = 1;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.padString("(", 0);
      resultMatrixPlainText0.removeFilterNameTipText();
      int[][] intArray1 = new int[11][6];
      intArray1[0] = resultMatrixPlainText0.m_ColOrder;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getOptions();
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setSize(0, 1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixLatex0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.1865059149679476
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 26;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 26);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance1);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.setSignificanceWidth(2);
      resultMatrixCSV0.clearSummary();
      resultMatrixCSV0.getSignificance(5, 1);
      resultMatrixSignificance1.setSize(0, 25);
      resultMatrixPlainText0.meanPrecTipText();
      resultMatrixPlainText0.TIE_STRING = "(";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.toStringKey();
      resultMatrixPlainText0.getSummaryTitle(2801);
      resultMatrixHTML0.WIN_STRING = " |";
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixSignificance1.m_ColNameWidth = 2;
      // Undeclared exception!
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.6093582611344632
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      int[][] intArray0 = new int[3][2];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[4] = " ";
      stringArray0[5] = "(";
      stringArray0[6] = "kN,:)s\"eRJ-( ";
      stringArray0[7] = "v";
      resultMatrixSignificance0.clear();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixPlainText0.m_ColHidden = booleanArray0;
      resultMatrixPlainText0.setOptions(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.391831376381126
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixPlainText0.clear();
      Vector<Vector<String>> vector0 = new Vector<Vector<String>>();
      resultMatrixPlainText0.m_HeaderKeys = vector0;
      Vector<String> vector1 = new Vector<String>();
      vector1.spliterator();
      vector0.add(vector1);
      resultMatrixPlainText0.TIE_STRING = "J'3^rW%";
      resultMatrixPlainText0.m_ShowAverage = true;
      vector0.remove((Object) ")");
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.getDefaultPrintColNames();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setMeanPrec(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.setStdDevWidth((-1394));
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.setEnumerateRowNames(true);
      resultMatrixLatex0.m_ShowStdDev = true;
      resultMatrixLatex0.toString();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.518759179462237
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.m_PrintColNames = false;
      resultMatrixCSV0.toStringSummary();
      resultMatrixCSV0.setSignificanceWidth((-646));
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      
      String string0 = resultMatrixCSV0.removeFilterName((String) null);
      assertNull(string0);
      
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      resultMatrixCSV0.listOptions();
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      resultMatrixCSV0.m_ColHidden = booleanArray0;
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.getDefaultEnumerateColNames();
      double double0 = resultMatrixCSV0.getCount((-1361));
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.516329201889268
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(56, 56);
      resultMatrixCSV0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.getDefaultStdDevWidth();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV1.getRowOrder();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "]";
      stringArray0[1] = "*";
      stringArray0[2] = " ";
      stringArray0[3] = "[";
      stringArray0[4] = "-ranking data not set-";
      stringArray0[5] = "]";
      stringArray0[6] = "log2(4.6): ";
      stringArray0[7] = "*";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.337165041277663
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixHTML0.getVisibleColCount();
      resultMatrixPlainText0.getDefaultStdDevPrec();
      resultMatrixPlainText0.removeFilterName("\" rK.ZFAcfpU[V9q&");
      resultMatrixPlainText0.removeFilterNameTipText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixPlainText0.getDefaultMeanWidth();
      resultMatrixHTML0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      resultMatrixGnuPlot0.LOSS_STRING = "v";
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixPlainText0.toStringRanking();
      resultMatrixGnuPlot0.getShowAverage();
      resultMatrixGnuPlot0.meanPrecTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.528828714116742
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(405, 0);
      resultMatrixCSV0.toStringSummary();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      
      resultMatrixCSV0.setSignificanceWidth(2);
      resultMatrixCSV0.removeFilterName("!a. 7&?f+.R:q]r~m");
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getCount(800);
      resultMatrixCSV0.getDisplayName();
      assertEquals(2, resultMatrixCSV0.getSignificanceWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals("Key,\n[1],col0\n", string0);
      
      resultMatrixCSV0.stdDevPrecTipText();
      resultMatrixCSV0.meanPrecTipText();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = true;
      booleanArray0[8] = false;
      resultMatrixHTML0.m_ColHidden = booleanArray0;
      resultMatrixHTML0.m_StdDevWidth = (-111);
      resultMatrixHTML0.getDefaultPrintColNames();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.92887993459394
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clearSummary();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 97;
      intArray0[2] = 1;
      intArray0[3] = 97;
      intArray0[4] = 97;
      resultMatrixPlainText0.m_RowOrder = intArray0;
      intArray0[5] = 1;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.padString("(", 0);
      resultMatrixPlainText0.removeFilterNameTipText();
      int[][] intArray1 = new int[9][6];
      intArray1[0] = resultMatrixPlainText0.m_ColOrder;
      int[] intArray2 = new int[4];
      intArray2[0] = 97;
      intArray2[1] = 97;
      intArray2[2] = 2;
      intArray2[3] = 0;
      intArray1[1] = intArray2;
      intArray1[2] = resultMatrixPlainText0.m_RowOrder;
      intArray1[3] = intArray0;
      intArray1[4] = resultMatrixPlainText0.m_RowOrder;
      intArray1[3] = intArray0;
      intArray1[6] = resultMatrixPlainText0.m_ColOrder;
      intArray1[7] = resultMatrixPlainText0.m_RowOrder;
      intArray1[8] = intArray0;
      resultMatrixPlainText0.setRanking(intArray1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(97, 1161);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.8526379562735795
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setShowAverage(true);
      boolean boolean0 = resultMatrixSignificance0.isSignificance((-667));
      assertTrue(resultMatrixSignificance0.getShowAverage());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8428806153171315
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      stringArray0[2] = "kN,:\u0000)s\"eRJ-%( ";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[6] = ")";
      resultMatrixPlainText0.doubleToString((-1482.575108494161), 34);
      stringArray0[7] = " ";
      stringArray0[8] = ")";
      try { 
        resultMatrixPlainText0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.3826655783158333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.doubleToString(1, 1);
      resultMatrixGnuPlot0.getRowHidden(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[";
      stringArray0[1] = "]";
      stringArray0[2] = "1.0";
      stringArray0[3] = " ";
      stringArray0[4] = "*";
      stringArray0[5] = "]";
      ResultMatrixCSV.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 97);
      String[][] stringArray0 = new String[3][3];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = " ";
      stringArray2[1] = "*";
      stringArray2[2] = "v";
      stringArray2[3] = ")";
      stringArray2[4] = ")";
      stringArray2[5] = "*";
      stringArray2[6] = "(";
      stringArray2[7] = "v";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[0];
      stringArray0[2] = stringArray3;
      resultMatrixSignificance0.getColSize(stringArray0, 26, false, true);
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(97, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(26, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9083826809913753
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "r8K;#i";
      stringArray0[1] = "The number of decimals after the decimal point for the mean.";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      resultMatrixCSV0.getMean(1, 0);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setMean(1, 32, 1453.095346975402);
      resultMatrixCSV0.printColNamesTipText();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6680787022174823
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "r8K;i";
      stringArray0[1] = "The number of decimals after the decimal point for the mean.";
      stringArray0[2] = "count-width";
      stringArray0[3] = "";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      double double0 = resultMatrixCSV0.getMean(0, 2);
      assertEquals(0.0, double0, 0.01);
      
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setMean(62, (-2), 444);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.848217372436773
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.doubleToString(2628.2867598767666, 490);
      resultMatrixPlainText0.getDefaultPrintRowNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.m_RankingDiff = intArray0;
      resultMatrixHTML0.setShowStdDev(true);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = " ";
      resultMatrixLatex0.setMeanWidth((-1411));
      stringArray0[2] = "";
      stringArray0[3] = "CfC%{OiEL.Z6=";
      stringArray0[4] = "";
      stringArray0[5] = "";
      resultMatrixHTML0.m_RowNames = stringArray0;
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixCSV0.getDefaultCountWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      String[][] stringArray0 = new String[3][0];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "(";
      stringArray1[1] = "$\bullet$";
      stringArray1[2] = "  (No. of datasets where [col] >> [row])\n";
      stringArray1[3] = "(";
      stringArray1[4] = "$\bullet$";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[9];
      stringArray2[0] = "#";
      stringArray2[1] = "$\bullet$";
      stringArray2[2] = ")";
      stringArray2[3] = "$circ$";
      stringArray2[4] = "Z7n5aReJkV_}s,:bt";
      stringArray2[5] = " ";
      stringArray2[6] = "(";
      stringArray2[7] = "  (No. of datasets where [col] >> [row])\n";
      stringArray2[8] = "$\bullet$";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[4];
      stringArray3[0] = "jjb~>A?'*\">P D";
      stringArray3[1] = ")";
      stringArray3[2] = "G";
      stringArray3[3] = "Z7n5aReJkV_}s,:bt";
      stringArray0[2] = stringArray3;
      int int0 = resultMatrixLatex0.getColSize(stringArray0, (-1423), true, true);
      assertEquals(0, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.WIN_STRING = "Generates the output as plain text (for fixed width fonts).";
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.getRemoveFilterName();
      int[][] intArray0 = new int[6][2];
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 2;
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray4[2] = 2;
      intArray4[3] = 0;
      intArray4[4] = 36;
      intArray4[5] = 97;
      intArray4[6] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 97;
      intArray5[1] = 36;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[0] = 2;
      intArray6[1] = 1;
      intArray6[2] = 0;
      intArray6[3] = 0;
      intArray6[4] = 36;
      intArray6[5] = 97;
      intArray0[5] = intArray6;
      resultMatrixLatex0.m_NonSigWins = intArray0;
      resultMatrixLatex0.getDefaultShowStdDev();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("8C'f+.R'hoy!h .(#s");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      Vector<Vector<String>> vector0 = new Vector<Vector<String>>();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultShowStdDev();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.597385923184309
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.m_StdDevPrec = (-1881);
      String[] stringArray0 = new String[9];
      resultMatrixPlainText0.clearRanking();
      stringArray0[0] = " ";
      stringArray0[1] = "<td><b>";
      stringArray0[2] = "kN,:\u0000)s\"eRJ-%( ";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[5] = "(";
      stringArray0[6] = ")";
      stringArray0[7] = " ";
      stringArray0[8] = ")";
      resultMatrixPlainText0.setOptions(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.toStringKey();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.094825497977895
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][0];
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixHTML0.getRevision();
      resultMatrixCSV0.getMean(1949, 2);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.m_ColNames = null;
      int[] intArray1 = new int[7];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 25;
      resultMatrixCSV0.setMeanWidth(1);
      intArray1[4] = 1949;
      intArray1[5] = 1;
      intArray1[6] = 0;
      resultMatrixCSV0.setRowOrder(intArray1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setMean(0, 1, 1453.095346975402);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.454762770278199
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_StdDevWidth = 97;
      resultMatrixSignificance0.setMeanPrec((-766));
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = (-766);
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.clearRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setMeanWidth((-563));
      resultMatrixHTML0.m_MeanWidth = 1126;
      resultMatrixHTML0.m_PrintRowNames = false;
      resultMatrixHTML0.m_StdDevWidth = 0;
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.countWidthTipText();
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      resultMatrixHTML0.m_RowNames = stringArray0;
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getShowAverage();
      resultMatrixHTML0.printRowNamesTipText();
      resultMatrixHTML0.setRemoveFilterName(false);
      resultMatrixHTML0.toStringSummary();
      resultMatrixSignificance0.setSignificance(2, 0, 26);
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.4355393318232603
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[0][0];
      resultMatrixHTML0.setRanking(intArray0);
      String string0 = resultMatrixHTML0.toStringKey();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n   <tr><td><b>(1)</b></td><td>col0</td></tr>\n</table>\n", string0);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixHTML0.getRevision();
      double double0 = resultMatrixCSV0.getMean(1949, 2);
      assertEquals(0.0, double0, 0.01);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setMean((-2372), 0, 0.0);
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertEquals(0, int0);
      
      int int1 = resultMatrixCSV0.getRowNameWidth();
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(25, int1);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.addHeader("", "e");
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.023477447436418
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      int[][] intArray0 = new int[3][2];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 2;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray2[5] = 1;
      intArray2[6] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = 1;
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixSignificance0.isAverage(20);
      resultMatrixSignificance0.toStringKey();
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.5005534849549735
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSignificanceWidth(3155);
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.getRowName(5);
      resultMatrixGnuPlot0.TIE_STRING = " ";
      resultMatrixGnuPlot0.getRowHidden((-1165));
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setStdDevWidth((-1165));
      resultMatrixGnuPlot0.toArray();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixHTML0.setPrintColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(39, 0);
      resultMatrixGnuPlot1.getOptions();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot1.listOptions();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex1.setSize(39, (-471));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.LEFT_PARENTHESES = null;
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2;
      resultMatrixHTML0.WIN_STRING = null;
      intArray0[6] = 0;
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 1;
      resultMatrixHTML0.setColOrder(intArray1);
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(2, (-299));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.6586531056933276
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.setPrintRowNames(true);
      String[][] stringArray0 = new String[3][4];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "v";
      stringArray1[1] = " ";
      stringArray1[2] = "*";
      stringArray1[3] = "*";
      stringArray1[4] = ")";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[0];
      stringArray0[1] = stringArray2;
      resultMatrixPlainText0.setOptions(stringArray2);
      ResultMatrixPlainText.main(stringArray1);
      assertEquals(5, stringArray1.length);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.346465697709381
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSignificanceWidth(3155);
      resultMatrixHTML0.toStringRanking();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixHTML0.getRowName(5);
      resultMatrixGnuPlot0.TIE_STRING = " ";
      resultMatrixGnuPlot0.getRowHidden((-1165));
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setStdDevWidth((-1165));
      resultMatrixGnuPlot0.toArray();
      resultMatrixHTML0.countWidthTipText();
      resultMatrixGnuPlot0.stdDevWidthTipText();
      resultMatrixHTML0.countWidthTipText();
      assertEquals(3155, resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot1.listOptions();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSize(1, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      String[][] stringArray0 = resultMatrixGnuPlot2.toArray();
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.1690254701864604
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setShowAverage(true);
      assertTrue(resultMatrixGnuPlot0.getShowAverage());
      
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.listOptions();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      resultMatrixGnuPlot0.getRevision();
      intArray0[1] = 0;
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.clearSummary();
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2;
      intArray0[6] = 2;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.WIN_STRING = "n/fRb>js'#&u:";
      resultMatrixGnuPlot0.getColName(3104);
      resultMatrixGnuPlot0.getMeanWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.getMean(600, 0);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6760645466731865
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getRowName(3);
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixLatex0.setSize(69, 0);
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringSummary();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.653244583749301
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.setRowNameWidth(2);
      resultMatrixSignificance0.meanWidthTipText();
      resultMatrixHTML0.toStringKey();
      resultMatrixHTML0.getAverage(2);
      resultMatrixSignificance0.getColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.setShowStdDev(false);
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 0;
      intArray2[6] = 1;
      intArray2[7] = 1;
      intArray0[1] = intArray2;
      resultMatrixGnuPlot0.setCountWidth(2);
      assertEquals(2, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.372371306219403
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_StdDevPrec = (-1881);
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = "<td><b>";
      stringArray0[2] = "kN,:\u0000)s\"eRJ-%( ";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[5] = "(";
      stringArray0[6] = ")";
      stringArray0[7] = " ";
      stringArray0[8] = ")";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.setCountWidth((-1881));
      resultMatrixPlainText0.m_Significance = null;
      resultMatrixPlainText0.setEnumerateRowNames(false);
      resultMatrixPlainText0.getDefaultSignificanceWidth();
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.getDisplayRow((-1881));
      resultMatrixPlainText0.getRevision();
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.3425359764412272
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_StdDevPrec = (-1881);
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = "<td><b>";
      stringArray0[2] = "kN,:\u0000)s\"eRJ-%( ";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[5] = "(";
      stringArray0[6] = ")";
      stringArray0[7] = " ";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.setCountWidth((-1867));
      resultMatrixPlainText0.m_Significance = null;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.showStdDevTipText();
      boolean boolean0 = false;
      int[][] intArray0 = new int[0][4];
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 2;
      resultMatrixSignificance0.m_RowOrder = intArray0;
      resultMatrixSignificance0.headerKeys();
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertFalse(resultMatrixSignificance0.getDefaultEnumerateRowNames());
  }
}
