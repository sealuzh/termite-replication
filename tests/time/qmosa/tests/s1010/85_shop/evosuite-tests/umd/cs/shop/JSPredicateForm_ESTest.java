/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:47:07 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Collection;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0238736061572697
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      UnaryOperator.identity();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) stringReader0);
      streamTokenizer0.eolIsSignificant(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.slashStarComments(true);
      jSSubstitution0.parallelStream();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer3);
      JSTerm jSTerm2 = new JSTerm();
      jSSubstitution0.add((Object) jSTerm2);
      jSSubstitution0.add((Object) "E'{GYE-;WLyO");
      Integer integer0 = new Integer((-540));
      jSTerm0.add((Object) jSTerm1);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution1);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0265986860485126
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5q+-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSSubstitution0.removeAll(jSTerm0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      jSTerm1.replaceAll(unaryOperator1);
      System.setCurrentTimeMillis((-1593L));
      jSPredicateForm0.addElement(jSTerm0);
      JSSubstitution jSSubstitution3 = jSTerm0.matches(jSPredicateForm0, jSSubstitution1);
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSTerm1.matches(jSPredicateForm0, jSSubstitution3);
      jSTerm0.clonePF();
      jSPredicateForm0.standarizerPredicateForm();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6872739312196838
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSSubstitution jSSubstitution0 = null;
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.add((Object) null);
      jSPredicateForm1.iterator();
      JSJshopVars.greaterT = (-1596);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      jSTerm0.replaceAll(unaryOperator0);
      System.setCurrentTimeMillis((-1L));
      jSPredicateForm1.addElement("");
      jSPredicateForm1.matches(jSPredicateForm0, (JSSubstitution) null);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm1, jSSubstitution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.188118820046292
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.colon = (-1610612734);
      JSJshopVars.verticalL = (-1610612734);
      JSJshopVars.rightPar = (-1610612734);
      System.setCurrentTimeMillis(1239L);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm("(38|X|9 |VW.'dT*Qc");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.154495808699948
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) streamTokenizer0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      stringReader0.close();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      System.setCurrentTimeMillis((-2));
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSPredicateForm1.matches((JSPredicateForm) jSTerm0, jSSubstitution3);
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      jSTerm0.clonePF();
      JSJshopVars.lessT = (-653);
      jSPredicateForm0.standarizerPredicateForm();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5094656225315988
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.add((Object) null);
      jSPredicateForm1.iterator();
      JSJshopVars.greaterT = (-1596);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, JSTerm> function0 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends JSPredicateForm>) function0);
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function2 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.188118820046292
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.rightPar = 93;
      JSJshopVars.minus = 93;
      JSJshopVars.colon = 93;
      JSJshopVars.colon = (-1610612734);
      JSJshopVars.verticalL = 93;
      JSJshopVars.rightPar = 93;
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      System.setCurrentTimeMillis(93);
      System.setCurrentTimeMillis((-2445L));
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm("(38|X|9 |VW.'dT*Qc");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7507184699924547
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      jSTerm0.add((Object) jSTerm0);
      jSPredicateForm0.equals((JSPredicateForm) null);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.replaceAll(unaryOperator0);
      jSTerm0.clonePF();
      jSTerm0.call();
      UnaryOperator.identity();
      System.setCurrentTimeMillis((-352L));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.995367266626245
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) stringReader0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) jSSubstitution2;
      jSTerm0.firstElement();
      jSSubstitution2.add((Object) "5.0");
      jSTerm0.standarizerPredicateForm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSTerm0.add((Object) jSTerm1);
      jSSubstitution2.add(objectArray0[0]);
      StringReader stringReader1 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer2);
      jSTerm1.print();
      jSTerm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(9, stringBuffer0.length());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      UnaryOperator.identity();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) stringReader0);
      jSTerm0.spliterator();
      streamTokenizer0.commentChar((-195));
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StringReader cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      jSTerm0.add((Object) "");
      int int0 = (-1610612734);
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qTf-JBhDN:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.commentChar(2443);
      stringReader0.ready();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("5qTf-JBhDN:&");
      stringReader1.reset();
      stringReader1.read();
      jSTerm0.addElement("5qTf-JBhDN:&");
      stringReader0.mark(2979);
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis(53);
      boolean boolean0 = jSTerm1.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5q+-JBhD:&");
      stringReader0.ready();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) unaryOperator0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer0.slashStarComments(false);
      jSSubstitution0.parallelStream();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSSubstitution0.add((Object) jSTerm0);
      jSSubstitution0.add((Object) unaryOperator0);
      Integer integer0 = new Integer((-13));
      jSTerm0.add((Object) null);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EUO-Cu~|tZ3r_g");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      boolean boolean0 = false;
      streamTokenizer0.lowerCaseMode(true);
      stringReader0.skip((-4));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7945725536756378
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) jSPredicateForm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("7D5_vB");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      jSPredicateForm2.listIterator();
      jSPredicateForm0.iterator();
      JSJshopVars.rightBrac = (-2);
      jSPredicateForm1.applySubstitutionPF(jSSubstitution1);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm2.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "9.0");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      jSTerm0.add((Object) null);
      jSPredicateForm0.iterator();
      int int0 = (-1596);
      JSJshopVars.greaterT = (-1596);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function2 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      jSTerm0.replaceAll(unaryOperator0);
      function2.compose((Function<? super String, ?>) unaryOperator0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7813719133938317
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "9.0");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.add((Object) null);
      jSPredicateForm1.iterator();
      int int0 = (-1596);
      JSJshopVars.greaterT = (-1596);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      jSTerm0.replaceAll(unaryOperator0);
      jSPredicateForm1.forEach(consumer0);
      jSPredicateForm1.print();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.equals(jSTerm0);
      jSTerm1.add((Object) jSTerm0);
      // Undeclared exception!
      try { 
        jSTerm1.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm1);
      jSTerm1.add((Object) jSTerm0);
      jSTerm1.iterator();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      jSTerm1.replaceAll(unaryOperator0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm1.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qTf-JBhDN:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm();
      streamTokenizer0.commentChar(2443);
      stringReader0.ready();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("5qTf-JBhDN:&");
      stringReader1.reset();
      stringReader1.read();
      stringReader0.mark(2979);
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis(53);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qTf-JBhDN:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar((-4));
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "E'{GYE-;WLyO");
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer0.slashStarComments(false);
      jSSubstitution0.parallelStream();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSSubstitution0.add((Object) streamTokenizer0);
      jSSubstitution0.add((Object) "E'{GYE-;WLyO");
      Integer integer0 = new Integer((-2));
      jSTerm0.add((Object) streamTokenizer0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.rightPar = 93;
      JSJshopVars.astherisk = 93;
      JSJshopVars.minus = 93;
      JSJshopVars.colon = 93;
      JSJshopVars.verticalL = 93;
      JSJshopVars.rightPar = 93;
      JSJshopVars.rightPar = 93;
      jSPredicateForm0.print();
      System.setCurrentTimeMillis(93);
      System.setCurrentTimeMillis((-4886L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.colon = (-1610612734);
      JSJshopVars.verticalL = (-1610612734);
      JSJshopVars.rightPar = (-1610612734);
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6872739312196838
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSSubstitution jSSubstitution0 = null;
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.add((Object) null);
      jSPredicateForm1.iterator();
      JSJshopVars.greaterT = (-1596);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      jSTerm0.replaceAll(unaryOperator0);
      System.setCurrentTimeMillis((-1L));
      jSPredicateForm1.addElement("");
      jSPredicateForm1.matches(jSPredicateForm0, (JSSubstitution) null);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm1, jSSubstitution1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.colon = (-1610612734);
      JSJshopVars.verticalL = (-1610612734);
      StringReader stringReader0 = new StringReader("Fv<J):s0l.\u0003itg");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSPredicateForm0.addAll((Collection) jSTerm0);
      JSJshopVars.rightPar = (-1610612734);
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis((-1610612734));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("5qf-JBhDN:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm2);
      StringReader stringReader1 = new StringReader("5qf-JBhDN:&");
      stringReader1.reset();
      stringReader1.read();
      stringReader0.mark(2979);
      System.setCurrentTimeMillis((-402L));
      jSTerm2.equals((JSPredicateForm) jSTerm1);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qTf-JBhDN:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.commentChar(2443);
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("5qTf-JBhDN:&");
      stringReader1.reset();
      stringReader0.mark(2979);
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis((-2));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.rightBrac = (-366172151);
      jSPredicateForm0.spliterator();
      JSJshopVars.colon = (-1610612734);
      JSJshopVars.rightPar = 124;
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(124);
      jSPredicateForm0.equals((JSPredicateForm) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.equals(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = '~';
      charArray0[2] = ']';
      charArray0[3] = 'X';
      charArray0[4] = '3';
      charArray0[5] = '%';
      charArray0[6] = 'R';
      charArray0[7] = 'm';
      charArray0[8] = 'P';
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.add((Object) stringReader0);
      stringReader0.reset();
      stringReader0.mark(765);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StringReader cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0301693915539945
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "QVj{Z]x");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.add((Object) null);
      jSPredicateForm1.iterator();
      JSJshopVars.greaterT = (-1605);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      jSTerm0.replaceAll(unaryOperator0);
      System.setCurrentTimeMillis((-1L));
      jSPredicateForm1.addElement("QVj{Z]x");
      jSPredicateForm1.matches(jSPredicateForm0, (JSSubstitution) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5q+-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.skip((-4));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      streamTokenizer1.commentChar(0);
      jSTerm0.add((Object) "5q+-JBhD:&");
      jSTerm0.add((Object) streamTokenizer1);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = null;
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, (JSSubstitution) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3611220692787604
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UnaryOperator.identity();
      StringReader stringReader0 = new StringReader("9Ra%X>qy>OBy");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.listIterator();
      jSPredicateForm0.iterator();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      jSPredicateForm2.matches(jSPredicateForm1, jSSubstitution0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      System.setCurrentTimeMillis(1L);
      JSPredicateForm jSPredicateForm3 = null;
      try {
        jSPredicateForm3 = new JSPredicateForm("_uK");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.156234939134731
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) streamTokenizer0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      System.setCurrentTimeMillis((-2));
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSPredicateForm1.matches((JSPredicateForm) jSTerm0, jSSubstitution3);
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      jSTerm0.clonePF();
      JSJshopVars.lessT = (-653);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.standarizerPredicateForm();
      System.setCurrentTimeMillis(0L);
      JSSubstitution jSSubstitution6 = jSPredicateForm0.matches(jSPredicateForm2);
      assertFalse(jSSubstitution6.fail());
      assertNotSame(jSPredicateForm0, jSPredicateForm1);
      assertNotSame(jSPredicateForm0, jSPredicateForm2);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0378420258250944
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5qf-JBhD:&");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      UnaryOperator.identity();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution1);
      JSPredicateForm jSPredicateForm1 = jSTerm1.applySubstitutionPF(jSSubstitution1);
      System.setCurrentTimeMillis((-1));
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSTerm0.clonePF();
      System.setCurrentTimeMillis(0L);
      JSSubstitution jSSubstitution5 = jSPredicateForm0.matches((JSPredicateForm) jSTerm1);
      assertTrue(jSSubstitution5.fail());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7476224947602566
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.removeAll(jSPredicateForm1);
      jSTerm0.add((Object) "");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0301693915539945
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.add((Object) null);
      jSPredicateForm1.iterator();
      JSJshopVars.greaterT = (-1596);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      jSTerm0.replaceAll(unaryOperator0);
      System.setCurrentTimeMillis((-1L));
      jSPredicateForm1.addElement("");
      jSPredicateForm1.matches(jSPredicateForm0, (JSSubstitution) null);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.clear();
      JSJshopVars.coma = (-1083);
      jSPredicateForm0.parallelStream();
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.rightPar = 93;
      JSJshopVars.minus = 93;
      JSJshopVars.colon = 93;
      JSJshopVars.colon = (-1610612734);
      JSJshopVars.rightPar = 124;
      UnaryOperator.identity();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      System.setCurrentTimeMillis(1606L);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      System.setCurrentTimeMillis(1142L);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Object[] objectArray0 = new Object[8];
      objectArray0[2] = (Object) unaryOperator0;
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      objectArray0[4] = (Object) "jp2vwvlP%`@}5awV";
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("6mKT=Nl]%G");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sal=gwsnoytsp");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      int int0 = (-87);
      streamTokenizer0.ordinaryChars((-87), (-87));
      stringReader0.skip((-4));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.pushBack();
      streamTokenizer1.sval = null;
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF((JSSubstitution) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }
}
