/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:26:18 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.gui.StartFrame;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLNonTransientException;
import java.sql.SQLRecoverableException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLWarning;
import java.util.ArrayList;
import messages.global.ScoreMsg;
import messages.round.BombMoveMsg;
import messages.round.TileHitPlayerMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved("", 620);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Proxy proxy0 = new Proxy(proxy_Type0, inetSocketAddress0);
      MockSocket mockSocket0 = new MockSocket(proxy0);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException("", (Throwable) null);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException(sQLSyntaxErrorException0);
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("A", sQLNonTransientConnectionException0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("Unknown message type: ", ":(O&k{X2R'i6+_qM8", "", 620);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "", "E2Mh)(*iH1 ", 620);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", (String) null, (-1223));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement(":(O&k{X2R'i6+_qM8", "", "", 620);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("Lost connection to server!", "0.MQd`L'B\"&!ZsIUio", "0.MQd`L'B\"&!ZsIUio", 0);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("E2Mh)(*iH1 ", "E2Mh)(*iH1 ", "hI*{Jw|<Nti", 912);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("0.MQd`L'B\"&!ZsIUio", "", "0.MQd`L'B\"&!ZsIUio", 620);
      stackTraceElementArray0[6] = stackTraceElement6;
      sQLNonTransientException0.setStackTrace(stackTraceElementArray0);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("", sQLNonTransientException0);
      SQLNonTransientException sQLNonTransientException1 = new SQLNonTransientException("", sQLInvalidAuthorizationSpecException0);
      SQLWarning sQLWarning0 = new SQLWarning("A", "", (Throwable) null);
      BomberClient bomberClient0 = BomberClient.getInstance();
      String string0 = "";
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(string0, sQLWarning0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      ArrayList<ScoreMsg> arrayList0 = new ArrayList<ScoreMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getTrafficClass();
      SQLWarning sQLWarning0 = new SQLWarning("Y8|F Q<!S&.RJ", "Y8|F Q<!S&.RJ", 0);
      int[] intArray0 = new int[0];
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((String) null, "CONNECTION LOST", 0, intArray0, sQLWarning0);
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("CONNECTION LOST", batchUpdateException0);
      SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException(".$TZ6s@", ".$TZ6s@");
      batchUpdateException0.getUpdateCounts();
      SQLWarning sQLWarning1 = new SQLWarning("", (String) null, 422);
      sQLWarning0.setNextWarning(sQLWarning1);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("hnN>9&d", batchUpdateException0);
      SQLDataException sQLDataException0 = new SQLDataException("'APvP", "z^o\u0007Xr]+T3Y&rfn'", sQLNonTransientException0);
      SQLNonTransientException sQLNonTransientException1 = new SQLNonTransientException("", "", (-2896), batchUpdateException0);
      sQLRecoverableException0.setNextException(sQLNonTransientException1);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException((String) null, "", sQLDataException0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(",/%/rO97Q~auKjP|TC#", sQLWarning0);
      SQLWarning sQLWarning2 = new SQLWarning("");
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException();
      SQLException sQLException0 = new SQLException((String) null);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException(sQLNonTransientException1);
      sQLFeatureNotSupportedException0.printStackTrace();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      TileHitPlayerMsg tileHitPlayerMsg0 = new TileHitPlayerMsg(231);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(tileHitPlayerMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      int int0 = mockSocket0.getTrafficClass();
      BomberClient bomberClient0 = BomberClient.getInstance();
      int int1 = (-1);
      boolean boolean0 = false;
      int[] intArray0 = new int[9];
      intArray0[0] = int0;
      intArray0[1] = int1;
      intArray0[2] = int1;
      intArray0[3] = int1;
      intArray0[4] = int1;
      intArray0[5] = int0;
      intArray0[6] = int1;
      intArray0[7] = int1;
      intArray0[8] = int0;
      BombMoveMsg bombMoveMsg0 = new BombMoveMsg(int1, intArray0, intArray0, boolean0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      clientMsgReceiver0.processMsg(bombMoveMsg0);
      assertEquals(0, clientMsgReceiver0.countStackFrames());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getTrafficClass();
      SQLWarning sQLWarning0 = new SQLWarning("Y8|F Q<!S&.RJ", "Y8|F Q<!S&.RJ", 0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("Y8|F Q<!S&.RJ", (String) null, 0);
      sQLWarning0.initCause(sQLIntegrityConstraintViolationException0);
      int[] intArray0 = new int[0];
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((String) null, "CONNECTION LOST", 0, intArray0, sQLWarning0);
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("CONNECTION LOST", batchUpdateException0);
      sQLNonTransientException0.getStackTrace();
      SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException("", "");
      sQLRecoverableException0.fillInStackTrace();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("hnN>9&d", batchUpdateException0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException(",/%/rO97Q~auKjP|TC#", sQLWarning0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(sQLRecoverableException0);
      SQLException sQLException0 = new SQLException("@J$5");
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException2 = new SQLIntegrityConstraintViolationException(sQLException0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException3 = new SQLIntegrityConstraintViolationException((String) null, "Index out of bounds: ", 0);
      sQLIntegrityConstraintViolationException2.printStackTrace();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException((String) null, sQLWarning0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLIntegrityConstraintViolationException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getTrafficClass();
      SQLWarning sQLWarning0 = new SQLWarning("Y8|F Q<!S&.RJ", "Y8|F Q<!S&.RJ", 0);
      int[] intArray0 = new int[0];
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((String) null, "CONNECTION LOST", 0, intArray0, sQLWarning0);
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("CONNECTION LOST", batchUpdateException0);
      SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException("", "");
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("hnN>9&d", batchUpdateException0);
      SQLDataException sQLDataException0 = new SQLDataException("'APvP", "z^o\u0007Xr]+T3Y&rfn'", sQLNonTransientException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException((String) null, "", sQLDataException0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(",/%/rO97Q~auKjP|TC#", sQLWarning0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException(sQLRecoverableException0);
      SQLException sQLException0 = new SQLException("@J$5");
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException(sQLException0);
      sQLIntegrityConstraintViolationException1.printStackTrace();
      MockException mockException0 = new MockException("#AF%MRr_uiF");
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException((String) null, sQLWarning0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      StartFrame startFrame0 = StartFrame.startFrame;
      StartFrame.startFrame = null;
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(1L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      System.setCurrentTimeMillis(40L);
      System.setCurrentTimeMillis(2841L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis((-1387L));
      System.setCurrentTimeMillis((-1L));
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getTrafficClass();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "uZS?");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "uZS?");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
