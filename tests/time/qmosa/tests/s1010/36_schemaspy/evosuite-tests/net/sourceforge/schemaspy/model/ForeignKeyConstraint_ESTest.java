/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:15:29 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3192967479776607
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CHECK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CHECK");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 382, 2112);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "x,nkK", 901, 0);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "CHECK", 83, 0);
      foreignKeyConstraint1.getDeleteRule();
      foreignKeyConstraint2.getDeleteRuleDescription();
      foreignKeyConstraint1.isReal();
      foreignKeyConstraint1.getParentTable();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7697590704283859
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W", 224, 1);
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, (-1325), (-1325));
      foreignKeyConstraint1.addParentColumn(tableColumn0);
      foreignKeyConstraint0.isNullOnDelete();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "W";
      stringArray0[1] = "W";
      stringArray0[2] = "]";
      stringArray0[3] = "UTF-8";
      Config config1 = new Config(stringArray0);
      config1.getMaxDbThreads();
      Config config2 = Config.getInstance();
      config2.setCatalog("UTF-8");
      config2.setSchema("_G<$npE5q~l-{kE");
      Config config3 = new Config(stringArray0);
      config0.isSchemaDisabled();
      config0.setPassword("");
      config0.getDbType();
      Config config4 = new Config(stringArray0);
      config0.getCatalog();
      foreignKeyConstraint0.getDeleteRuleName();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W", 224, 1);
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, (-1325), (-1325));
      foreignKeyConstraint1.addParentColumn(tableColumn0);
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isReal();
      Config config1 = new Config();
      foreignKeyConstraint1.getChildColumns();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.isNullOnDelete();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.isReal();
      List<TableColumn> list0 = foreignKeyConstraint1.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint1.getName();
      foreignKeyConstraint0.getChildColumns();
      System.setCurrentTimeMillis((-1325));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3220553686673155
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W", 224, 1);
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, (-1325), (-1325));
      foreignKeyConstraint1.addParentColumn(tableColumn0);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      Config config1 = Config.getInstance();
      config1.getCatalog();
      boolean boolean1 = foreignKeyConstraint1.isNullOnDelete();
      boolean boolean2 = foreignKeyConstraint1.isImplied();
      assertTrue(boolean2 == boolean0);
      
      Integer integer0 = new Integer(224);
      boolean boolean3 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean3 == boolean1);
      
      config1.getCatalog();
      System.setCurrentTimeMillis((-82L));
      foreignKeyConstraint1.getDeleteRuleDescription();
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      
      foreignKeyConstraint0.getParentTable();
      assertEquals(224, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.161528110879957
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) "";
      objectArray0[4] = (Object) "";
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 0);
      Config config1 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "UTF-8", (-4605), 0);
      config1.getCatalog();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint1.isImplied();
      Integer integer0 = new Integer(1);
      boolean boolean1 = foreignKeyConstraint1.isRestrictDelete();
      assertTrue(boolean1 == boolean0);
      
      config0.getCatalog();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      String string0 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      Integer integer1 = new Integer(0);
      boolean boolean2 = foreignKeyConstraint1.isImplied();
      assertFalse(boolean2);
      
      config1.setPassword("C");
      config0.getCatalog();
      String string1 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals((-4605), foreignKeyConstraint1.getUpdateRule());
      assertEquals("Cascade on delete", string1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "n", 0, 0);
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "s*TrHovn:qok2&h ", 1, 1);
      Config config1 = new Config();
      config1.getCatalog();
      config0.getSchemas();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "YEAR";
      stringArray0[1] = "n";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "s*TrHovn:qok2&h ";
      Config config2 = new Config(stringArray0);
      config2.setPassword((String) null);
      Config.setInstance(config0);
      Config config3 = new Config(stringArray0);
      config1.getSchema();
      config3.getCatalog();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      String string1 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      assertEquals(1, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      int int0 = 224;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W", 224, 1);
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 493, 224);
      foreignKeyConstraint1.addParentColumn(tableColumn0);
      foreignKeyConstraint1.isNullOnDelete();
      List<TableColumn> list0 = foreignKeyConstraint1.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint1.isReal();
      Config config1 = new Config();
      foreignKeyConstraint1.getChildColumns();
      tableColumn0.unlinkChildren();
      tableColumn0.setIsAutoUpdated(true);
      ForeignKeyConstraint foreignKeyConstraint2 = null;
      try {
        foreignKeyConstraint2 = new ForeignKeyConstraint(tableColumn0, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.172467200040117
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W", 224, 1);
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "OPTION", (-2183), (-2206));
      Config config1 = new Config();
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint1.getChildColumns();
      boolean boolean0 = foreignKeyConstraint0.isReal();
      assertTrue(boolean0);
      
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals(8, int0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      assertEquals(224, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".05 E=%VzDm";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ".05 E=%VzDm", 412, 412);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta(".05 E=%VzDm", (String) null, "Null on delete");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \".05 E=%VzDm\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Config config0 = new Config();
      config0.getDescription();
      config0.setServer(",J:");
      Config config1 = Config.getInstance();
      config0.setMeta("");
      config1.getServer();
      config1.getLogLevel();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/@jTCnVd>:a", (-13), 2);
      Config config2 = Config.getInstance();
      config2.setCatalog("/@jTCnVd>:a");
      config1.getColumnExclusions();
      config1.getDbProperties();
      config0.getCatalog();
      config1.getSchemas();
      String[] stringArray0 = new String[3];
      config2.getMaxDbThreads();
      stringArray0[0] = "0sKEwVf$.zOK9";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      config1.setCatalog("#uqI#\"U4g?");
      config2.setSchema("#uqI#\"U4g?");
      Config config3 = new Config(stringArray0);
      config3.isSchemaDisabled();
      config2.setPassword("UTF-8");
      config3.getDbType();
      Config config4 = new Config(stringArray0);
      config4.getCatalog();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      
      System.setCurrentTimeMillis((-64));
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string1);
      assertEquals((-13), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3231677157195962
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Config config0 = new Config();
      config0.isLogoEnabled();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 2, 2);
      config0.getCatalog();
      boolean boolean0 = foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.isImplied();
      int int0 = new Integer(2);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 1660, 2);
      config0.getCatalog();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isImplied();
      Integer integer0 = new Integer(2);
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean2 == boolean0);
      
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals(1660, foreignKeyConstraint1.getUpdateRule());
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
      
      boolean boolean3 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean3 == boolean1);
      
      boolean boolean4 = foreignKeyConstraint0.isImplied();
      assertFalse(boolean4);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6142966247203678
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config config0 = new Config();
      config0.setServer(" via ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 0, (-1724));
      Config config1 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-1355), 724);
      Config config2 = new Config();
      config0.getCatalog();
      config1.getSchemas();
      config2.isSchemaDisabled();
      config0.setPassword("^Hk;IOy$e`A.DGvvr");
      Config.setInstance(config2);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "";
      stringArray0[4] = "YEAR";
      stringArray0[5] = "^Hk;IOy$e`A.DGvvr";
      stringArray0[6] = " via ";
      stringArray0[7] = "YEAR";
      stringArray0[8] = "YEAR";
      Config config3 = new Config(stringArray0);
      config3.getCatalog();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint1.getDeleteRule();
      assertEquals((-1355), foreignKeyConstraint1.getUpdateRule());
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-1724), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 0, 0);
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      foreignKeyConstraint0.getUpdateRule();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(?66~I7MT?s%Q");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "(?66~I7MT?s%Q", 34, 34);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "mCHECK", 34, (-1088));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", (-1), 150);
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "net.sourceforge.schemaspy.model.ForeignKeyConstraint", (-1), (-23));
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      Config config0 = new Config();
      config0.getColumnDetails();
      config0.setServer(",J:");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Jem=h:spXih4D+`[MR_", (-64), (-64));
      Config config1 = Config.getInstance();
      config1.getServer();
      config1.getLogLevel();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "/@jTCnVd>:a", (-13), 2);
      Config config2 = Config.getInstance();
      config2.setCatalog("/@jTCnVd>:a");
      config0.getTableExclusions();
      config0.getCatalog();
      config1.getSchemas();
      String[] stringArray0 = new String[3];
      config2.getMaxDbThreads();
      stringArray0[0] = "0sKEwVf$.zOK9";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      config1.setCatalog("#uqI#\"U4g?");
      config2.setSchema("#uqI#\"U4g?");
      Config config3 = new Config(stringArray0);
      config3.isSchemaDisabled();
      config2.setPassword("UTF-8");
      config3.getDbType();
      Config config4 = new Config(stringArray0);
      config3.getCatalog();
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      assertEquals((-13), foreignKeyConstraint1.getUpdateRule());
      
      System.setCurrentTimeMillis(2);
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-64), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config config0 = new Config();
      config0.setServer("UTF-8");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 0, 0);
      Config config1 = new Config();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "UTF-8", 146, (-4605));
      Config config2 = new Config();
      config2.getCatalog();
      config0.getSchemas();
      config0.isSchemaDisabled();
      config0.setPassword("k<;Z");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "YEAR";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "UTF-8";
      stringArray0[6] = "UTF-8";
      Config.setInstance(config2);
      stringArray0[7] = "UTF-8";
      stringArray0[8] = "UTF-8";
      Config config3 = new Config(stringArray0);
      config3.getCatalog();
      foreignKeyConstraint1.getDeleteRuleName();
      assertEquals((-4605), foreignKeyConstraint1.getDeleteRule());
      assertEquals(146, foreignKeyConstraint1.getUpdateRule());
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.447995670069886
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Config config0 = new Config();
      FileSystemHandling.shouldAllThrowIOExceptions();
      config0.setViewsEnabled(true);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "o", 1660, (-1));
      config0.getCatalog();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isImplied();
      Integer integer0 = new Integer(1660);
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean2 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = foreignKeyConstraint0.isImplied();
      assertFalse(boolean3);
      
      boolean boolean4 = foreignKeyConstraint0.isReal();
      assertFalse(boolean4 == boolean0);
      
      foreignKeyConstraint0.getName();
      assertEquals(1660, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-1), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 89, (-2364));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 227, (-334));
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W", (-1163), (-1232));
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.getUpdateRule();
      foreignKeyConstraint0.isRestrictDelete();
      String string0 = "";
      String string1 = "-";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("-", "-", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"-\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Config config0 = new Config();
      config0.isLogoEnabled();
      Config config1 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "_", (-1212), 0);
      Config config2 = new Config();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "x \"K7X1||Y,KI_\"Z-D\"";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "_";
      stringArray0[6] = "_";
      Config config3 = new Config(stringArray0);
      config2.getCatalog();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean0);
      assertEquals((-1212), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "#iRhAm\\mVXo";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#iRhAmmVXo");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 46, (-2126));
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Config config0 = null;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string1 = "hm#)6rb";
      String string2 = null;
      String string3 = "";
      String string4 = "' to ";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("' to ", (String) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"' to \" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4785469070017316
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Config config0 = new Config();
      config0.isLogoEnabled();
      config0.getServer();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 3, 3);
      config0.getCatalog();
      boolean boolean0 = foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.isImplied();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(3, int0);
      
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isImplied();
      Integer integer0 = new Integer(46);
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean2 == boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string1);
      
      Integer integer1 = new Integer(3);
      boolean boolean3 = foreignKeyConstraint0.isImplied();
      assertTrue(boolean3 == boolean1);
      
      Config config1 = Config.getInstance();
      config1.setPassword("R");
      config1.getCatalog();
      String string2 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string2);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.413443662791998
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[4] = (Object) "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1660, (-1));
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer0 = new Integer((-1));
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getName();
      assertEquals((-1), foreignKeyConstraint0.getDeleteRule());
      assertEquals(1660, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".045 E=%VzDKm";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ".045 E=%VzDKm", 412, 412);
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ".045 E=%VzDKm", 691, 412);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) "net.sourceforge.schemaspy.model.ForeignKeyConstraint";
      objectArray0[4] = (Object) "net.sourceforge.schemaspy.model.ForeignKeyConstraint";
      String[] stringArray0 = new String[0];
      Config config0 = new Config(stringArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1660, 1660);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(1660, foreignKeyConstraint0.getDeleteRule());
      assertEquals(1660, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) linkedList0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) linkedList0;
      objectArray0[5] = (Object) linkedList0;
      linkedList0.add((TableColumn) null);
      objectArray0[6] = (Object) linkedList0;
      objectArray0[7] = (Object) linkedList0;
      objectArray0[8] = (Object) linkedList0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_6FI=m);uSQ[P|w'}a");
      linkedList0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.unlinkChildren();
      tableColumn1.setIsAutoUpdated(false);
      tableColumn1.unlinkChildren();
      tableColumn0.unlinkChildren();
      tableColumn1.setIsAutoUpdated(false);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) linkedList0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[5] = (Object) linkedList0;
      linkedList0.add((TableColumn) null);
      objectArray0[6] = (Object) linkedList0;
      objectArray0[7] = (Object) linkedList0;
      objectArray0[8] = (Object) linkedList0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_6FI=m);uSQ[P|w'}a");
      linkedList0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn1.setShortType("' refeenced b '");
      tableColumn0.unlinkChildren();
      tableColumn0.setIsAutoUpdated(true);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn0, 1024, 1024);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setIsAutoUpdated(false);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
