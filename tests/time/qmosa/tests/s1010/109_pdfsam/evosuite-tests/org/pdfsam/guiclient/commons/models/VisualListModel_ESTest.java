/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:51:58 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.GridBagLayout;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.event.ComponentListener;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.renderable.ParameterBlock;
import java.math.BigInteger;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLayeredPane;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JTable;
import javax.swing.event.ListDataEvent;
import javax.swing.event.PopupMenuListener;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.Rotation;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5371820747401737
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      visualListModel0.elementsChanged();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) (byte)77;
      objectArray0[2] = (Object) (byte)77;
      objectArray0[3] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      ListDataEvent listDataEvent0 = new ListDataEvent(integer0, 853, (-774), 9999);
      jComboBox0.contentsChanged(listDataEvent0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 9999;
      intArray1[1] = 1;
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      visualListModel0.addAllElements(9999, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.getElements();
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1161;
      visualListModel0.moveDownIndex(1161);
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      String string0 = "";
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      int int1 = 21;
      parameterBlock0.set((byte)0, 21);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock1);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9374751429887778
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      hashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.updateElementAt((-2004), (VisualPageListItem) null);
      visualListModel1.prependAllElements(hashSet0);
      visualListModel1.prependAllElements(hashSet0);
      int[] intArray0 = new int[7];
      intArray0[2] = 0;
      intArray0[1] = 502;
      intArray0[2] = (-2004);
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 3;
      intArray0[6] = 0;
      visualListModel1.reverseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 86;
      try { 
        visualListModel1.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 85
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.474385518377293
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      visualListModel0.elementsChanged();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) (byte)77;
      objectArray0[2] = (Object) (byte)77;
      objectArray0[3] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      ListDataEvent listDataEvent0 = new ListDataEvent(integer0, 853, (-774), 9999);
      listDataEvent0.getIndex0();
      PopupMenuListener popupMenuListener0 = mock(PopupMenuListener.class, new ViolatedAssumptionAnswer());
      jComboBox0.removePopupMenuListener(popupMenuListener0);
      jComboBox0.contentsChanged(listDataEvent0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7754337976947765
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      int[] intArray0 = new int[9];
      intArray0[0] = (-2006);
      intArray0[1] = (-2006);
      intArray0[2] = (-2006);
      intArray0[3] = (-2006);
      intArray0[4] = (-2006);
      intArray0[5] = (-2006);
      intArray0[6] = 2463;
      intArray0[7] = (-2006);
      intArray0[8] = (-2006);
      visualListModel0.removeElements(intArray0, false);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      Rotation rotation0 = Rotation.DEGREES_180;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((BufferedImage) null, 2463, false, "org.pdfsam.guiclient.commons.models.VisualListModel", "", rotation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9739896400049097
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem0 = null;
      int[] intArray0 = new int[1];
      intArray0[0] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9999
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9283940162855218
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(0, 0, true);
      linkedHashSet0.stream();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      vector0.add((VisualPageListItem) null);
      vector0.spliterator();
      visualListModel0.moveUpIndex(11);
      visualListModel1.getSize();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElementAt((VisualPageListItem) null, (-1280));
      visualListModel2.addAllElements((-1549), (Collection<VisualPageListItem>) vector0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.updateElementAt(1, (VisualPageListItem) null);
      visualListModel0.prependAllElements(vector0);
      visualListModel3.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel2.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.722973226438147
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 91;
      intArray0[1] = 5;
      intArray0[2] = 125;
      visualListModel0.elementsChanged();
      intArray0[3] = 1;
      intArray0[4] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(5, 11, true);
      linkedHashSet0.stream();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel1.updateElementAt((-556), (VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.spliterator();
      visualListModel1.moveUpIndex(1);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(722, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6851551011994585
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 91;
      intArray0[1] = 5;
      intArray0[2] = 125;
      visualListModel0.elementsChanged();
      intArray0[3] = 0;
      intArray0[4] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray1 = new int[2];
      visualListModel0.removeElements(intArray1, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveUpIndexes(intArray1);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-2073));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7105327234558136
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 91;
      intArray0[1] = 5;
      intArray0[2] = 125;
      visualListModel0.elementsChanged();
      intArray0[3] = 1;
      intArray0[4] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(5, 11, true);
      linkedHashSet0.stream();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel1.moveUpIndex(1);
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 125);
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements(1, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6143566826304037
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[0] = 1496;
      intArray0[2] = 158;
      intArray0[3] = 158;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(8, 107);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel2.setData(visualPageListItemArray0);
      try { 
        visualListModel2.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1496
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6910688711446102
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 91;
      intArray0[1] = 5;
      intArray0[2] = 125;
      visualListModel0.elementsChanged();
      intArray0[3] = 1;
      intArray0[4] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray1 = new int[2];
      intArray1[0] = 501;
      intArray1[1] = 9;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(9, 11, true);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 125);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7105327234558136
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 91;
      intArray0[1] = 5;
      intArray0[2] = 125;
      visualListModel0.elementsChanged();
      intArray0[3] = 1;
      intArray0[4] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(5, 11, true);
      linkedHashSet0.stream();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      vector0.add((VisualPageListItem) null);
      visualListModel1.moveUpIndex(1);
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 125);
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements(1, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0474852025259684
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-2006), (VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray0 = new int[2];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5851585169677804
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      visualListModel0.elementsChanged();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) (byte)77;
      objectArray0[2] = (Object) (byte)77;
      objectArray0[3] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 9999;
      intArray1[1] = 1;
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      visualListModel0.addAllElements(9999, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.936431545370271
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(93, (-495), true);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.stream();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      visualListModel1.setData(vector0);
      vector0.add((VisualPageListItem) null);
      vector0.spliterator();
      visualListModel1.moveUpIndex(93);
      visualListModel1.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedHashSet0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.updateElementAt(476, (VisualPageListItem) null);
      visualListModel1.prependAllElements(linkedHashSet0);
      visualListModel2.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4631572464253124
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte byte0 = (byte)77;
      visualListModel0.elementsChanged();
      int int0 = 9999;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[3] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      jComboBox0.setLightWeightPopupEnabled(true);
      Integer.compareUnsigned(9999, (-1));
      ListDataEvent listDataEvent0 = new ListDataEvent(integer0, 853, (-774), 9999);
      jComboBox0.contentsChanged(listDataEvent0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 9999;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.508988243684947
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.clear();
      visualListModel1.appendAllElements(treeSet0);
      visualListModel3.removeElements(7, (-1), false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      assertFalse(visualListModel2.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3228823459307204
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[0] = (-296);
      intArray0[1] = 90;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-1609.0F);
      floatArray0[2] = (float) 90;
      visualListModel0.undeleteElements(intArray1);
      Point point0 = new Point((-296), 90);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.updateElementAt(90, (VisualPageListItem) null);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      int[] intArray2 = new int[3];
      intArray2[0] = 90;
      intArray2[1] = 90;
      intArray2[2] = (-296);
      visualListModel1.moveUpIndexes(intArray2);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel1.rotateClockwiseElements(intArray2);
      assertArrayEquals(new int[] {90, 90, (-296)}, intArray2);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 3354;
      intArray0[1] = 3354;
      intArray0[2] = 0;
      intArray0[3] = 5677;
      intArray0[4] = 2147483645;
      intArray0[5] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 1552;
      int int1 = 247;
      intArray0[0] = 247;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.data.parallelStream();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      visualListModel1.addListDataListener(jComboBox0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel1.prependAllElements(arrayDeque0);
      visualListModel1.prependAllElements(arrayDeque0);
      visualListModel1.addAllElements((-1372), (Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(3157);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4187591973137939
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet1);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3373641978673163
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[1] = (-1);
      intArray1[2] = 1640;
      intArray1[3] = (-1);
      intArray1[4] = (-1);
      intArray1[5] = (-1);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6571360367520724
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(131, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      intArray0[0] = 158;
      intArray0[1] = 1499;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(131, 107);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1500
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(93);
      visualListModel0.moveDownIndex((-1407));
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(93, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 93
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6571360367520724
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(131, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      int int0 = 158;
      intArray0[0] = 158;
      intArray0[1] = 1496;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(131, 107);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[21];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1497
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5921652358778067
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      visualListModel0.elementsChanged();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      objectArray0[1] = (Object) (byte)77;
      objectArray0[2] = (Object) (byte)77;
      objectArray0[3] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      ListDataEvent listDataEvent0 = new ListDataEvent(integer0, 853, (-774), 9999);
      listDataEvent0.toString();
      jComboBox0.contentsChanged(listDataEvent0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3858508977309074
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1496;
      intArray0[2] = 158;
      intArray0[3] = 158;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel2.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel2.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      visualListModel0.moveUpIndex(93);
      visualListModel0.moveDownIndex(4195);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.752783914130084
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(131, (Collection<VisualPageListItem>) arrayDeque0);
      int[] intArray0 = new int[2];
      intArray0[0] = 158;
      intArray0[1] = 1496;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.subList(131, 107);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.moveUpIndex(1496);
      visualPageListItemArray0[4] = null;
      visualListModel0.addAllElements(567, (Collection<VisualPageListItem>) null);
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement(visualPageListItemArray0[1]);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      Object[] objectArray0 = new Object[8];
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) visualListModel0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) visualListModel0;
      int int0 = 34;
      visualListModel0.getElementAt(34);
      objectArray0[6] = null;
      int int1 = (-1527);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1527));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(hashSet0);
      int[] intArray0 = new int[18];
      intArray0[0] = 0;
      intArray0[1] = 5204;
      intArray0[2] = 5204;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveUpIndex(5204);
      visualListModel0.removeElementAt(0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1297124335358584
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 3157;
      intArray0[2] = 3157;
      int int1 = 0;
      int int2 = 1;
      visualListModel0.moveDownIndex(1);
      intArray0[4] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(0, 0, true);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      float[] floatArray0 = new float[1];
      AffineTransform affineTransform0 = null;
      try {
        affineTransform0 = new AffineTransform(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0992975938210185
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1496;
      intArray0[2] = 158;
      intArray0[3] = 158;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.addAll((Collection<? extends VisualPageListItem>) linkedHashSet0);
      visualListModel0.setData(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[0], 158);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 270;
      visualListModel0.moveDownIndexes(intArray1);
      intArray0[0] = (-1218);
      intArray0[1] = 0;
      intArray0[2] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Predicate.isEqual((Object) "");
      short[][] shortArray0 = new short[5][0];
      short[] shortArray1 = new short[8];
      shortArray1[0] = (short)180;
      shortArray1[1] = (short)2101;
      shortArray1[2] = (short) (-2492);
      shortArray1[3] = (short)2101;
      shortArray1[4] = (short)0;
      shortArray1[5] = (short) (-1);
      shortArray1[6] = (short)596;
      shortArray1[7] = (short) (-1941);
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[5];
      shortArray2[0] = (short)596;
      shortArray2[1] = (short)596;
      shortArray2[2] = (short)180;
      shortArray2[3] = (short)596;
      shortArray2[4] = (short) (-1941);
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[9];
      shortArray3[0] = (short)2101;
      shortArray3[1] = (short)0;
      shortArray3[2] = (short)0;
      shortArray3[3] = (short)2905;
      shortArray3[4] = (short) (-2492);
      shortArray3[5] = (short)596;
      shortArray3[6] = (short)2101;
      shortArray3[7] = (short) (-2492);
      shortArray3[8] = (short)1750;
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[2];
      shortArray4[0] = (short) (-2492);
      shortArray4[1] = (short)180;
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[2];
      shortArray5[0] = (short) (-2492);
      shortArray5[1] = (short) (-2492);
      shortArray0[4] = shortArray5;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(0, shortArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      visualListModel0.getElementAt(0);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1218), 0, (-2620));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -2620
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2890713983064828
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[0] = (-296);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getValidElements();
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1499, (-766));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1499) > toIndex(-766)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      byte byte0 = (byte)77;
      byte byte1 = (byte) (-56);
      byte byte2 = (byte) (-1);
      int int0 = 2692;
      int int1 = (-1894);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.subList(2692, (int) (byte) (-56), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2692) > toIndex(-56)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5378975319224097
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-2006), (VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      assertEquals(2, visualListModel0.getSize());
      
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.getSize();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.addAllElements(502, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(vector0);
      visualListModel0.updateElementAt(883, (VisualPageListItem) null);
      visualListModel0.moveDownIndex((-2006));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      Point point0 = new Point(227, 227);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel1.undeleteElements(intArray0);
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.elementChanged(visualPageListItemArray0[7]);
      assertEquals(9, visualListModel1.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      JComponent.getDefaultLocale();
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      jComboBox0.addComponentListener((ComponentListener) null);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((-970), (Collection<VisualPageListItem>) linkedHashSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.addAll((Collection<? extends VisualPageListItem>) linkedHashSet1);
      visualListModel0.setData(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet2.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[0];
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      visualListModel1.moveUpIndexes(intArray0);
      int int0 = 0;
      visualListModel1.removeElements(1243, 0, true);
      visualListModel1.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(597, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(597) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      Point point0 = new Point(227, 227);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 91;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Point point0 = new Point(91, (-951));
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point1 = gridBagLayout0.getLayoutOrigin();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getDisabledIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("", (Icon) null, true);
      gridBagLayout0.preferredLayoutSize(jRadioButtonMenuItem0);
      point0.setLocation((-872), 357);
      point0.setLocation(point1);
      // Undeclared exception!
      try { 
        Raster.createPackedRaster(91, 88, 7, 91, 0, point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bits per band (0) must be greater than 0
         //
         verifyException("java.awt.image.Raster", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(93);
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[0];
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(defaultTableModelArray0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.moveUpIndex((-1943));
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-1943), 609.4264, (double) (-2862));
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      HashMap<RenderingHints.Key, JTable.PrintMode> hashMap0 = new HashMap<RenderingHints.Key, JTable.PrintMode>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      BigInteger bigInteger0 = BigInteger.ONE;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      RescaleOp rescaleOp0 = new RescaleOp((-1943), 3981, renderingHints0);
      visualListModel0.moveDownIndex(102);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.prependAllElements(vector0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-1), (-1), true);
      visualListModel0.clearData();
      visualListModel0.elementsChanged();
      visualListModel0.moveUpIndex(0);
      byte[][] byteArray0 = new byte[6][8];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)15;
      byteArray1[1] = (byte)98;
      byteArray1[2] = (byte)14;
      byteArray1[3] = (byte)103;
      byte byte0 = (byte) (-26);
      byteArray1[4] = (byte) (-26);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)103;
      byteArray2[1] = (byte)15;
      byteArray2[2] = (byte)98;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)103;
      byteArray3[1] = (byte) (-26);
      byteArray3[2] = (byte)103;
      byteArray3[3] = (byte)14;
      byteArray3[4] = (byte) (-26);
      byteArray3[5] = (byte)98;
      byteArray3[6] = (byte)98;
      byteArray3[7] = (byte)0;
      byteArray3[8] = (byte)15;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-26);
      byteArray4[1] = (byte)15;
      byteArray4[2] = (byte)103;
      byteArray4[3] = (byte)98;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte)98;
      byteArray5[1] = (byte)15;
      byteArray5[2] = (byte) (-26);
      byteArray5[3] = (byte)0;
      byteArray5[4] = (byte)14;
      byteArray5[5] = (byte) (-26);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable((-1), byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      boolean boolean0 = true;
      visualListModel0.subList(2939, 1716, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = (-1039);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1039));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements((int) (byte)77, (int) (byte)77, false);
      visualListModel0.elementsChanged();
      visualListModel0.subList((-3408), 518, false);
      visualListModel0.undeleteElements(intArray0);
      Point point0 = new Point((-1894), (byte) (-1));
      // Undeclared exception!
      try { 
        point0.setLocation((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Point", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.502347453863389
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)77;
      byteArray0[0] = (byte)77;
      visualListModel0.moveUpIndex((byte)77);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-56);
      byte byte1 = (byte) (-1);
      int int0 = 2692;
      visualListModel0.subList((-1894), (int) (byte)77, false);
      visualListModel0.undeleteElements(intArray0);
      Point point0 = new Point((byte)77, (byte) (-1));
      point0.y = (int) (byte)0;
      // Undeclared exception!
      try { 
        point0.setLocation((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Point", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      Object[] objectArray0 = new Object[10];
      objectArray0[0] = (Object) stack0;
      objectArray0[4] = (Object) stack0;
      objectArray0[2] = (Object) vector0;
      objectArray0[3] = (Object) visualListModel1;
      objectArray0[4] = (Object) stack0;
      objectArray0[5] = (Object) visualListModel1;
      objectArray0[6] = objectArray0[0];
      objectArray0[7] = (Object) vector0;
      objectArray0[8] = (Object) visualListModel0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      visualListModel1.addListDataListener(jComboBox0);
      visualListModel1.setData(vector0);
      assertEquals(0, vector0.size());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      intArray0[0] = 0;
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte) (-1);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      visualListModel0.moveUpIndex(88);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)77;
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-56);
      byte byte1 = (byte) (-1);
      int int0 = 2692;
      visualListModel0.subList((int) (byte)0, (int) (byte)77, false);
      visualListModel0.undeleteElements(intArray0);
      Point point0 = new Point((byte)77, (byte) (-1));
      point0.y = (int) (byte)0;
      // Undeclared exception!
      try { 
        point0.setLocation((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Point", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-295), 0);
      int int0 = 0;
      visualListModel0.moveUpIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 90;
      intArray0[3] = (-1);
      intArray0[4] = 657;
      intArray0[5] = (-3681);
      visualListModel0.removeElements(intArray0, false);
      assertArrayEquals(new int[] {1, 0, 90, (-1), 657, (-3681)}, intArray0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 810, false);
      int[] intArray0 = new int[6];
      intArray0[0] = 810;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 810;
      intArray0[5] = 810;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.getElementAt(2907);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.subList(142, 227, true);
      float[] floatArray0 = new float[0];
      Hashtable<RenderingHints.Key, JTable.PrintMode> hashtable0 = new Hashtable<RenderingHints.Key, JTable.PrintMode>();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.0, 0.0);
      affineTransform0.setToShear(142, 1.0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      hashtable0.put(sunHints_Key0, jTable_PrintMode0);
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      assertEquals(1, affineTransformOp0.getInterpolationType());
  }
}
