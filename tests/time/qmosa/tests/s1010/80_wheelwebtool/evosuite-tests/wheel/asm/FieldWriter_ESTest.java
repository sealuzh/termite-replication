/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:51:01 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3854473425041367
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(533);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ConstantValue");
      classWriter0.visitOuterClass("ConstantValue", "", (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ByteVector byteVector0 = new ByteVector(533);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      byteVector1.putInt(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "", "-}^Tq{q 'E", (String) null, "d!Rq7$=M");
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      String[] stringArray0 = new String[0];
      classWriter0.visit(1692, (-2755), "", "o0 c* [cg*", "ConstantValue", stringArray0);
      fieldWriter0.getSize();
      int int1 = fieldWriter0.getSize();
      assertEquals(22, int1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4621559870575607
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(533);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-388), "", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (Object) null);
      ByteVector byteVector0 = new ByteVector(2447);
      ByteVector byteVector1 = byteVector0.put11((-388), 2447);
      byte byte0 = (byte)0;
      ByteVector byteVector2 = byteVector1.putShort((byte)0);
      ByteVector byteVector3 = byteVector1.putByte(131072);
      classWriter0.newFloat(131072);
      byteVector2.putByte(131072);
      ByteVector byteVector4 = byteVector3.putInt(131072);
      ByteVector byteVector5 = byteVector2.putUTF8("");
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector4);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-88);
      byteArray0[6] = (byte)0;
      byteVector5.data = byteArray0;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, "", "", "RuntimeInvisibleAnnotations", "}+TZ^W,z.");
      fieldWriter1.getSize();
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.527445819868194
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1738));
      classWriter0.visitSource("SourceFile", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", (String) null, (Object) null);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putUTF8("");
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter1.visitAnnotation("", false);
      fieldWriter0.next.visitAnnotation("`]zE", true);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.057313896906394
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(533);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PTdN@>^w0\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.visitOuterClass("tRcm", "}", (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "tRcm");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "}", "org.apache.commons.io.filefilter.AndFileFilter", (String) null, "d!Wq7V=M");
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("yw)", true);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(533);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Deprecated");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.visitOuterClass("PTdN@>^w0\"", "RuntimeInvisibleAnnotations", "!sj+zHt3yT");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JSR/RET are not supported with computeFrames option");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("L^v,+]qK=EWoQn[");
      ByteVector byteVector2 = byteVector1.put12(2, (-4186));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2543), "", ";^bwn+R&^T4Ny@", "", "!sj+zHt3yT");
      fieldWriter0.put(byteVector2);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        byteVector1.putByteArray(byteArray0, 5, 533);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(533);
      classWriter0.newDouble(533);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "RuntimeInvisibleAnnotations", (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8647337539567728
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(513);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-388), "", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (Object) null);
      ByteVector byteVector0 = new ByteVector(2447);
      byteVector0.put11((-388), 2447);
      byteVector0.put12(1, 2);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)4;
      byteArray0[4] = (byte)0;
      ByteVector byteVector1 = byteVector0.putShort((byte)4);
      classWriter0.newFloat(1.0F);
      byteVector1.putUTF8("");
      ByteVector byteVector2 = byteVector1.putInt((-388));
      byteVector0.putUTF8("");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      fieldWriter0.put(byteVector2);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.631531458505318
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(531);
      classWriter0.visitOuterClass("\nk&^vN", "", (String) null);
      String string0 = "";
      classWriter0.newConst("RuntimeInvisibleAnnotations");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "", "-}^Tqq '", (Object) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(531);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteVector1.put11(2, 16);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("The array of suffixes must not be null", false);
      String string1 = null;
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      classWriter0.visitSource("KM{u_a!P?", "KM{u_a!P?");
      classWriter0.visitOuterClass("", "RuntimeInvisibleAnnotations", "");
      classWriter0.newConst("-}^Tq{q 'E");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "-}^Tq{q 'E", "Signature", "Signature", "Signature");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.039435730626322
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2198));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 378, "wheel.asm.ClassReader", ":Ezzmz0E1h^(=v/8Jv", "", "=JZdhk");
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0414408810333782
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(533);
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-388), "", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (Object) null);
      ByteVector byteVector0 = new ByteVector(2447);
      ByteVector byteVector1 = byteVector0.put11((-388), 2447);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-97);
      ByteVector byteVector2 = byteVector0.put11(737, 2);
      byteVector0.putByte((byte) (-97));
      Item item0 = classWriter0.key2;
      byteVector1.putUTF8("RuntimeInvisibleAnnotations");
      fieldWriter0.put(byteVector2);
      boolean boolean0 = false;
      FieldWriter fieldWriter1 = classWriter0.firstField;
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter1.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(533);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PTdN@>^w0\"");
      classWriter0.visitOuterClass("nk&^vN", "", "nk&^vN");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PTdN@>^w0\"");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putUTF8("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "-}^Tq{q 'E", "", "d!Wq7V=M");
      fieldWriter0.visitAnnotation("-)%", false);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.49057893774639
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2360), "R'\"+?7D!LK!lJz&5-$", "z+]Z", "b9#9k&y=", (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.put11(4096, 1);
      ByteVector byteVector2 = byteVector1.putByte((-1574));
      classWriter0.newFloat(1.0F);
      ByteVector byteVector3 = byteVector2.putUTF8("b9#9k&y=");
      byteVector3.put12(0, 7);
      fieldWriter0.put(byteVector2);
      fieldWriter0.visitAnnotation("z+]Z", true);
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n(;~");
      ClassWriter classWriter0 = new ClassWriter((-3107));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5, "The prefix must not be null", "", "&Z7O", "-}^Tq{q 'E");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      classWriter0.newInteger(521);
      String string0 = "\\nk&^vN";
      String string1 = "";
      classWriter0.visitOuterClass("\nk&^vN", "", (String) null);
      ClassWriter classWriter1 = new ClassWriter(1711);
      int int0 = 5;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter1, 5, "/\"'2]8!FF)AF", "TPvL5P?TmAY'S`", "", classWriter1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@d
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1290);
      ClassWriter classWriter1 = new ClassWriter(1290);
      classWriter0.visitOuterClass("", (String) null, (String) null);
      classWriter0.newConst("");
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, "MYZ6'N(g3n3[tM@Y+I=", "", "MYZ6'N(g3n3[tM@Y+I=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
