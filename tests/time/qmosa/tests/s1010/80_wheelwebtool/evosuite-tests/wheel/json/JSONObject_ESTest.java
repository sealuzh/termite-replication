/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 21:51:55 GMT 2019
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.983793747583146
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Byte byte0 = new Byte((byte)15);
      Byte.toUnsignedInt((byte) (-3));
      Integer integer0 = new Integer(253);
      Integer integer1 = new Integer(253);
      JSONObject.valueToString(byte0, (byte)15, 0);
      Object object0 = JSONObject.NULL;
      String string0 = "-+Kucm*Ic_im\\i0";
      String string1 = "{";
      JSONTokener jSONTokener0 = new JSONTokener("{");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must end with '}' at character 1 of {
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.optDouble("=T>u>Q._;H/N");
      JSONObject.getNames(jSONObject0);
      jSONObject0.isNull("5prU");
      String string0 = null;
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7360595129306575
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "toO";
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      JSONObject jSONObject2 = jSONObject0.append("toO", jSONObject1);
      jSONObject1.toString();
      jSONObject2.names();
      JSONObject jSONObject3 = jSONObject1.put("toO", true);
      String string1 = "=uhsO~QQ";
      jSONObject1.optInt("Yl#Nzj|", 27);
      try { 
        jSONObject3.getDouble("(&)aH1|b1u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"(&)aH1|b1u\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9097849803429847
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      jSONObject0.append("toO", jSONObject1);
      jSONObject1.optInt("toO", (-1158));
      Double double0 = new Double(682.1);
      jSONObject0.append("", "");
      jSONObject1.optDouble((String) null);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject2 = new JSONObject(jSONObject1);
      jSONObject2.optInt((String) null, (-1158));
      Object object1 = JSONObject.NULL;
      Object object2 = new Object();
      JSONObject.valueToString(object2);
      jSONObject1.put("'", true);
      Double double1 = new Double(0.0);
      JSONObject.getNames(object0);
      jSONObject1.optBoolean("'", true);
      jSONObject2.optString("toO", "w!SLNDD*J%f");
      Object object3 = JSONObject.NULL;
      int int0 = jSONObject1.optInt("yl<D");
      assertEquals(4, jSONObject1.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      int int0 = 573;
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      HashMap<Byte, JSONArray> hashMap1 = new HashMap<Byte, JSONArray>();
      JSONObject.quote("?GzxDc)U]&P,");
      JSONTokener jSONTokener0 = new JSONTokener(" of ");
      JSONArray jSONArray1 = null;
      try {
        jSONArray1 = new JSONArray(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 2 of  of 
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.019126754460062
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("!`]JH6tzi3T$ocg\"V", false);
      jSONObject0.optJSONArray("");
      Float.sum(0.0F, 857.7289F);
      JSONObject jSONObject2 = jSONObject0.put("wzLK2~", false);
      jSONObject2.toString(334);
      Object object0 = JSONObject.NULL;
      Short short0 = new Short((short)38);
      jSONObject0.optDouble("Q_++Y=o=,gA1hsWR", (double) 857.7289F);
      Short short1 = new Short((short)38);
      Boolean boolean0 = Boolean.valueOf("issplit");
      jSONObject1.append("_W`gVgu6", boolean0);
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      jSONObject3.optBoolean("[]");
      JSONObject jSONObject4 = new JSONObject();
      JSONObject.valueToString(short0);
      JSONObject jSONObject5 = jSONObject3.optJSONObject("j0h)4hm@*Y2nQqw<");
      assertNull(jSONObject5);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0005612732057014
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray0);
      
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("Expected '", "Expected '");
      double double0 = jSONObject1.optDouble("SvRsVG8", (-193.4448));
      assertEquals((-193.4448), double0, 0.01);
      
      Float float0 = new Float((-687.9879F));
      Double double1 = new Double((-193.4448));
      JSONObject jSONObject2 = jSONObject1.append("4", double1);
      double double2 = jSONObject1.optDouble("4");
      assertEquals(Double.NaN, double2, 0.01);
      
      int int0 = jSONObject2.optInt("in", (-1158));
      assertEquals((-1158), int0);
      
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(jSONObject0);
      JSONObject jSONObject3 = jSONObject0.put("Expected '", false);
      Double double3 = new Double(0.0);
      String[] stringArray1 = JSONObject.getNames((Object) "in");
      assertNotNull(stringArray1);
      
      boolean boolean1 = jSONObject3.optBoolean("4", false);
      assertFalse(boolean1);
      
      String string0 = jSONObject0.optString("in", "Expected '");
      assertEquals("Expected '", string0);
      
      Double double4 = new Double((-1720.145337));
      jSONObject1.append("!jQ~M?r:Nx/2?", double4);
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString("#<g1Tpl");
      jSONObject1.optLong("in");
      long long0 = jSONObject1.optLong("false");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8404402404896367
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Float float0 = new Float(0.0F);
      Float.isFinite(0.0F);
      Float.isFinite(0.0F);
      JSONObject jSONObject0 = new JSONObject(float0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("'\"t8qQ", (Object) null);
      jSONObject0.optLong("\n", (-203L));
      JSONArray jSONArray0 = jSONObject0.names();
      jSONObject0.optInt("\n", (-2075));
      Object object0 = new Object();
      JSONObject.valueToString(jSONArray0);
      jSONObject0.optString("<wk#7k,", "java.lang.Long@0000000011.");
      jSONObject1.toString(110, 46);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8772618077528356
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "eRJ-%( 3z8";
      stringArray0[1] = "y-t-C7z,kYbrq5";
      String string0 = "wheel.json.JSONObject$Null";
      stringArray0[3] = "!pGO2A";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.optDouble("eRJ-%( 3z8");
      String string1 = "C,L6+";
      boolean boolean0 = false;
      jSONObject1.put("C,L6+", false);
      try { 
        jSONObject1.getLong("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8570359700669563
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<Object, JSONArray> hashMap0 = new HashMap<Object, JSONArray>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString(4);
      String string1 = JSONObject.quote("");
      assertEquals("\"\"", string1);
      
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject1 = jSONObject0.append("AXj2t/u", "!`]JH6tzi3T$ocg\"V");
      int int0 = jSONObject1.optInt(",");
      assertEquals(0, int0);
      
      boolean boolean0 = jSONObject0.optBoolean("{}");
      assertFalse(boolean0);
      
      jSONObject1.optJSONObject("getput");
      String string2 = jSONObject1.toString();
      assertFalse(string2.equals((Object)string0));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1900817304125457
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(1909.9);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "C)mA/!)Grgk*%LN";
      stringArray0[2] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[3] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[4] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[5] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[6] = "!`]JH6tzi3T$ocg\"V";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject1.put("] is not a JSONArray.", false);
      jSONObject1.optLong("!`]JH6tzi3T$ocg\"V", 1L);
      jSONObject0.optJSONArray("#@hyo,q4&d,)!}I}");
      jSONObject2.keys();
      HashMap<Object, JSONArray> hashMap0 = new HashMap<Object, JSONArray>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      jSONObject3.toString(4);
      JSONObject.quote("!`]JH6tzi3T$ocg\"V");
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject4 = jSONObject3.append("AXj2t/u", "C)mA/!)Grgk*%LN");
      jSONObject4.optInt(",");
      jSONObject3.optBoolean("{}");
      jSONObject4.optJSONObject("getput");
      String[] stringArray1 = JSONObject.getNames((Object) null);
      assertNull(stringArray1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0940645957894484
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONArray0.put(2442, (Collection) linkedList0);
      jSONObject0.toJSONArray(jSONArray0);
      String string0 = "dyAjN/V8V/*$9I";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("dyAjN/V8V/*$9I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of dyAjN/V8V/*$9I
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4811631932219727
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("!`]JH6tzi3T$ocg\"V", false);
      jSONObject0.optJSONArray("");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("!`]JH6tzi3T$ocg\"V");
      jSONObject1.write(stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      String string0 = "fo";
      jSONObject1.put("fo", false);
      String string1 = "=uhsO~QQ";
      try { 
        jSONObject1.getInt("fo");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"fo\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4378746478621216
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optDouble("v", 0.0);
      String string0 = JSONObject.valueToString(object0);
      Float float0 = new Float(1158.3115F);
      jSONObject0.accumulate("a,m@a9", float0);
      Float float1 = new Float((double) 1158.3115F);
      String string1 = JSONObject.valueToString(float1);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.878435836058055
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double(1909.9);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "C)mA/!)Grgk*%LN";
      stringArray0[2] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[3] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[4] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[5] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[6] = "!`]JH6tzi3T$ocg\"V";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject1.put("] is not a JSONArray.", false);
      long long0 = jSONObject1.optLong("!`]JH6tzi3T$ocg\"V", 1L);
      assertEquals(1L, long0);
      
      jSONObject0.optJSONArray("#@hyo,q4&d,)!}I}");
      jSONObject2.keys();
      HashMap<Object, JSONArray> hashMap0 = new HashMap<Object, JSONArray>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      Float float0 = new Float((-1.0F));
      Double.min((-414.11465821204), (-414.11465821204));
      JSONObject.getNames((Object) float0);
      jSONObject2.put("\r", 1698.525564);
      boolean boolean0 = jSONObject3.optBoolean("&}W}ZKA=urH}Kcq", false);
      assertFalse(boolean0);
      
      String string0 = jSONObject2.optString("!`]JH6tzi3T$ocg\"V", "oY");
      assertEquals("oY", string0);
      
      Double double1 = Double.valueOf((-1839.0098506760041));
      String[] stringArray1 = JSONObject.getNames((Object) double1);
      assertEquals(11, stringArray1.length);
      assertNotNull(stringArray1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("2#mP");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "2#mP";
      stringArray0[1] = "2#mP";
      stringArray0[2] = "Q";
      stringArray0[3] = "2#mP";
      stringArray0[4] = "nY5gR47O";
      stringArray0[5] = "dou";
      stringArray0[6] = "2#mP";
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put(",:]}/\"[{;=#", 92);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.394993443200781
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject();
      int int0 = 2442;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray1 = new JSONArray();
      int int1 = 3064;
      JSONObject.valueToString(jSONArray1, 3064, 0);
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      HashMap<Object, String> hashMap1 = new HashMap<Object, String>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap1);
      String string0 = null;
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.906479857174976
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("toO", boolean0);
      jSONObject1.optLong("toO", (-203L));
      jSONObject1.names();
      jSONObject0.optInt("toO", 110);
      Object object1 = new Object();
      JSONObject.valueToString(object1);
      jSONObject1.optString("toO", "<wk#7k,");
      jSONObject1.toString((-2669), 110);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.957799740932462
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("toO", boolean0);
      jSONObject1.optDouble("in", (-193.4448));
      Float float0 = new Float(5037.3994F);
      jSONObject0.append("toO", float0);
      jSONObject0.optDouble("in");
      jSONObject1.optInt("", (-1158));
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      Object object2 = new Object();
      JSONObject.valueToString("null");
      jSONObject1.optString("<wk#7k,", "'JcV.j[");
      jSONObject0.toString((-2765), (-2765));
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.258868589771196
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte byte0 = (byte)15;
      Byte byte1 = new Byte((byte)15);
      Byte.toUnsignedInt((byte) (-3));
      Integer integer0 = new Integer(253);
      Integer integer1 = new Integer(253);
      JSONObject.valueToString(byte1, (byte)15, 0);
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[9];
      stringArray0[1] = "java.lang.Byte@0000000001";
      stringArray0[2] = "";
      stringArray0[3] = "java.lang.Byte@0000000001";
      stringArray0[4] = "java.lang.Byte@0000000001";
      stringArray0[5] = "java.lang.Byte@0000000001";
      stringArray0[6] = "java.lang.Byte@0000000001";
      JSONObject jSONObject0 = new JSONObject("{}");
      try { 
        jSONObject0.getDouble("java.lang.Byte@0000000001");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"java.lang.Byte@0000000001\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7905287189728134
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = JSONObject.valueToString(jSONObject0, 0, 0);
      assertEquals("{}", string0);
      
      String string1 = JSONObject.quote("{}");
      assertEquals("\"{}\"", string1);
      
      JSONObject.valueToString("\"{}\"");
      String string2 = JSONObject.valueToString((Object) null);
      assertEquals("null", string2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.507471450603865
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONObject.quote("y%5\";6Z4&@=");
      JSONObject.valueToString("\"y%5\";6Z4&@=\"", 573, 0);
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      jSONObject0.names();
      jSONObject0.put("\"java.lang.String@0000000001\"", false);
      jSONObject0.optInt("=uhsO~QQ", 573);
      Double double0 = new Double(1848.838180516);
      Double.max((-4902.00623226), 0);
      jSONObject0.append("toH", (Object) null);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject1.optString("JSONObject[", "i");
      Byte byte0 = new Byte((byte)37);
      JSONObject jSONObject2 = jSONObject1.put("\"y%5\";6Z4&@=\"", (Map) hashMap0);
      assertSame(jSONObject2, jSONObject1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3866297636554132
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray1 = new JSONArray();
      JSONObject.quote("dyAjN/V8V/*$9I");
      jSONObject0.optLong("dyAjN/V8V/*$9I");
      Float.max(0L, 2798.366F);
      jSONObject0.optBoolean("dyAjN/V8V/*$9I");
      String string0 = "";
      Float.sum(2798.366F, (-1948.0F));
      jSONObject0.put("Null key.", false);
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("dyAjN/V8V/*$9I");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of dyAjN/V8V/*$9I
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8150538296146528
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONArray0.put(2442, (Collection) linkedList0);
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      JSONObject.quote("dyAjN/V8V/*$9I");
      Double double0 = new Double(0.0);
      JSONObject.valueToString(jSONArray1);
      Double double1 = new Double(Double.NaN);
      JSONObject.testValidity(")8}Y23EVOy-.");
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.2941125372955318
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double double0 = new Double(1909.9);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "C)mA/!)Grgk*%LN";
      stringArray0[2] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[3] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[4] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[5] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[6] = "!`]JH6tzi3T$ocg\"V";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      JSONObject jSONObject2 = jSONObject1.put("] is not a JSONArray.", false);
      jSONObject1.optLong("!`]JH6tzi3T$ocg\"V", 1L);
      jSONObject0.optJSONArray("#@hyo,q4&d,)!}I}");
      jSONObject2.keys();
      HashMap<Object, JSONArray> hashMap0 = new HashMap<Object, JSONArray>();
      JSONObject jSONObject3 = new JSONObject((Map) hashMap0);
      jSONObject3.toString(4);
      JSONObject.quote("!`]JH6tzi3T$ocg\"V");
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject4 = jSONObject3.append("AXj2t/u", "C)mA/!)Grgk*%LN");
      jSONObject4.optInt(",");
      jSONObject3.optBoolean("{}");
      jSONObject4.optJSONObject("getput");
      jSONObject4.toString();
      jSONObject3.put("['R", (Map) hashMap0);
      try { 
        jSONObject1.getLong(",");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\",\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.432854928627155
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      jSONObject1.optLong("toO", 0L);
      jSONObject1.optInt("toO", (-1158));
      jSONObject1.optString("<wk#7k,", "<wk#7k,");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6154725093825384
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Short short0 = new Short((short) (-2192));
      JSONObject jSONObject0 = new JSONObject(short0);
      Short short1 = new Short((short) (-2192));
      JSONObject jSONObject1 = jSONObject0.append("toO", short1);
      JSONObject jSONObject2 = jSONObject0.append("toO", "");
      jSONObject1.optInt("", 13);
      JSONObject jSONObject3 = jSONObject1.put("is", true);
      Object object0 = new Object();
      JSONObject.getNames(object0);
      jSONObject3.optBoolean("Kitkjw;val-;t.bS", true);
      jSONObject2.optString("toO", (String) null);
      jSONObject1.optJSONObject("wa");
      assertEquals(3, jSONObject1.length());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7175842698071855
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optDouble("v", 0.0);
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      jSONObject1.optDouble("toO");
      jSONObject1.optInt("toO", (-1158));
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      Float float0 = new Float(1158.3115F);
      JSONObject jSONObject2 = jSONObject0.accumulate("a,m@a9", float0);
      Byte byte0 = new Byte((byte)74);
      jSONObject2.putOpt("toO", byte0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.369960722984757
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      Boolean boolean0 = Boolean.FALSE;
      Object object1 = new Object();
      JSONObject.valueToString(object1);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8054985333482105
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONObject.quote("y%5\";6Z4&@=");
      JSONObject jSONObject0 = new JSONObject((Object) "y%5\";6Z4&@=");
      jSONObject0.keys();
      JSONObject.valueToString(jSONObject0, 0, 12);
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      jSONObject0.optLong("isjoin");
      Float.max(0, 0.0F);
      jSONObject1.optBoolean("y%5\";6Z4&@=");
      String string0 = "";
      Float.sum(0L, 0.0F);
      Float.sum(0.0F, 0);
      JSONObject jSONObject2 = null;
      try {
        jSONObject2 = new JSONObject(jSONObject1, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9449170304546817
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("toO", boolean0);
      jSONObject1.optDouble("toO", (-193.4448));
      Float float0 = new Float(5037.3994F);
      jSONObject0.append("toO", float0);
      jSONObject0.optDouble("toO");
      jSONObject1.optInt("", (-1158));
      JSONObject.valueToString(boolean0);
      Float float1 = new Float((-1.0F));
      Integer integer0 = new Integer((-1158));
      jSONObject1.accumulate(" at character ", integer0);
      Byte byte0 = new Byte((byte)74);
      Integer integer1 = Integer.getInteger("0", (-1158));
      jSONObject1.putOpt("false", integer1);
      HashMap<Short, JSONArray> hashMap0 = new HashMap<Short, JSONArray>();
      jSONObject0.put("] is not a Boolean.", (Map) hashMap0);
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONArray0.optDouble(58, (double) 3695);
      Byte byte0 = new Byte((byte)81);
      JSONArray jSONArray1 = jSONArray0.put((Object) linkedList0);
      jSONArray0.toJSONObject(jSONArray1);
      Double double0 = new Double(Double.NaN);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "S.N^]1~=3NR0";
      stringArray0[1] = "istoHexString";
      stringArray0[3] = " ";
      String string0 = JSONObject.doubleToString(Double.NaN);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7825099696133
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject((Object) "h[=");
      JSONObject.valueToString(jSONObject0, 46, 46);
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      HashMap<Byte, JSONArray> hashMap1 = new HashMap<Byte, JSONArray>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap1);
      jSONObject1.names();
      jSONObject0.names();
      JSONObject jSONObject2 = jSONObject1.put("h[=", true);
      String string0 = "=uhsO~QQ";
      jSONObject2.optInt((String) null, 573);
      String string1 = "?GzxDc)U\\]&P,";
      try { 
        jSONObject2.getDouble("?GzxDc)U]&P,");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"?GzxDc)U]&P,\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.752007373288832
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "y%5\";6Z4&@=";
      JSONObject.quote("y%5\";6Z4&@=");
      JSONObject jSONObject0 = new JSONObject((Object) "y%5\";6Z4&@=");
      jSONObject0.keys();
      JSONObject.valueToString(jSONObject0, 0, 12);
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      JSONObject jSONObject1 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = new JSONArray();
      jSONObject0.names();
      JSONObject jSONObject2 = jSONObject0.put("y%5\";6Z4&@=", false);
      String string1 = "=uhsO~QQ";
      jSONObject2.optInt("{\n            \"java.lang.String@0000000004\": [\n            java.lang.Byte@0000000032,\n            java.lang.Byte@0000000033,\n            java.lang.Byte@0000000034,\n            java.lang.Byte@0000000035,\n            java.lang.Byte@0000000036,\n            java.lang.Byte@0000000037,\n            java.lang.Byte@0000000038,\n            java.lang.Byte@0000000039,\n            java.lang.Byte@0000000040,\n            java.lang.Byte@0000000041,\n            java.lang.Byte@0000000042\n            ],\n            \"java.lang.String@0000000029\": \"java.lang.Class@0000000030\",\n            \"java.lang.String@0000000002\": java.lang.Boolean@0000000003\n            }", (-2059));
      try { 
        jSONObject0.getDouble("{\n            \"java.lang.String@0000000004\": [\n            java.lang.Byte@0000000032,\n            java.lang.Byte@0000000033,\n            java.lang.Byte@0000000034,\n            java.lang.Byte@0000000035,\n            java.lang.Byte@0000000036,\n            java.lang.Byte@0000000037,\n            java.lang.Byte@0000000038,\n            java.lang.Byte@0000000039,\n            java.lang.Byte@0000000040,\n            java.lang.Byte@0000000041,\n            java.lang.Byte@0000000042\n            ],\n            \"java.lang.String@0000000029\": \"java.lang.Class@0000000030\",\n            \"java.lang.String@0000000002\": java.lang.Boolean@0000000003\n            }");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\n            \\\"java.lang.String@0000000004\\\": [\\n            java.lang.Byte@0000000032,\\n            java.lang.Byte@0000000033,\\n            java.lang.Byte@0000000034,\\n            java.lang.Byte@0000000035,\\n            java.lang.Byte@0000000036,\\n            java.lang.Byte@0000000037,\\n            java.lang.Byte@0000000038,\\n            java.lang.Byte@0000000039,\\n            java.lang.Byte@0000000040,\\n            java.lang.Byte@0000000041,\\n            java.lang.Byte@0000000042\\n            ],\\n            \\\"java.lang.String@0000000029\\\": \\\"java.lang.Class@0000000030\\\",\\n            \\\"java.lang.String@0000000002\\\": java.lang.Boolean@0000000003\\n            }\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.9985181104265757
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("toO", boolean0);
      jSONObject1.optDouble("in", (-193.4448));
      Float float0 = new Float(5037.3994F);
      jSONObject0.append("toO", float0);
      jSONObject0.optDouble("in");
      jSONObject1.optInt("", (-1158));
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      Float float1 = new Float((-1.0F));
      Integer integer0 = new Integer((-1158));
      jSONObject1.accumulate(" at character ", integer0);
      Byte byte0 = new Byte((byte)74);
      Integer integer1 = Integer.getInteger("0", (-1158));
      jSONObject1.putOpt("false", integer1);
      HashMap<Short, JSONArray> hashMap0 = new HashMap<Short, JSONArray>();
      jSONObject0.put("] is not a Boolean.", (Map) hashMap0);
      assertEquals(5, jSONObject0.length());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6308800068498637
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "y%5\";6Z4&@=";
      JSONObject.quote((String) null);
      JSONObject jSONObject0 = new JSONObject((Object) "y%5\";6Z4&@=");
      jSONObject0.keys();
      JSONObject.valueToString(jSONObject0, 0, 12);
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      JSONObject jSONObject1 = new JSONObject();
      jSONObject1.names();
      jSONObject0.names();
      JSONObject jSONObject2 = jSONObject0.put("y%5\";6Z4&@=", false);
      try { 
        jSONObject2.getLong("{\n            \"java.lang.String@0000000004\": [\n            java.lang.Byte@0000000032,\n            java.lang.Byte@0000000033,\n            java.lang.Byte@0000000034,\n            java.lang.Byte@0000000035,\n            java.lang.Byte@0000000036,\n            java.lang.Byte@0000000037,\n            java.lang.Byte@0000000038,\n            java.lang.Byte@0000000039,\n            java.lang.Byte@0000000040,\n            java.lang.Byte@0000000041,\n            java.lang.Byte@0000000042\n            ],\n            \"java.lang.String@0000000029\": \"java.lang.Class@0000000030\",\n            \"java.lang.String@0000000002\": java.lang.Boolean@0000000003\n            }");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"{\\n            \\\"java.lang.String@0000000004\\\": [\\n            java.lang.Byte@0000000032,\\n            java.lang.Byte@0000000033,\\n            java.lang.Byte@0000000034,\\n            java.lang.Byte@0000000035,\\n            java.lang.Byte@0000000036,\\n            java.lang.Byte@0000000037,\\n            java.lang.Byte@0000000038,\\n            java.lang.Byte@0000000039,\\n            java.lang.Byte@0000000040,\\n            java.lang.Byte@0000000041,\\n            java.lang.Byte@0000000042\\n            ],\\n            \\\"java.lang.String@0000000029\\\": \\\"java.lang.Class@0000000030\\\",\\n            \\\"java.lang.String@0000000002\\\": java.lang.Boolean@0000000003\\n            }\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1056288295625745
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONArray0.optInt(3695);
      jSONArray0.optDouble(58, (double) 3695);
      Byte byte0 = new Byte((byte)81);
      JSONArray jSONArray1 = jSONArray0.put((Object) linkedList0);
      jSONArray0.toJSONObject(jSONArray1);
      Double double0 = new Double(Double.NaN);
      String[] stringArray0 = new String[9];
      JSONObject.valueToString(jSONArray1, 70, (byte)81);
      Object object0 = JSONObject.NULL;
      JSONArray jSONArray2 = new JSONArray();
      JSONObject jSONObject1 = new JSONObject(jSONArray2, stringArray0);
      try { 
        jSONObject1.getJSONArray("gettoBinaryString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"gettoBinaryString\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2757178931534665
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      String string0 = "toO";
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      jSONObject0.append("toO", jSONObject1);
      int int0 = (-1206);
      String string1 = null;
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Float float0 = new Float((-1493.2055761894));
      StringWriter stringWriter0 = new StringWriter();
      String string0 = JSONObject.doubleToString((-1493.2055761894));
      assertEquals("-1493.2055761894", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.775753011494901
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      JSONObject jSONObject2 = jSONObject0.append("toO", jSONObject1);
      jSONObject1.optInt("toO", (-1158));
      jSONObject1.put("Kitkjw;val-;t.bS", false);
      JSONObject.getNames(object0);
      jSONObject0.optBoolean("Kitkjw;val-;t.bS", true);
      jSONObject1.optString("Kitkjw;val-;t.bS", "Kitkjw;val-;t.bS");
      Byte byte0 = new Byte((byte)37);
      jSONObject2.accumulate("toO", byte0);
      jSONObject2.getString("Kitkjw;val-;t.bS");
      assertEquals(3, jSONObject1.length());
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      String string0 = JSONObject.doubleToString(0.0);
      assertEquals("0", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5140386835423087
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      String string0 = "";
      jSONObject0.put("d0-p", (-1625L));
      jSONObject0.optLong("d0-p");
      jSONObject0.optLong("");
      JSONObject.getNames(jSONObject0);
      jSONObject0.optDouble("");
      try { 
        jSONObject0.getJSONObject("6qiO/o9dm`;VEvI");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"6qiO/o9dm`;VEvI\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.3968294546616913
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "y%5\";6Z4&@=";
      JSONObject.quote("y%5\";6Z4&@=");
      JSONObject.valueToString("\"y%5\";6Z4&@=\"", 573, 0);
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      jSONObject0.names();
      jSONObject0.put("\"java.lang.String@0000000001\"", false);
      jSONObject0.optInt("=uhsO~QQ", 573);
      try { 
        jSONObject0.getDouble("\"java.lang.String@0000000001\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\\"java.lang.String@0000000001\\\"\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.114702829091595
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Map<JSONObject, Boolean> map0 = null;
      JSONObject jSONObject0 = new JSONObject((Map) null);
      jSONObject0.optLong((String) null);
      Float.max(4156.25F, 0L);
      String string0 = null;
      jSONObject0.optBoolean("\n");
      try { 
        jSONObject0.put((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.26323261903522
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0);
      jSONObject0.append(")UOC01X(%X(18tuW?:Q", jSONArray0);
      jSONObject0.optInt(")UOC01X(%X(18tuW?:Q", 3);
      jSONObject0.optString("<wk#7k,", "|zMK>l#J,3*c32w/O");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8148657896913192
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      JSONObject.valueToString((Object) null, 0, 0);
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of null
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = (-1288);
      Object object0 = JSONObject.NULL;
      JSONObject.valueToString(object0, 0, (-1288));
      String string0 = "istoBinaryString";
      JSONArray jSONArray0 = null;
      try {
        jSONArray0 = new JSONArray("istoBinaryString");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at character 1 of istoBinaryString
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9678593488156242
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<JSONObject> linkedList0 = new LinkedList<JSONObject>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      jSONArray0.optDouble(58, (double) 3695);
      Byte byte0 = new Byte((byte)81);
      JSONArray jSONArray1 = jSONArray0.put((Object) linkedList0);
      jSONArray0.toJSONObject(jSONArray1);
      Double double0 = new Double(Double.NaN);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "S.N^]1~=3NR0";
      stringArray0[6] = "istoHexString";
      stringArray0[3] = "n ";
      jSONObject0.append("n ", jSONArray0);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.393612348983956
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject(object0, stringArray0);
      try { 
        jSONObject0.getInt("[9#~");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"[9#~\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.1100843864598464
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      jSONObject0.put("\u0004C45K", (Collection) linkedList0);
      HashMap<Double, Long> hashMap0 = new HashMap<Double, Long>();
      Double double0 = new Double((-632.3068465092));
      BiFunction<Object, Object, Long> biFunction0 = (BiFunction<Object, Object, Long>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction0);
      Long long0 = new Long((-2088L));
      Long.max(564L, 0L);
      Long long1 = Long.getLong((String) null, long0);
      Long.compare(0L, 564L);
      hashMap0.put(double0, long1);
      try { 
        jSONObject0.put((String) null, (Map) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6671373559358784
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      jSONObject0.optDouble("v", 0.0);
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      JSONObject jSONObject2 = jSONObject1.put("v", (Object) null);
      jSONObject1.optDouble("toO");
      jSONObject1.optInt("toO", (-1158));
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      Double double0 = new Double(452.0);
      Object object2 = JSONObject.NULL;
      JSONObject.testValidity(object2);
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      jSONObject2.put("toO", (Collection) linkedList0);
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.4522469794234416
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", false);
      jSONObject0.optJSONArray("");
      jSONObject0.keys();
      jSONObject0.append("] is not a SONArray.", "");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9836144680648387
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "y%5\";6Z4&@=";
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      Byte.toUnsignedLong((byte)11);
      Object object0 = new Object();
      int int0 = 0;
      String string1 = "LNN 5QX@rRT";
      Boolean boolean1 = new Boolean("LNN 5QX@rRT");
      JSONObject.valueToString(boolean1, 123, (byte)11);
      Object object1 = JSONObject.NULL;
      Float float0 = new Float((float) 11L);
      HashMap<JSONObject, Float> hashMap0 = new HashMap<JSONObject, Float>();
      String string2 = "Unclosed comment";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("Unclosed comment");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of Unclosed comment
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.701316305940921
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = "\\u";
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = string0;
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      try { 
        jSONObject0.getDouble("getoptJSONArray");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"getoptJSONArray\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.3522700667182344
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Double double0 = new Double(1909.9);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "C)mA/!)Grgk*%LN";
      stringArray0[2] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[3] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[4] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[5] = "!`]JH6tzi3T$ocg\"V";
      stringArray0[6] = "!`]JH6tzi3T$ocg\"V";
      JSONObject jSONObject0 = new JSONObject(double0, stringArray0);
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.put("] is not a JSONArray.", false);
      jSONObject1.optLong("!`]JH6tzi3T$ocg\"V", 1L);
      Byte.toUnsignedLong((byte)100);
      JSONObject jSONObject2 = new JSONObject("!`]JH6tzi3T$ocg\"V", stringArray0);
      String string0 = "\\b";
      try { 
        jSONObject1.getJSONArray("\b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\b\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.583751422742485
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("!`]JH6tzi3T$ocg\"V", false);
      jSONObject0.optJSONArray("");
      jSONObject0.append("Y8a/pA", jSONObject1);
      jSONObject0.optDouble("");
      JSONObject jSONObject2 = new JSONObject((Object) "");
      jSONObject2.optInt("Y8a/pA", 8448);
      Object object0 = JSONObject.NULL;
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      Float float0 = new Float((float) 8448);
      JSONObject jSONObject3 = new JSONObject();
      JSONObject jSONObject4 = jSONObject0.accumulate("wheel.json.JSONObject", jSONObject3);
      assertEquals(3, jSONObject4.length());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.72435388476403
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("toO", boolean0);
      jSONObject1.optDouble("in", (-193.4448));
      Float float0 = new Float(5037.3994F);
      JSONObject jSONObject2 = jSONObject0.append("toO", float0);
      jSONObject0.optDouble("in");
      jSONObject1.optInt("", (-1158));
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      Float float1 = new Float((-1.0F));
      Integer integer0 = new Integer((-1158));
      jSONObject1.accumulate(" at character ", integer0);
      Byte byte0 = new Byte((byte)74);
      jSONObject1.optLong("ApSidf6u~>G9g");
      JSONArray jSONArray0 = new JSONArray();
      jSONObject2.append("z<Blz}~iKqU gho", jSONArray0);
      assertEquals(4, jSONObject2.length());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.891819179322502
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("!`]JH6tzi3T$ocg\"V", false);
      jSONObject0.optJSONArray("");
      StringWriter stringWriter0 = new StringWriter();
      Byte.toUnsignedLong((byte) (-46));
      Float float0 = new Float((-1798.9F));
      HashMap<JSONObject, Float> hashMap0 = new HashMap<JSONObject, Float>();
      jSONObject0.optJSONArray("!`]JH6tzi3T$ocg\"V");
      String string0 = "toO";
      try { 
        jSONObject1.getJSONObject("!`]JH6tzi3T$ocg\"V");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"!`]JH6tzi3T$ocg\\\"V\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.005650379825582
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Short short0 = new Short((short)120);
      JSONObject jSONObject0 = new JSONObject(short0);
      JSONObject.getNames(jSONObject0);
      jSONObject0.length();
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.03105195015757
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("toO", boolean0);
      jSONObject1.optDouble("in", (-193.4448));
      Float float0 = new Float(5037.3994F);
      JSONObject jSONObject2 = jSONObject0.append("toO", float0);
      jSONObject0.optDouble("in");
      jSONObject1.optInt("", (-1158));
      Object object1 = JSONObject.NULL;
      JSONObject.valueToString(object1);
      JSONObject jSONObject3 = jSONObject1.put("null", false);
      Double double0 = new Double(3220.6826);
      JSONObject.getNames((Object) double0);
      jSONObject2.optBoolean("toO", false);
      jSONObject0.optString("] is not a JSONObject.", "toO");
      jSONObject1.remove("] is not a JSONObject.");
      jSONObject1.optInt("in");
      JSONObject.quote("] is not a JSONObject.");
      int int0 = jSONObject3.length();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5464917163080707
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Integer integer0 = new Integer((-1364));
      JSONObject jSONObject0 = new JSONObject(integer0);
      jSONObject0.optLong("A JSONObject text must begin with '{'");
      JSONObject.getNames(jSONObject0);
      String string0 = "v}SzL{";
      jSONObject0.optDouble("v}SzL{");
      try { 
        jSONObject0.getJSONObject("oM2*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"oM2*\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.8254582001216564
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("!`]JH6tzi3T$ocg\"V", false);
      jSONObject0.optJSONArray("");
      Integer integer0 = new Integer(1651);
      Float float0 = new Float((float) 1171);
      Float float1 = new Float((-1203.607128570378));
      JSONObject jSONObject2 = jSONObject0.accumulate("' and instead saw '", float1);
      Byte byte0 = new Byte((byte)5);
      Integer.getInteger("!`]JH6tzi3T$ocg\"V", (int) (byte) (-66));
      jSONObject2.optDouble("\r");
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject3 = jSONObject0.putOpt("u;}),`U`", float1);
      HashMap<Short, JSONArray> hashMap0 = new HashMap<Short, JSONArray>();
      JSONObject jSONObject4 = jSONObject3.put("f*RHaZLs;G+", (Map) hashMap0);
      jSONObject1.put("' and instead saw '", false);
      jSONObject4.put("' and instead saw '", 1591);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.541280958396051
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.getNames(jSONObject0);
      String string0 = "}0AI6,N Fa9V,[V";
      try { 
        jSONObject0.getBoolean("}0AI6,N Fa9V,[V");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"}0AI6,N Fa9V,[V\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4497927527284427
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      HashMap<Double, String> hashMap0 = new HashMap<Double, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.accumulate("!`]JH6tzi3T$ocg\"V", ".");
      String string0 = "\\r";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("!`]JH6tzi3T$ocg\"V");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of !`]JH6tzi3T$ocg\"V
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.1840718702839044
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.names();
      jSONObject0.names();
      jSONObject0.optInt("=Di_64f", 0);
      jSONObject0.toString(0, 573);
      jSONObject0.has("$H%jJ- X#");
      try { 
        jSONObject0.getJSONArray(":");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\":\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.486718804931632
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = "";
      Double double0 = new Double(1909.9);
      Boolean boolean0 = new Boolean("");
      JSONObject jSONObject0 = new JSONObject(boolean0);
      jSONObject0.keys();
      HashMap<Long, Object> hashMap0 = new HashMap<Long, Object>();
      HashMap<Integer, Byte> hashMap1 = new HashMap<Integer, Byte>();
      HashMap<Integer, Byte> hashMap2 = new HashMap<Integer, Byte>(hashMap1);
      HashMap<Integer, Byte> hashMap3 = new HashMap<Integer, Byte>(hashMap2);
      JSONObject jSONObject1 = new JSONObject((Map) hashMap3);
      jSONObject1.names();
      jSONObject1.names();
      JSONObject jSONObject2 = jSONObject1.put("!`]JH6tzi3T$ocg\"V", false);
      try { 
        jSONObject2.getInt("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.235546543972117
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Byte.toUnsignedLong((byte)47);
      Object object1 = new Object();
      JSONObject.valueToString(object1, 0, (byte)47);
      Object object2 = JSONObject.NULL;
      Byte.toUnsignedLong((byte)44);
      Float float0 = new Float((float) (byte)44);
      HashMap<JSONObject, Float> hashMap0 = new HashMap<JSONObject, Float>();
      jSONObject0.optJSONArray("\"java.lang.Object@0000000004\"");
      try { 
        jSONObject0.getJSONObject("toO");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"toO\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.882110387485166
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject.valueToString(jSONObject0, 127, 2193);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "iS";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject("iS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of iS
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.372561862736863
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JSONArray jSONArray0 = new JSONArray((Collection) linkedList0);
      String[] stringArray0 = new String[6];
      linkedList0.pollLast();
      stringArray0[0] = "true";
      stringArray0[1] = " of ";
      stringArray0[2] = ")VN<-*0xQ].~u_,";
      stringArray0[3] = "";
      stringArray0[4] = "7,mZc-XKJp}To";
      stringArray0[5] = "wheel.json.JSONArray";
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      HashMap<Double, Object> hashMap0 = new HashMap<Double, Object>();
      jSONObject0.put("wheel.json.JSONObject", (Map) hashMap0);
      jSONObject0.optInt(" of ", 0);
      double double0 = jSONObject0.optDouble("7,mZc-XKJp}To");
      assertEquals(1, jSONObject0.length());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8097157496546425
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      JSONObject jSONObject1 = jSONObject0.append("toO", "toO");
      JSONObject jSONObject2 = jSONObject0.append("toO", jSONObject1);
      jSONObject1.optInt("toO", (-1158));
      Float float0 = new Float((-446.5F));
      Integer integer0 = new Integer((-1158));
      Float float1 = new Float((-1.0F));
      JSONObject jSONObject3 = jSONObject2.accumulate("toO", float1);
      Byte byte0 = new Byte((byte)74);
      Integer.getInteger("0", (-1158));
      jSONObject3.putOpt("toO", " at character ");
      HashMap<Short, JSONArray> hashMap0 = new HashMap<Short, JSONArray>();
      jSONObject0.put("toO", (Map) hashMap0);
      jSONObject3.optBoolean(" at character ");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = "wheel.json.JSONException";
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("wheel.json.JSONException");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of wheel.json.JSONException
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.563413311326071
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Float float0 = new Float((-1493.2055761894));
      JSONObject.numberToString(float0);
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.Float@0000000001");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of java.lang.Float@0000000001
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7192814263376803
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Boolean boolean0 = Boolean.TRUE;
      JSONObject jSONObject1 = jSONObject0.append("toO", boolean0);
      jSONObject1.optLong("toO", (-203L));
      jSONObject1.names();
      jSONObject0.optInt("toO", 110);
      Object object1 = new Object();
      JSONObject.valueToString(object1);
      jSONObject1.optString("toO", "<wk#7k,");
      Object object2 = JSONObject.NULL;
      Double double0 = new Double((-321.01));
      jSONObject1.put("@", (Object) double0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.8033455593810737
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = (-1L);
      jSONObject0.optLong("true", (-1L));
      jSONObject0.toString();
      try { 
        JSONObject.numberToString((Number) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null pointer
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Float float0 = new Float((-1493.2055761894));
      Float.min(1450.3267F, 1450.3267F);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.remove("P");
      Object object0 = JSONObject.NULL;
      Short short0 = new Short((short)11);
      assertEquals((short)11, (short)short0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      String string0 = null;
      try { 
        jSONObject0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String string0 = jSONObject0.optString("getlogicalXor");
      assertEquals("", string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5825321594340225
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      JSONObject jSONObject0 = new JSONObject(object0);
      Object object1 = new Object();
      jSONObject0.append("toO", object1);
      jSONObject0.optLong((String) null, 0L);
      jSONObject0.optInt((String) null, 4345);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "toO";
      stringArray0[1] = "_";
      stringArray0[2] = "toO";
      String string0 = "has";
      stringArray0[3] = "has";
      stringArray0[4] = "toO";
      stringArray0[5] = "<wk#7k,";
      stringArray0[6] = null;
      stringArray0[7] = "toO";
      JSONObject jSONObject1 = null;
      try {
        jSONObject1 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8595625334445338
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      int int0 = (-1364);
      Integer integer0 = new Integer((-1364));
      JSONObject jSONObject0 = new JSONObject(integer0);
      String string0 = "A JSONObject text must begin with '{'";
      try { 
        jSONObject0.get("A JSONObject text must begin with '{'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"A JSONObject text must begin with '{'\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.033697013620137
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "istoHexString";
      stringArray0[1] = "not";
      stringArray0[2] = "";
      stringArray0[3] = " at character ";
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      jSONObject1.optJSONObject("java.lang.Float@00000000010");
      jSONObject0.optJSONObject("0");
      JSONArray jSONArray0 = new JSONArray();
      assertEquals(0, jSONArray0.length());
  }
}
