/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:33:21 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.filechooser.FileSystemView;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaDetailProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.fw.util.log.ILoggerFactory;
import net.sourceforge.squirrel_sql.fw.util.log.LoggerController;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.javax.swing.MockJFileChooser;
import org.evosuite.runtime.mock.javax.swing.filechooser.MockFileSystemView;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "(o3p8#mH";
      String string1 = "I";
      int int0 = (-1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("(o3p8#mH", "I", "RLo( 0", "=xY:$c|?f04YJ8WF", (-4), (String) null, (-1715), (-429), (-1), (-1), "DBUtil.info.bindblobmem", "I", (-173), (-429), (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ITableInfo iTableInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "Eut(r;$Su`k2Tx6zt", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Qgwx!3V)0xCL2YF\"E", "Qgwx!3V)0xCL2YF\"E");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[1] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[3] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " in schema ", " in schema ");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "A";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2215, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-7), 2215, (-7), 2215, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2215, 1518, "A");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string1 = " Ncyhh&[Z";
      String string2 = "w-|v^|%u-\\yJV0!";
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, " Ncyhh&[Z", "blob sub_type 1", "w-|v^|%u-yJV0!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Qgwx!3V)0xCL2YF\"E", "Qgwx!3V)0xCL2YF\"E");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "1");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(845);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[6];
      sQLAliasSchemaDetailProperties1.setSchemaName("DT`bjc/B:8");
      sQLAliasSchemaProperties0.setCacheSchemaIndependentMetaData(true);
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[4] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[5] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailProperties1.setView((-1735));
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      sQLAliasSchemaProperties0.setGlobalState(1);
      DBUtil.typesAreEquivalent(2, 0);
      ISQLConnection iSQLConnection0 = null;
      String string0 = "O-<'F^[r(epH48='";
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "O-<'F^[r(epH48='", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      ILoggerFactory iLoggerFactory0 = mock(ILoggerFactory.class, new ViolatedAssumptionAnswer());
      LoggerController.registerLoggerFactory((ILoggerFactory) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, ")PAjCib1E @p", "Unexpected exception while attempting to determine if a table (", "w-|v^|%u-yJV0!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".vau$so,6n'j7s~m", "iZ.qhm;#v", ".vau$so,6n'j7s~m", "HjDvVQ2xI}&", (-665), "", (-665), 3201, 3201, (-1633), ".vau$so,6n'j7s~m", " NOT NULL", (-1633), 4486, "G[yF%f");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo((String) null, "net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties", "m.G9", "I60K|<NPV5,,@O&z0", 1000, "\n", 3410, 563, (-6), 1326, "{d+^T>eq", "maximizeSessionSheetOnOpen", 3410, (-1633), "#0");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATATYPE;
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      sQLAlias0.getSchemaProperties();
      SQLAlias sQLAlias1 = new SQLAlias(uidIdentifier0);
      SQLAliasColorProperties sQLAliasColorProperties1 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties1.setObjectTreeBackgroundColorRgbValue(0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("'0", (String) null, "'0", "'0", 45, " to 128.", (-4), (-1979), 2, 0, "Skipping FK (", "'0", (-4), 7, "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "<2%J$", "7:-M6");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "Skipping FK (");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".vau$so,6n'j7s~m", "iZ.qhm;#v", ".vau$so,6n'j7s~m", "HjDvVQ2xI}&", (-665), "", (-665), 3201, 3201, (-1633), ".vau$so,6n'j7s~m", " NOT NULL", (-1633), 4500, "G[yF%f");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getJDBCDebugLogFile();
      Icon icon0 = mockJFileChooser0.getIcon(file0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("", icon0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      applicationFiles0.getLibraryDirectory();
      basicCheckBoxUI1.getPreferredSize(mockJFileChooser0);
      basicCheckBoxUI1.getPreferredSize(mockJFileChooser0);
      basicCheckBoxUI1.getDefaultIcon();
      MockFile mockFile0 = new MockFile("iZ.qhm;#v", "iZ.qhm;#v");
      DatabaseObjectType.createNewDatabaseObjectType("c~B~M!.]zJ", icon0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      SQLAlias sQLAlias0 = new SQLAlias();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "i\u0004n=2Etc", (String) null, "i\u0004n=2Etc", 0, "i\u0004n=2Etc", 2002, 305, (-2561), 305, "\n", "NULL", (-1361), 1, "1tHN$oZe");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getDefaultIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2370), (-2370), (-2370), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      ILoggerFactory iLoggerFactory0 = mock(ILoggerFactory.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "<2%J$", (String) null);
      String string0 = null;
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (String) null);
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getDefaultIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (Icon) null);
      int int0 = (-1073741822);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, ",q1=", "-dky", 0, "t9S!~A03r!]*{", 2, 41, (-1073741822), (-1073741822), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ",q1=", 0, 1, "t9S!~A03r!]*{");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "wv^|%u-yJV0!", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getApplication();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getDestSession();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties0.setOverrideToolbarBackgroundColor(false);
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[5];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties2;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties3;
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[4] = sQLAliasSchemaDetailProperties4;
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      sQLAliasSchemaProperties0.setGlobalState(3092);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "z6ifY+-");
      DBUtil.typesAreEquivalent(1, 18);
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 18);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-4931));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties0.setToolbarBackgroundColorRgbValue(7);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue((-488));
      sQLAliasColorProperties0.setToolbarBackgroundColorRgbValue(2006);
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo(sQLAliasSchemaProperties1);
      sQLAliasSchemaProperties0.setGlobalState(16);
      sQLAlias0.getDriverPropertiesClone();
      sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("NO", "NO", "G^t#>u0:Oy>", "Max function is null for dialect=", (-1050), "Max function is null for dialect=", 35, 1, 35, 2534, ")$T]E_C@", "G^t#>u0:Oy>", 2005, 1, "NO");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "axion");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "wv^|%u-\\\\yJV0!";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(linkedList0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "U.*{Y@", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      String string0 = "NO";
      dBCopyPlugin2.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("vM", (String) null, "vM", (String) null, (-665), "vM", (-665), (-665), (-665), (-665), "vM", (String) null, (-665), (-1715), "vM");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("vM");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("menu", ";KD.6N\"pYer;", "H/x-yTBO~dOGo-_.Ac[");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, ";KD.6N\"pYer;", ";KD.6N\"pYer;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Z|M/ST/:(}WE^", "QC!LBm`:e.g8E2G7", "</span>", "QC!LBm`:e.g8E2G7", 962, "QC!LBm`:e.g8E2G7", 962, 539, 2000, (-385), "Z|M/ST/:(}WE^", "'d?=OPuyMN.4=AB", (-1), (-385), "QC!LBm`:e.g8E2G7");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("SquirrelPreferences.error.reading", icon0);
      defaultTreeCellRenderer0.getLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("m^&LZ+I2u)X'", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("'d?=OPuyMN.4=AB", "SquirrelPreferences.error.reading", (String) null, "</span>", 962, "'d?=OPuyMN.4=AB", 962, 539, 539, 539, "SquirrelPreferences.error.reading", "'d?=OPuyMN.4=AB", (-1), (-1), "SquirrelPreferences.error.reading");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "m^&LZ+I2u)X'", "QC!LBm`:e.g8E2G7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("'0", "'0", "'0", "'0", 2000, "'0", (-4931), (-385), (-385), 2000, "'0", "Attempted to set null ErrorHandler.", (-4931), 539, "G[yF%f");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("\" not a decimal integer.", icon0);
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("Attempted to set null ErrorHandler.", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("Attempted to set null ErrorHandler.", "\" not a decimal integer.", "'0", "'0", (-385), "G[yF%f", 539, 539, (-4931), (-385), "\" not a decimal integer.", "'0", 2000, 2000, "Attempted to set null ErrorHandler.");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo1);
      assertEquals("\" not a decimal integer.", string0);
      
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2000, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("vM", (String) null, "(jiilTsreLp?!=/NH93", (String) null, (-665), "(jiilTsreLp?!=/NH93", (-665), (-665), (-665), (-665), "(jiilTsreLp?!=/NH93", (String) null, (-665), (-1715), "(jiilTsreLp?!=/NH93");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("XqI/#mDw<6+", " to 128.", "XqI/#mDw<6+", " to 128.", 0, "kao", 207, (-665), 4192, 4192, ",", "kao", 0, (-1319), "");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("a XA/\"JrJ", "vM", "(C2H", "", 0, "(jiilTsreLp?!=/NH93", (-665), (-1715), (-247), (-1718), " to 128.", "kao", (-665), 2082, " to 128.");
      tableColumnInfoArray0[2] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("null,  to 128., null", string0);
      
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBUtil.convertTableToObjectList(linkedList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo2, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(linkedList0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) null;
      linkedList0.add((IDatabaseObjectInfo) null);
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[8] = (IDatabaseObjectInfo) null;
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBUtil.convertObjectToTableList(linkedList0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "replaceDistinctDataType: Unexpected exception - ", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(")z.F>NB(Xp", "", ".vau$so,6n'j7s~m", "", 2003, ".vau$so,6n'j7s~m", (-1034), 3964, 2147483645, 1001, ".vau$so,6n'j7s~m", "I", (-2534), 1966, "_:kX");
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBUtil.typesAreEquivalent(18, 18);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty("autoLogon", "autoLogon");
      sQLDriverPropertyCollection0.addDriverProperty(sQLDriverProperty0);
      sQLAlias0.setDriverProperties(sQLDriverPropertyCollection0);
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      sQLAlias0.getDriverPropertiesClone();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.setLastStatementValues("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", (-385), (String) null, 835, (-385), (-4), (-4), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "I", (-4), (-385), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", icon0);
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("m^&LZ+I2u)X'", icon0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, "I");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
      
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-385), int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("vM", (String) null, "", (String) null, (-665), "", (-665), (-665), (-665), (-665), "", (String) null, (-665), (-1715), "");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("XqI/#mDw<6+", " to 128.", "XqI/#mDw<6+", " to 128.", 0, "kao", 243, (-665), 4192, 4192, "", "kao", 0, (-1319), "");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      String string0 = "";
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("anA/\"JrJ", "vM", "(C2H", "", 0, "", (-665), (-1715), (-214), (-1718), " to 128.", "kao", (-665), 2082, " to 128.");
      tableColumnInfoArray0[2] = tableColumnInfo2;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      SQLAliasColorProperties sQLAliasColorProperties1 = sQLAlias0.getColorProperties();
      SQLAliasColorProperties sQLAliasColorProperties2 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties2.setToolbarBackgroundColorRgbValue((-4));
      sQLAliasColorProperties2.setToolbarBackgroundColorRgbValue(2);
      sQLAlias0.setColorProperties(sQLAliasColorProperties1);
      sQLAliasSchemaProperties0.setGlobalState((-137));
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" ", (String) null, "5'8'7X&:z6U/on", "org.hibernate.util.ReflectHelper", (-137), " ) values ( ", 0, 11448517, (-247), 11448517, "DROP DEFAULT", "=7&", 4054, 2002, "=7&");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBUtil.getColumnList(tableColumnInfoArray0);
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBUtil.convertTableToObjectList(linkedList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = (-385);
      int int1 = 1;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", (-385), (String) null, 835, (-385), 1, (-4), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "I", 1, (-385), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) null);
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("$Do(_f9~RZW]Z", "F[TG'%mzF_.", "G[yF%f", "d,bxz_C@/?>CLD7", 5000, "d,bxz_C@/?>CLD7", 5000, (-717), (-385), (-717), ") - table ", "$Do(_f9~RZW]Z", (-1652), (-1652), "Could not instantiate class [");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[8];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[6] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IDatabaseObjectInfo iDatabaseObjectInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, (String) null, 7, "DatabaseObjectType.database", 1157, 1157, 7, 1157, "DatabaseObjectType.database", "DatabaseObjectType.database", 1157, (-3066), (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      int int0 = 2224;
      DBUtil.replaceDistinctDataType(2224, tableColumnInfo0, (ISession) null);
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getSourceSession();
      String string0 = "select ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select ");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("select ", "select ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-994), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-994), 3, 3, 3, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", " in schema ", 3, 50, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("'0", "'0", "'0", "'0", 2000, "'0", (-4931), (-385), (-385), 2000, "'0", "Attempted to set null ErrorHandler.", (-4931), 539, "G[yF%f");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      int int0 = DBUtil.replaceDistinctDataType((-4931), tableColumnInfo0, (ISession) null);
      assertEquals((-4931), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("(jiilTsreLp?!=/NH93", "LCU{@F$l", "", "#vXp\"oO8", 12, "LCU{@F$l", 181, (-1715), 835, (-665), "", "I", (-4), (-1715), "#vXp\"oO8");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("W`GLl", (Icon) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(12, tableColumnInfo0, (ISession) null);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("\n", "$G,2~h|o82a", (String) null, (ForeignKeyInfo) null, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      SQLAlias sQLAlias1 = new SQLAlias(uidIdentifier0);
      SQLAliasColorProperties sQLAliasColorProperties1 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties1.setToolbarBackgroundColorRgbValue((-4));
      sQLAliasSchemaProperties0.setGlobalState(2859);
      SQLAliasColorProperties sQLAliasColorProperties2 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties2.setToolbarBackgroundColorRgbValue((-4));
      sQLAlias0.getColorProperties();
      SQLAlias sQLAlias2 = new SQLAlias(uidIdentifier0);
      sQLAlias2.setColorProperties(sQLAliasColorProperties2);
      sQLAlias1.getDriverPropertiesClone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("6%c6K@iIRz[N$gY$", "6%c6K@iIRz[N$gY$", (String) null, (ISession) null, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "$B", (ITableInfo) null, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBUtil.getLastStatementValues();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("license.txt", dBCopyPlugin0.getLicenceFileName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getJDBCDebugLogFile();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      Icon icon0 = mockJFileChooser0.getIcon(file0);
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", icon0);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getPreferredSize(mockJFileChooser0);
      basicCheckBoxUI1.getPreferredSize(mockJFileChooser0);
      basicCheckBoxUI0.getDefaultIcon();
      MockFile mockFile0 = new MockFile("w-|v^|%u-yJV0!", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".vau$so,6n'j7s~m", "iZ.qhm;#v", ".vau$so,6n'j7s~m", "HjDvVQ2xI}&", (-665), "", (-665), 3201, 3201, (-1633), ".vau$so,6n'j7s~m", " NOT NULL", (-1633), 4486, "G[yF%f");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getJDBCDebugLogFile();
      Icon icon0 = mockJFileChooser0.getIcon(file0);
      DatabaseObjectType.createNewDatabaseObjectType("", icon0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getPreferredSize(mockJFileChooser0);
      basicCheckBoxUI1.getPreferredSize(mockJFileChooser0);
      basicCheckBoxUI1.getDefaultIcon();
      MockFile mockFile0 = new MockFile("iZ.qhm;#v", "iZ.qhm;#v");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBUtil.setLastStatement((String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBUtil.convertTableToObjectList(arrayList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(linkedList0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[8] = (IDatabaseObjectInfo) null;
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      ILoggerFactory iLoggerFactory0 = mock(ILoggerFactory.class, new ViolatedAssumptionAnswer());
      LoggerController.registerLoggerFactory((ILoggerFactory) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "@8ZeOi{BJG%>_tkBu", "w-|v^|%u-yJV0!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("4af0cd0f:16ecc98865c:-7ecf", uidIdentifier1.toString());
      
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias1.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLAlias sQLAlias2 = new SQLAlias();
      boolean boolean0 = DBUtil.typesAreEquivalent(251, 1);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(fileSystemView0);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getJDBCDebugLogFile();
      mockJFileChooser0.getIcon(file0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getPreferredSize(mockJFileChooser0);
      basicCheckBoxUI1.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("Qr InR-tU", icon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBUtil.typesAreEquivalent((-6), (-6));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "U";
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties1);
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      assertEquals(0, sQLAliasColorProperties0.getToolbarBackgroundColorRgbValue());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      assertTrue(dBCopyPreferenceBean0.isAutoCommitEnabled());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBUtil.typesAreEquivalent(11448517, 3146);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("4af0cd0f:16ecc98865c:-7f37", uidIdentifier0.toString());
      
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setView(3146);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[3];
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaProperties1.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      SQLAliasSchemaProperties sQLAliasSchemaProperties2 = sQLAlias0.getSchemaProperties();
      sQLAliasSchemaProperties2.setGlobalState(0);
      boolean boolean0 = DBUtil.typesAreEquivalent((-3544), 2);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-1), 178);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "I", "I", "SquirrelPreferences.error.reading", 2042);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, "HR} ", "H/x-yTBO~dOGo-_.Ac[", (-385));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "PreferencesPanel.copyForeignKeysToolTip";
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "PreferencesPanel.copyForeignKeysToolTip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = 3718;
      DBUtil.getLastStatement();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall((String) null, (-1832), 3718, (-1832));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }
}
