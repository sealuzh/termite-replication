/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:11:26 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instances;
import weka.core.Range;
import weka.core.SparseInstance;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.Discretize;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Discretize_ESTest extends Discretize_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      Discretize discretize0 = new Discretize("{}ZQ(ckEmC");
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 86;
      double[][] doubleArray0 = new double[2][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 86;
      doubleArray1[1] = (double) 86;
      doubleArray1[2] = (double) 86;
      doubleArray1[3] = (double) 86;
      doubleArray1[4] = (double) 86;
      doubleArray1[2] = (double) 86;
      doubleArray1[6] = (double) 86;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 86;
      doubleArray2[2] = (double) 86;
      doubleArray2[3] = (double) 86;
      doubleArray0[1] = doubleArray2;
      discretize0.m_CutPoints = doubleArray0;
      // Undeclared exception!
      try { 
        discretize0.getBinRangesString(86);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 86
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Discretize discretize0 = new Discretize("-M");
      double[][] doubleArray0 = new double[0][4];
      discretize0.listOptions();
      discretize0.setFindNumBins(true);
      discretize0.m_CutPoints = doubleArray0;
      discretize0.getFindNumBins();
      Discretize discretize1 = new Discretize();
      // Undeclared exception!
      try { 
        discretize1.output();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output instance format defined
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      FileSystemHandling.shouldAllThrowIOExceptions();
      double[][] doubleArray0 = new double[2][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[1] = (double) 86;
      doubleArray1[2] = (double) 86;
      doubleArray1[3] = (double) 86;
      doubleArray1[4] = (double) 86;
      doubleArray1[5] = (double) 86;
      doubleArray1[6] = (double) 86;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 86;
      doubleArray2[2] = (double) 86;
      doubleArray2[3] = (double) 86;
      doubleArray0[1] = doubleArray2;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("", arrayList0, 70);
      Instances instances1 = new Instances(instances0);
      Instances.mergeInstances(instances1, instances1);
      Discretize discretize0 = new Discretize();
      try { 
        discretize0.setInputFormat(instances1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.filters.unsupervised.attribute.Discretize: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7995122062331164
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Discretize discretize0 = new Discretize("9-$IrjNyh|xBVZlh");
      discretize0.setIgnoreClass(false);
      discretize0.setInvertSelection(true);
      discretize0.getOptions();
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.990897403299354
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCapabilities();
      assertFalse(discretize0.getFindNumBins());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "weka/core/Capabilities.props";
      discretize0.setOptions(stringArray0);
      String string0 = discretize0.findNumBinsTipText();
      assertEquals("Optimize number of equal-width bins using leave-one-out. Doesn't work for equal-frequency binning", string0);
      
      discretize0.attributeIndicesTipText();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Make reNulting atributes binary.";
      stringArray0[1] = "OJlvO";
      stringArray0[2] = "5.0.1";
      stringArray0[3] = ",}";
      stringArray0[4] = "m_NewBatch = true;";
      stringArray0[5] = "=PE9te864/b<Hp3e)";
      stringArray0[6] = "Td.!CB[C~+BmPi:HGa";
      stringArray0[7] = "";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte) (-97);
      byteArray0[5] = (byte) (-97);
      byteArray0[6] = (byte) (-97);
      byteArray0[7] = (byte) (-97);
      byteArray0[8] = (byte) (-97);
      discretize0.getUseEqualFrequency();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Discretize discretize0 = new Discretize("wkrG'Prpicj");
      discretize0.binsTipText();
      discretize0.toString();
      AllFilter allFilter0 = new AllFilter();
      String string0 = "bI]D";
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-269.3675350615);
      doubleArray0[1] = (-269.3675350615);
      doubleArray0[2] = (-269.3675350615);
      doubleArray0[3] = (-269.3675350615);
      doubleArray0[4] = (-269.3675350615);
      doubleArray0[5] = (-269.3675350615);
      doubleArray0[6] = (-269.3675350615);
      doubleArray0[7] = (-269.3675350615);
      doubleArray0[8] = (-269.3675350615);
      int[] intArray0 = new int[2];
      intArray0[0] = 77;
      intArray0[1] = (-1615);
      SparseInstance sparseInstance0 = null;
      try {
        sparseInstance0 = new SparseInstance((-269.3675350615), doubleArray0, intArray0, 1932);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.core.SparseInstance", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Discretize discretize0 = new Discretize("|JW|-8dRO");
      boolean boolean0 = discretize0.getMakeBinary();
      assertEquals(10, discretize0.getBins());
      assertFalse(boolean0);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-41);
      byteArray0[4] = (byte) (-46);
      byteArray0[5] = (byte) (-122);
      byteArray0[6] = (byte) (-41);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "";
      String string1 = "!%MS)EL3Kc$";
      Discretize discretize0 = null;
      try {
        discretize0 = new Discretize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Range range0 = new Range();
      Discretize discretize0 = new Discretize("first-last");
      discretize0.setIgnoreClass(false);
      // Undeclared exception!
      try { 
        discretize0.setAttributeIndicesArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      int int0 = 838;
      discretize0.m_NumBins = 838;
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = true;
      discretize0.m_FindNumBins = false;
      discretize0.setUseEqualFrequency(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      discretize0.getInvertSelection();
      discretize0.useEqualFrequencyTipText();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "!%MS)EL3Kc$";
      Discretize discretize0 = new Discretize("!%MS)EL3Kc$");
      double[] doubleArray0 = new double[0];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(1446.2641629, doubleArray0);
      // Undeclared exception!
      try { 
        discretize0.convertInstance(binarySparseInstance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Discretize discretize0 = new Discretize("index out of bounds");
      int[] intArray0 = new int[9];
      intArray0[0] = 89;
      intArray0[1] = 1009;
      intArray0[2] = 2798;
      intArray0[3] = (-967);
      intArray0[4] = (-40);
      intArray0[5] = 2147483645;
      intArray0[6] = 449;
      intArray0[7] = 0;
      intArray0[8] = 134;
      discretize0.setAttributeIndicesArray(intArray0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Discretize discretize0 = new Discretize("");
      discretize0.setDesiredWeightOfInstancesPerInterval((-1061.8));
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCapabilities();
      // Undeclared exception!
      try { 
        discretize0.batchFinished();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("!%MS)EL3Kc$");
      SystemInUtil.addInputLine("3%.e,BZ%|PtHvV.(x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\nSubset of dataset: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      // Undeclared exception!
      try { 
        discretize0.findNumBins(1300);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.setInvertSelection(false);
      String string0 = discretize0.invertSelectionTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Make reNulting atributes binary.";
      stringArray0[1] = "OJlvO";
      stringArray0[2] = "5.0.1";
      stringArray0[3] = ",}";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",*]=KFtAnz(}{z{M");
      stringArray0[4] = "m_NewBatch = true;";
      stringArray0[5] = "=PE9te864/b<Hp3e)";
      stringArray0[6] = "Td.!CB[C~+BmPi:HGa";
      stringArray0[7] = "";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte) (-97);
      byteArray0[5] = (byte) (-97);
      byteArray0[6] = (byte) (-97);
      byteArray0[7] = (byte) (-97);
      byteArray0[8] = (byte) (-97);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      discretize0.setOutputFormat();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("!%MS)EL3Kc$");
      SystemInUtil.addInputLine("3%.e,BZ%|PtHvV.(x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\nSubset of dataset: ");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "}E~1";
      stringArray0[2] = "}E~1";
      stringArray0[3] = "NwHHH%LxqF_?S";
      stringArray0[4] = "3%.e,BZ%|PtHvV.(x";
      try { 
        discretize0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCutPoints(77);
      Instances instances0 = null;
      Instances instances1 = null;
      try {
        instances1 = new Instances((Instances) null, (-2034458190), (-3911));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Discretize discretize0 = new Discretize("9-$IrjNyh|xBVZlh");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/wekafiles/props");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte) (-8);
      byteArray0[5] = (byte) (-70);
      byteArray0[6] = (byte) (-48);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      AllFilter allFilter0 = new AllFilter();
      String string0 = discretize0.desiredWeightOfInstancesPerIntervalTipText();
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals("Sets the desired weight of instances per interval for equal-frequency binning.", string0);
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{}ZQ(ckEmC");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      AllFilter allFilter0 = new AllFilter();
      Discretize discretize0 = new Discretize();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualFrequencyBinning((-827));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Instances", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.getCapabilities();
      discretize0.getFindNumBins();
      AllFilter allFilter0 = new AllFilter();
      // Undeclared exception!
      try { 
        allFilter0.getOutputFormat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No output format defined.
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6183972463477247
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Discretize discretize0 = new Discretize();
      String[] stringArray0 = new String[1];
      discretize0.setBins(0);
      stringArray0[0] = " because package home (";
      discretize0.setOptions(stringArray0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1403.57;
      doubleArray0[1] = 1403.57;
      doubleArray0[2] = 1403.57;
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.820853215871297
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "All";
      stringArray0[1] = "Index of attribute \"weight\" (should be -1): ";
      stringArray0[2] = "($ x:";
      stringArray0[3] = "";
      stringArray0[4] = "D";
      Discretize.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5102170934221872
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("");
      String[] stringArray0 = discretize0.getOptions();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(4, stringArray0.length);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Discretize discretize0 = new Discretize("9-$IrjNyh|xBVZlh");
      int[] intArray0 = new int[3];
      intArray0[0] = 1382;
      double[] doubleArray0 = new double[0];
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((-2045.0513116683894), doubleArray0);
      BinarySparseInstance binarySparseInstance1 = new BinarySparseInstance((SparseInstance) binarySparseInstance0);
      DenseInstance denseInstance0 = new DenseInstance(binarySparseInstance0);
      SparseInstance sparseInstance0 = new SparseInstance(denseInstance0);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0);
      Attribute attribute0 = new Attribute("{}ZQ(ckEmC", list0, 596);
      attribute0.copy("9-$IbrjNyh|xBVZlh");
      binarySparseInstance0.setValue(attribute0, 2.0);
      SparseInstance sparseInstance1 = new SparseInstance(sparseInstance0);
      // Undeclared exception!
      try { 
        discretize0.input(sparseInstance1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("q?U-c&u,I4D0' J(:");
      discretize0.getDesiredWeightOfInstancesPerInterval();
      System.setCurrentTimeMillis(2772L);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8264073164762795
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Discretize discretize0 = new Discretize("$o+ kTCFQ|N1fc?xT$5");
      boolean boolean0 = true;
      discretize0.m_IgnoreClass = true;
      discretize0.m_DesiredWeightOfInstancesPerInterval = 1.0;
      discretize0.getOptions();
      Filter.makeCopy(discretize0);
      discretize0.getOptions();
      discretize0.getDesiredWeightOfInstancesPerInterval();
      discretize0.attributeIndicesTipText();
      discretize0.setAttributeIndices("kZ*R+z");
      discretize0.getRevision();
      discretize0.getUseBinNumbers();
      discretize0.invertSelectionTipText();
      // Undeclared exception!
      try { 
        discretize0.calculateCutPointsByEqualWidthBinning((-219));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.51195622385697
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Discretize discretize0 = new Discretize("9-$IrjNyh|xBVZlh");
      SystemInUtil.addInputLine("\tOptimize number of bins using leave-one-out estimate\n\tof estimated entropy (for equal-width discretization).\n\tIf this is set then the -B option will be ignored.");
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(6, stringArray0.length);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7995122062331164
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Discretize discretize0 = new Discretize();
      AllFilter allFilter0 = new AllFilter();
      String[] stringArray0 = discretize0.getOptions();
      assertEquals(6, stringArray0.length);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 60;
      intArray0[1] = 274;
      intArray0[2] = 69;
      intArray0[3] = 2;
      intArray0[4] = (-1626);
      intArray0[5] = 633;
      intArray0[6] = (-3457);
      intArray0[7] = 3344;
      intArray0[8] = (-660);
      discretize0.setAttributeIndicesArray(intArray0);
      System.setCurrentTimeMillis((-2488L));
      String string0 = discretize0.invertSelectionTipText();
      assertEquals("Set attribute selection mode. If false, only selected (numeric) attributes in the range will be discretized; if true, only non-selected attributes will be discretized.", string0);
      
      String string1 = discretize0.useBinNumbersTipText();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.152036467496252
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Discretize discretize0 = new Discretize();
      discretize0.setIgnoreClass(true);
      discretize0.setFindNumBins(true);
      String[] stringArray0 = discretize0.getOptions();
      discretize0.setOptions(stringArray0);
      discretize0.getBins();
      discretize0.getBins();
      // Undeclared exception!
      try { 
        discretize0.findNumBins((-487));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("!%MS)EL3Kc$");
      SystemInUtil.addInputLine("3%.e,BZ%|PtHvV.(x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\nSubset of dataset: ");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "}E~1";
      stringArray0[1] = "!%MS)EL3Kc$";
      stringArray0[2] = "}E~1";
      stringArray0[3] = "NwHHH%LxqF_?S";
      // Undeclared exception!
      try { 
        discretize0.calculateCutPoints();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.Discretize", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte) (-97);
      byteArray0[5] = (byte) (-97);
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte) (-97);
      byteArray0[8] = (byte) (-97);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      discretize0.getBinRangesString((byte)14);
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      String string0 = discretize0.makeBinaryTipText();
      assertEquals("Make resulting attributes binary.", string0);
      
      String string1 = discretize0.useBinNumbersTipText();
      assertEquals("Use bin numbers (eg BXofY) rather than ranges for for discretized attributes", string1);
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-40);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize1 = new Discretize("");
      discretize1.setAttributeIndices("");
      SystemInUtil.addInputLine("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getMakeBinary());
      
      discretize0.setMakeBinary(true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-48);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      AllFilter allFilter0 = new AllFilter();
      discretize0.invertSelectionTipText();
      discretize0.attributeIndicesTipText();
      assertTrue(discretize0.getMakeBinary());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Discretize discretize0 = new Discretize();
      discretize0.getAttributeIndices();
      AllFilter allFilter0 = new AllFilter();
      AllFilter allFilter1 = new AllFilter();
      AllFilter allFilter2 = new AllFilter();
      assertEquals("An instance filter that passes all instances through unmodified. Primarily for testing purposes.", allFilter2.globalInfo());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("!%MS)EL3Kc$");
      SystemInUtil.addInputLine("3%.e,BZ%|PtHvV.(x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\nSubset of dataset: ");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "}E~1";
      stringArray0[1] = "!%MS)EL3Kc$";
      stringArray0[2] = "}E~1";
      stringArray0[3] = "NwHHH%LxqF_?S";
      stringArray0[4] = "3%.e,BZ%|PtHvV.(x";
      discretize0.setOptions(stringArray0);
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.991004276632703
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("!%MS)EL3Kc$");
      SystemInUtil.addInputLine("3%.e,BZ%|PtHvV.(x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\nSubset of dataset: ");
      Discretize discretize1 = new Discretize("!%MS)EL3Kc$");
      String[] stringArray0 = new String[9];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[0] = "\nSubset of dataset: ";
      stringArray0[1] = "3%.e,BZ%|PtHvV.(x";
      stringArray0[2] = "m_NewBatch = true;";
      stringArray0[3] = "wXfbPY50";
      stringArray0[4] = "\nSubset of dataset: ";
      stringArray0[5] = "\nSubset of dataset: ";
      stringArray0[6] = "\nSubset of dataset: ";
      stringArray0[7] = "3%.e,BZ%|PtHvV.(x";
      stringArray0[8] = "!%MS)EL3Kc$";
      Filter.runFilter(discretize1, stringArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        discretize0.setInputFormat((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.Filter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte) (-46);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-122);
      byteArray0[5] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Discretize discretize0 = new Discretize("!%MS)EL3Kc$");
      SystemInUtil.addInputLine("}E~1");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "NwHHH%LxqF_?S";
      stringArray0[1] = "";
      stringArray0[2] = "NwHHH%LxqF_?S";
      stringArray0[3] = "NwHHH%LxqF_?S";
      stringArray0[4] = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NwHHH%LxqF_?S");
      stringArray0[5] = "";
      discretize0.setOptions(stringArray0);
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getUseEqualFrequency());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getFindNumBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.636043334094918
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      discretize0.listOptions();
      String[] stringArray0 = discretize0.getOptions();
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertEquals(6, stringArray0.length);
      assertEquals(10, discretize0.getBins());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9103281932812037
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Discretize discretize0 = new Discretize();
      assertFalse(discretize0.getFindNumBins());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "3loI@z4b!IGD%UjP";
      stringArray0[1] = "Cannot handle unknown attribute type '";
      stringArray0[2] = ">d&GC'Y'@ZH-X3";
      stringArray0[3] = "(m.Ud7DqO";
      stringArray0[4] = "fmF:k[`4LX<b=F\"ly";
      stringArray0[5] = "-R <col1,col2-col4,...>";
      Filter.runFilter(discretize0, stringArray0);
      discretize0.setUseBinNumbers(false);
      Range range0 = new Range("Jar does not exist: ");
      discretize0.m_DiscretizeCols = range0;
      discretize0.getUseBinNumbers();
      String string0 = discretize0.getRevision();
      assertEquals("8964", string0);
      
      discretize0.listOptions();
      assertEquals(10, discretize0.getBins());
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertFalse(discretize0.getMakeBinary());
      assertFalse(discretize0.getUseEqualFrequency());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8299377721256644
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Discretize.main(stringArray0);
      Discretize.main(stringArray0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1644.8152);
      doubleArray0[1] = (-1644.8152);
      doubleArray0[2] = (-414.96130564247);
      doubleArray0[3] = 3.0;
      doubleArray0[4] = (-1644.8152);
      doubleArray0[5] = (-1644.8152);
      doubleArray0[6] = (-1644.8152);
      doubleArray0[7] = (-1644.8152);
      doubleArray0[8] = (-1644.8152);
      SparseInstance sparseInstance0 = new SparseInstance((-1644.8152), doubleArray0);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      // Undeclared exception!
      try { 
        sparseInstance0.equalHeaders(binarySparseInstance0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Discretize discretize0 = new Discretize("9-$IrjNyh|xBVZlh");
      int[] intArray0 = new int[3];
      intArray0[0] = 1382;
      intArray0[1] = 1382;
      intArray0[2] = 1382;
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayCountry(locale1);
      locale0.getUnicodeLocaleKeys();
      String string0 = discretize0.globalInfo();
      assertFalse(discretize0.getFindNumBins());
      assertFalse(discretize0.getUseEqualFrequency());
      assertEquals("An instance filter that discretizes a range of numeric attributes in the dataset into nominal attributes. Discretization is by simple binning. Skips the class attribute if set.", string0);
      assertEquals((-1.0), discretize0.getDesiredWeightOfInstancesPerInterval(), 0.01);
      assertFalse(discretize0.getUseBinNumbers());
      assertEquals(10, discretize0.getBins());
      assertFalse(discretize0.getMakeBinary());
  }
}
