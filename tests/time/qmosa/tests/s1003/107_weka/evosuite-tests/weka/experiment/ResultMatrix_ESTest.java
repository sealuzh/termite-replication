/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 17:24:25 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.4598900197248157
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(3090);
      resultMatrixPlainText0.doubleToString((-4.57826535), 90);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = "(";
      stringArray0[4] = "*";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.getAverage(0);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 1411);
      resultMatrixPlainText0.setColNameWidth(1411);
      resultMatrixPlainText0.setRowName(2, "Dataset");
      resultMatrixPlainText0.setColName(97, "");
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.058905576552072
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance((-30));
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = (-30);
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      resultMatrixCSV0.setRanking(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(9, 0);
      resultMatrixGnuPlot1.setCountWidth((-1263));
      resultMatrixGnuPlot1.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.setColNameWidth(9);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.showStdDevTipText();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.306296276264405
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[] intArray0 = new int[7];
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getColName((-922));
      resultMatrixHTML0.doubleToString(0.0, 18);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.getMeanPrec();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      resultMatrixHTML1.padString(" ", 1, false);
      resultMatrixHTML1.setRowHidden(2, false);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.566116626495133
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getRowName(31);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getAverage(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      stringArray0[2] = ")";
      stringArray0[3] = "(";
      stringArray0[4] = null;
      stringArray0[5] = "";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      resultMatrixLatex0.getDisplayRow(1);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.getRevision();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.294728622674623
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.doubleToString((-1.0), 1);
      resultMatrixPlainText0.setRowName(2970, "(");
      resultMatrixPlainText0.setColName(1, "(");
      resultMatrixHTML0.toStringMatrix();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.508833712031771
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("", 0);
      resultMatrixGnuPlot0.getColHidden(9);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 1674);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.600222733814614
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(3090);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.getAverage(0);
      resultMatrixPlainText0.doubleToString(Double.NaN, 0);
      resultMatrixPlainText0.setRowName(10, "qV");
      resultMatrixPlainText0.setColName((-2931), "qV");
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.524722041947272
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "B:#BH";
      stringArray0[1] = "(";
      stringArray0[2] = "";
      stringArray0[3] = ".+/ePr4e]qWitNJ5F&";
      stringArray0[4] = "#@Ag:";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_MeanPrec = (-2276);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixHTML0.toStringKey();
      resultMatrixSignificance0.setShowAverage(true);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.setStdDev(0, 6596, 2);
      int[][] intArray0 = new int[2][4];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = (-2276);
      intArray1[4] = 2813;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = (-2276);
      intArray0[1] = intArray2;
      resultMatrixLatex0.m_NonSigWins = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0054994400963837
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 1);
      int[] intArray0 = new int[7];
      resultMatrixHTML0.m_RankingLosses = intArray0;
      intArray0[0] = 1;
      intArray0[1] = 1;
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = true;
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 699;
      intArray0[6] = 1;
      resultMatrixHTML0.setRowOrder(intArray0);
      resultMatrixHTML0.padString("", 1);
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getColName(1349);
      resultMatrixHTML0.doubleToString(1, 1);
      resultMatrixHTML0.setStdDev((-1090), (-1365), 1349);
      resultMatrixHTML0.getMeanPrec();
      resultMatrixHTML0.getRowCount();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.382783089947573
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      resultMatrixPlainText0.doubleToString((-1.0), 3027);
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      resultMatrixPlainText0.m_RowHidden = booleanArray0;
      resultMatrixPlainText0.m_ColNameWidth = 3047;
      resultMatrixPlainText0.getMean(3047, 3047);
      resultMatrixPlainText0.toString();
      int[] intArray0 = new int[3];
      intArray0[0] = 3047;
      intArray0[1] = 2;
      intArray0[2] = 3027;
      resultMatrixPlainText0.setRowOrder(intArray0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4353348667166457
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(3090);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getRowName(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getAverage(1);
      resultMatrixPlainText1.toStringMatrix();
      resultMatrixPlainText1.setRowName(50, "Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n");
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3485180573017983
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot1.getRowName((-150));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(38, 0);
      resultMatrixPlainText1.getAverage(50);
      resultMatrixPlainText1.toStringMatrix();
      resultMatrixPlainText1.setRowName((-1405), ")");
      resultMatrixPlainText0.meanWidthTipText();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.015324079320907
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 714);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getSummaryTitle(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot1.toStringSummary();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.m_RankingDiff = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV1);
      resultMatrixLatex0.setSize(0, 55);
      resultMatrixPlainText0.showStdDevTipText();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5019460969630725
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.getDisplayCol(2);
      resultMatrixGnuPlot0.removeFilterNameTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(3082);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      resultMatrixCSV1.getOptions();
      resultMatrixCSV1.m_HeaderKeys = null;
      resultMatrixCSV1.getOptions();
      resultMatrixCSV1.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("pause -1\n", 3070);
      resultMatrixGnuPlot0.getColHidden(3080);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("kkD2%WaqL|05@^^N'j");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.861755854244213
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setMeanPrec((-2270));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(682, 1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex1.setColOrder((int[]) null);
      int int0 = 1;
      resultMatrixLatex0.getSummaryTitle(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(682, 12);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.509584019305196
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 395);
      int[] intArray0 = new int[0];
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.clearHeader();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getAverage(34);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      String string0 = resultMatrixPlainText1.doubleToString(1, 395);
      assertEquals("1.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", string0);
      
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.setRowName((-1055), "");
      assertEquals(2, resultMatrixPlainText2.getMeanPrec());
      assertFalse(resultMatrixPlainText2.getRemoveFilterName());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.429185472410605
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.m_ShowStdDev = false;
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[6] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(92, 2);
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = "[\"P7}.v}bR`2)3ub";
      stringArray0[3] = ")";
      stringArray0[4] = "(";
      stringArray0[5] = "v";
      stringArray0[6] = " ";
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getAverage(1);
      resultMatrixPlainText0.doubleToString(0.0, 1);
      resultMatrixPlainText0.setRowName(2, ")");
      resultMatrixPlainText0.setColName(69, ")");
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.348164505027184
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(2);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot2.getDefaultRowNameWidth();
      resultMatrixGnuPlot1.getRowName(1034);
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      assertEquals(25, resultMatrixGnuPlot1.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintRowNames());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getAverage(1);
      resultMatrixPlainText1.doubleToString(1034, 1034);
      resultMatrixPlainText0.setRowName(734, "v");
      resultMatrixPlainText1.setColName(734, "ceInDT=4>bqF");
      assertEquals(0, resultMatrixPlainText1.getColNameWidth());
      assertEquals(1, resultMatrixPlainText1.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.468610661793087
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.setCountWidth((-2605));
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.setCountWidth(2495);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("*", 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot1.getColHidden(0);
      assertEquals(3090, resultMatrixPlainText0.getStdDevPrec());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2704016382527468
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[8];
      resultMatrixLatex0.toStringKey();
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 0;
      resultMatrixLatex0.clear();
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 1821;
      intArray0[7] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 40;
      resultMatrixLatex0.setStdDevWidth(0);
      intArray1[1] = 1;
      resultMatrixLatex0.m_RankingWins = intArray1;
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.m_StdDevPrec = 0;
      resultMatrixLatex0.setSignificanceWidth(0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultMeanWidth();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringRanking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.548903315801943
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText0.m_EnumerateRowNames = false;
      resultMatrixPlainText1.getDefaultSignificanceWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 114);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixSignificance0.setRemoveFilterName(false);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 1;
      intArray0[7] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[1] = "v";
      stringArray0[2] = "^HaY\"";
      resultMatrixPlainText1.clearRanking();
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertEquals(1, resultMatrixPlainText1.getVisibleRowCount());
      assertEquals(2, resultMatrixPlainText1.getStdDevPrec());
      assertTrue(resultMatrixPlainText1.getPrintRowNames());
      
      stringArray0[3] = "(";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4242746329428133
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.getCount((-2025));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "*";
      stringArray0[1] = "ZZ!bm{6b";
      stringArray0[2] = " ";
      stringArray0[3] = "[";
      stringArray0[4] = "*";
      stringArray0[5] = "*";
      stringArray0[6] = "*";
      stringArray0[7] = "v";
      stringArray0[8] = "hline\nend{tabular} \footnotesize par}\nend{table}";
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixCSV0.getRowHidden(1);
      resultMatrixCSV1.getRowOrder();
      resultMatrixCSV1.getDefaultCountWidth();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5968000509475173
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(3090);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setStdDevWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1820, 0);
      resultMatrixGnuPlot1.globalInfo();
      resultMatrixPlainText0.setPrintColNames(true);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot1.toStringKey();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.getDisplayCol(0);
      resultMatrixGnuPlot1.removeFilterNameTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(1);
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixPlainText0.padString("", 2282);
      resultMatrixGnuPlot0.getColHidden(1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4106965697817477
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot1.getCountWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot2.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getRowName(1);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double double0 = resultMatrixPlainText0.getAverage(2);
      assertEquals(0.0, double0, 0.01);
      
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setRowName(2, "");
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.6829437686948645
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.getDefaultRowNameWidth();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixGnuPlot0.getRowName(9);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.WIN_STRING = "*";
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setOptions((String[]) null);
      resultMatrixPlainText1.getAverage(0);
      resultMatrixGnuPlot1.getDefaultShowStdDev();
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.562052063532936
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(3090);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      assertEquals(3090, resultMatrixPlainText0.getStdDevPrec());
      
      String[] stringArray0 = new String[0];
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDisplayRow(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getRevision();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.4978773594282853
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRowName(2);
      resultMatrixHTML0.setMeanPrec(8);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[7];
      stringArray0[3] = "az(#Fe/st)";
      stringArray0[6] = "(";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.getPrintColNames();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3619087136469825
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.m_StdDevWidth = 3090;
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getAverage((-778));
      resultMatrixPlainText0.getRowNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getRevision();
      assertFalse(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.significanceWidthTipText();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.203772739675122
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.setOptions((String[]) null);
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      resultMatrixHTML0.removeFilterName((String) null);
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[0];
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixGnuPlot0.m_NonSigWins = intArray1;
      int int0 = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText((-131), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7260212336334715
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getSummaryTitle(2087);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.getColOrder();
      resultMatrixGnuPlot0.m_RankingWins = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringSummary();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(39);
      int int0 = 0;
      resultMatrixPlainText0.getColName((-2218));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(37, 1173);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.46917954698659
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(3090);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getAverage(0);
      resultMatrixPlainText0.getDefaultRemoveFilterName();
      resultMatrixPlainText0.getRevision();
      assertEquals(5, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.924592104418079
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.getRowName(2);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 265;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 2);
      resultMatrixPlainText0.getAverage(2989);
      ResultMatrixPlainText resultMatrixPlainText1 = null;
      try {
        resultMatrixPlainText1 = new ResultMatrixPlainText(2, (-852));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3195258379324555
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      boolean boolean0 = resultMatrixCSV0.isSignificance(0);
      assertFalse(boolean0);
      
      int int0 = ResultMatrix.SIGNIFICANCE_WIN;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[] intArray0 = new int[3];
      int[][] intArray1 = new int[4][7];
      intArray1[0] = intArray0;
      resultMatrixCSV0.setStdDevWidth(0);
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixCSV0.setRanking(intArray1);
      resultMatrixCSV0.setCountWidth((-1138));
      String string0 = resultMatrixGnuPlot0.getSummaryTitle((-1119));
      assertEquals("`", string0);
      
      resultMatrixCSV0.colNameWidthTipText();
      resultMatrixCSV0.getMeanWidth();
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV1.getDisplayName();
      String string1 = resultMatrixCSV0.toStringMatrix();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string1);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixGnuPlot0.getStdDevWidth();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.774342220194881
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth((-3194));
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.showStdDevTipText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.536294401567295
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.LOSS_STRING = "gy>6+R g[";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      String string0 = resultMatrixHTML0.getRowName(2);
      assertNull(string0);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 265;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[4] = null;
      stringArray0[5] = null;
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getDisplayRow(32);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      int int0 = resultMatrixCSV0.getDisplayCol(0);
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.8431595774881053
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setOptions((String[]) null);
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 714);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getSummaryTitle(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot1.removeFilterNameTipText();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setCountWidth(26);
      resultMatrixCSV1.getOptions();
      ResultMatrixCSV resultMatrixCSV2 = new ResultMatrixCSV(1524, 1);
      resultMatrixCSV2.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("", 9);
      resultMatrixGnuPlot0.getColHidden(1778);
      resultMatrixCSV0.addHeader("]", "[");
      assertFalse(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.071613695061723
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.getRowName(2);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 265;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 1;
      String[] stringArray0 = new String[4];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = "*";
      stringArray0[3] = "(";
      resultMatrixHTML0.m_RowNames = stringArray0;
      intArray0[6] = 1;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.doubleToString(0, 17);
      resultMatrixPlainText0.setRowName((-4470), ")63:b%k");
      resultMatrixPlainText0.setColName(17, ")63:b%k");
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1007, 0);
      resultMatrixPlainText0.padString("# generate ps:\n", 0, true);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText1.setColNameWidth(2);
      assertEquals(2, resultMatrixPlainText1.getColNameWidth());
      
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixCSV0);
      String string0 = resultMatrixPlainText0.showStdDevTipText();
      assertEquals("Whether to display the standard deviation column.", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.93940807950365
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(4);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV0.getCount(0);
      resultMatrixCSV1.getRowHidden(0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9563305543537552
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixLatex0.WIN_STRING = null;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(3);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(3, resultMatrixGnuPlot0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(69, 3);
      resultMatrixPlainText0.setColNameWidth(69);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.showStdDevTipText();
      boolean boolean0 = resultMatrixPlainText0.isSignificance(69);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.106417443743697
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(5, 1);
      resultMatrixCSV0.toStringMatrix();
      String[] stringArray0 = new String[2];
      resultMatrixCSV0.m_RowNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.doubleToString(5575.0, (-3027));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setStdDevPrec((-288));
      resultMatrixLatex0.getSummaryTitle((-2607));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getColName(2);
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.doubleToString(5.7, (-1987));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.toStringRanking();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML1);
      resultMatrixCSV0.getCount(1);
      resultMatrixCSV0.getRowHidden(1);
      assertEquals(1, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7932495314691956
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      resultMatrixCSV0.WIN_STRING = "(";
      booleanArray0[2] = false;
      resultMatrixSignificance0.LEFT_PARENTHESES = "*";
      resultMatrixCSV0.getRowName((-3876));
      resultMatrixCSV0.m_RowHidden = booleanArray0;
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.colNameWidthTipText();
      resultMatrixCSV0.setCountWidth(1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      int[][] intArray0 = new int[6][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 2;
      intArray2[1] = 2;
      intArray2[2] = 8;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray2[7] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = (-3109);
      intArray3[1] = (-3876);
      intArray3[2] = 2;
      intArray3[3] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 8;
      intArray4[4] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 1;
      intArray6[1] = 1;
      intArray6[2] = 1;
      intArray0[5] = intArray6;
      resultMatrixHTML0.m_NonSigWins = intArray0;
      resultMatrixHTML0.toStringSummary();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8818768013275324
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[4];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 1;
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.setCountWidth(1671);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.7875166656265864
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.m_RankingDiff = intArray1;
      resultMatrixCSV0.setCountWidth(1671);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.504713483236089
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.getRowName(2);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "az(#Fe/st)";
      stringArray0[4] = null;
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getDisplayRow(2310);
      resultMatrixHTML0.getDefaultShowAverage();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.788626037967038
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(32);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(32, resultMatrixGnuPlot0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getCount(567);
      resultMatrixCSV0.getRowHidden((-775));
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.9154793492940048
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixLatex0.WIN_STRING = null;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getAverage((-1874));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.clear();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(567, 625);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.3226929306754327
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth((-740));
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.m_ColNameWidth = (-568);
      resultMatrixSignificance1.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(2, (-453));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.072457935131088
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setShowStdDev(true);
      resultMatrixCSV1.getCount((-2025));
      resultMatrixCSV0.getRowHidden(0);
      resultMatrixHTML0.setMeanPrec((-2025));
      assertTrue(resultMatrixCSV0.getShowStdDev());
      assertFalse(resultMatrixHTML0.getDefaultShowStdDev());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9808777308924803
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.getCount((-2025));
      int int0 = 0;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.5345591032249173
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.getColName(0);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getAverage((-778));
      int int0 = resultMatrixPlainText0.getRowNameWidth();
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColNameWidth((-740));
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.m_ColNameWidth = (-568);
      resultMatrixSignificance1.getSummaryTitle(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanWidth(0);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(2, (-453));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRowName((-428));
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.padString((String) null, (-428), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.0259863086887115
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getSummaryTitle(33);
      resultMatrixPlainText0.removeFilterName("Whether to output row names or just numbers representing them.");
      resultMatrixPlainText0.m_PrintRowNames = false;
      resultMatrixPlainText0.getSignificance(2374, 2374);
      resultMatrixPlainText0.getPrintRowNames();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 2374;
      intArray0[2] = 0;
      intArray0[3] = 2374;
      intArray0[4] = 33;
      intArray0[5] = 0;
      intArray0[6] = 2374;
      intArray0[7] = 1;
      intArray0[8] = 0;
      resultMatrixPlainText0.m_ColOrder = intArray0;
      resultMatrixPlainText0.getAverage(0);
      resultMatrixPlainText0.toStringSummary();
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.5315867317083454
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(26, 26);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.RIGHT_PARENTHESES = " ";
      resultMatrixLatex0.setSignificance(1, 1, 9);
      resultMatrixHTML0.setMeanWidth(9);
      resultMatrixLatex0.m_PrintColNames = false;
      ResultMatrixHTML.main((String[]) null);
      resultMatrixHTML0.getSummaryTitle(26);
      resultMatrixLatex0.getRowName(999);
      resultMatrixLatex0.getSignificance(1387, 1387);
      resultMatrixLatex0.padString("*", 26, false);
      resultMatrixLatex0.getColName(881);
      resultMatrixLatex0.m_ColNameWidth = 0;
      resultMatrixLatex0.getColName(3388);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.577853984764707
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(71, 9);
      resultMatrixLatex0.clearRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixLatex0.setSize(71, 1);
      resultMatrixCSV0.setColNameWidth(0);
      resultMatrixCSV0.getCountWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixCSV0.listOptions();
      resultMatrixGnuPlot0.setStdDevWidth(5);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.getDisplayCol((-4386));
      resultMatrixGnuPlot0.removeFilterNameTipText();
      resultMatrixCSV0.getOptions();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixPlainText0.padString("$\bullet$", 2, true);
      resultMatrixPlainText0.padString("The width of the standard deviation (0 = optimal).", 13);
      resultMatrixGnuPlot0.setRowName(2, "Dataset");
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.497268163349751
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(602);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.removeFilterName("}\\\nhline\n");
      resultMatrixPlainText0.getAverage((-778));
      int int0 = resultMatrixPlainText0.getMeanPrec();
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.1212805060718685
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double double0 = (-1981.191407566);
      int int0 = 3090;
      resultMatrixPlainText0.setStdDevPrec(3090);
      int int1 = 3;
      resultMatrixPlainText0.getColName(3);
      resultMatrixPlainText0.doubleToString(1410.0, 3090);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = null;
      stringArray0[2] = "*";
      try { 
        resultMatrixPlainText0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.9512516113626925
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(669);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setColNameWidth(0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixGnuPlot0.isMean(768);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      assertEquals(669, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.8871876276384962
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.isMean(0);
      resultMatrixCSV0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, (-2063));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.517278340031577
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 265);
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.getRowName(2);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "az(#Fe/st)";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "(";
      ResultMatrixHTML.main(stringArray0);
      resultMatrixLatex0.getDisplayRow(32);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 309);
      int[][] intArray0 = new int[0][8];
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.546914835714528
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.clearSummary();
      resultMatrixPlainText0.assign(resultMatrixPlainText1);
      resultMatrixPlainText1.TIE_STRING = ")";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.m_ColNameWidth = (-783);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText1.setShowStdDev(false);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixPlainText1.m_HeaderKeys = vector0;
      ResultMatrixPlainText.main((String[]) null);
      vector0.add("*");
      resultMatrixSignificance0.removeFilterNameTipText();
      resultMatrixPlainText1.getShowStdDev();
      resultMatrixSignificance0.enumerateRowNamesTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(25, 1);
      resultMatrixGnuPlot0.getRowName((-1219));
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixPlainText1.setSignificanceWidth(1);
      resultMatrixSignificance0.setCountWidth(97);
      assertEquals(97, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.clear();
      resultMatrixHTML0.getRowName(2);
      resultMatrixHTML0.enumerateRowNamesTipText();
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.9808777308924803
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixCSV0.getDefaultStdDevPrec();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixHTML0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertFalse(resultMatrixGnuPlot0.getShowAverage());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.4666474133421317
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = (-882);
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray1[8] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = (-882);
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray4[3] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 0;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 1867;
      intArray5[5] = 1;
      intArray5[6] = 0;
      intArray5[7] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = (-882);
      intArray6[1] = 2;
      intArray6[2] = 1867;
      intArray6[3] = 0;
      intArray6[4] = (-882);
      intArray6[5] = 0;
      intArray6[6] = 0;
      intArray6[7] = 0;
      intArray6[8] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[9];
      intArray7[0] = 0;
      intArray7[1] = (-882);
      intArray7[2] = 0;
      intArray7[3] = 0;
      intArray7[4] = 1;
      intArray7[5] = 1;
      intArray7[6] = (-882);
      intArray7[7] = (-1236);
      intArray7[8] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[9];
      intArray8[0] = 0;
      intArray8[1] = (-1236);
      intArray8[2] = 0;
      intArray8[3] = (-1);
      intArray8[4] = 0;
      intArray8[5] = 0;
      intArray8[6] = 0;
      intArray8[7] = 2;
      intArray8[8] = 1867;
      intArray0[7] = intArray8;
      resultMatrixPlainText0.m_Wins = intArray0;
      resultMatrixPlainText0.getColHidden(1916);
      String[][] stringArray1 = new String[0][1];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray1, 1916, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.4666474133421317
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixPlainText0.setEnumerateRowNames(true);
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray1[3] = (-882);
      intArray1[4] = 1;
      intArray1[5] = 0;
      intArray1[6] = 1;
      intArray1[7] = 0;
      intArray1[8] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[21];
      intArray2[0] = (-882);
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray4[3] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 0;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 1867;
      intArray5[5] = 1;
      intArray5[6] = 0;
      intArray5[7] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = (-882);
      intArray6[1] = 2;
      intArray6[2] = 1867;
      intArray6[3] = 0;
      intArray6[4] = (-882);
      intArray6[5] = 0;
      intArray6[6] = 0;
      intArray6[7] = 0;
      intArray6[8] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[9];
      intArray7[0] = 0;
      intArray7[1] = (-882);
      intArray7[2] = 0;
      intArray7[3] = 0;
      intArray7[4] = 1;
      intArray7[5] = 1;
      intArray7[6] = (-882);
      intArray7[7] = (-1236);
      intArray7[8] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[9];
      intArray8[0] = 0;
      intArray8[1] = (-1236);
      intArray8[2] = 0;
      intArray8[3] = (-1);
      intArray8[4] = 0;
      intArray8[5] = 0;
      intArray8[6] = 0;
      intArray8[7] = 2;
      intArray8[8] = 1867;
      intArray0[7] = intArray8;
      resultMatrixPlainText0.m_Wins = intArray0;
      resultMatrixPlainText0.getColHidden(1916);
      String[][] stringArray1 = new String[0][1];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray1, 1916, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.437267344838264
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.m_EnumerateColNames = true;
      resultMatrixHTML0.stdDevPrecTipText();
      resultMatrixHTML0.setPrintColNames(true);
      resultMatrixHTML0.getColHidden((-1392));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.RIGHT_PARENTHESES = ")";
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-ranking data not set-";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      ResultMatrixCSV.main(stringArray0);
      resultMatrixHTML0.countWidthTipText();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("2VH=L1TO\u0001X>dh;5TN", (-573));
      int[][] intArray0 = new int[6][3];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = (-573);
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 1;
      intArray1[5] = (-573);
      intArray1[6] = 0;
      intArray1[7] = (-573);
      intArray1[8] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 2;
      intArray2[1] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 1;
      intArray3[2] = (-1868);
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = (-573);
      intArray3[6] = 1;
      intArray3[7] = (-573);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = (-1868);
      intArray4[1] = 2;
      intArray4[2] = (-573);
      intArray4[3] = 0;
      intArray4[4] = (-1868);
      intArray4[5] = 1;
      intArray4[6] = 2;
      intArray4[7] = (-1868);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = 2;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[7];
      intArray6[0] = 1;
      intArray6[1] = 1;
      intArray6[2] = 2;
      intArray6[3] = 1;
      intArray6[4] = 0;
      intArray6[5] = 0;
      intArray6[6] = 3;
      intArray0[5] = intArray6;
      resultMatrixSignificance0.m_Wins = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(0, (-573));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.339474332143334
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixGnuPlot0.setStdDevPrec(1);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      resultMatrixGnuPlot1.getRowName((-2252));
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getAverage((-2252));
      resultMatrixPlainText1.doubleToString(0, 1070);
      resultMatrixPlainText0.setRowName(1, "(");
      resultMatrixPlainText1.setColName(334, "*");
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1) col0</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[5] = 1;
      boolean[] booleanArray0 = new boolean[0];
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.m_RowOrder = intArray0;
      resultMatrixPlainText0.getDisplayCol((-1));
      resultMatrixPlainText0.colNameWidthTipText();
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertFalse(resultMatrixPlainText0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.globalInfo();
      resultMatrixPlainText0.getRowHidden(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      resultMatrixGnuPlot0.getRevision();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.366080455672883
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.clear();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 1821;
      intArray0[6] = 1821;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.setStdDevWidth(714);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.setSignificanceWidth(714);
      resultMatrixLatex0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.getDefaultMeanWidth();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex2.toStringRanking();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.isSignificance(1);
      resultMatrixLatex1.getSummaryTitle((-1158));
      resultMatrixLatex2.getEnumerateColNames();
      resultMatrixHTML0.setMeanWidth(705);
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex3.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.173768833930095
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.m_SignificanceWidth = 0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.setRemoveFilterName(false);
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.m_EnumerateRowNames = true;
      resultMatrixSignificance0.globalInfo();
      resultMatrixSignificance0.getEnumerateColNames();
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.getDefaultEnumerateRowNames();
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance0.getShowAverage();
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.5604893427264614
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      vector0.add((Object) vector1);
      resultMatrixGnuPlot0.setMeanPrec(0);
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixGnuPlot0.getRowName(3);
      resultMatrixGnuPlot0.setStdDevPrec(50);
      assertEquals(0, resultMatrixGnuPlot0.getMeanPrec());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(614, 3);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      booleanArray0[8] = true;
      resultMatrixPlainText0.m_RowHidden = booleanArray0;
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.setColNameWidth(2);
      resultMatrixPlainText0.showStdDevTipText();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.788626037967038
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getColNameWidth();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.setPrintRowNames(false);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = (double) 2;
      doubleArray0[7] = (double) 2;
      resultMatrixGnuPlot0.m_Counts = doubleArray0;
      assertEquals(1, resultMatrixLatex0.getRowCount());
      
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.setPrintRowNames(true);
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6806022972595858
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 97;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 0;
      intArray3[1] = 97;
      intArray3[2] = 0;
      intArray3[3] = 2;
      intArray3[4] = 97;
      intArray3[5] = 0;
      intArray3[6] = 0;
      intArray3[7] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 1;
      intArray4[1] = (-2317);
      intArray4[2] = 1;
      intArray4[3] = 0;
      intArray4[4] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = (-2317);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = 0;
      intArray6[1] = 0;
      intArray6[2] = 1;
      intArray6[3] = 1;
      intArray6[4] = 566;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 1;
      intArray7[1] = 0;
      intArray7[2] = 97;
      intArray7[3] = (-2933);
      intArray7[4] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = 97;
      intArray8[1] = (-2933);
      intArray0[7] = intArray8;
      resultMatrixGnuPlot0.m_NonSigWins = intArray0;
      resultMatrixCSV0.setShowStdDev(true);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.assign(resultMatrixGnuPlot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = 69;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "v";
      resultMatrixPlainText0.getSummaryTitle(69);
      String string0 = null;
      resultMatrixPlainText0.WIN_STRING = null;
      resultMatrixPlainText0.m_SignificanceWidth = 69;
      stringArray0[1] = ")";
      stringArray0[2] = "(";
      resultMatrixPlainText0.m_ColNames = stringArray0;
      resultMatrixPlainText0.setMeanPrec(69);
      resultMatrixPlainText0.setSize(69, 69);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.534300593104278
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      resultMatrixHTML0.m_ShowStdDev = false;
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[6] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[0];
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      int[][] intArray1 = new int[4][5];
      intArray1[0] = resultMatrixHTML0.m_RowOrder;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixGnuPlot0.m_NonSigWins = intArray1;
      resultMatrixGnuPlot0.setCountWidth(1);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringRanking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.5359221860158883
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDevPrec(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot1.getDefaultRowNameWidth();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixGnuPlot0.getRowName(9);
      assertEquals(0, resultMatrixHTML0.getStdDevPrec());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getCount(2);
      resultMatrixCSV0.getRowHidden(1983);
      resultMatrixCSV0.getSignificance(3, 1);
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.16727618954972
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixLatex0.WIN_STRING = null;
      int[] intArray0 = new int[4];
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      resultMatrixLatex0.m_RemoveFilterName = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[2] = false;
      resultMatrixLatex0.clear();
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getSummaryTitle(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.getColOrder();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.toStringSummary();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixGnuPlot0.isStdDev(1);
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText1.setColNameWidth(1093);
      assertEquals(1093, resultMatrixPlainText1.getColNameWidth());
      
      resultMatrixPlainText0.showStdDevTipText();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.402644881462167
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot2.getDefaultRowNameWidth();
      resultMatrixGnuPlot1.getRowName(9);
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot1.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      
      resultMatrixGnuPlot2.m_ShowStdDev = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getAverage((-899));
      int[] intArray0 = new int[2];
      intArray0[0] = 50;
      intArray0[1] = 0;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      
      resultMatrixPlainText0.setRowName(1, "");
      int int0 = resultMatrixGnuPlot2.getRowCount();
      assertEquals(1, resultMatrixGnuPlot2.getVisibleRowCount());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.1049550301150894
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      resultMatrixCSV0.setRanking(intArray0);
      resultMatrixCSV0.m_RankingDiff = intArray1;
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.setCountWidth(1674);
      resultMatrixGnuPlot0.getSummaryTitle(0);
      resultMatrixCSV0.colNameWidthTipText();
      resultMatrixCSV0.getMeanWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrixCSV", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.2379692291584212
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixLatex0.WIN_STRING = null;
      int[] intArray0 = new int[4];
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getSummaryTitle(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixLatex0.getColOrder();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixLatex0.isStdDev(0);
      resultMatrixPlainText0.setStdDevPrec(2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setColNameWidth(2);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixPlainText0.getRowCount();
      resultMatrixGnuPlot0.setShowAverage(true);
      assertTrue(resultMatrixGnuPlot0.getShowAverage());
      
      resultMatrixLatex0.getRemoveFilterName();
      resultMatrixLatex0.clearHeader();
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 0;
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 0;
      intArray2[4] = 1;
      resultMatrixCSV0.setShowStdDev(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixCSV0.assign(resultMatrixSignificance0);
      resultMatrixCSV0.setShowAverage(true);
      assertTrue(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.517278340031577
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixHTML0.getColName(1);
      resultMatrixLatex0.getSignificance(2, 2);
      resultMatrixHTML0.getRowName(2);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "v";
      stringArray0[2] = " ";
      stringArray0[3] = "az(#Fe/st)";
      stringArray0[4] = null;
      ResultMatrixHTML.main(stringArray0);
      resultMatrixHTML0.clearHeader();
      resultMatrixLatex0.getDisplayRow((-1178));
      String string0 = resultMatrixLatex0.getSummaryTitle((-1301));
      assertEquals("`", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.2038085348023726
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 2);
      resultMatrixPlainText0.listOptions();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText1);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 2;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      resultMatrixPlainText1.setSignificanceWidth(6);
      resultMatrixPlainText1.m_ColOrder = intArray0;
      resultMatrixPlainText0.setShowAverage(true);
      resultMatrixCSV0.toArray();
      int[][] intArray1 = new int[5][8];
      intArray1[0] = resultMatrixPlainText1.m_ColOrder;
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 12;
      intArray2[2] = 6;
      intArray2[3] = 2;
      intArray2[4] = 0;
      intArray2[5] = (-1841);
      intArray2[6] = 0;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      intArray1[3] = resultMatrixPlainText1.m_ColOrder;
      intArray1[4] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixPlainText1.setRanking(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.2704016382527468
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[8];
      resultMatrixLatex0.toStringKey();
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 0;
      resultMatrixLatex0.clear();
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 1821;
      intArray0[7] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 40;
      resultMatrixLatex0.setStdDevWidth(0);
      intArray1[1] = 1;
      resultMatrixLatex0.m_RankingWins = intArray1;
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.m_StdDevPrec = 0;
      resultMatrixLatex0.setSignificanceWidth((-1));
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultMeanWidth();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringRanking();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.654452685750357
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      resultMatrixPlainText0.getColName(3090);
      resultMatrixPlainText0.doubleToString((-1981.191407566), 0);
      resultMatrixPlainText0.clearHeader();
      resultMatrixPlainText0.getStdDevWidth();
      resultMatrixPlainText0.toStringKey();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.setOptions(stringArray0);
      resultMatrixPlainText0.getAverage(0);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.setRowName((-132), "P':O=*");
      assertFalse(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.9763266260317107
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      assertEquals(0, resultMatrixCSV0.getColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.m_RemoveFilterName = true;
      resultMatrixCSV1.m_ShowStdDev = true;
      resultMatrixCSV1.getCount((-2018));
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertEquals(25, resultMatrixCSV1.getRowNameWidth());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      
      resultMatrixCSV0.padString("", 1428, true);
      resultMatrixCSV0.getRowHidden(4490);
      assertEquals(0, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.344446469317226
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.isSignificance(0);
      resultMatrixCSV0.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setMeanPrec(1);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 714);
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getSummaryTitle(1);
      resultMatrixLatex0.clearRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot1.getSummaryTitle(2);
      resultMatrixCSV0.colNameWidthTipText();
      int int0 = resultMatrixCSV0.getMeanWidth();
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toStringRanking();
      String string0 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      int int1 = resultMatrixGnuPlot0.getStdDevWidth();
      assertTrue(int1 == int0);
      
      resultMatrixLatex0.doubleToString((-278.7265), 0);
      assertEquals(714, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[5] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      boolean[] booleanArray0 = new boolean[0];
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.toStringRanking();
      int[][] intArray1 = new int[0][6];
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[1] = ")";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      stringArray0[4] = ")";
      stringArray0[5] = "(";
      stringArray0[6] = "(";
      resultMatrixHTML0.m_ColNames = stringArray0;
      resultMatrixHTML0.clearRanking();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray1, (int[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      resultMatrixHTML0.m_RowOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setSignificanceWidth((-620));
      boolean[] booleanArray0 = new boolean[0];
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth((-934));
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixHTML0.clearRanking();
      int[][] intArray1 = new int[6][9];
      intArray1[0] = resultMatrixHTML0.m_RowOrder;
      intArray1[1] = resultMatrixHTML0.m_RowOrder;
      intArray1[2] = intArray0;
      intArray1[3] = resultMatrixHTML0.m_RowOrder;
      intArray1[4] = resultMatrixHTML0.m_RowOrder;
      intArray1[5] = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary(intArray1, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.818762871904427
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDevPrec(3090);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(0);
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(3090, resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(92, 2);
      resultMatrixPlainText1.setColNameWidth(1395);
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.showStdDevTipText();
      assertEquals(1, resultMatrixPlainText2.getVisibleRowCount());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.clearRanking();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.7284075400342926
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.enumerateColNamesTipText();
      resultMatrixGnuPlot0.setCountWidth(1);
      resultMatrixGnuPlot0.toStringRanking();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(13, 97);
      resultMatrixPlainText1.setColNameWidth((-429));
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText3 = null;
      try {
        resultMatrixPlainText3 = new ResultMatrixPlainText(1, (-3326));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_ColNameWidth = 0;
      int[][] intArray0 = new int[2][8];
      int[] intArray1 = new int[0];
      resultMatrixCSV0.setShowStdDev(false);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 801);
      resultMatrixCSV1.assign(resultMatrixCSV0);
      assertEquals(1, resultMatrixCSV1.getRowCount());
      
      resultMatrixCSV0.setShowAverage(false);
      assertFalse(resultMatrixCSV0.getShowAverage());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.815711446812026
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(431, 0);
      resultMatrixGnuPlot0.m_StdDevPrec = 0;
      resultMatrixGnuPlot0.getPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.WIN_STRING = " ";
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.toStringSummary();
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(431, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.0407272942644323
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      String string0 = resultMatrixPlainText0.meanPrecTipText();
      assertEquals("The number of decimals after the decimal point for the mean.", string0);
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getColCount());
  }
}
