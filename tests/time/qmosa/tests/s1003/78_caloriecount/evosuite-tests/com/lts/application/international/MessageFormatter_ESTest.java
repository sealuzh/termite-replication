/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:10:07 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("Yv,R6}WvxS$", (Throwable) null);
      linkedList0.add(messageFormatter_LoadBundleError0);
      messageFormatter0.createLoadException(linkedList0);
      String string0 = "; and resource path: ";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader classLoader1 = classLoader0.getParent();
      List list0 = messageFormatter0.listResources("; and resource path: ", classLoader1);
      LinkedList<MessageFormatter.LoadBundleError> linkedList1 = new LinkedList<MessageFormatter.LoadBundleError>(linkedList0);
      UnaryOperator<MessageFormatter.LoadBundleError> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(messageFormatter_LoadBundleError0);
      linkedList1.replaceAll(unaryOperator0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) list0, (List) linkedList1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.lts.application.international.MessageFormatter$LoadBundleError cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "XSkW<!^");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "messages");
      LinkedList<ResourceBundle> linkedList0 = new LinkedList<ResourceBundle>();
      messageFormatter0.initializeResourceBundle();
      linkedList0.addFirst((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ResourceBundle resourceBundle0 = null;
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "rm=#T7#`DQpQ/H@";
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      Enumeration<InputStream> enumeration3 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      sequenceInputStream2.skip((-2043L));
      Enumeration<InputStream> enumeration4 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration4).hasMoreElements();
      SequenceInputStream sequenceInputStream4 = new SequenceInputStream(enumeration4);
      byte[] byteArray0 = new byte[2];
      sequenceInputStream4.read(byteArray0, 2, (-1));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.lts.application.errors.vfsNotSupported");
      sequenceInputStream2.read(byteArray0, 1073, (-3310));
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      Enumeration<InputStream> enumeration3 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      sequenceInputStream3.skip((-718L));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte) (-123);
      sequenceInputStream3.read(byteArray0, 47, 5480);
      Object[] objectArray0 = new Object[0];
      List list0 = MessageFormatter.buildList(objectArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "XSkW<!^";
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      EvoSuiteFile evoSuiteFile0 = null;
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "XSkW<!^");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "resources.messages.standard");
      MessageFormatter messageFormatter1 = new MessageFormatter();
      LinkedList<SequenceInputStream> linkedList0 = new LinkedList<SequenceInputStream>();
      // Undeclared exception!
      try { 
        messageFormatter1.initializeResourceBundle((List) null, (List) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Object object0 = new Object();
      LinkedList<SequenceInputStream> linkedList0 = new LinkedList<SequenceInputStream>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.listToString((List<String>) null);
      LinkedList<SequenceInputStream> linkedList1 = new LinkedList<SequenceInputStream>();
      MessageFormatter.buildList(messageFormatter0.DEFAULT_BUNDLE_PATH);
      ApplicationException applicationException0 = new ApplicationException((String) null);
      Object object1 = new Object();
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "+6&Y~ic", object0, object1);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "The file, ");
      ApplicationException applicationException3 = new ApplicationException(applicationException2, "null", applicationException0);
      messageFormatter0.myLastException = (Throwable) applicationException3;
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = null;
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "com.lts.application.errors.backwardsCommandLine");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "x3|8rySJ>7";
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
      StringReader stringReader0 = new StringReader("com.lts.pest.tree.Tree");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object object0 = new Object();
      messageFormatter0.formatMessage("x3|8rySJ>7", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      messageFormatter0.getMessage("com.lts.pest.tree.Tree");
      Object object1 = new Object();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getControl(list0);
      // Undeclared exception!
      try { 
        ResourceBundle.getBundle((String) null, resourceBundle_Control0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      Object object8 = new Object();
      objectArray0[8] = object8;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.parallelStream();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale locale0 = Locale.ITALIAN;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-91);
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte) (-35);
      byteArray0[3] = (byte) (-76);
      byteArray0[4] = (byte) (-69);
      byteArray0[5] = (byte) (-101);
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte) (-21);
      byteArray0[8] = (byte)14;
      sequenceInputStream0.read(byteArray0, 17, (int) (byte) (-76));
      List<String> list1 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getControl(list1);
      resourceBundle_Control0.getFormats("A");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<SequenceInputStream> linkedList0 = new LinkedList<SequenceInputStream>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "?AO&";
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("?AO&", (Object) integer0, (Object) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error processing file ");
      MessageFormatter messageFormatter1 = new MessageFormatter();
      Integer integer0 = new Integer(3);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", (Object) null, (Object) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.setDefaultAssertionStatus(false);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader1.getParent();
      classLoader2.setDefaultAssertionStatus(false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader3 = classLoader2.getParent();
      classLoader3.getParent();
      classLoader3.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources("A", (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8885995049191862
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object object0 = new Object();
      messageFormatter0.formatMessage("resources.messages.standard", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object object0 = new Object();
      messageFormatter0.formatMessage("com.lts.util.CollectionUtils$2", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "";
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "com.lts.application.errors.backwardsCommandLine");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "messages";
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      List<Locale.LanguageRange> list0 = Locale.LanguageRange.parse("messages", (Map<String, List<String>>) hashMap0);
      ApplicationException applicationException0 = new ApplicationException("IuZ(uJM(sZkT`XCDU");
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale$LanguageRange cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<SequenceInputStream> linkedList0 = new LinkedList<SequenceInputStream>();
      LinkedList<SequenceInputStream> linkedList1 = new LinkedList<SequenceInputStream>(linkedList0);
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList1, (List) linkedList1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedList0);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>(linkedList1);
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard");
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-115);
      byteArray1[1] = (byte) (-115);
      byteArray1[2] = (byte)2;
      byteArray1[3] = (byte) (-115);
      byteArray1[4] = (byte) (-115);
      byteArray1[5] = (byte) (-115);
      byteArray1[6] = (byte) (-115);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte)105;
      byteArray0[4] = (byte)42;
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ApplicationException applicationException0 = new ApplicationException((String) null);
      MockThrowable mockThrowable0 = new MockThrowable("", applicationException0);
      ApplicationException applicationException1 = new ApplicationException(mockThrowable0, "java.class", mockThrowable0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("Error while trying to remove temp directory, ", mockThrowable0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("/", (Object) null, object0, (Object) messageFormatter_LoadBundleError0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "] = ");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("Quit");
      linkedList0.add(locale_LanguageRange0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode0);
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      Enumeration<InputStream> enumeration3 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      sequenceInputStream3.skip((-718L));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte) (-123);
      sequenceInputStream3.read(byteArray0, 47, 5480);
      sequenceInputStream0.read(byteArray0, 0, 2);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.formatMessage("XSkW<!^", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-3);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[3] = (byte) (-1);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter1.formatMessage("resources.messages.standard", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      String string0 = "K";
      String string1 = "com.lts.application.errors.backwardsCommandLine";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("K");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) hashMap0;
      objectArray0[1] = (Object) locale_LanguageRange0;
      objectArray0[2] = (Object) hashMap1;
      objectArray0[3] = (Object) locale_LanguageRange0;
      objectArray0[4] = (Object) locale_LanguageRange0;
      objectArray0[5] = (Object) messageFormatter0;
      objectArray0[6] = (Object) hashMap1;
      objectArray0[7] = (Object) hashMap0;
      objectArray0[8] = (Object) hashMap1;
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("com.lts.application.errors.backwardsCommandLine", objectArray0, (ResourceBundle) propertyResourceBundle0);
      Locale.LanguageRange locale_LanguageRange1 = null;
      try {
        locale_LanguageRange1 = new Locale.LanguageRange(">j0ov|qV");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=>j0ov|qv
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("i*'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale locale0 = Locale.ITALIAN;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, list1, locale0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.clearAssertionStatus();
      classLoader1.setDefaultAssertionStatus(false);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader2.setDefaultAssertionStatus(false);
      ClassLoader classLoader3 = ClassLoader.getSystemClassLoader();
      classLoader3.setDefaultAssertionStatus(false);
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[0];
      try { 
        messageFormatter0.getMessage(", is not one of the child nodes of ", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("i]hM0_K` 1H", "i]hM0_K` 1H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      List<String> list0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale locale0 = Locale.ITALIAN;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list1, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
