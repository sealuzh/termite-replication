/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:10:08 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.PipedInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4187591973137939
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".erBror.");
      MockFile mockFile0 = new MockFile("", "{+2St#~/k n58b<y`");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".erBror.", ".erBror.", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = ".erBror.";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      vector0.add((Integer) 1);
      System.setCurrentTimeMillis((-1262L));
      mockFile0.mkdir();
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis((-1262L));
      Locale locale0 = Locale.JAPAN;
      Object object0 = vector0.clone();
      vector0.add((Integer) null);
      archiveScanner0.processDirectory(mockFile0, "vi>]]kPUZ!", true);
      archiveScanner0.dirsIncluded = (Vector) object0;
      archiveScanner0.processDirectory(mockFile0, "{+2St#~/k n58b<y`", true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".erBror.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2931300021708616
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("", "{+2St#~/k n58b<y`");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".error.", ".error.", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[2];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      Integer integer0 = new Integer(8);
      vector0.add(integer0);
      stringArray0[0] = "";
      stringArray0[1] = ".error.";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector1;
      System.setCurrentTimeMillis(0L);
      Locale locale0 = Locale.JAPAN;
      vector0.clone();
      archiveScanner0.processDirectory(improvedFile0, "vi>]]kPUZ!", true);
      archiveScanner0.processDirectory(improvedFile0, "{+2St#~n58b<y`.jar", false);
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(8);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[6];
      String string0 = "7gW?}&XU%~Y8)+x.jar";
      stringArray0[0] = "7gW?}&XU%~Y8)+x.jar";
      stringArray0[1] = "G}Z1EpW;[^B!";
      String string1 = "ror.";
      archiveScanner0.excludes = stringArray0;
      stringArray0[2] = "ror.";
      stringArray0[3] = "Error trying to load entry ";
      stringArray0[4] = "G}Z1EpW;[^B!";
      stringArray0[5] = "B=Z[]YD";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "ror.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("", "{+2St#~/k n58b<y`");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".error.", ".error.", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = ".error.";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      System.setCurrentTimeMillis((-1262L));
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis((-1262L));
      Locale locale0 = Locale.JAPAN;
      vector0.clone();
      archiveScanner0.processDirectory(mockFile0, "vi>]]kPUZ!", true);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".error.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".error.", "{+2St#~n58b<y`");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".error.", ".error.", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{+2St#~n58b<y`";
      stringArray0[1] = ".error.";
      stringArray0[2] = ".ZIP";
      stringArray0[3] = "{+2St#~n58b<y`";
      stringArray0[4] = "?cI]A3`$$Rz=i";
      stringArray0[5] = ".error.";
      stringArray0[6] = ".error.";
      archiveScanner0.includes = stringArray0;
      String string0 = "app.properties";
      String[] stringArray1 = new String[2];
      stringArray1[0] = ".error.";
      stringArray1[1] = ".error.";
      archiveScanner0.excludes = stringArray1;
      mockFile0.mkdir();
      DirectoryScanner.matchPath(".error.", "app.properties");
      archiveScanner0.includes = stringArray1;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsExcluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".error.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("g");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Error trying to load entry ";
      stringArray0[1] = "G}Z1EpW;[^B!";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "Error trying to load entry ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5296847785508279
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("", "{+2St#~/k n58b<y`");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(".error.", ".error.", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[2];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      Integer integer0 = new Integer(8);
      vector0.add(integer0);
      stringArray0[0] = "";
      stringArray0[1] = ".error.";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector1;
      System.setCurrentTimeMillis(1014L);
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(1730L);
      Locale locale0 = Locale.JAPAN;
      archiveScanner0.scandir(mockFile0, (String) null, false);
      System.setCurrentTimeMillis((-331L));
      Locale locale1 = Locale.JAPAN;
      System.setCurrentTimeMillis(1014L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector1;
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      String string0 = null;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("tempdir0.jar", "!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.setBasedir((File) null);
      MockFile.createTempFile(",Yth\"DDS", "<O;c(m{5?$9p)\"y)(1", (File) mockFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "^o70>.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8393579695774942
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte) (-76);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      ImprovedFile improvedFile2 = improvedFile1.createTempDir();
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile2, "5nEG3)CjSih+B:)");
      improvedFile3.delete();
      MockFile.createTempFile(",Yth\"DDS0O;c(m#?$9p)\"y)(1.jar", (String) null, (File) improvedFile2);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile2, ".ear", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      String[] stringArray0 = new String[0];
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector1;
      archiveScanner0.setIncludes(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      archiveScanner0.processFile((String) null);
      Vector<String> vector2 = new Vector<String>();
      archiveScanner0.addDefaultExcludes();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      archiveScanner0.processArchive((File) null, (String) null);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis((-4191L));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".zip";
      stringArray0[1] = ".rror.";
      int int0 = ArchiveScanner.ARCHIVE;
      System.setCurrentTimeMillis((-1L));
      Locale locale0 = Locale.JAPAN;
      System.setCurrentTimeMillis(4084L);
      Locale locale1 = Locale.JAPAN;
      ImprovedFile improvedFile0 = new ImprovedFile(".zip", ".EAR1.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int1 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(2, int1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "\"~oKk", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "0";
      stringArray0[1] = "";
      stringArray0[2] = "0";
      stringArray0[3] = "+#";
      stringArray0[4] = ",Yth\"DDS0O;c(m#?$9p)\"y)(1.jar15nEG3)CjSih+B:).jar";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "oX?l1MIG&Cv<?b iZ,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Error trying to create temp directory in ", "Error trying to create temp directory in ");
      ImprovedFile improvedFile1 = ImprovedFile.createTempImprovedFile("7gW?}&XU%~Y8)+x.jar", "7gW?}&XU%~Y8)+x.jar", improvedFile0);
      ImprovedFile improvedFile2 = improvedFile1.tempBackup();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      try { 
        archiveScanner0.scandir(improvedFile2, "The method, ", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /tmp/tmp1backup
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("0", "0");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(archiveScanner0.DIRECTORY);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      PipedInputStream pipedInputStream4 = new PipedInputStream();
      PipedInputStream pipedInputStream5 = new PipedInputStream();
      PipedInputStream pipedInputStream6 = new PipedInputStream();
      String string0 = "O![;4fX61h3Ty+";
      String string1 = "hor.";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(string1, string0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // O![;4fX61h3Ty+
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".eRro.");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(".eRro.");
      FileSystemHandling.createFolder(evoSuiteFile1);
      MockFile mockFile0 = new MockFile(".eRro.", "{+2St#~/k n58b<y`");
      mockFile0.delete();
      ImprovedFile.createTempDirectory(".eRro.", ".eRro.", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("<Separator>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile1 = new ImprovedFile("{+2St#~/k n58b<y`", "!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      DirectoryScanner.matchPath("!", "<Separator>");
      archiveScanner0.toFileType(improvedFile1);
      Locale locale0 = Locale.JAPAN;
      long long0 = 0L;
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFile mockFile0 = new MockFile("", "{+2St#~/k n58b<y`");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("{+2St#~/k n58b<y`", "6R", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile1 = new ImprovedFile("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ImprovedFile improvedFile2 = new ImprovedFile(".ZIP", ".s%qr!=tT");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile1);
      Locale locale0 = Locale.JAPAN;
      System.setCurrentTimeMillis(728L);
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.JAPAN;
      assertEquals("", locale2.getVariant());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte) (-76);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(byteArray0[0]);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(byteArray0[0]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/aN~p(X-s");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      File file0 = MockFile.createTempFile("/aN~p(X-s/^o7", "\".eao");
      file0.setExecutable(false);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/aN~p(X-s/^o70.ear");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile0 = new ImprovedFile("\".eao");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(file0);
      Locale locale0 = Locale.JAPAN;
      long long0 = (-803L);
      System.setCurrentTimeMillis(long0);
      Locale locale1 = Locale.JAPAN;
      assertSame(locale1, locale0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/aN~p(X-s");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      File file0 = MockFile.createTempFile("/aN~p(X-s/^o7", ".ear");
      file0.setExecutable(false);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/aN~p(X-s/^o70.ear");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile0 = new ImprovedFile(".ear");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(file0);
      Locale locale0 = Locale.JAPAN;
      long long0 = (-803L);
      System.setCurrentTimeMillis(long0);
      Locale locale1 = Locale.ITALY;
      assertEquals("ITA", locale1.getISO3Country());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-76);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(byteArray0[0]);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(byteArray0[0]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "tempdir0.jar";
      MockFile mockFile0 = new MockFile("tempdir0.jar", "!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.isArchive(mockFile0);
      Vector<String> vector0 = new Vector<String>();
      String string1 = "RENAME_FAILED";
      String string2 = "or.0";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(string2, string1);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // RENAME_FAILED
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(",");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ",";
      stringArray0[1] = ",";
      stringArray0[2] = ",";
      stringArray0[3] = ",";
      stringArray0[4] = ".eRro.";
      stringArray0[5] = ".eRro.";
      stringArray0[6] = ",";
      stringArray0[7] = ",";
      stringArray0[8] = ".eRro.";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, ",");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, ,
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String string0 = "";
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive(improvedFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
