/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:21:26 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9740420290828737
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(4);
      Player player1 = new Player((short)4919);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player1.boss = (Party) player0;
      player0.add(player1);
      player0.setDead();
      player0.getName();
      player0.pack();
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      Player player2 = new Player(1111, "Player4", (String) null, 4);
      player2.toString();
      // Undeclared exception!
      try { 
        player2.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7971377304062592
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(3, "state.Party", "state.Party", 3);
      Player player1 = new Player(5378, "state.Party", "", (short)4919, 3);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      Player player2 = new Player(126, (String) null, "p5N=B&\">Q2e\u0007xgLIX", 1101);
      player1.pack();
      assertEquals(3, player1.getStrength());
      
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      String string0 = player2.getIP();
      assertEquals(1, player2.getStrength());
      assertEquals(1101, player2.getPictureId());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertTrue(player2.isConnected());
      assertNull(string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(1230, "", "", 1230);
      Player player1 = new Player((short)4919, "state.Player", 1456);
      player1.setJoinOK(player0, false);
      Player player2 = new Player();
      // Undeclared exception!
      try { 
        player2.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(771, "", "", 771, (byte) (-82));
      Party party0 = new Party();
      party0.next = (Party) player0;
      player0.remove(party0);
      player0.pack();
      player0.getIP();
      assertEquals(771, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-82), player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3124728987694545
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "8i-^=fN;*\"1:");
      Player player0 = new Player(2147340491, "4", "", (-1474), 1);
      Party party0 = player0.gangBoss();
      player0.add(party0);
      player0.setDead();
      Player player1 = new Player(1476, "", (-1474));
      player1.getName();
      player1.setJoinOK(player0, false);
      player1.isJoinOK(player0, true);
      Player player2 = new Player(201, "", "", (-1474));
      Player player3 = new Player(3, "Ft</=E~_F6J6_Q+'", "Ft</=E~_F6J6_Q+'", 2147340491);
      player2.gangStrength();
      player2.getY();
      byte[] byteArray0 = player0.pack();
      player0.getX();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player2.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-127);
      Player player0 = new Player((byte) (-124), "", "", (-1450), (byte) (-38));
      Player player1 = new Player((short)4919, "", "", 2731);
      int int0 = player0.gangStrength();
      assertEquals((-38), int0);
      
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.pack();
      player1.toString();
      player0.toString();
      float float1 = player1.getX();
      assertEquals(10.0F, float1, 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(2731, player1.getPictureId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(0, "", 1249);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)84;
      byteArray0[7] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3459917263308907
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(1668, "", "gui.oduleBrowserialog$ModuleFilter", 0, 0);
      player0.reset(false);
      player0.setDead();
      player0.setY(1668);
      player0.setZ((-542.644F));
      player0.isConnected();
      player0.getStrength();
      player0.reset(true);
      Player player1 = new Player();
      player0.setMoney((byte)84);
      Player player2 = new Player();
      player1.gangStrength();
      player2.remove(player0);
      player1.isDead();
      player0.pack();
      assertEquals(1668.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(1230, "state.Player$JoinInfo", "state.Player$JoinInfo", (-836));
      player0.getName();
      boolean boolean0 = true;
      Player player1 = new Player((short)4919, "state.Player", 1456);
      player1.setZ((-234.03902F));
      player1.isJoinOK(player0, false);
      player1.id = 5;
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(2, ")'kK", ")'kK", 1, (-2442));
      player0.pack();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream("l:5CU^F");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "l:5CU^F");
      byteArrayOutputStream0.writeTo(printStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      dataOutputStream0.write((-2588));
      player0.setX(987.6F);
      player0.setZ((-43.085155F));
      player0.getZ();
      player0.setZ((-43.085155F));
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)21;
      byteArray0[0] = (byte)60;
      byteArray0[6] = (byte) (-17);
      byteArray0[7] = (byte)0;
      player0.unpack(byteArray0);
      player0.setMoney(0.0F);
      player0.add((Party) null);
      player0.pack();
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.323009262423563
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(4);
      player0.reset(false);
      player0.setDead();
      player0.setY(1.0F);
      byte[] byteArray0 = player0.pack();
      player0.setZ(4);
      Player player1 = new Player(1604, "", "xNiPI4PbP'", 1827);
      player1.reset(false);
      player1.unpack(byteArray0);
      player1.isConnected();
      player1.getZ();
      player0.setDead(2459L);
      player1.setDead((-2743L));
      player0.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null, (-2566));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(1);
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getX();
      assertEquals(10.0F, float1, 0.01F);
      
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player1", player0.getName());
      assertEquals(1, player0.getId());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.021517785302462
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-215), "Vn,*O ps", "Vn,*O ps", 2412, (-503));
      int int0 = player0.gangStrength();
      assertEquals((-503), int0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)0;
      int int1 = player0.getStrength();
      assertEquals((-503), int1);
      
      player0.reset(true);
      player0.setMoney(0.0F);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      
      player0.pack();
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      float float0 = player0.getX();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(2412, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.176854415578879
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-522), "gui.ModuleBrowser)ialog$ModuleFilter", "", 2771, 1);
      player0.add((Party) null);
      player0.setDead();
      player0.getName();
      Player player1 = new Player(2771);
      player0.setJoinOK(player1, false);
      player1.isJoinOK(player0, true);
      Player player2 = new Player((-522), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "", (-269));
      Player player3 = new Player(1797, "", (String) null, (byte)15, (-1112));
      player3.gangStrength();
      Player player4 = new Player(1682, (String) null, (String) null, 514, 0);
      player4.getY();
      // Undeclared exception!
      try { 
        player4.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(10, "", "", 1228, 3869);
      assertEquals(1228, player0.getPictureId());
      
      Player player1 = new Player((-686), "", "", (-686), 3869);
      Player player2 = new Player((short)4919, "/-s", "", 2);
      player1.pack();
      player2.getPictureId();
      assertEquals(1, player2.getStrength());
      assertEquals("/-s", player2.getIP());
      
      int int0 = player1.getPictureId();
      assertTrue(player1.isConnected());
      assertEquals(3869, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals((-686), int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1);
      Party party0 = new Party();
      party0.id = 0;
      player0.add(party0);
      player0.setDead(0L);
      player0.getName();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.240555505820405
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-3694), (String) null, (String) null, (-3694), 514);
      Player player1 = new Player(2606, "p~C(>_ARvZ%", "TkJ;>N)+Q}y@n}qP", 514);
      player0.add(player1);
      player0.setDead();
      player0.getName();
      player0.setJoinOK(player1, false);
      player1.isJoinOK(player0, false);
      Player player2 = new Player((-20789), "p~C(>_ARvZ%", "p~C(>_ARvZ%", 70);
      player0.gangStrength();
      player0.getY();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      player2.pack();
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.127429422638514
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(863, ".*[.]class$", "", 863, 863);
      player0.setDead((long) 863);
      player0.getSubparty();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      player0.setMoney(863);
      player0.setZ((byte)77);
      byteArray0[1] = (byte)77;
      Player player1 = new Player((byte)77, "", (String) null, 1);
      player0.head = (Party) player1;
      player0.reset(false);
      player0.unpack(byteArray0);
      player0.isConnected();
      player0.getZ();
      player0.setDead((-128L));
      player0.setDead(0L);
      player1.getName();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)77);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte) (-49);
      byteArray0[4] = (byte)93;
      byteArray0[5] = (byte) (-18);
      byteArray0[6] = (byte)120;
      byteArray0[7] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(4977, "KGNc.qs%Z>/^ ", "vW?v}ws9k|s", 0);
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals("KGNc.qs%Z>/^ ", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-7));
      Player player1 = new Player((short)4919);
      Player player2 = new Player((short)4919, "L>", (String) null, 0, (byte)15);
      MockFile mockFile0 = new MockFile("\"*h");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)1);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, (short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player1.pack(dataOutputStream0);
      player1.remove(player1);
      // Undeclared exception!
      try { 
        player2.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3876362280213312
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(10, "", "", 1230, 3869);
      assertEquals(0L, player0.getTimeOfDeath());
      
      Player player1 = new Player((-686), "", "", (-686), 3869);
      Player player2 = new Player(1);
      player1.next = (Party) player2;
      player2.gangStrength();
      player1.boss = (Party) player2;
      player0.setDead((long) 3869, false);
      player2.gangStrength();
      boolean boolean0 = player0.isDead();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)15;
      Party party0 = new Party();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(30840, "XV2bPV$$F", 30840);
      float float0 = player0.getMoney();
      assertEquals(30840, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(1230, "state.Player$JoinInfo", "state.Player$JoinInfo", 1230);
      Player player1 = new Player((short)4919, "state.Player", 1456);
      player1.setX((short)4919);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player1.getX(), 0.01F);
      
      System.setCurrentTimeMillis(0L);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1187, "", (-2498));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte) (-53);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(1364L);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, (String) null, 5378);
      player0.reset(true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)4;
      player0.unpack(byteArray0);
      player0.unpack(byteArray0);
      player0.setZ(35L);
      player0.setMoney(286.5096F);
      assertEquals(286.5096F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("4t/Xa_,L<_=Q)A+");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0, 3);
      Player player0 = new Player(383, "`_Zqwf]Q8", (byte)15);
      Player player1 = new Player((-1753), "4t/Xa_,L<_=Q)A+", (byte) (-101));
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      pipedInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      System.setCurrentTimeMillis(383);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1731248118492754
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = 0;
          Player player0 = new Player(1668, "", "gui.ModuleBrowserDialog$ModuleFilter", 0, 0);
          player0.reset(false);
          player0.setDead();
          player0.setY(1668);
          player0.pack();
          player0.setZ((-542.644F));
          String string0 = "2Po8\"5hS=~";
          int int1 = 0;
          Player player1 = new Player((short)4919, "2Po8\"5hS=~", "", 0, 0);
          player0.setJoinOK(player1, false);
          player0.gangStrength();
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          player1.id = 632;
          MockFileOutputStream mockFileOutputStream0 = null;
          try {
            mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"writeFileDescriptor\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:245)
             // org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
             // sun.reflect.GeneratedConstructorAccessor84.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-127);
      Player player0 = new Player((byte) (-82), "gui.ModuleBrowser)ialog$ModuleFilter", "", (-1450), (byte) (-38));
      Party party0 = new Party();
      File file0 = MockFile.createTempFile("gui.ModuleBrowser)ialog$ModuleFilter", "");
      MockFile mockFile0 = new MockFile(file0, "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      Player player1 = new Player((byte) (-127), "", "", 21506);
      int int0 = player0.gangStrength();
      assertEquals((-38), int0);
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player1.pack();
      assertEquals(1, player1.getStrength());
      
      float float1 = player0.getX();
      assertEquals(10.0F, float1, 0.01F);
      assertEquals((-1450), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1284), "M", "M", (-1284));
      player0.setZ((-427.0F));
      player0.id = 1019;
      player0.gangStrength();
      player0.getY();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(3847L);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(1230, "", "", 1230);
      player0.setY(1230);
      Player player1 = new Player((short)4919, "", 1456);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.485528191921338
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-1834), "", "", (-1834), 3670);
      player0.reset(false);
      player0.setY(955.5845F);
      player0.setDead();
      player0.remove(player0);
      player0.getY();
      player0.setConnected(false);
      byte[] byteArray0 = new byte[4];
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      player0.unpack(byteArray0);
      player0.isConnected();
      player0.getStrength();
      player0.getSubparty();
      player0.reset(false);
      player0.type();
      player0.setDead(0L);
      player0.setX((-1834));
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(0, "", 1249);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[6] = (byte) (-53);
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFully(byteArray0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      Player player0 = new Player((byte)1, "gui.ModuleBrowser)ialog$ModuleFilter", "", (-1450), (byte) (-38));
      File file0 = MockFile.createTempFile("gui.ModuleBrowser)ialog$ModuleFilter", "");
      MockFile mockFile0 = new MockFile(file0, "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.print(0L);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      player0.remove(player0);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1450), player0.getPictureId());
      assertEquals((-38), player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(0, "", 1249);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)0;
      byteArray0[4] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-53);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)84;
      byteArray0[7] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)2);
      pipedInputStream0.close();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((byte) (-49), "", "gui.ModuleBrowser)ialog$ModuleFilter", (-1450), (byte) (-127));
      MockFile.createTempFile("gui.ModuleBrowser)ialog$ModuleFilter", "gui.ModuleBrowser)ialog$ModuleFilter");
      MockFile mockFile0 = new MockFile("");
      mockFile0.toPath();
      mockFile0.deleteOnExit();
      MockFile mockFile1 = new MockFile(mockFile0, "H1Vn{QqU(o/`");
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals((-1450), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-127), player0.getStrength());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-1973), "", (-1450));
      player0.remove((Party) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1043);
      bufferedOutputStream0.write(1043);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.getY();
      player0.getIP();
      System.setCurrentTimeMillis(1043);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5372760609118274
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      player0.id = 1354;
      player0.setConnected(true);
      Party party0 = player0.next;
      player0.head = null;
      player0.setX(5560.1533F);
      player0.getX();
      player0.setZ(0.0F);
      Party party1 = player0.gangBoss();
      party1.prev = (Party) player0;
      player0.prev = party1;
      player0.getTimeOfDeath();
      player0.setY(5560.1533F);
      player0.setDead(0L);
      player0.type();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      party1.add(player0);
      player0.setDead();
      player0.getTimeOfDeath();
      player0.setY((-1.0F));
      player0.reset(true);
      player0.getIP();
      party1.remove(player0);
      player0.toString();
      player0.setDead((-1L));
      player0.setDead(0L);
      player0.pack();
      player0.getZ();
      player0.setConnected(true);
      player0.getStrength();
      player0.reset(true);
      assertEquals((-1.0F), player0.getY(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(1, "(K$?Pz>}2oM-z4;,bO", 1508);
      player0.setY(10.0F);
      player0.setConnected(false);
      player0.setX(1508);
      player0.getY();
      player0.getZ();
      player0.remove((Party) null);
      player0.setX((-2720.0F));
      player0.isDead();
      player0.isConnected();
      float float0 = player0.getX();
      assertEquals((-2720.0F), float0, 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.1937561962712997
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(4);
      Player player1 = new Player((short)4919);
      player1.boss = (Party) player0;
      player0.add(player1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      player0.setDead();
      player1.setY(0.2F);
      player0.getName();
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      Player player2 = new Player(1111, "Player4", (String) null, 4);
      player2.setX(0.0F);
      // Undeclared exception!
      try { 
        player2.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.1279462185041473
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-1834), "", "", (-1834), 3670);
      Player player1 = new Player((-1834), "+8<4\"+zJ[!8'r`9", "", (short)4919);
      player1.reset(false);
      player0.setY(955.5845F);
      player1.setDead();
      player0.remove(player1);
      player0.getY();
      player1.id = 372;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte)120;
      player1.setZ((-1.0F));
      player0.unpack(byteArray0);
      Player player2 = new Player((byte)120, "", "YS::GY71FibOSrEH", 5, (-1));
      player2.setZ(939.9296F);
      player1.setMoney(3456.0F);
      assertEquals(1392409281320L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(0, "", 1249);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)84;
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.unpack(byteArray0);
      player0.isConnected();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "";
      byte byte0 = (byte)15;
      int int0 = 1295;
      Player player0 = new Player(1295);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((byte) (-82), "", "", (-1450), (byte) (-38));
      Party party0 = new Party();
      PipedInputStream pipedInputStream0 = new PipedInputStream(203);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      pipedInputStream0.close();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream2);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-38), player0.getStrength());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals((-1450), player0.getPictureId());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(false);
      player0.pack();
      player0.setMoney(1252.8169F);
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-101);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("4t/Xa_,L<_=Q)A+");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0, 3);
      bufferedOutputStream0.write((-854));
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      Player player0 = new Player();
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(0, "", 1249);
      player0.setDead((long) 1249, true);
      player0.gangStrength();
      player0.isDead();
      int int0 = player0.getPictureId();
      assertEquals(1249L, player0.getTimeOfDeath());
      assertEquals(1249, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-127);
      Player player0 = new Player((byte) (-82), "gui.ModuleBrowser)ialog$ModuleFilter", "", (-1450), (byte) (-38));
      Party party0 = new Party();
      party0.boss = (Party) player0;
      party0.boss.id = (int) (byte) (-127);
      Party party1 = player0.gangBoss();
      party0.boss.prev = party1;
      party0.boss = (Party) player0;
      player0.remove(party0);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-38), player0.getStrength());
      assertEquals("gui.ModuleBrowser)ialog$ModuleFilter", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-1450), player0.getPictureId());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.3072109573039925
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(4);
      player0.setConnected(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player((-717), "3y;DZ49cZcOmuX", "{>kW", 1);
      Player player2 = new Player(1456, "{>kW", 1);
      player2.setJoinOK(player0, true);
      player2.isJoinOK(player0, true);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("4t/Xa_,L<_=Q)A+");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      filterOutputStream0.write(3);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0, 3);
      mockFileOutputStream0.release();
      bufferedOutputStream0.write((-854));
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      Player player0 = new Player();
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
  }
}
