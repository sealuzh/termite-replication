/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:14:56 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.modes.schememode.SchemeMode;
import java.awt.AWTEventMulticaster;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.LayoutManager;
import java.awt.SystemColor;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyListener;
import java.text.DateFormat;
import javax.swing.BoundedRangeModel;
import javax.swing.JColorChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JSpinner;
import javax.swing.JToolBar;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JPanel jPanel0 = new JPanel((LayoutManager) null, true);
      JPanel jPanel1 = new JPanel(false);
      SystemColor systemColor0 = SystemColor.activeCaption;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "W@");
      systemColor0.getComponents((float[]) null);
      JProgressBar jProgressBar0 = new JProgressBar((-1259), (-1259));
      jProgressBar0.getName();
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertTrue(jColorChooser0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JPanel jPanel0 = new JPanel((LayoutManager) null, false);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      ComponentOrientation componentOrientation0 = ComponentOrientation.RIGHT_TO_LEFT;
      jFormattedTextField0.setComponentOrientation(componentOrientation0);
      jFormattedTextField0.getHorizontalVisibility();
      jFormattedTextField0.getHeight();
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      JToolBar jToolBar0 = new JToolBar("", 0);
      FocusEvent focusEvent0 = new FocusEvent(jToolBar0, 0, false);
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(focusEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.JToolBar cannot be cast to java.awt.Window
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      ComponentOrientation componentOrientation0 = ComponentOrientation.RIGHT_TO_LEFT;
      jFormattedTextField0.getHeight();
      SchemeMode schemeMode0 = new SchemeMode();
      schemeMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      FileUtil.getDefaultInstance();
      String string0 = "ZV\\*j>?Yjt>\"11";
      DateFormatter dateFormatter0 = new DateFormatter();
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      DateFormatter dateFormatter1 = new DateFormatter(dateFormat0);
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(dateFormatter0, dateFormatter0, dateFormatter1);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
      jFormattedTextField0.getHeight();
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Controller.Closer controller_Closer0 = new Controller.Closer();
      MindMapMode mindMapMode0 = new MindMapMode();
      mindMapMode0.getController();
      boolean boolean0 = true;
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = null;
      PDFDocumentGraphics2D pDFDocumentGraphics2D1 = null;
      try {
        pDFDocumentGraphics2D1 = new PDFDocumentGraphics2D((PDFDocumentGraphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.ext.awt.g2d.AbstractGraphics2D", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JPanel jPanel0 = new JPanel((LayoutManager) null, true);
      JPanel jPanel1 = new JPanel(true);
      SystemColor systemColor0 = SystemColor.activeCaption;
      JProgressBar jProgressBar0 = new JProgressBar((BoundedRangeModel) null);
      jProgressBar0.getToolkit();
      JProgressBar jProgressBar1 = new JProgressBar((BoundedRangeModel) null);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener1);
      HierarchyListener hierarchyListener3 = AWTEventMulticaster.add(hierarchyListener2, hierarchyListener2);
      jProgressBar1.removeHierarchyListener(hierarchyListener3);
      JProgressBar jProgressBar2 = new JProgressBar((-1259), (-1259));
      jProgressBar2.getName();
      try { 
        Controller.showCommonJColorChooserDialog(jProgressBar1, (String) null, systemColor0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
