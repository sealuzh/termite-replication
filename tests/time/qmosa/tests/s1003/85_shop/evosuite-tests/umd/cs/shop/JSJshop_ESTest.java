/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:45:11 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StreamTokenizer;
import java.io.StringReader;
import javax.swing.JApplet;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSListOperators;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[3];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = "all";
      stringArray0[2] = "dA";
      SystemInUtil.addInputLine("Returning failure from find-plan: Can not find an applicable method");
      stringArray0[2] = "all";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("[number-of-plans] can be 'one' or 'all'. The default value is 'one'", (String) null, (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = ",N<?";
      stringArray0[2] = ".a*apj3y95m0w";
      stringArray0[3] = "Predicateform.print(): 0 elements";
      JSJshop.main(stringArray0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListOperators jSListOperators0 = jSPlanningDomain0.operators();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(jSListOperators0, jSListOperators0);
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) defaultTableModel0;
      objectArray1[1] = (Object) jSListOperators0;
      objectArray1[2] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      Object object0 = new Object();
      objectArray2[0] = object0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSListOperators0;
      objectArray2[3] = (Object) jSPlanningDomain0;
      objectArray2[4] = (Object) jSTaskAtom0;
      objectArray2[5] = (Object) defaultTableModel0;
      Object object1 = new Object();
      objectArray2[6] = object1;
      // Undeclared exception!
      try { 
        JSJshop.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListOperators jSListOperators0 = jSPlanningDomain0.operators();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(jSListOperators0, jSListOperators0);
      Object[] objectArray0 = new Object[3];
      TableModelEvent tableModelEvent0 = new TableModelEvent(defaultTableModel0);
      defaultTableModel0.newDataAvailable(tableModelEvent0);
      objectArray0[0] = (Object) defaultTableModel0;
      objectArray0[1] = (Object) jSListOperators0;
      objectArray0[2] = (Object) jSTaskAtom0;
      Object object0 = new Object();
      Object object1 = new Object();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getTree();
      JSJshopNode jSJshopNode0 = jSJshop0.tree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".a*apj3y95m0w";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.prob();
      jSJshop0.prob();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 12);
      PipedWriter pipedWriter1 = null;
      try {
        pipedWriter1 = new PipedWriter(pipedReader0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListOperators jSListOperators0 = jSPlanningDomain0.operators();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(jSListOperators0, jSListOperators0);
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) defaultTableModel0;
      objectArray1[1] = (Object) jSListOperators0;
      objectArray1[2] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      Object object0 = new Object();
      objectArray2[0] = object0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSListOperators0;
      objectArray2[3] = (Object) jSPlanningDomain0;
      objectArray2[4] = (Object) jSTaskAtom0;
      objectArray2[5] = (Object) defaultTableModel0;
      Object object1 = new Object();
      objectArray2[6] = objectArray2[3];
      objectArray2[7] = (Object) jSTaskAtom0;
      objectArray2[8] = (Object) defaultTableModel0;
      objectArray0[1] = objectArray2;
      JSJshop jSJshop0 = new JSJshop();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getDeleteList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.astherisk = 2341;
      JSJshopNode jSJshopNode0 = new JSJshopNode();
      // Undeclared exception!
      try { 
        jSJshop0.setFile("mi9xsBc s%KY*", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader("[state:");
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      pipedWriter0.write("[state:");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = 1181.1085412646;
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListOperators jSListOperators0 = jSPlanningDomain0.operators();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(jSListOperators0, jSListOperators0);
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) defaultTableModel0;
      objectArray1[1] = (Object) jSListOperators0;
      objectArray1[2] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      Object object0 = new Object();
      objectArray2[0] = object0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSListOperators0;
      objectArray2[3] = (Object) jSPlanningDomain0;
      objectArray2[4] = (Object) jSTaskAtom0;
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("IuZ(uJM(sZkT`XCDU", ".q=XFF{aK BO%", (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getSolution();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "umd.cs.shop.JSListIfThenElse";
      stringArray0[1] = "@A#\"";
      stringArray0[2] = "a";
      stringArray0[3] = "m}&v5v$ul5)aK<%`Z";
      stringArray0[4] = " Expecting Planning Domain name";
      stringArray0[5] = "=:-=^TphZ]2";
      jSJshop0.parserFile("?");
      stringArray0[6] = "Domain file parsed successfully";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[7] = "returning failure from find-plan: can not find an applicable method";
      JSJshop.main(stringArray0);
      jSJshop0.parserFile("m}&v5v$ul5)aK<%`Z");
      String string0 = "` ";
      JSTaskAtom jSTaskAtom0 = null;
      try {
        jSTaskAtom0 = new JSTaskAtom("returning failure from find-plan: can not find an applicable method");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListOperators jSListOperators0 = jSPlanningDomain0.operators();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(jSListOperators0, jSListOperators0);
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[3];
      objectArray1[1] = (Object) jSListOperators0;
      objectArray1[2] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      jSTaskAtom0.add((Object) defaultTableModel0);
      Object object0 = new Object();
      objectArray2[0] = object0;
      objectArray2[1] = (Object) jSTaskAtom0;
      SystemInUtil.addInputLine((String) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      JSJshop.main(stringArray0);
      JSJshop.main(stringArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(stringArray0[0], "tTv{rL*@o28Wuckf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("Line : ", "rvgk9R");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListOperators jSListOperators0 = jSPlanningDomain0.operators();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(jSListOperators0, jSListOperators0);
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) defaultTableModel0;
      objectArray1[1] = (Object) jSListOperators0;
      objectArray1[2] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      Object object0 = new Object();
      objectArray2[0] = object0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSListOperators0;
      objectArray2[3] = (Object) jSPlanningDomain0;
      objectArray2[4] = (Object) jSTaskAtom0;
      objectArray2[5] = (Object) defaultTableModel0;
      Object object1 = new Object();
      objectArray2[6] = object1;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JSJshop jSJshop0 = new JSJshop();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListOperators jSListOperators0 = jSPlanningDomain0.operators();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(jSListOperators0, jSListOperators0);
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) defaultTableModel0;
      objectArray1[1] = (Object) jSListOperators0;
      objectArray1[2] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      Object object0 = new Object();
      objectArray2[0] = object0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSListOperators0;
      objectArray2[3] = (Object) jSPlanningDomain0;
      objectArray2[4] = (Object) jSTaskAtom0;
      objectArray2[5] = (Object) defaultTableModel0;
      Object object1 = new Object();
      objectArray2[6] = object1;
      objectArray2[7] = (Object) jSTaskAtom0;
      objectArray2[8] = (Object) defaultTableModel0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) jSTaskAtom0;
      objectArray3[1] = object0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[0];
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[7];
      objectArray5[0] = (Object) jSListOperators0;
      objectArray5[1] = (Object) jSTaskAtom0;
      objectArray5[2] = object0;
      objectArray5[3] = (Object) jSListOperators0;
      Object object2 = new Object();
      objectArray5[4] = object2;
      objectArray5[5] = object1;
      objectArray5[6] = (Object) jSListOperators0;
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[6];
      objectArray6[0] = object2;
      objectArray6[1] = object2;
      Object object3 = new Object();
      objectArray6[2] = object3;
      objectArray6[3] = (Object) jSTaskAtom0;
      objectArray6[4] = (Object) jSPlanningDomain0;
      objectArray6[5] = object0;
      objectArray0[5] = objectArray6;
      defaultTableModel0.setDataVector(objectArray0, objectArray2);
      jSTaskAtom0.add((Object) defaultTableModel0);
      jSTaskAtom0.iterator();
      jSTaskAtom0.removeAllElements();
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("Found an applicable method : ", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshop jSJshop1 = new JSJshop();
      jSJshop0.sol();
      JSPlan jSPlan0 = jSJshop1.sol();
      assertNull(jSPlan0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("rvgk9R", "Line : ");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      boolean boolean0 = false;
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(".:/R", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[state:";
      stringArray0[1] = "dA";
      SystemInUtil.addInputLine("Returning failure from find-plan: Can not find an applicable method");
      stringArray0[2] = "Found an applicable method : ";
      JSJshop.main(stringArray0);
      System.setCurrentTimeMillis(876L);
  }
}
