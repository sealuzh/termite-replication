/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:48:53 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setPostCode((String) null);
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setDescription("X7p(zc$_%~ZmjSR*:");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable1.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User("=message==", "=message==");
      user0.setAddressLine2("=message==");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setPassword("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("}5:%YN");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(false);
      assertEquals("}5:%YN", derivedVariable0.getName());
      
      String string0 = derivedVariable1.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.773332073201683
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.getValueLabels();
      User user2 = new User("", "l((&YLJUb`.'$FkzRf");
      user1.setLastName("user.password.saveChanges");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable0);
      derivedVariable0.getOntologyTerms();
      derivedVariable1.setSourceVariables(arrayList1);
      assertEquals("jDQX7Z-Rv>&6];n`", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.970071284571065
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("jDQX7Z-Rv>&6];n`", "variable.cleaningStatus.label");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(1);
      user0.setAddressLine2("variable.form.label");
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber("N{>SZo");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.setAvailability("N{>SZo");
      assertEquals("N{>SZo", derivedVariable1.getAvailability());
      
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User("=message==", "=message==");
      user0.setAddressLine2("=message==");
      Variable variable0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "CA";
      derivedVariable0.setName("CA");
      derivedVariable0.setAvailability("valueLabel.label.saveChanges");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCategory("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setCleaned(false);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCodeBookNumber("CA");
      arrayList1.spliterator();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.retainAll(arrayList0);
      derivedVariable0.setSourceVariables(arrayList2);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9999805643028927
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "{E_3lKrUj$");
      ontologyTerm0.setIdentifier((-1856));
      user0.setAddressLine2("UNABLE_TO_CREATE_DERIVED_VARIABLE");
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber("UNABLE_TO_CREATE_DERIVED_VARIABLE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setAvailability("");
      derivedVariable1.getForm();
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.7907076356735896
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("variable.alternativeVariable.label");
      String string0 = "\"!Hje-yxX\\L+";
      rawVariable1.setColumnStart("\"!Hje-yxXL+");
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber("INVALID_AVAILABILITY_STATE");
      rawVariable0.setIsNewRecord(true);
      String string1 = "Y{\"eA<";
      rawVariable2.setFilePath("Y{\"eA<");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.8905361294454295
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.setCleaned(false);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.setForm("");
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.getCategory();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("Unknown");
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.getAlternativeVariable();
      rawVariable0.getForm();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      User user2 = new User();
      ValueLabel.detectFieldChanges(user2, rawVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList1.add(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList1.add(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCategory("GN2Iglkb");
      supportingDocument1.clone();
      supportingDocument1.setFilePath("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIsNewRecord(false);
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument2);
      rawVariable0.setCoded(false);
      rawVariable0.setIdentifier((-1786));
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.862218290000827
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("Y{\"eA<");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.setColumnStart(" :");
      derivedVariable1.setAvailability("variable.year.label");
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(false);
      assertEquals(" :", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.783791518150609
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("variable.cleaningStatus.label");
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getValueLabels();
      User user1 = new User("variable.cleaningStatus.label", "Y{\"eA<");
      user1.setLastName("jDQX7Z-Rv>&6];n`");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = null;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2("macaw.businessLayer.OntologyTerm");
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      arrayList1.add(supportingDocument1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList2);
      rawVariable0.createVariableSummary();
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.129136505599779
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.clear();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList2);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.parallelStream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList3);
      derivedVariable1.setYear("Y{\"eA<");
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setAvailability("variable.columnStart.label");
      rawVariable0.getYear();
      derivedVariable0.getYear();
      derivedVariable0.setNotes("T[#uz\"#({Sepkq]");
      derivedVariable1.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList4 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList4);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable1.createVariableSummary();
      assertEquals("Y{\"eA<", derivedVariable1.getYear());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0231571985369703
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.parallelStream();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.setYear("");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setAvailability("F^j");
      rawVariable1.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getYear();
      derivedVariable0.setNotes("variable.alternativeVariable.label");
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable1.hasSameDisplayName(rawVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("F^j", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3072109573039925
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.trimToSize();
      User user0 = new User("macaw.businessLayer.OntologyTerm", (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("^9;'[`mAFFM8T~ajg");
      rawVariable0.setIsNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setFilePath("");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.saveChanges.valueChanged");
      arrayList1.add(supportingDocument0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("^9;'[`mAFFM8T~ajg", rawVariable0.getQuestionNumber());
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable1.addSupportingDocuments(arrayList3);
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.888488895463434
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      User user1 = new User();
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setValueLabels(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("p:&+H{\"/");
      supportingDocument0.setIdentifier((-2629));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFilePath(" :");
      supportingDocument1.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument2);
      rawVariable0.setCoded(true);
      rawVariable0.setIdentifier(2147483645);
      rawVariable0.hasSameDisplayName(derivedVariable1);
      rawVariable0.isCoded();
      rawVariable0.getQuestionNumber();
      assertEquals(2147483645, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.9494499710671946
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User("", "");
      user0.setCity("");
      RawVariable rawVariable0 = new RawVariable();
      user0.setCity("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      derivedVariable0.getSourceVariables();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean1 = derivedVariable0.isCoded();
      assertTrue(boolean1 == boolean0);
      
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList2.size());
      
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList3.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList3);
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "CA";
      String string0 = "valueLabel.label.saveChanges";
      derivedVariable0.setName("CA");
      derivedVariable0.setAvailability("valueLabel.label.saveChanges");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCategory("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setColumnEnd("");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "general.fieldValue.unknown";
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-795));
      valueLabel1.clone();
      int int0 = 0;
      valueLabel1.clone();
      User user0 = new User();
      user0.setStatus("general.fieldValue.unknown");
      arrayList0.add(valueLabel1);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel1);
      int int1 = 1;
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("Y{\"eA<");
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.setYear("X7p(zc$_%~ZmjSR*:");
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("Y{\"eA<");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier(1798);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2("macaw.businessLayer.OntologyTerm");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChang|d");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChang|d");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      arrayList1.add(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("variable.saveChanges.valueChang|d", rawVariable0.getQuestionNumber());
      
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaned(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.665970632370836
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      String string0 = "Y{\"eA<";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9445186734976527
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("Y{\"eA<");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.setAvailability("variable.year.label");
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User(">'", "{}");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable1);
      assertEquals("Y{\"eA<", derivedVariable1.getName());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.7469137914162665
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable2);
      derivedVariable2.columnStart = "";
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable2.getAlternativeVariable();
      derivedVariable0.isCoded();
      derivedVariable2.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.587858408458748
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1961585986737022
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.clear();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.parallelStream();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable1.setYear("");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable1.setAvailability("F^j");
      rawVariable0.getYear();
      derivedVariable1.getYear();
      derivedVariable1.setNotes("");
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.getForm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("F^j", derivedVariable1.getAvailability());
      
      derivedVariable2.getLabel();
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.070417415786514
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User();
      ontologyTerm0.setIdentifier((-1856));
      user0.setAddressLine2("UNABLE_TO_CREATE_DERIVED_VARIABLE");
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber("UNABLE_TO_CREATE_DERIVED_VARIABLE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setAvailability("");
      derivedVariable1.getForm();
      derivedVariable1.setOntologyTerms(arrayList1);
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertTrue(derivedVariable0.isCleaned());
      
      derivedVariable1.getName();
      derivedVariable1.isCleaned();
      derivedVariable1.getValueLabels();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7880243288986772
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("variable.alternativeVariable.label");
      rawVariable1.setColumnStart("\"!Hje-yxXL+");
      rawVariable1.getValueLabels();
      rawVariable0.getForm();
      rawVariable1.clone();
      rawVariable0.setFilePath((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription("Ro~B");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        arrayList2.listIterator(5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("G");
      derivedVariable0.setAlias("G");
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      User user0 = new User();
      try { 
        User.checkValidEmail("G");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"G\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.908475927801911
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setForm("");
      derivedVariable0.columnEnd = "";
      Variable.validateFields(derivedVariable0);
      rawVariable0.setName("variable.alias.label");
      derivedVariable0.setCategory("1{Yhto:'Vn ");
      derivedVariable0.removeSourceVariable(rawVariable0);
      Variable.validateFields(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.setAlias("qPU`rPn40vajU96P<=");
      derivedVariable0.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.setFilePath((String) null);
      derivedVariable0.clone();
      derivedVariable0.setCleaningDescription((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier(1);
      derivedVariable0.getIdentifier();
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.setIdentifier(597);
      RawVariable.validateFields(rawVariable0);
      derivedVariable0.setLabel("variable.alias.label");
      derivedVariable0.getLabel();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setLabel("variable.alias.label");
      assertEquals("variable.alias.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("Y{\"eA<");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription(" :");
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      assertEquals("Y{\"eA<", derivedVariable1.getName());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.799204337622572
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("Y{\"eA<");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      DerivedVariable.validateFields(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getForm();
      rawVariable0.clone();
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("YqUm9.");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("variable.codeBookNumber.label");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument2);
      rawVariable0.setCoded(true);
      rawVariable0.setIdentifier(848);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.817472149629272
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.trimToSize();
      rawVariable0.setCleaningStatus("");
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.getValueLabels();
      rawVariable0.getForm();
      rawVariable0.clone();
      rawVariable1.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("");
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.setCoded(false);
      rawVariable0.setIdentifier(1798);
      rawVariable0.isCoded();
      assertEquals(1798, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.8727000655602617
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      String string0 = null;
      ontologyTerm1.setNameSpace((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      String string1 = "variable.alternativeVariable.label";
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("variable.alternativeVariable.label");
      rawVariable1.setColumnStart("\"!Hje-yxXL+");
      rawVariable1.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("variable.cleaningStatus.label");
      derivedVariable0.setNotes("variable.cleaningStatus.label");
      derivedVariable0.getValueLabels();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getCategory();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      User user0 = new User("=message==", "=message==");
      user0.setAddressLine2("=message==");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCoded());
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      derivedVariable0.setCoded(true);
      String string0 = "general.error.invalidEmail";
      derivedVariable0.setFilePath("general.error.invalidEmail");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAvailability("variable.cleaningDescription.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.setCodeBookNumber("general.error.invalidEmail");
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getYear();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.setColumnStart("-");
      rawVariable0.setColumnStart("-");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList0.listIterator(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2199098814082787
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ArrayList<MacawChangeEvent> arrayList1 = ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("jDQX7Z-Rv>&6];n`");
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      derivedVariable0.setCleaned(false);
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.setCodeBookNumber("");
      arrayList3.spliterator();
      arrayList3.retainAll(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setSourceVariables(arrayList3);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList4);
      derivedVariable0.getFilePath();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("jDQX7Z-Rv>&6];n`", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.8569379564427138
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("variable.alternativeVariable.label");
      rawVariable0.isCoded();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.removeAll(arrayList0);
      arrayList0.containsAll(linkedList0);
      rawVariable0.setFilePath("0d3Un8eu");
      arrayList0.iterator();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setCleaned(false);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setCodeBookNumber("user.email.saveChanges");
      arrayList1.spliterator();
      arrayList1.retainAll(arrayList0);
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      assertEquals("user.email.saveChanges", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("5i ;\"NOQiT,1N[");
      OntologyTerm ontologyTerm0 = null;
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      arrayList0.add((OntologyTerm) null);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setColumnStart("5i ;\"NOQiT,1N[");
      rawVariable0.questionNumber = "5i ;\"NOQiT,1N[";
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable1.setNotes("");
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("`e");
      User user0 = new User("", "`e");
      user0.setCounty("");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setLabel("0[kssq35?Te|-");
      rawVariable0.getQuestionNumber();
      assertEquals("`e", rawVariable0.getNotes());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.1737502027185687
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      User user0 = new User("=message==", "=message==");
      user0.setAddressLine2("=message==");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("=message==");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel1, valueLabel1);
      arrayList0.add(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList1 = rawVariable1.getValueLabels();
      arrayList1.add(valueLabel0);
      ArrayList<ValueLabel> arrayList2 = rawVariable1.getValueLabels();
      derivedVariable0.setValueLabels(arrayList2);
      rawVariable1.setIsNewRecord(true);
      rawVariable1.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("=message==");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("");
      supportingDocument2.setIsNewRecord(true);
      rawVariable1.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument3);
      rawVariable1.setCoded(true);
      rawVariable1.setIdentifier(1798);
      rawVariable1.hasSameDisplayName(rawVariable0);
      assertEquals("1798", rawVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.8212255045191412
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.isCleaned();
      rawVariable0.setNotes(":p=IxL Fp");
      rawVariable0.clone();
      rawVariable0.getIdentifier();
      rawVariable0.getDisplayName();
      rawVariable0.getSupportingDocuments();
      assertEquals(":p=IxL Fp", rawVariable0.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.iterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      supportingDocument0.setIsNewRecord(false);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      rawVariable0.setCleaningStatus("macaw.system.MacawException");
      assertEquals("macaw.system.MacawException", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.686248593764573
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setNotes("variable.cleaningStatus.label");
      ontologyTerm0.setNewRecord(false);
      String string0 = "variable.notes.label";
      ontologyTerm0.setDescription("variable.notes.label");
      derivedVariable0.cloneAttributes(derivedVariable1);
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      try { 
        OntologyTerm.validateFields(ontologyTerm1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.741442428540457
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2("macaw.businessLayer.OntologyTerm");
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      arrayList1.add(supportingDocument1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList2);
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.8049576008943427
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("4V0!%TD");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add((OntologyTerm) null);
      User user0 = new User("4V0!%TD", "");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setCleaningDescription("general.error.promotesSecurityRisk");
      assertEquals("4V0!%TD", rawVariable0.getNotes());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.7204013155948865
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("user.password.saveChanges");
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "user.password.saveChanges";
      arrayList0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        arrayList0.subList((-725), (-725));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -725
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setIdentifier(796);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setColumnEnd("");
      derivedVariable0.setColumnStart("NON_EXISTENT_VARIABLE");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) rawVariable0);
      Variable.validateFields(derivedVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.and(predicate0);
      predicate0.or(predicate1);
      Predicate<Object> predicate2 = predicate0.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      arrayList0.removeIf(predicate4);
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.getAvailability();
      derivedVariable0.getSourceVariables();
      assertEquals("NON_EXISTENT_VARIABLE", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.975507230548075
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.clear();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable1.setYear("");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable1.setAvailability("F^j");
      rawVariable0.getYear();
      derivedVariable1.getYear();
      derivedVariable1.setNotes("");
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertEquals("F^j", derivedVariable1.getAvailability());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable2.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList2);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.9723019471381353
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      User user1 = new User("Dx~N:#b7|X?/", " :");
      user1.setAddressLine2((String) null);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setQuestionNumber("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.setAvailability(" :");
      derivedVariable1.getForm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("variable.saveChanges.valueChanged", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0549710111377664
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.clear();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      arrayList1.remove((Object) derivedVariable2);
      arrayList1.parallelStream();
      derivedVariable1.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.setYear((String) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable1.setAvailability("F^j");
      rawVariable0.getYear();
      derivedVariable1.getYear();
      derivedVariable1.setNotes("");
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertEquals("F^j", derivedVariable1.getAvailability());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setCodeBookNumber("jDQX7Z-Rv>&6];n`");
      assertEquals("Unknown", derivedVariable3.getAvailability());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.8462795643898278
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.getSourceVariables();
      derivedVariable1.getValueLabels();
      User user2 = new User("", "l((&YLJUb`.'$FkzRf");
      user1.setLastName("user.password.saveChanges");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("{V7LYJ)fhC2~S5^:h");
      rawVariable0.notes = "{V7LYJ)fhC2~S5^:h";
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) rawVariable0);
      arrayList0.iterator();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setQuestionNumber("MacawProperties");
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      user0.setAddressLine2("macaw.businessLayer.OntologyTerm");
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      arrayList1.add(supportingDocument1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList2);
      rawVariable0.getAlias();
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      User user0 = new User("4V0!%TD", "4V0!%TD");
      User user1 = new User("4V0!%TD", "[;k/P`i_go{TZy*%_");
      user1.setLastName("4V0!%TD");
      user1.setPassword("[;k/P`i_go{TZy*%_");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.availability.label");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.getForm();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getCleaningDescription();
      assertEquals("variable.availability.label", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.943159814531569
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      User user0 = new User("4V0!%TD", "4V0!%TD");
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user2, rawVariable0, valueLabel0, valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      ValueLabel valueLabel3 = new ValueLabel();
      arrayList0.add(valueLabel3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("Nj#R8`0X6uZr}x");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFilePath("variable.year.label");
      supportingDocument1.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.setCoded(true);
      rawVariable0.setIdentifier(2147483645);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(rawVariable0);
      rawVariable1.isCoded();
      rawVariable0.getQuestionNumber();
      assertEquals("2147483645", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5900165533754613
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1618));
      String string0 = "yzQo";
      User user0 = new User("yzQo", "jYt");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("jYt");
      User user1 = new User("jYt", "variable.cleaningStatus.label");
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      User user0 = new User("=message==", "=message==");
      user0.setAddressLine2("=message==");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.821978374837229
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("variable.alternativeVariable.label");
      rawVariable1.setColumnStart("\"!Hje-yxXL+");
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber("INVALID_AVAILABILITY_STATE");
      rawVariable0.setIsNewRecord(true);
      rawVariable2.setFilePath("Y{\"eA<");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("Y{\"eA<");
      arrayList0.add(supportingDocument0);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("variable.alternativeVariable.label", rawVariable0.getCodeBookNumber());
      
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable2.addSupportingDocuments(arrayList2);
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("=message==");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("=message==");
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList3);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      User user0 = new User();
      user0.setPostCode("0");
      user0.clone();
      user0.setAddressLine2("0");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      rawVariable0.removeValueLabel(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      valueLabel0.setValue("0");
      arrayList0.add(supportingDocument0);
      supportingDocument0.getDisplayName();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getForm();
      rawVariable0.addValueLabel(valueLabel0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.8097860196132376
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("#-9Pk5Q{`cLw,", "}5:%YN");
      user0.setAddressLine2("#-9Pk5Q{`cLw,");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable2.getOntologyTerms();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable3);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.66582888892647
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      User user0 = new User("4V0!%TD", "4V0!%TD");
      User user1 = new User("4V0!%TD", "[;k/P`i_go{TZy*%_");
      user1.setLastName("4V0!%TD");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }
}
