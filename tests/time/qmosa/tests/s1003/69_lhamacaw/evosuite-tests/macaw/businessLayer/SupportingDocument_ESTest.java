/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:20:59 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.073215435223058
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS");
      supportingDocument0.setDocumentCode("supportingDocument.description.saveChanges");
      supportingDocument0.setFileName("supportingDocument.description.saveChanges");
      supportingDocument0.setFileName("supportingDocument.description.saveChanges");
      supportingDocument0.setDescription((String) null);
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("supportingDocument.description.saveChanges", supportingDocument1.getFileName());
      assertEquals("supportingDocument.description.saveChanges", supportingDocument1.getDocumentCode());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS", supportingDocument1.getTitle());
      
      supportingDocument0.getDescription();
      supportingDocument0.getDisplayItemIdentifier();
      String string0 = supportingDocument0.getDisplayName();
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_ASSOCIATION_EXISTS-supportingDocument.description.saveChanges", string0);
      
      SupportingDocument.validateFields(supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0357627995474763
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("^jV");
      user0.setCounty("CSur+u5C1Ca2TrHp#rx");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("^jV");
      supportingDocument0.setTitle("w");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setFileName("w");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setTitle("w");
      supportingDocument0.setFileName("tI)^Q3V");
      supportingDocument0.setTitle((String) null);
      supportingDocument0.setDocumentCode("^i/");
      supportingDocument1.getDocumentCode();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setFileName("^jV");
      User user1 = new User();
      supportingDocument2.setTitle((String) null);
      User user2 = new User();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user2, supportingDocument3, supportingDocument0);
      assertEquals(3, arrayList0.size());
      
      supportingDocument0.getTitle();
      supportingDocument2.getDisplayItemIdentifier();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user1, supportingDocument5, supportingDocument3);
      assertEquals(0, arrayList1.size());
      
      supportingDocument2.getDisplayName();
      String string0 = supportingDocument1.getDisplayName();
      assertEquals("w-^jV", string0);
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      
      supportingDocument5.getDisplayName();
      assertEquals(0, supportingDocument5.getIdentifier());
      assertFalse(supportingDocument5.isNewRecord());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0370590508119824
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("^jV");
      user0.setCounty("CSur+u5C1Ca2TrHp#rx");
      supportingDocument0.setDocumentCode("^jV");
      supportingDocument0.setTitle("^jV");
      supportingDocument0.clone();
      supportingDocument0.setFileName("^jV");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setTitle("^jV");
      supportingDocument0.setFileName("tI)^Q3V");
      user0.setPhone("UNABLE_TO_CREATE_ONTOLOGY_TERM");
      user0.setPhone("`$\tZ}(o9y");
      user0.setPostCode(")aXj\"aE");
      User user1 = new User();
      User user2 = new User("^jV", "N$oZetWX");
      user2.setCity("supportingDocument.documentCode.label");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument1);
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      User user6 = new User("CSur+u5C1Ca2TrHp#rx", "Q<D/l@|Yk-2:DV/");
      try { 
        User.checkValidUserIDField("-ii/");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"-ii/\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7186936655321436
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setIdentifier(3192);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      User user1 = new User();
      user1.setPostCode("^/V");
      user1.setPhone("^/V");
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      supportingDocument0.setFileName("w");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("\"*.Wj");
      supportingDocument0.setTitle("D\"p6n]p5G^!");
      supportingDocument0.clone();
      supportingDocument0.setFileName("\"*.Wj");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setIdentifier(2);
      supportingDocument0.setFilePath("D\"p6n]p5G^!");
      supportingDocument0.setTitle("pS)*>d");
      supportingDocument0.getDocumentCode();
      supportingDocument0.setDocumentCode("\"*.Wj");
      SupportingDocument.validateFields(supportingDocument0);
      User user2 = new User();
      User user3 = new User("w", "pS)*>d");
      SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument0);
      supportingDocument0.getFilePath();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.9597195929550524
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPhone("^jV");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("s))\"&d4A/vXQ");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setFilePath("w");
      supportingDocument0.setTitle("w");
      supportingDocument1.setDescription("w");
      User user1 = new User();
      user1.setCounty("w");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("NON_EXISTENT_ONTOLOGY_TERM");
      User user2 = new User();
      user2.setPhone("UNAB7E_TO_CREATE_ONTOLOGY_T{R8");
      user1.setAffiliation("^jV");
      user1.setPhone("NON_EXISTENT_ONTOLOGY_TERM");
      user1.setPostCode("UNAB7E_TO_CREATE_ONTOLOGY_T{R8");
      User user3 = new User();
      user3.setFirstName("");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      User user7 = new User();
      User user8 = new User("Q<D/l@|Yk-2:DV/", "UNAB7E_TO_CREATE_ONTOLOGY_T{R8");
      User.checkValidUserIDField("NON_EXISTENT_ONTOLOGY_TERM");
      User.detectFieldChanges(user2, user8, user6);
      SupportingDocument.detectFieldChanges(user7, supportingDocument1, supportingDocument0);
      User user9 = new User();
      User user10 = new User();
      User.detectFieldChanges(user8, user10, user7);
      try { 
        SupportingDocument.validateFields(supportingDocument2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.014409179927118
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setIdentifier(3192);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      User user1 = new User();
      String string0 = "^/V";
      user0.setPostCode((String) null);
      user1.setPhone("<j\"nAwfx");
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      supportingDocument0.setFileName((String) null);
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("^/V");
      supportingDocument0.setTitle((String) null);
      supportingDocument0.clone();
      supportingDocument0.setFileName((String) null);
      int int0 = (-1704);
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.156128503695672
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User("N15w3}I~\"ZRP273l;\"4", "N15w3}I~\"ZRP273l;\"4");
      user0.setPhone("N15w3}I~\"ZRP273l;\"4");
      user0.setPostCode("ONTOLOGY_TERM");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      User user1 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument1);
      User.detectFieldChanges(user0, user0, user0);
      System.setCurrentTimeMillis((-3022L));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8821103874851657
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("k^4(zK2>>");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.039934581415844
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("^jV");
      supportingDocument0.setDocumentCode("ZbhvyFu ");
      user0.setCounty("CSur+u5C1Ca2TrHp#rx");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("^jV");
      supportingDocument0.setTitle("w");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setFileName("w");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setTitle("w");
      supportingDocument0.setFileName("tI)^Q3V");
      supportingDocument0.setTitle((String) null);
      supportingDocument0.setDocumentCode("^i/");
      String string0 = supportingDocument1.getDocumentCode();
      assertEquals("^jV", string0);
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setFileName("^jV");
      User user1 = new User();
      user0.setPhone("6g4l-:H?#");
      user0.setPostCode("KI($ x:");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      assertEquals(3, arrayList0.size());
      
      User user2 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      assertEquals(3, arrayList1.size());
      
      User.detectFieldChanges(user2, user1, user1);
      System.setCurrentTimeMillis((-1205L));
      String string1 = supportingDocument1.getTitle();
      assertEquals("w", string1);
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9006444897069006
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("^jV");
      user0.setCounty("CSur+u5C1Ca2TrHp#rx");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("^jV");
      supportingDocument0.setTitle("w");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("^jV", supportingDocument1.getDocumentCode());
      
      supportingDocument0.setFileName("w");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setTitle("w");
      supportingDocument0.setFileName("tI)^Q3V");
      supportingDocument0.setTitle("BV");
      supportingDocument1.setDocumentCode((String) null);
      supportingDocument1.getDocumentCode();
      assertEquals("w", supportingDocument1.getTitle());
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("w");
      User user1 = new User();
      User user2 = new User();
      user2.setPhone((String) null);
      user1.setPostCode("w4,{");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user1, supportingDocument2, supportingDocument0);
      assertEquals(3, arrayList0.size());
      
      User user3 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<MacawChangeEvent> arrayList2 = User.detectFieldChanges(user2, user3, user3);
      assertTrue(arrayList2.equals((Object)arrayList1));
      
      SupportingDocument supportingDocument3 = (SupportingDocument)supportingDocument2.clone();
      assertFalse(supportingDocument2.isNewRecord());
      assertEquals("w", supportingDocument3.getFileName());
      assertEquals(0, supportingDocument3.getIdentifier());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.200113693165702
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setFileName("");
      supportingDocument0.setTitle("");
      supportingDocument0.getDisplayName();
      supportingDocument0.getFilePath();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setDescription("");
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setIdentifier((-2909));
      supportingDocument0.setFilePath("");
      supportingDocument0.setFilePath("supportingDocument.filePath.saveChanges");
      supportingDocument0.setDescription("");
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.getIdentifier();
      supportingDocument0.getDisplayItemIdentifier();
      User user0 = new User();
      supportingDocument0.getTitle();
      supportingDocument0.setIdentifier((-2909));
      supportingDocument0.setDocumentCode("*9]*eNNh@6cF\"@z4");
      supportingDocument0.isNewRecord();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setIsNewRecord(false);
      String string0 = supportingDocument1.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.062373557278023
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("^jV");
      user0.setPhone("^jV");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("\"*.Wj");
      supportingDocument0.setTitle("w");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setFileName("w");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setFilePath("w");
      supportingDocument0.setTitle("w");
      supportingDocument1.setDocumentCode("user.addressLine2.label");
      supportingDocument0.getDocumentCode();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFileName("\"*.Wj");
      User user1 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "^jV");
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      supportingDocument2.isNewRecord();
      User user2 = new User();
      user0.setUserID("user.addressLine2.label");
      user2.setPostCode("NU6O1L]5P4iVyk");
      User user3 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user3, supportingDocument1, supportingDocument2);
      assertEquals("\"*.Wj", supportingDocument0.getDocumentCode());
      assertEquals(3, arrayList0.size());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8482213451870897
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.isNewRecord();
      supportingDocument0.setDescription("!z#r*vYqK}-\"8YkenC");
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.setIdentifier(14);
      supportingDocument0.getFileName();
      supportingDocument0.getIdentifier();
      supportingDocument0.getFilePath();
      User user0 = new User();
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9505121250932667
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setTitle("INVALID_ONTOLOGY_TERM");
      supportingDocument0.setDocumentCode("INVALID_ONTOLOGY_TERM");
      supportingDocument0.setFilePath("UNABLE_TO_CREATE_VALUE_LABELS");
      supportingDocument0.setDescription("#,#>6$358x");
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.isNewRecord();
      supportingDocument0.getDisplayName();
      supportingDocument0.getDisplayName();
      supportingDocument0.getTitle();
      supportingDocument0.getDisplayName();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1478140668098065
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      User user1 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = User.detectFieldChanges(user0, user0, user0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      supportingDocument0.getFilePath();
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      user0.setUserID("`F4h$D[#?AxX#H");
      user0.setPostCode("^jV");
      user0.setPhone("^jV");
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDescription();
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8867841616872596
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("3t6");
      String string0 = supportingDocument0.getDisplayName();
      assertEquals("-", string0);
      
      supportingDocument0.getDescription();
      supportingDocument0.getFileName();
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("3t6", supportingDocument1.getDescription());
      assertEquals(0, supportingDocument1.getIdentifier());
      
      supportingDocument0.setDocumentCode("-");
      assertFalse(supportingDocument0.isNewRecord());
      assertNotSame(supportingDocument0, supportingDocument1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6865419347488353
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setFileName("5'\"c1e~cS/x|2");
      supportingDocument0.setFilePath("user.email.saveChanges");
      supportingDocument0.setIdentifier((-2513));
      int int0 = (-2248);
      supportingDocument0.setIdentifier((-2248));
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0370590508119824
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("^jV");
      user0.setCounty("CSur+u5C1Ca2TrHp#rx");
      supportingDocument0.setDocumentCode("^jV");
      supportingDocument0.setTitle("w");
      supportingDocument0.clone();
      supportingDocument0.setFileName("w");
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setTitle("w");
      supportingDocument0.setFileName("tI)^Q3V");
      user0.setPhone("UNABLE_TO_CREATE_ONTOLOGY_TERM");
      user0.setPhone("`$\tZ}(o9y");
      user0.setPostCode(")aXj\"aE");
      User user1 = new User();
      User user2 = new User("w", "N$oZetWX");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      user6.setCity(")aXj\"aE");
      User user7 = new User("tI)^Q3V", "tI)^Q3V");
      User.detectFieldChanges(user1, user6, user5);
      SupportingDocument.detectFieldChanges(user4, supportingDocument0, supportingDocument1);
      User user8 = new User(")aXj\"aE", "tI)^Q3V");
      User user9 = new User();
      User.detectFieldChanges(user4, user9, user5);
      System.setCurrentTimeMillis(3934L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.221069236729976
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getIdentifier();
      supportingDocument0.getDocumentCode();
      supportingDocument0.setTitle("");
      User user0 = new User();
      user0.setIdentifier(0);
      user0.setStatus("");
      user0.setStatus("8cJfMQ]:K}upMN");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      user0.setStatus((String) null);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setTitle("USER");
      supportingDocument0.setDocumentCode((String) null);
      supportingDocument0.getDocumentCode();
      supportingDocument0.getDisplayItemIdentifier();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument0.setTitle("");
      supportingDocument0.setTitle("%%");
      supportingDocument0.setDocumentCode("");
      supportingDocument1.getDisplayName();
      supportingDocument1.getTitle();
      supportingDocument1.getDisplayName();
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis((-3090L));
      System.setCurrentTimeMillis((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setFileName(",Bf");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.959273662074339
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setPostCode("^jV");
      supportingDocument0.getFileName();
      supportingDocument0.setDocumentCode("\"*.Wj");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument1.setDocumentCode("user.addressLine2.label");
      supportingDocument0.getDocumentCode();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setFileName("w");
      User user1 = new User();
      user1.setPhone("e");
      user0.setPostCode("");
      User user2 = new User();
      User user3 = new User();
      User user4 = new User();
      User.detectFieldChanges(user3, user0, user3);
      SupportingDocument.detectFieldChanges(user4, supportingDocument0, supportingDocument1);
      User user5 = new User();
      User user6 = new User();
      User.detectFieldChanges(user2, user3, user6);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }
}
