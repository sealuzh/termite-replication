/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:36:26 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4849259618097503
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3704), (-3704));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = new Token();
      token0.endColumn = (-3704);
      javaParserTokenManager0.jjimageLen = 399;
      javaCharStream0.maxNextCharInd = 399;
      token0.beginColumn = (-3704);
      javaParserTokenManager0.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -3704, column -3704.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0252473709171817
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6r4brOh@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Token token0 = Token.newToken(42);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager1.getNextToken();
      assertEquals(7, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getLine());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5077809418824182
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("const");
      stringReader0.read();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("const");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5322378912704626
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LA`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2284, 2284, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.reset();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2284, column 2286.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.448675721223318
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 137, 137, 137);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(137);
      stringReader0.mark(75);
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager2.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2887226498575792
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("const");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Token token0 = Token.newToken(42);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.TokenLexicalActions(token1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.ReInit(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.601346489692465
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 137, 137, 137);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(137);
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      StringReader stringReader1 = new StringReader("hQ@@f1rRi3BAbwv^");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(143, javaCharStream0.getBeginColumn());
      
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals("hQ", token1.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5716666937087789
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LA`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2284, 2284, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(1278);
      javaParserTokenManager0.jjround = 0;
      stringReader0.mark(75);
      javaCharStream0.prevCharIsLF = true;
      stringReader0.reset();
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginColumn = 1021;
      javaParserTokenManager0.SkipLexicalActions(token0);
      token0.beginLine = 2284;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2285, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.588295830350237
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LA`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2284, 2284, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(1278);
      javaParserTokenManager0.jjround = 0;
      stringReader0.mark(75);
      javaCharStream0.prevCharIsLF = true;
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.image = null;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.SwitchTo(2);
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("LA", token0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.66069026225487
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P/ f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Token token0 = Token.newToken(42);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.TokenLexicalActions(token1);
      javaParserTokenManager1.ReInit(javaCharStream0, 0);
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager1.ReInit(javaCharStream0, 1);
      assertEquals(1, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9853487521487068
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P/ f");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9218933962730598
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P/ f");
      int int0 = JavaParserConstants.LBRACKET;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 137, 137, 137);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(137);
      stringReader0.mark(75);
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Token.newToken((-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("\"package\"");
      int int0 = JavaParserConstants.ABSTRACT;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9512550041381649
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6r4brOh@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1988, 1853, 79);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("6r4brOh@");
      Token token0 = javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[2];
      token0.endLine = 0;
      token0.beginColumn = (-1615);
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)4;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("6r4brOh@");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 22, 1853, 0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(7, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(1860, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)45;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)90;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)17;
      byteArray0[8] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)110);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 110. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5343262783637674
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6r4brOh@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1988, 1853, 79);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("6r4brOh@");
      Token token0 = javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)4;
      StringReader stringReader1 = new StringReader("6r4brOh@");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 22, 66, 1988);
      javaCharStream1.adjustBeginLineColumn((byte)113, (-671));
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = token_GTToken1.specialToken;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      //  // Unstable assertion: assertEquals(6, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(1859, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.963609465214359
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p8v%%Z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1988, 1885, 79);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("p8v%%Z");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.curChar = '?';
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      Token.newToken(30);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(1885);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1885. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P/ 'f");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("P/ 'f");
      stringReader1.reset();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 80, 100);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(80);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-592));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -592. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5726697117406832
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "6r4brOh@";
      StringReader stringReader0 = new StringReader("6r4brOh@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1988, 1853, 79);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("6r4brOh@");
      javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)4;
      mockPrintStream0.write(byteArray0);
      javaParserTokenManager0.curChar = '?';
      mockPrintStream0.print(79);
      Locale locale0 = Locale.KOREA;
      locale0.getUnicodeLocaleKeys();
      MockPrintStream mockPrintStream1 = new MockPrintStream("6");
      javaParserTokenManager0.setDebugStream(mockPrintStream1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2057622119535383
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P/ f");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P/ f");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("P/ f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 557);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 557. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.curLexState = (-1191);
      javaParserTokenManager0.input_stream = null;
      javaParserTokenManager0.ReInit((JavaCharStream) null);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 26, (-1841), (-1841));
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-4388));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -4388. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
