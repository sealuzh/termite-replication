/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:13:57 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress2 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://nUc7q4;INb8I{ax<(R:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "M t$K'@fv[-");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress3 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress3);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("nUc7q4;INb8I{ax<(R", 0);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(12, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://fCV.#:930");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "k");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "fCV.#");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("fCV.#", 930);
      assertEquals(2, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.166831391086261
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(") **", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**R\u00E9ponse du serveur incorrect**", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress2 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress3 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress3);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress4 = new EvoSuiteRemoteAddress("**R\u00E9ponse du serveur incorrect**", 3000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress5 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress5);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress4);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress5);
      Services.testSMTP("R{@^7\"YoPfLEWcH7q", 1);
      Services.testPOP3("R{@^7\"YoPfLEWcH7q", 1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("R{@^7\"YoPfLEWcH7q", 0);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Services.testHTTP("", 2319);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 0);
      services_HTTP_Result0.reset();
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.works = false;
      services_HTTP_Result0.code = 2062;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.reset();
      Services services0 = new Services();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("f-Swz>YVE{}_I'", (-1293));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("**URL Mal Form\u00E9** (", (-5192));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**R\u00E9ponse du serveur incorrect**", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress2 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress3 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "h,KFMbFn(x<");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress3);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress4 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress3);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress5 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress5);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress4);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", 0);
      services_HTTP_Result1.reset();
      services_HTTP_Result1.Error = "";
      services_HTTP_Result1.works = false;
      services_HTTP_Result0.works = false;
      services_HTTP_Result0.works = false;
      services_HTTP_Result1.toString();
      services_HTTP_Result1.reset();
      Services services0 = new Services();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5700075794156847
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.reset();
      services_HTTP_Result0.code = 0;
      services_HTTP_Result0.reset();
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.works = true;
      services_HTTP_Result0.reset();
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_HTTP_Result0.time = 0L;
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("", (-1896));
      assertFalse(services_SIMPLE_Result1.works);
      
      services_SIMPLE_Result1.works = true;
      services_HTTP_Result0.reset();
      services_SIMPLE_Result1.works = true;
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.toString();
      Services.testPOP3("", 2324);
      Services.HTTP_Result services_HTTP_Result2 = new Services.HTTP_Result();
      services_SIMPLE_Result2.toString();
      Services.SIMPLE_Result services_SIMPLE_Result3 = Services.testSMTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 0);
      services_SIMPLE_Result3.time = 0L;
      services_SIMPLE_Result2.works = false;
      Services.SIMPLE_Result services_SIMPLE_Result4 = new Services.SIMPLE_Result();
      Services.SIMPLE_Result services_SIMPLE_Result5 = new Services.SIMPLE_Result();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.toString();
      services_SIMPLE_Result3.toString();
      Services.SIMPLE_Result services_SIMPLE_Result6 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result6.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("o\u0005N;g@", 1069);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 0);
      services_SIMPLE_Result0.time = (long) 0;
      services_SIMPLE_Result0.Error = "";
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.works = true;
      services_SIMPLE_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.reset();
      services_SIMPLE_Result1.Error = "";
      services_SIMPLE_Result1.time = 0L;
      services_SIMPLE_Result1.Error = "**URL Mal Form\u00E9** (";
      services_SIMPLE_Result1.reset();
      services_SIMPLE_Result1.reset();
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.code = (-4075);
      services_HTTP_Result0.time = 1626L;
      services_HTTP_Result0.reset();
      services_SIMPLE_Result1.reset();
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      
      services_HTTP_Result0.toString();
      Services.testSMTP("**** Resultat : \n** Fonctionnement : true\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 0);
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("** Poid de la page : ", (-46));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress2 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress3 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress3);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 3751);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }
}
