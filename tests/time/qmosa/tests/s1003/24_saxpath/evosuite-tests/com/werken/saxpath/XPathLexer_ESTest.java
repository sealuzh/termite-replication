/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:14:49 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.046158189823638
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.minus();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.doubleColon();
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0964315409925973
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.literal();
      assertNotNull(token5);
      assertEquals(27, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("j)u#l^)`-L&8");
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.leftParen();
      assertEquals(1, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer1.comma();
      xPathLexer1.setPreviousToken(token7);
      assertEquals("j", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.and();
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      xPathLexer3.or();
      Token token11 = xPathLexer2.identifier();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1356794446038094
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.plus();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer0.div();
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      Token token14 = xPathLexer0.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer0.equals();
      assertEquals(21, token15.getTokenType());
      
      Token token16 = xPathLexer0.pipe();
      assertEquals(17, token16.getTokenType());
      
      Token token17 = xPathLexer0.plus();
      assertEquals(5, token17.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8820884141000247
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("j)u#l^)`-L&8");
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.leftParen();
      Token token0 = xPathLexer1.comma();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer4 = new XPathLexer("5Hc:KR(v`Lo^4Z7^");
      xPathLexer4.and();
      xPathLexer4.comma();
      xPathLexer1.nextToken();
      xPathLexer0.literal();
      Token token1 = xPathLexer3.or();
      assertNull(token1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3688461567581607
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.number();
      xPathLexer0.consume((-1087));
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.927552124766504
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.minus();
      assertEquals("o", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(".", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer2 = new XPathLexer(".Hr1v9j");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(".Hr1v9j");
      Token token4 = xPathLexer1.leftParen();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals("o", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(".", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0948061588413163
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("36/c(wI~");
      Token token1 = xPathLexer1.minus();
      assertEquals("3", token1.getTokenText());
      
      Token token2 = xPathLexer1.number();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token3 = xPathLexer1.identifier();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals("n", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.identifierOrOperatorName();
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertNotNull(token8);
      
      Token token9 = xPathLexer3.identifier();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer4.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3252182548032536
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("v/%+)@+^RAr%qT/\"");
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("v/%+)@+^RAr%qT/\"");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer2.leftParen();
      assertEquals("v", token3.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer2.comma();
      assertEquals("/", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.setPreviousToken((Token) null);
      Token token5 = xPathLexer2.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
      
      Token token6 = xPathLexer4.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4692300914242904
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.colon();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer1.minus();
      xPathLexer1.operatorName();
      xPathLexer1.dollar();
      xPathLexer0.at();
      xPathLexer1.notEquals();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.setXPath("com.werken.saxpath.Token");
      xPathLexer1.mod();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.207338552391838
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.Token", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("QB#");
      Token token4 = xPathLexer1.minus();
      assertEquals("Q", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer1.comma();
      assertEquals("B", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertNotNull(token8);
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token9 = xPathLexer2.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.316673540058549
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("7");
      xPathLexer1.setPreviousToken(token4);
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.literal();
      xPathLexer1.and();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("E d^,z");
      Token token10 = xPathLexer2.rightParen();
      assertEquals("E", token10.getTokenText());
      
      Token token11 = xPathLexer2.minus();
      assertEquals(" ", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer2.div();
      Token token12 = xPathLexer1.identifierOrOperatorName();
      assertNull(token12);
      
      Token token13 = xPathLexer2.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer2.comma();
      assertEquals("^", token14.getTokenText());
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6947836785125774
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("-", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      Token token3 = xPathLexer1.leftParen();
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("'", token4.getTokenText());
      
      xPathLexer0.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("hd6");
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("hd", token5.getTokenText());
      
      xPathLexer1.whitespace();
      xPathLexer2.setPreviousToken(token2);
      xPathLexer1.consume();
      xPathLexer2.or();
      Token token6 = xPathLexer0.identifier();
      assertEquals("werken.saxpath.XPathLexer", token6.getTokenText());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer1.minus();
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer2.minus();
      assertEquals(6, token10.getTokenType());
      assertEquals("6", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token11 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer1.identifierOrOperatorName();
      assertEquals("7LY", token12.getTokenText());
      
      xPathLexer3.identifier();
      Token token13 = xPathLexer1.whitespace();
      assertEquals((-2), token13.getTokenType());
      
      Token token14 = xPathLexer2.dots();
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0800442477702434
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertEquals("m.werken.saxpath.T", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.leftParen();
      assertEquals("k", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("o", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals("m.", token7.getTokenText());
      assertEquals(14, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("w", token8.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6981356724592294
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "7";
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2986678352012797
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token2 = xPathLexer2.minus();
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer2.leftParen();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer2.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token5 = xPathLexer2.notEquals();
      assertEquals("*o", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.whitespace();
      xPathLexer2.setPreviousToken(token3);
      assertEquals("h", token3.getTokenText());
      
      xPathLexer1.consume();
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.identifier();
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.star();
      assertEquals("-", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      xPathLexer2.minus();
      Token token8 = xPathLexer3.pipe();
      assertEquals("h", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightParen();
      assertEquals("'", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer4.minus();
      assertEquals(6, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNull(token11);
      
      Token token12 = xPathLexer2.identifierOrOperatorName();
      assertEquals("7LY", token12.getTokenText());
      
      Token token13 = xPathLexer3.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer2.whitespace();
      assertEquals("", token14.getTokenText());
      assertEquals((-2), token14.getTokenType());
      
      Token token15 = xPathLexer0.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.435803525949301
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.currentPosition();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierStartChar('Z');
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.currentPosition();
      xPathLexer0.consume(11);
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.consume((-2467));
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5083754027880856
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      xPathLexer0.whitespace();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer1.pipe();
      xPathLexer1.doubleColon();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.622602272041487
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.nextToken();
      xPathLexer0.setPreviousToken(token5);
      assertEquals((-1), token5.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.704347339665568
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("!", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token3);
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.setPreviousToken(token3);
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.383656633394966
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.currentPosition();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierStartChar('Z');
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.currentPosition();
      xPathLexer0.consume(9);
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.consume((-2467));
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1749136479665196
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.consume((-1081));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0383443934422107
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.setXPath(")");
      xPathLexer0.mod();
      xPathLexer0.currentPosition();
      xPathLexer0.hasMoreChars();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.not();
      assertEquals(")", token2.getTokenText());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.consume(26);
      xPathLexer0.setXPath(")");
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      xPathLexer0.consume(7);
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('~');
      assertFalse(boolean0);
      
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      xPathLexer0.consume();
      Token token13 = xPathLexer0.leftParen();
      assertEquals(1, token13.getTokenType());
      
      xPathLexer0.div();
      Token token14 = xPathLexer0.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8034742784504236
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.dots();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.consume(0);
      xPathLexer0.rightBracket();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('-');
      assertTrue(boolean0);
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      int int1 = xPathLexer0.currentPosition();
      assertEquals(19, int1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.268959065912036
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.star();
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.minus();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("z", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token8 = xPathLexer1.identifier();
      assertEquals(15, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.89144528866373
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.rightBracket();
      Token token0 = xPathLexer1.leftBracket();
      xPathLexer1.mod();
      xPathLexer1.relationalOperator();
      xPathLexer0.getXPath();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.341687525651142
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%:T4i5Eu`<[vM/\"Vp");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-530));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5451310519603356
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9711835907199564
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer1.mod();
      xPathLexer1.relationalOperator();
      xPathLexer1.getXPath();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.231825211975256
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("?y<[R");
      xPathLexer1.dollar();
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2394532672646728
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath(";q3\"1PD P");
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.consume((-2909));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.2037552079994014
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      xPathLexer0.whitespace();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("rk", token5.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer2.identifier();
      assertEquals(15, token8.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token8.getTokenText());
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer3.rightParen();
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8327067246012618
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.minus();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6476660111490475
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.endPosition();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.0892848211811947
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.573813765021864
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierChar('w');
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.502375550381569
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.currentPosition();
      xPathLexer0.consume((-1304));
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.consume(32);
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer1.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.2897814941322836
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.star();
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.dollar();
      assertEquals("6", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.minus();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token5 = xPathLexer1.minus();
      assertEquals("z", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token8 = xPathLexer1.identifier();
      assertEquals("", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("`", token9.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('p');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2913220134293906
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume(46);
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer1.notEquals();
      xPathLexer1.leftBracket();
      xPathLexer0.mod();
      xPathLexer1.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.107482196736679
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("j)u#l^)`-L&8");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.leftParen();
      xPathLexer2.whitespace();
      xPathLexer0.minus();
      xPathLexer2.nextToken();
      xPathLexer0.and();
      xPathLexer2.comma();
      xPathLexer1.nextToken();
      xPathLexer2.literal();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7914739818829344
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.and();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.231802097535666
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.dots();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7082298939805773
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.div();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token3);
      assertEquals(4, token3.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.div();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.996230591034251
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.consume(0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.790814561020336
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer0.div();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      assertNotNull(token11);
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(13, token0.getTokenType());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer0.equals();
      assertEquals(21, token14.getTokenType());
      
      Token token15 = xPathLexer0.pipe();
      assertEquals(17, token15.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.018937448679387
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.046496919005405
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("7");
      xPathLexer1.setPreviousToken(token1);
      assertEquals(4, token1.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer1.literal();
      xPathLexer1.and();
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer1.operatorName();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.0633641192653513
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-T?c~YoXasV#");
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.minus();
      token0.toString();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("-T?c~YoXasV#");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.at();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.setXPath("E d^,z");
      xPathLexer2.rightParen();
      xPathLexer1.minus();
      xPathLexer2.leftBracket();
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer("-T?c~YoXasV#");
      xPathLexer3.number();
      xPathLexer2.relationalOperator();
      xPathLexer1.comma();
      xPathLexer1.div();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.identifier();
      Token token1 = xPathLexer0.comma();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2432801232090482
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.identifierOrOperatorName();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token8);
      
      XPathLexer xPathLexer2 = new XPathLexer("zC%dZ?654{0LB7");
      Token token9 = xPathLexer2.identifier();
      assertEquals("zC", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer2.whitespace();
      assertEquals("", token10.getTokenText());
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer2.dots();
      assertEquals("d", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.3474911794990225
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.or();
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.minus();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer1.div();
      Token token11 = xPathLexer1.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token12 = xPathLexer2.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer2.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer2.whitespace();
      assertEquals((-2), token14.getTokenType());
      
      Token token15 = xPathLexer1.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.3086825073043538
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("v%ph");
      Token token1 = xPathLexer2.not();
      assertEquals("v", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("h*4Z>EQ");
      xPathLexer4.setPreviousToken((Token) null);
      Token token4 = xPathLexer0.slashes();
      assertEquals("6", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer4.equals();
      assertEquals("h", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.418403921870809
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d`!");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.or();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("`!", token1.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.426093954002885
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.8177214040287604
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.star();
      assertEquals("z", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      Token token2 = xPathLexer0.literal();
      assertNotNull(token2);
      
      Token token3 = xPathLexer0.at();
      Token token4 = xPathLexer0.number();
      String string0 = token3.toString();
      assertEquals("[ (16) (n)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (23) (6)", string1);
      
      token2.toString();
      String string2 = token2.toString();
      assertEquals("[ (27) (%z])", string2);
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals(">f", token5.getTokenText());
      
      xPathLexer0.at();
      xPathLexer0.consume();
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("3", token8.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8033887949701062
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
      
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.minus();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.dots();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.consume(0);
      xPathLexer0.rightBracket();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('-');
      assertTrue(boolean0);
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      int int1 = xPathLexer1.currentPosition();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.7560521147686172
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.isIdentifierStartChar('>');
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.isIdentifierChar('>');
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5222532611028243
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierStartChar('$');
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.506338854949202
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-T?c~YoXasV#");
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("T", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.notEquals();
      Token token2 = xPathLexer0.dots();
      Token token3 = xPathLexer0.minus();
      assertEquals("X", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (22) (~Y)", string0);
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("a", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("s", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("-T?c~YoXasV#");
      xPathLexer1.setPreviousToken(token1);
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("-", token6.getTokenText());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer2 = new XPathLexer(".Hr1v9j");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(".Hr1v9j");
      Token token8 = xPathLexer4.leftParen();
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer4.comma();
      assertEquals("H", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      xPathLexer2.setPreviousToken(token2);
      assertEquals(13, token2.getTokenType());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals(".", token10.getTokenText());
      
      Token token11 = xPathLexer1.equals();
      assertEquals("T", token11.getTokenText());
      
      Token token12 = xPathLexer2.pipe();
      assertEquals("H", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.251612782790164
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1326084004442667
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.766609071573822
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("m", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals(27, token3.getTokenType());
      assertEquals("werken", token3.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("m", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(".w", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.046194749472587
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpah.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.204552558554502
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.dollar();
      assertEquals("z", token0.getTokenText());
      
      xPathLexer0.comma();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("%", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("n]p5G^!!37}Z2o");
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("z", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.dots();
      assertEquals("n", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("]", token5.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.281240494968517
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token8.getTokenText());
      assertNotNull(token8);
      
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer4.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.and();
      xPathLexer0.div();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }
}
