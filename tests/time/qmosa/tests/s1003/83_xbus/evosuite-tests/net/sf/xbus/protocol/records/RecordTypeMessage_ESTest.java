/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:10:29 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Date;
import javax.activation.DataHandler;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.Message;
import org.apache.axis.SOAPPart;
import org.apache.axis.attachments.AttachmentPart;
import org.apache.axis.transport.local.Handler;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.impl.xs.SchemaGrammar;
import org.apache.xerces.impl.xs.XSDDescription;
import org.apache.xerces.parsers.CachingParserPool;
import org.apache.xerces.parsers.DOMASBuilderImpl;
import org.apache.xerces.parsers.XMLGrammarCachingConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLAttributesImpl;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.apache.xerces.xni.Augmentations;
import org.apache.xerces.xni.grammars.Grammar;
import org.apache.xerces.xni.grammars.XMLGrammarPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("FH&MK", (XBUSSystem) null, "");
      ByteArrayList.createByteArrayList(byteArray0, (-13));
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-20);
      byteArray1[2] = (byte) (-20);
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-20);
      byteArray1[5] = (byte)0;
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray1, 2709);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray1, (byte)0);
      byteArrayList1.addAll(byteArrayList0);
      byteArrayList0.toByteArray();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("FH&MK", (XBUSSystem) null, "");
      ByteArrayList.createByteArrayList(byteArray0, 0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-20);
      byteArray1[2] = (byte) (-20);
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-20);
      byteArray1[5] = (byte)0;
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray1, 2709);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray1, (byte)0);
      byteArrayList1.addAll(byteArrayList0);
      byteArrayList0.toByteArray();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "LBkyyl\":E9sen:`";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Date date0 = recordTypeMessage0.getRequestTimestamp();
      recordTypeMessage0.setResponseTimestamp(date0);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)14;
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-325), 10, (-325));
      mockDate0.before(mockDate1);
      Message message0 = new Message((Object) null, false);
      SOAPPart sOAPPart0 = new SOAPPart(message0, "!;+h", false);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      MockDate mockDate2 = new MockDate(12, (-4452), 12);
      mockDate2.getTime();
      mockDate2.getTime();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.flush();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 12);
      pipedOutputStream0.flush();
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream1, 28);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "Cw1Xp2,`EN");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      try { 
        recordTypeMessage0.setResponseObject(eventReaderDelegate1, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 javax.xml.stream.util.EventReaderDelegate cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)14;
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byteArrayList1.addAll(byteArrayList0);
      ByteArrayList byteArrayList3 = new ByteArrayList();
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)14;
      byteArray1[1] = (byte)14;
      byteArray1[0] = (byte)14;
      byteArray1[3] = (byte)14;
      byteArray1[4] = (byte) (-1);
      byteArrayList3.add(byteArray1);
      ByteArrayList byteArrayList4 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList4, (XBUSSystem) null);
      ByteArrayList byteArrayList5 = new ByteArrayList();
      Integer integer0 = new Integer((byte)14);
      try { 
        recordTypeMessage0.setRequestObject(integer0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool0 = new CachingParserPool.ShadowedGrammarPool((XMLGrammarPool) null);
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration((SymbolTable) null, cachingParserPool_ShadowedGrammarPool0);
      DOMASBuilderImpl dOMASBuilderImpl0 = new DOMASBuilderImpl(xMLGrammarCachingConfiguration0);
      dOMASBuilderImpl0.getDocument();
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)81;
      byteArray0[4] = (byte)18;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)0;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("FH&MK", (XBUSSystem) null, "6");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)81;
      byteArray0[4] = (byte)18;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)0;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.createComment("org.apache.axis.message.SOAPBody");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, (byte)1);
      byteArrayList0.addAll(byteArrayList1);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList3 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("rt>$UW$3[", (XBUSSystem) null, "S]l8p");
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      ByteArrayList byteArrayList4 = new ByteArrayList();
      Integer integer0 = new Integer((byte)1);
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations0 = new SchemaGrammar.Schema4Annotations();
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations1 = SchemaGrammar.SG_Schema4Annotations;
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations2 = SchemaGrammar.SG_Schema4Annotations;
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations3 = new SchemaGrammar.Schema4Annotations();
      schemaGrammar_Schema4Annotations0.getAttributeGroup("RecordTypeMessage");
      SchemaGrammar.BuiltinSchemaGrammar schemaGrammar_BuiltinSchemaGrammar0 = SchemaGrammar.SG_XSI;
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations4 = SchemaGrammar.SG_Schema4Annotations;
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations5 = new SchemaGrammar.Schema4Annotations();
      schemaGrammar_Schema4Annotations0.getGlobalAttributeDecl("x8Od/");
      SchemaGrammar.BuiltinSchemaGrammar schemaGrammar_BuiltinSchemaGrammar1 = SchemaGrammar.SG_XSI;
      assertSame(schemaGrammar_BuiltinSchemaGrammar1, schemaGrammar_BuiltinSchemaGrammar0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[22] = (byte)1;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations0 = new SchemaGrammar.Schema4Annotations();
      Grammar[] grammarArray0 = new Grammar[8];
      grammarArray0[0] = (Grammar) schemaGrammar_Schema4Annotations0;
      schemaGrammar_Schema4Annotations0.getAttributeGroup("");
      grammarArray0[1] = (Grammar) schemaGrammar_Schema4Annotations0;
      grammarArray0[1] = (Grammar) schemaGrammar_Schema4Annotations0;
      grammarArray0[3] = (Grammar) schemaGrammar_Schema4Annotations0;
      SchemaGrammar.BuiltinSchemaGrammar schemaGrammar_BuiltinSchemaGrammar0 = SchemaGrammar.SG_XSI;
      grammarArray0[4] = (Grammar) schemaGrammar_BuiltinSchemaGrammar0;
      // Undeclared exception!
      try { 
        schemaGrammar_Schema4Annotations0.getGlobalAttributeDecl((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.util.SymbolHash", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("'", (XBUSSystem) null, "'");
      byte[] byteArray0 = new byte[4];
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)18;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("w", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("003", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("V", (XBUSSystem) null, "V");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl((byte)17);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool0 = new CachingParserPool.ShadowedGrammarPool(xMLGrammarPoolImpl0);
      cachingParserPool_ShadowedGrammarPool0.unlockPool();
      xMLGrammarPoolImpl0.clear();
      xMLGrammarPoolImpl0.lockPool();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool0 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool1 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl0);
      xMLGrammarPoolImpl0.lockPool();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool2 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_ShadowedGrammarPool0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool3 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool2);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool1 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_ShadowedGrammarPool0);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool2 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool2);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool4 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_ShadowedGrammarPool0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool5 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool4);
      cachingParserPool_SynchronizedGrammarPool5.lockPool();
      XMLGrammarPoolImpl xMLGrammarPoolImpl1 = new XMLGrammarPoolImpl((byte)17);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool6 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool3);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool3 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool3);
      XMLGrammarPoolImpl xMLGrammarPoolImpl2 = new XMLGrammarPoolImpl();
      XSDDescription xSDDescription0 = new XSDDescription();
      xSDDescription0.makeClone();
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations0 = new SchemaGrammar.Schema4Annotations();
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool4 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool1);
      XMLGrammarPoolImpl xMLGrammarPoolImpl3 = new XMLGrammarPoolImpl();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool7 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool0);
      XMLGrammarPoolImpl xMLGrammarPoolImpl4 = new XMLGrammarPoolImpl();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool8 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl1);
      cachingParserPool_SynchronizedGrammarPool3.lockPool();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool9 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool4);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool5 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_ShadowedGrammarPool2);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool6 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool9);
      assertFalse(cachingParserPool_ShadowedGrammarPool6.equals((Object)cachingParserPool_ShadowedGrammarPool1));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      MockDate mockDate0 = new MockDate();
      recordTypeMessage0.setErrorcode(512);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      DOMASBuilderImpl dOMASBuilderImpl0 = new DOMASBuilderImpl();
      XMLAttributesImpl xMLAttributesImpl0 = new XMLAttributesImpl(1);
      xMLAttributesImpl0.getAugmentations("R|_.PbM}R^?");
      dOMASBuilderImpl0.empty((Augmentations) null);
      DOMASBuilderImpl dOMASBuilderImpl1 = new DOMASBuilderImpl(xMLGrammarCachingConfiguration0);
      DOMASBuilderImpl dOMASBuilderImpl2 = new DOMASBuilderImpl();
      Document document0 = dOMASBuilderImpl1.getDocument();
      assertNull(document0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("V", (XBUSSystem) null, "V");
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl((byte)17);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool0 = new CachingParserPool.ShadowedGrammarPool(xMLGrammarPoolImpl0);
      cachingParserPool_ShadowedGrammarPool0.unlockPool();
      xMLGrammarPoolImpl0.clear();
      xMLGrammarPoolImpl0.lockPool();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool0 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool1 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl0);
      xMLGrammarPoolImpl0.lockPool();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool2 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_ShadowedGrammarPool0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool3 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool2);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool1 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_ShadowedGrammarPool0);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool2 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool2);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool4 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_ShadowedGrammarPool0);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool5 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool4);
      cachingParserPool_SynchronizedGrammarPool5.lockPool();
      XMLGrammarPoolImpl xMLGrammarPoolImpl1 = new XMLGrammarPoolImpl((byte)17);
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool6 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool3);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool3 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool3);
      XMLGrammarPoolImpl xMLGrammarPoolImpl2 = new XMLGrammarPoolImpl();
      XSDDescription xSDDescription0 = new XSDDescription();
      xSDDescription0.makeClone();
      SchemaGrammar.Schema4Annotations schemaGrammar_Schema4Annotations0 = new SchemaGrammar.Schema4Annotations();
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool4 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool1);
      XMLGrammarPoolImpl xMLGrammarPoolImpl3 = new XMLGrammarPoolImpl();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool7 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool0);
      XMLGrammarPoolImpl xMLGrammarPoolImpl4 = new XMLGrammarPoolImpl();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool8 = new CachingParserPool.SynchronizedGrammarPool(xMLGrammarPoolImpl1);
      cachingParserPool_SynchronizedGrammarPool3.lockPool();
      CachingParserPool.SynchronizedGrammarPool cachingParserPool_SynchronizedGrammarPool9 = new CachingParserPool.SynchronizedGrammarPool(cachingParserPool_SynchronizedGrammarPool4);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool5 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_ShadowedGrammarPool2);
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool6 = new CachingParserPool.ShadowedGrammarPool(cachingParserPool_SynchronizedGrammarPool9);
      assertFalse(cachingParserPool_ShadowedGrammarPool6.equals((Object)cachingParserPool_ShadowedGrammarPool0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-325), 10, (-325));
      mockDate0.before(mockDate1);
      Message message0 = new Message((Object) null, false);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      SOAPPart sOAPPart0 = new SOAPPart(message0, "S]l8p", false);
      Handler handler0 = new Handler();
      org.apache.axis.transport.jms.Handler handler1 = new org.apache.axis.transport.jms.Handler();
      URL uRL0 = MockURL.URL("R*Ul", "application/xop+xml", 10, "org.apache.axis.attachments.AttachmentsImpl", (URLStreamHandler) handler1);
      DataHandler dataHandler0 = new DataHandler(uRL0);
      AttachmentPart attachmentPart0 = new AttachmentPart(dataHandler0);
      Document document0 = sOAPPart0.getSOAPDocument();
      recordTypeMessage0.setResponseDocument(document0, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      
      recordTypeMessage0.setShortname("0");
      recordTypeMessage0.getResponseText();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      recordTypeMessage0.getResponseObject();
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/Provider 0Provider ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("");
      mockFile0.setExecutable(true, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)78;
      mockFile0.toPath();
      mockFile0.toPath();
      mockFile0.toURL();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/Provider 0Provider ");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "");
      MockFile mockFile1 = new MockFile((File) null, "Proyvider ");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray1 = new byte[1];
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = ByteArrayList.createByteArrayList(byteArray1, 18);
      byteArrayList2.add(byteArray1);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockDate mockDate0 = new MockDate(512, 512, 512, 512, 512);
      File file0 = MockFile.createTempFile("FH&MK", "FH&MK", (File) null);
      file0.toPath();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.markSupported();
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)100;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte) (-116);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte) (-20);
      mockFileInputStream0.read(byteArray0);
      mockFileInputStream0.markSupported();
      mockFileInputStream0.release();
      mockFileInputStream0.close();
      mockFileInputStream0.close();
      mockFileInputStream0.mark(512);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("FH&MK", (XBUSSystem) null, "6");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.iterator();
      byteArrayList0.iterator();
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = MockFile.createTempFile("Provider ", "Provider ", (File) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/Provider 0Provider ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      file0.getCanonicalPath();
      mockFileInputStream0.mark((-1));
      MockFile mockFile0 = new MockFile("");
      mockFile0.toURL();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/Provider 0Provider ");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "");
      MockFile mockFile1 = new MockFile((File) null, "Provider ");
      mockFileInputStream0.mark((-1478));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[1];
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = ByteArrayList.createByteArrayList(byteArray0, 18);
      byteArrayList2.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("|w'--4&f4vGY;^FsmZ", (XBUSSystem) null, "yN;'/DG&)&f}h-lW");
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }
}
