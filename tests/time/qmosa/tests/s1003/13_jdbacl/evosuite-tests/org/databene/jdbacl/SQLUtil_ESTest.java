/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:11:34 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.io.UnsupportedEncodingException;
import java.util.List;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.store.raw.xact.ConcurrentXactFactory;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.h2.jdbcx.JdbcDataSource;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.722663296950939
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("insert");
      dBSchema0.getTable("insert");
      DBDataType dBDataType0 = DBDataType.getInstance((-2), "update(");
      Integer integer0 = new Integer((-2));
      Integer integer1 = new Integer((-2));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("insert", (DBTable) null, dBDataType0, integer0, integer1);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.mutatesStructure("drop materialized viewzchf{(9939;");
      SQLUtil.isProcedureCall("T6");
      SQLUtil.mutatesDataOrStructure("updatezchf{(9939;");
      SQLUtil.normalize("T6", false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "drop materialized viewzchf{(9939;";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "update(";
      objectArray0[3] = (Object) "T6";
      objectArray0[4] = (Object) "drop materialized viewzchf{(9939;";
      objectArray0[5] = (Object) integer0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "drop tableorg.hsqldb.lib.hsqlarraylist";
      String string1 = "Dj?Tv*!@(f1E.";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "drop tableorg.hsqldb.lib.hsqlarraylist";
      stringArray0[1] = "Dj?Tv*!@(f1E.";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("drop tableorg.hsqldb.lib.hsqlarraylist", (String[]) null, "Dj?Tv*!@(f1E.", "drop tableorg.hsqldb.lib.hsqlarraylist", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringBuilder stringBuilder0 = new StringBuilder((byte)6);
      SQLUtil.addRequiredCondition("MRw", stringBuilder0);
      // Undeclared exception!
      SQLUtil.mutatesStructure("j/*Sb0C9-a1");
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5732052067491771
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "#_}j/9/igIK";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#_}j/9/igIK";
      stringArray0[1] = "#_}j/9/igIK";
      stringArray0[2] = "#_}j/9/igIK";
      Character character0 = new Character(']');
      boolean boolean0 = false;
      SQLUtil.normalize("#_}j/9/igIK", false);
      String string1 = "z$q6[";
      DBSchema dBSchema0 = new DBSchema("#_}j/9/igIK");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("z$q6[", dBSchema0);
      int int0 = (-1346);
      DBDataType dBDataType0 = DBDataType.getInstance((-1346), "z$q6[");
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("#_}j/9/igIK", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0935120434829841
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "delete)[qlo/(v";
      stringArray0[1] = "delete)[qlo/(v";
      stringArray0[2] = "delete)[qlo/(v";
      stringArray0[3] = "delete)[qlo/(v";
      stringArray0[4] = "delete)[qlo/(v";
      stringArray0[5] = "delete)[qlo/(v";
      stringArray0[6] = "delete)[qlo/(v";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLUtil.leftJoin("delete)[qlo/(v", stringArray0, "delete)[qlo/(v", "delete)[qlo/(v", stringArray0);
      String string0 = "getBlob(int)";
      SQLUtil.normalize("getBlob(int)", true);
      SQLUtil.leftJoin("C(XwP!fCCl:h", stringArray0, "execute", "delete)[qlo/(v", stringArray0);
      String string1 = "sj[3jRu\"H3`D?]tN;+C";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        DBDataType.getInstance("delete)[qlo/(v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4560362312951631
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "{g<N]d\\nsf";
      String string1 = "7<lat[>Ba*BA&{.";
      SQLUtil.normalize("7<lat[>Ba*BA&{.", false);
      String string2 = "alter materialized viewv]u\"2|&ch^:?h*";
      SQLUtil.isQuery("alter materialized viewv]u\"2|&ch^:?h*");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{g<N]d\nsf";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      TableContainer tableContainer0 = new TableContainer("7CfqnWp$");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte) (-50);
      tableContainer0.getSchema();
      byteArray0[2] = (byte)80;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLUtil.isDML("7CfqnWp$");
      tableContainer0.getTable("deletev]u\"2|&ch^:?h*");
      DBDataType dBDataType0 = DBDataType.getInstance(3572, "drop index");
      Integer integer0 = new Integer(3572);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("7 < lat [ > Ba * BA & {.", (DBTable) null, dBDataType0, integer0, integer0);
      defaultDBColumn0.getNotNullConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.174945124132999
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      boolean boolean0 = SQLUtil.isQuery(")[qlO/(v");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("selectgetobjectinstance obj=");
      assertNotNull(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3265171534282083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("rmi!q1Y9Nf");
      SQLUtil.isDML("rmi!q1Y9Nf");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "V]u\"2|&cH^:?H*";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "rmi!q1Y9Nf";
      stringArray1[1] = "T4CZv'g1L4.5=|f=";
      stringArray1[2] = "rmi!q1Y9Nf";
      stringArray1[3] = "rename";
      // Undeclared exception!
      try { 
        SQLUtil.join("V]u\"2|&cH^:?H*", "V]u\"2|&cH^:?H*", stringArray0, "{g<n]d\nsf", "select intow >k.d<\"ium", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8311040164613575
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("W[sh^^(Q)\"%5wGC>6");
      SQLUtil.isQuery("");
      VersionNumber.valueOf("Y=Dn\"4Lx&Xk VDm :PP");
      SQLUtil.mutatesDataOrStructure("w >k.D<\"IUm");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "W[sh^^(Q)\"%5wGC>6";
      stringArray0[2] = "LQ_0A-b";
      stringArray0[3] = "B($v";
      stringArray0[4] = "W[sh^^(Q)\"%5wGC>6";
      stringArray0[5] = "selectexecuteerror rolling back prepared transactiln";
      stringArray0[6] = "";
      stringArray0[7] = "alter materialized viewwhere";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("B($v", false, dBUniqueConstraint0);
      dBUniqueIndex0.setOwner(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      Object object0 = new Object();
      String string1 = SQLUtil.renderValue(object0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[3];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "CBkj_&C";
      SQLUtil.isProcedureCall("CBkj_&C");
      SQLUtil.isQuery("CBkj_&C");
      VersionNumber.valueOf("org.firebirdsql.jdhc.AbstractConnection");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      String string1 = "org.databene.jdbacl.SQLUtil";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("create materialized view{g<n]d\nsf");
      DBDataType dBDataType0 = DBDataType.getInstance((-184951332), "UYLI_");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{TN", (DBTable) null, dBDataType0, integer0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("{TN", "exec", (VersionNumber) null);
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("{TN, {TN", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7528643275161198
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("{g<N]d\nsf");
      assertFalse(boolean0);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";L\"'9:~=?di:=A,-OA");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)99;
      byteArray0[4] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(";L\"'9:~=?di:=A,-OA");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "truncate";
      stringArray0[1] = ";L\"'9:~=?di:=A,-OA";
      stringArray0[2] = "NCLOB";
      stringArray0[3] = "truncate";
      stringArray0[4] = "N~4C4W5d50";
      stringArray0[5] = "UYLI_";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("N~4C4W5d50", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      FKChangeRule fKChangeRule0 = FKChangeRule.CASCADE;
      dBForeignKeyConstraint0.setUpdateRule(fKChangeRule0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT N~4C4W5d50 FOREIGN KEY (truncate, ;L\"'9:~=?di:=A,-OA, NCLOB, truncate, N~4C4W5d50, UYLI_, ) REFERENCES ;L\"'9:~=?di:=A,-OA(truncate, ;L\"'9:~=?di:=A,-OA, NCLOB, truncate, N~4C4W5d50, UYLI_, )", string0);
      
      DBDataType dBDataType0 = DBDataType.getInstance((-184951332), "truncate");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(";L\"'9:~=?di:=A,-OA", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.isEquivalent(defaultDBTable0);
      String string1 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals(";L\"'9:~=?di:=A,-OA TRUNCATE(2) NULL", string1);
      
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec1);
      assertEquals("CONSTRAINT N~4C4W5d50 ", stringBuilder0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.005057863835706
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = new Boolean("}i/V['yFLg%O3G&");
      SQLUtil.isQuery("}i/V['yFLg%O3G&");
      VersionNumber versionNumber0 = VersionNumber.valueOf("org.firebirdsql.jdbc.AbstractConnection");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("org.firebirdsql.jdbc.AbstractConnection", "}i/V['yFLg%O3G&", versionNumber0);
      SQLUtil.mutatesDataOrStructure("Error rolling back prepared transactiln");
      System.setCurrentTimeMillis((-2084L));
      SQLUtil.normalize("}i/V['yFLg%O3G&", true);
      DBCatalog dBCatalog0 = new DBCatalog("alter index", defaultDatabase0);
      dBCatalog0.getSchema("Error rolling back prepared transactiln");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("}i/V['yFLg%O3G&", (DBSchema) null);
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder(1586);
      StringBuilder stringBuilder1 = stringBuilder0.append((-2084L));
      StringBuilder stringBuilder2 = stringBuilder1.append((Object) dBCatalog0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder2, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.810795917431007
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{g<N]d\nsf";
      stringArray0[1] = "{g<N]d\nsf";
      stringArray0[2] = "{g<N]d\nsf";
      stringArray0[3] = "{g<N]d\nsf";
      stringArray0[4] = "{g<N]d\nsf";
      SQLUtil.isQuery("{g<N]d\nsf");
      VersionNumber.valueOf("Y=Dn\"4Lx&Xk VDm :PP");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("getObjectInstance obj=");
      assertNull(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "getObjectInstance obj=", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY ({g<N]d\nsf, {g<N]d\nsf, {g<N]d\nsf, {g<N]d\nsf, {g<N]d\nsf, , , )", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "insert";
      SQLUtil.isDDL("insert");
      Character character0 = new Character('3');
      SQLUtil.renderValue(character0);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4435205301487466
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("W[sh^^(Q)\"%5wGC>6");
      SQLUtil.isQuery("");
      VersionNumber.valueOf("Y=Dn\"4Lx&Xk VDm :PP");
      SQLUtil.mutatesDataOrStructure("w >k.D<\"IUm");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("B($v");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V]u\"2|&cH^:?H*");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("V]u\"2|&cH^:?H*");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "V]u\"2|&cH^:?H*";
      stringArray0[1] = "V]u\"2|&cH^:?H*";
      stringArray0[2] = "hE/NykM#]u3k:.nUI";
      stringArray0[3] = "hE/NykM#]u3k:.nUI";
      stringArray0[4] = "hE/NykM#]u3k:.nUI";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("hE/NykM#]u3k:.nUI", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder("hE/NykM#]u3k:.nUI");
      StringBuilder stringBuilder1 = stringBuilder0.append('t');
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "hE/NykM#]u3k:.nUI");
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder2);
      SQLUtil.addRequiredCondition("org.firebi", stringBuilder1);
      assertEquals("hE/NykM#]u3k:.nUIthE/NykM#]u3k:.nUICONSTRAINT hE/NykM#]u3k:.nUI  and org.firebi", stringBuilder1.toString());
      assertEquals("hE/NykM#]u3k:.nUIthE/NykM#]u3k:.nUICONSTRAINT hE/NykM#]u3k:.nUI  and org.firebi", stringBuilder0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9471865956069645
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "CBk1_~VC";
      SQLUtil.isProcedureCall("CBk1_~VC");
      SQLUtil.isQuery("CBk1_~VC");
      SQLUtil.isDDL("org.firebirdsql.jdhc.AbstractConnection");
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)47;
      byteArray0[0] = (byte)47;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)56;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CBk1_~VC";
      stringArray0[1] = "alter table";
      stringArray0[2] = "org.apache.derby.iapi.types.DataValueDescriptor[]";
      stringArray0[3] = "CBk1_~VC";
      stringArray0[4] = "SELECT * FROM ";
      SQLUtil.renderColumnListWithTableName("alter table", stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V]u\"2|&cH^:?H*");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "V]u\"2|&cH^:?H*";
      SQLUtil.leftJoin("alter table", stringArray0, "alter table", "Q", stringArray0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLoginTimeout();
      jdbcDataSource0.getLogWriter();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) constraintDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1096871042576624
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("CBk1_~VC");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      String string0 = SQLUtil.normalize("GA)0", false);
      assertEquals("GA) 0", string0);
      
      boolean boolean1 = SQLUtil.isQuery("drop materialized viewcreate uniqce jndex{g<n]^\nsf");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.290664210654739
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.isProcedureCall("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean0 = true;
      SQLUtil.normalize("", true);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.join((String) null, "()", stringArray0, (String) null, "", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      List<DBColumn> list0 = defaultDBTable0.getColumns();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "}i/V['yFLg%O3G&";
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SQLUtil.isQuery("GCf<$Rw");
      VersionNumber.valueOf("into");
      VersionNumber versionNumber0 = VersionNumber.valueOf("GCf<$Rw");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("into", "QL35]TtJ>'3;fh}", versionNumber0);
      defaultDatabase0.getTable("L", false);
      Boolean boolean0 = new Boolean(false);
      StringBuilder stringBuilder0 = new StringBuilder(1859);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "updated}b>=!<|}2t|e%";
      stringArray0[1] = "GCf<$Rw";
      stringArray0[2] = "$8%L1!5oQ@vdW~(6h}b";
      stringArray0[3] = "{";
      stringArray0[4] = "QL35]TtJ>'3;fh}";
      stringArray0[5] = "org.apache.derby.iapi.services.daemon.DaemonFactory";
      SQLUtil.renderColumnListWithTableName("updated}b>=!<|}2t|e%", stringArray0);
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      assertEquals("null", stringBuilder0.toString());
      
      String string0 = SQLUtil.typeAndName(defaultDatabase0);
      assertEquals("database into", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.340246977733923
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SQLUtil.mutatesStructure("{g<N]d\nsf");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{g<N]d\nsf";
      SQLUtil.isDML("{g<N]d\nsf");
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isDDL("delete");
      DBColumn[] dBColumnArray0 = new DBColumn[2];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("{g<N]d\nsf", defaultDBTable0, (-324182520), "({g<N]d\nsf, , , , , , , )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"{g<N]d
         // sf\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("rmi!q1Y9Nf");
      SQLUtil.isDML("rmi!q1Y9Nf");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "V]u\"2|&cH^:?H*";
      stringArray0[1] = "rmi!q1Y9Nf";
      stringArray0[2] = "V]u\"2|&cH^:?H*";
      stringArray0[3] = "rmi!q1Y9Nf";
      stringArray0[4] = "V]u\"2|&cH^:?H*";
      stringArray0[5] = "rmi!q1Y9Nf";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.isDDL("org.hsqldb.lib.HsqlArrayList");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("V]u\"2|&cH^:?H*", defaultDBTable0, (-324182520), "X0R(GNI");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: X0R(GNI
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V]u\"2|&cH^:?H*");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("V]u\"2|&cH^:?H*");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "V]u\"2|&cH^:?H*";
      stringArray0[1] = "V]u\"2|&cH^:?H*";
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("}W*svA~hjdT ", "alter materialized viewcreate uniqce jndex{g<n]^\nsf", (VersionNumber) null);
      Object object0 = new Object();
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      Object object1 = new Object();
      vector0.ensureCapacity(10);
      vector0.removeElement("alter materialized viewcreate uniqce jndex{g<n]^\nsf");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SQLUtil.isProcedureCall("create table{g<n]d\nsf");
      SQLUtil.isQuery("create materialized vieworg.firebirdsql.jdhc.abstractconnection");
      VersionNumber.valueOf("create table{g<n]d\nsf");
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("create materialized view{g<n]d\nsf");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)108;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringBuilder stringBuilder0 = new StringBuilder((byte)6);
      StringBuffer stringBuffer0 = new StringBuffer((byte)108);
      stringBuilder0.append(stringBuffer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("UYLI_", stringBuilder0);
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)52, "select");
      Integer integer0 = new Integer((byte)52);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("select", (DBTable) null, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("UYLI_SELECT(52)", stringBuilder1.toString());
      assertEquals("UYLI_SELECT(52)", stringBuilder0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4486869174985209
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SQLUtil.isProcedureCall("create table{g<n]d\nsf");
      SQLUtil.isDDL("create unique index{g<n]d\nsf");
      StringBuilder stringBuilder0 = new StringBuilder();
      TableContainer tableContainer0 = new TableContainer("create table{g<n]d\nsf", (CompositeDBObject<? extends DBObject>) null);
      // Undeclared exception!
      try { 
        tableContainer0.removeTable((DBTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.TableContainerSupport", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2317293714609683
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("rmi!q1Y9Nf");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("Ww!2R\"D{");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "Ww!2R\"D{", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      String[] stringArray0 = new String[8];
      stringArray0[1] = "CKY/7GrX]1Rp5";
      stringArray0[2] = "(";
      stringArray0[3] = "PRIMARY KEY ()";
      stringArray0[4] = "rmi!q1Y9Nf";
      stringArray0[5] = "rmi!q1Y9Nf";
      stringArray0[6] = "(";
      stringArray0[7] = "Ww!2R\"D{";
      SQLUtil.renderQuery(defaultDBTable1, stringArray0, stringArray0);
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        DBDataType.getInstance("&TBT_.4zM^!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SQLUtil.isQuery("s Kow8H5d63RgY4+(gd");
      SQLUtil.isQuery("_\"ivv%XQIY\"");
      SQLUtil.renderValue("_\"ivv%XQIY\"");
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("--", stringArray0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = "update";
      stringArray1[1] = "{g<n]d\nsf";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "s Kow8H5d63RgY4+(gd";
      stringArray1[5] = "";
      stringArray1[6] = "--";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "CBk1_~VC";
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6396316382218536
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SQLUtil.isQuery("W[sh^^(Q)\"%5wGC>6");
      VersionNumber.valueOf("//");
      SQLUtil.mutatesDataOrStructure("w >k.d<\"");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("select into", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.56807203446893
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V]u\"2|&cH^:?H*");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[1] = "V]u\"2|&cH^:?H*";
      stringArray0[2] = ")[qlO/(v";
      stringArray0[3] = ")[qlO/(v";
      SQLUtil.isQuery("selectgetobjectinstance obj=");
      SQLUtil.mutatesDataOrStructure(")[qlO/(v");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("V]u\"2|&cH^:?H*", (String) null, defaultDBTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2526353911992865
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "{g<N]d\\nsf";
      SQLUtil.mutatesStructure("{g<N]d\nsf");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{g<N]d\nsf";
      stringArray0[1] = "{g<N]d\nsf";
      stringArray0[2] = "{g<N]d\nsf";
      stringArray0[3] = "{g<N]d\nsf";
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      String string1 = "FOREIGN KEY ";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "2D[";
      stringArray1[1] = "FOREIGN KEY ";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin(" P WHERE ", stringArray0, "m2o", "FOREIGN KEY ", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[1];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("CBk1_~VC", compositeDBObject0);
      tableContainer0.getTable("|=FE<*z.Jp<67avSI");
      DBDataType dBDataType0 = DBDataType.getInstance((-2023099607), "CBk1_~VC");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop table", (DBTable) null, dBDataType0);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("CBK1_~VC", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("W[sh^^(Q)\"%5wGC>6");
      String[] stringArray0 = null;
      TableContainer tableContainer0 = new TableContainer("HQ*sinW5$!X)(3", defaultDBTable0);
      tableContainer0.getTable("W[sh^^(Q)\"%5wGC>6");
      tableContainer0.getComponents();
      String string0 = "MOg4L!5#+JJVy.(/ ";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("HQ*sinW5$!X)(3");
      tableContainer0.setDoc("W[sh^^(Q)\"%5wGC>6");
      SQLUtil.removeComments("drop materialized viewcbk1_~vc");
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "drop materialized viewcbk1_~vc", (String[]) null, "W[sh^^(Q)\"%5wGC>6", "2)Zp1", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(compositeDBObject0).getName();
      doReturn((String) null).when(compositeDBObject0).getObjectType();
      SQLUtil.typeAndName(compositeDBObject0);
      String string0 = "create materialized view{g<n]d\\nsf";
      DBSchema dBSchema0 = new DBSchema("create materialized view{g<n]d\nsf");
      String string1 = "create uniqce jndex{g<";
      File file0 = FileUtil.canonicalFile("null null");
      File file1 = MockFile.createTempFile("create uniqce jndex{g<", "create uniqce jndex{g<", file0);
      File file2 = FileUtil.canonicalFile(file1);
      MockFile mockFile0 = new MockFile("@(");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("@(", (String) null, file2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SQLUtil.renderValue((Object) null);
      String[] stringArray0 = new String[8];
      stringArray0[1] = "null";
      stringArray0[4] = "null";
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer((String) null, compositeDBObject0);
      TableContainer tableContainer1 = new TableContainer(stringArray0[3]);
      SQLUtil.isProcedureCall("callerror rolling back prepared transaction");
      // Undeclared exception!
      try { 
        tableContainer1.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.TableContainer", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.3309068333774414
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VersionNumber.valueOf("W[sh^^(Q)\"%5wGC>6");
      SQLUtil.mutatesDataOrStructure("execute");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isQuery(":9B'ot#pkX%44qp0NF");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "execute", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", true, dBPrimaryKeyConstraint0);
      SQLUtil.isQuery("");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(":9B'ot#pkX%44qp0NF");
      assertNull(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4896652430818107
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SQLUtil.isProcedureCall("CBk1_~VC");
      SQLUtil.isQuery("CBk1_~VC");
      VersionNumber.valueOf("org.firebirdsql.jdhc.AbstractConnection");
      VersionNumber.valueOf("org.firebirdsql.jdhc.AbstractConnection");
      Boolean boolean0 = new Boolean(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringBuilder stringBuilder0 = new StringBuilder(1853);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "updated}b>=!<|}2t|e%";
      stringArray0[1] = "org.firebirdsql.jdhc.AbstractConnection";
      stringArray0[2] = "M5,K.kI=";
      stringArray0[3] = "CBk1_~VC";
      Character character0 = Character.valueOf('i');
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) character0);
      stringArray0[4] = "updated}b>=!<|}2t|e%";
      SQLUtil.renderColumnListWithTableName("org.firebirdsql.jdhc.AbstractConnection", stringArray0);
      SQLUtil.addOptionalCondition("org.firebirdsql.jdhc.AbstractConnection", stringBuilder1);
      assertEquals("i or org.firebirdsql.jdhc.AbstractConnection", stringBuilder1.toString());
      
      String string0 = SQLUtil.normalize("M5,K.kI=", false);
      assertEquals("M5, K.kI =", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#_}j/9/igIK";
      stringArray0[1] = "#_}j/9/igIK";
      stringArray0[2] = "#_}j/9/igIK";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#_}j/9/igIK");
      defaultDBTable0.getUniqueConstraint(stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "MRw");
      SQLUtil.addRequiredCondition("select into", stringBuilder0);
      assertEquals("MRw and select into", stringBuilder0.toString());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SQLUtil.substituteMarkers("z", "z", "z");
      SQLUtil.substituteMarkers("", "z", "z");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#_}j/9/igIK";
      stringArray0[1] = "#_}j/9/igIK";
      stringArray0[2] = "#_}j/9/igIK";
      VersionNumber versionNumber0 = VersionNumber.valueOf("#_}j/9/igIK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i{QLq/\u0005\"=(7Ys");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("5h&r?Psc~r:#", "E_t'`CN&_,iD", versionNumber0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = null;
      SQLUtil.renderColumnNames((String[]) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("()", (String[]) null, "", "()", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, 235, "SIGNUM");
      defaultDBColumn0.getForeignKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V]u\"2|&cH^:?H*");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[5];
      SQLUtil.join("^Aw:QMK3%~BSNVl5hK", "V]u\"2|&cH^:?H*", stringArray0, "^Aw:QMK3%~BSNVl5hK", "U|~eaYq[&zyx-}&dp=E", stringArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("6rVM xBvN");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable(")[qlO/(v");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(")[qlO/(v", "updatermi!q1y9nf");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // updatermi!q1y9nf
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = "rename";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "T4CZv'g1L4.5=|f=";
      SQLUtil.join("rename", "T4CZv'g1L4.5=|f=", stringArray0, "rename", "T4CZv'g1L4.5=|f=", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" DEFAULT ");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("T4CZv'g1L4.5=|f=");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("F8d.@a%b1q~aD", " DEFAULT ");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         //  DEFAULT 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("rmi!q1Y9Nf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V]u\"2|&cH^:?H*");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("h+OX7?:");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "truncate";
      stringArray0[1] = "truncate";
      stringArray0[2] = "V]u\"2|&cH^:?H*";
      stringArray0[3] = "h+OX7?:";
      stringArray0[4] = "h+OX7?:";
      stringArray0[5] = "h+OX7?:";
      stringArray0[6] = "h+OX7?:";
      stringArray0[7] = "NCLOB";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("truncate", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (truncate, truncate, V]u\"2|&cH^:?H*, h+OX7?:, h+OX7?:, h+OX7?:, h+OX7?:, NCLOB) REFERENCES h+OX7?:(truncate, truncate, V]u\"2|&cH^:?H*, h+OX7?:, h+OX7?:, h+OX7?:, h+OX7?:, NCLOB)", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("V]u\"2|&cH^:?H*");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "V]u\"2|&cH^:?H*";
      stringArray0[1] = "V]u\"2|&cH^:?H*";
      stringArray0[2] = "hE/NykM#]u3k:.nUI";
      stringArray0[3] = "hE/NykM#]u3k:.nUI";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "VZ3x={q~3yN0", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      assertEquals("UNIQUE (V]u\"2|&cH^:?H*, V]u\"2|&cH^:?H*, hE/NykM#]u3k:.nUI, hE/NykM#]u3k:.nUI, )", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "drop tablew >k.d<\"ium";
      stringArray0[1] = "drop tablew >k.d<\"ium";
      stringArray0[2] = "drop tablew >k.d<\"ium";
      Character.valueOf(']');
      SQLUtil.normalize("drop tablew >k.d<\"ium", false);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConcurrentXactFactory concurrentXactFactory0 = new ConcurrentXactFactory();
      // Undeclared exception!
      try { 
        concurrentXactFactory0.makeNewUUID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.XactFactory", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("drop table");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(4);
      SQLUtil.addOptionalCondition("W[sh^^(Q)\"%5wGC>6", stringBuilder0);
      assertEquals("W[sh^^(Q)\"%5wGC>6", stringBuilder0.toString());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "#_}j/9/igIK";
      Character.valueOf(']');
      // Undeclared exception!
      try { 
        SQLUtil.normalize(stringArray0[2], false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = "GA0";
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.4359838465843624
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = "Lt`tYQ6kdnl`bp K0Z[";
      SQLUtil.mutatesDataOrStructure("Lt`tYQ6kdnl`bp K0Z[");
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition((String) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.568155382556487
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("Lt`tYQ6kdnl`bp K0Z[");
      DBSchema dBSchema0 = new DBSchema("Lt`tYQ6kdnl`bp K0Z[");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("b 49:,23]", dBSchema0);
      String string0 = "PRIMARY KEY ";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("PRIMARY KEY ", (String[]) null, "Lt`tYQ6kdnl`bp K0Z[", " and ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.359448491291874
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SQLUtil.mutatesStructure("{g<N]d\nsf");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "{g<N]d\nsf";
      stringArray0[2] = "{g<N]d\nsf";
      stringArray0[3] = "{g<N]d\nsf";
      stringArray0[4] = "{g<N]d\nsf";
      stringArray0[5] = "CKY/7GrX]1Rp5";
      stringArray0[6] = "{g<N]d\nsf";
      stringArray0[7] = "{g<N]d\nsf";
      SQLUtil.innerJoin("{g<N]d\nsf", stringArray0, " NULL", "/Cy;g< [.R4H]rRfz", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      Character character0 = Character.valueOf('T');
      Character.isSurrogate('T');
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("CKY/7GrX]1Rp5", stringArray0[1], character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.9663267452196522
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SQLUtil.mutatesStructure("");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("_NOT_NULL", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.4313438932829745
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "delete";
      stringArray0[1] = "delete";
      stringArray0[2] = "delete";
      Character.valueOf('X');
      SQLUtil.renderColumnListWithTableName("delete", stringArray0);
      SQLUtil.normalize("delete", false);
      VersionNumber versionNumber0 = VersionNumber.valueOf("alter materialized viewdelete");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("delete", "NCLOB", versionNumber0);
      DBConstraint dBConstraint0 = null;
      String string0 = "r\\8i-^=fN;*\"";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("&DGNFs`'/'}cu|`72o\"");
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("d/q@OsJ;J Q(k:&1ec", "d/q@OsJ;J Q(k:&1ec", versionNumber0);
      assertFalse(defaultDatabase0.isImportedChecks());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("import java.util.*;\nimport java.math.*;\nimport java.sql.*;\n");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("import java.util.*;\nimport java.math.*;\nimport java.sql.*;\n", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      DBColumn[] dBColumnArray0 = new DBColumn[6];
      DBDataType dBDataType0 = DBDataType.getInstance(5, "");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("CONSTRAINT \"import java.util.*;\nimport java.math.*;\nimport java.sql.*;\n\" FOREIGN KEY () REFERENCES import java.util.*;\nimport java.math.*;\nimport java.sql.*;\n()", defaultDBTable0, dBDataType0, integer0, integer1);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String string0 = null;
      // Undeclared exception!
      try { 
        defaultDBTable1.getColumn((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'null' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("W[sh^^(Q)\"%5wGC>6");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("W[sh^^(Q)\"%5wGC>6", dBSchema0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "tFtH[Y4}lf3";
      stringArray0[1] = "create unique indexorg.firebirdsql.jdhc.abstractconnection";
      stringArray0[2] = "(";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "W[sh^^(Q)\"%5wGC>6", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT W[sh^^(Q)\"%5wGC>6 PRIMARY KEY (tFtH[Y4}lf3, create unique indexorg.firebirdsql.jdhc.abstractconnection, ()", string0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#_}j/9/igIK";
      stringArray0[1] = "#_}j/9/igIK";
      stringArray0[2] = "#_}j/9/igIK";
      Character.valueOf(']');
      DBCatalog dBCatalog0 = new DBCatalog((String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      dBForeignKeyConstraint0.toString();
      DBForeignKeyConstraint dBForeignKeyConstraint1 = new DBForeignKeyConstraint("#_}j/9/igIK", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("s(");
      StringBuilder stringBuilder1 = stringBuilder0.append(']');
      stringBuilder1.append((CharSequence) ",i:");
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      assertEquals("s(],i:", stringBuilder0.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String[] stringArray0 = null;
      SQLUtil.renderColumnNames((String[]) null);
      SQLUtil.removeComments("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getForeignKeyConstraints();
      String string0 = " as ";
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint(" as ", true, "", "CLOB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = "create uniqCe jndex{g<n]^\\nsf";
      SQLUtil.isDDL("create uniqCe jndex{g<n]^\nsf");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("create uniqCe jndex{g<n]^\nsf", "create uniqCe jndex{g<n]^\nsf");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // create uniqCe jndex{g<n]^
         // sf
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9619408850766493
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "alter table;yg4h>st$wtge";
      stringArray0[1] = "wZx_J";
      stringArray0[2] = "alter table;yg4h>st$wtge";
      stringArray0[3] = "wZx_J";
      stringArray0[4] = "wZx_J";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "wZx_J");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("wZx_J");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("alter table;yg4h>st$wtge", "7B#_;Yu`<wHD{gko");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 7B#_;Yu`<wHD{gko
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.544943664690598
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("CBk1_~VC");
      assertFalse(boolean0);
      
      SQLUtil.isQuery("CBk1_~VC");
      VersionNumber versionNumber0 = VersionNumber.valueOf("org.firebirdsql.jdbc.AbstractConnection");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("org.firebirdsql.jdbc.AbstractConnection", "CBk1_~VC", versionNumber0);
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("Error rolling back prepared transaction");
      assertNull(boolean1);
      
      String string0 = SQLUtil.substituteMarkers("D\"p6n]p5G^!", "org.apache.derby.impl.sql.compile.TableOperatorNode", "org.firebird");
      assertEquals("D\"p6n]p5G^!", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      constraintDescriptorList0.add((Object) "alter materialized view");
      VersionNumber versionNumber0 = new VersionNumber(constraintDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("'ALTER'", "alter materialized view", versionNumber0);
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("create materialized view{g<n]d\nsf");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBDataType dBDataType0 = DBDataType.getInstance((-184951332), "UYLI_");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{TN", (DBTable) null, dBDataType0, integer0);
      defaultDBColumn0.isEquivalent(dBSchema0);
      SQLUtil.renderColumn(defaultDBColumn0);
      Integer.remainderUnsigned((-3866), (-87498158));
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "{TN UYLI_(2) NULL";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("create materialized view{g<n]d\nsf");
      DBDataType dBDataType0 = DBDataType.getInstance((-184951332), "UYLI_");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      dBDataType0.isNumber();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("{TN", (DBTable) null, dBDataType0, integer0);
      dBDataType0.isNumber();
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("{TN", "exec", (VersionNumber) null);
      File file0 = FileUtil.canonicalFile("create materialized view{g<n]d\nsf");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      mockFileOutputStream0.release();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("selectt4czv'g1l4.5=|f=");
      mockFileOutputStream0.release();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      assertEquals("table", defaultDBTable0.getObjectType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SQLUtil.typeAndName((DBObject) null);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(4);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("W[sh^^(Q)\"%5wGC>6", "getobjectins", (VersionNumber) null);
      String string0 = SQLUtil.ownerDotComponent(defaultDatabase0);
      assertEquals("W[sh^^(Q)\"%5wGC>6", string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("Lt`tYQ6kdnl`lK K0Z [");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTransactionExecute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#_}j/9/igIK";
      stringArray0[1] = "#_}j/9/igIK";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("#_}j/9/igIK");
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      DBSchema dBSchema0 = new DBSchema("org.apache.derby.iapi.sql.dictionary.SequenceDescriptor");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      int int0 = 25;
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider(25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 25, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
