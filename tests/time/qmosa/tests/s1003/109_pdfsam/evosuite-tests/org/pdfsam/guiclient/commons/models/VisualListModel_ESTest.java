/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:37:00 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.renderable.ParameterBlock;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.time.chrono.ChronoLocalDate;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.event.AncestorListener;
import javax.swing.event.ListDataEvent;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2408792083179905
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = (-1);
      intArray0[2] = 312;
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getListDataListeners();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel2.addElementAt((VisualPageListItem) null, 312);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel1.rotateClockwiseElements(intArray0);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8618650377696493
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      Hashtable<RenderingHints.Key, RenderingHints.Key> hashtable0 = new Hashtable<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      BiFunction<Object, Object, ChronoLocalDate> biFunction0 = (BiFunction<Object, Object, ChronoLocalDate>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      renderingHints0.replaceAll(biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.moveUpIndexes(intArray0);
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      hashtable1.put(sunHints_Key0, "");
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 2251;
      floatArray0[1] = 0.95F;
      floatArray0[2] = (float) (-1787);
      floatArray0[3] = (float) 2814;
      floatArray0[4] = (float) (-1787);
      floatArray0[5] = (float) 2251;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(2251, (-1787), floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6871079677498235
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 5000;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.removeElements(intArray0, false);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 5000;
      floatArray0[1] = (float) 5000;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints1 = new RenderingHints(hashtable0);
      Object object0 = new Object();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>(10, 5000.0F);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel1 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel1.addListDataListener(jComboBox0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel1.prependAllElements(vector0);
      visualListModel1.getElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 5000
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1331337395597156
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer[] integerArray0 = new Integer[2];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveDownIndex((int) integerArray0[1]);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.429871678186767
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1397850293099174
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(2391, (Collection<VisualPageListItem>) linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8885995049191862
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int int0 = (-1);
      intArray0[0] = (-1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.setData(vector0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = (-177);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer.compareUnsigned((-389), (-447));
      Integer.compareUnsigned((-236), (-2010));
      integerArray0[1] = integer1;
      Integer integer2 = Integer.getInteger("", (int) integerArray0[1]);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      ListDataEvent listDataEvent0 = new ListDataEvent(integer2, 5000, (int) integer2, 5000);
      visualListModel0.updateElementAt((-447), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(5000);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, (-1983));
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5021413653603015
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      visualListModel0.getListDataListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 2972);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.elementChanged((VisualPageListItem) null);
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5354198551667886
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      visualListModel0.getListDataListeners();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      int int0 = 8;
      visualListModel1.getElementAt(8);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      Vector<VisualPageListItem> vector0 = new Stack<VisualPageListItem>();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2488215410938253
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer.compareUnsigned((-389), (-447));
      Integer.compareUnsigned((-236), (-2010));
      Integer.getInteger("", (-1609));
      integerArray0[1] = integer1;
      Integer integer2 = Integer.getInteger("", (int) integerArray0[1]);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      Integer.compare((-2045), 1024);
      ListDataEvent listDataEvent0 = new ListDataEvent(integer2, 5000, (int) integer2, 5000);
      jComboBox0.contentsChanged(listDataEvent0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.getSize();
      visualListModel0.getElements();
      visualListModel0.getElementAt(1);
      int[] intArray0 = new int[1];
      intArray0[0] = (-447);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -447
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5637293048825915
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      visualListModel0.getListDataListeners();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      int int0 = 8;
      visualListModel1.getElementAt(8);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) linkedHashSet0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      linkedHashSet0.removeIf(predicate2);
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      linkedHashSet0.add((VisualPageListItem) null);
      Integer.compareUnsigned((-389), (-447));
      Integer.compareUnsigned((-236), (-2010));
      integerArray0[1] = integer1;
      Integer integer2 = Integer.getInteger("bM", (int) integerArray0[1]);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      ListDataEvent listDataEvent0 = new ListDataEvent(integer2, 5000, (int) integer2, 5000);
      jComboBox0.contentsChanged(listDataEvent0);
      jComboBox0.isOpaque();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      RenderingHints renderingHints0 = null;
      byte byte0 = (byte)1;
      visualListModel0.moveDownIndex((byte)119);
      byte byte1 = (byte) (-113);
      byte byte2 = (byte) (-127);
      byte byte3 = (byte) (-1);
      byte byte4 = (byte)40;
      byte[] byteArray0 = null;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, (byte[]) null, (byte) (-127), false, (byte)40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.68082764903455
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1178));
      visualListModel0.getListDataListeners();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.forEach(consumer0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.clearData();
      visualListModel0.getElements();
      visualListModel1.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2814));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2814
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      boolean boolean0 = true;
      visualListModel0.subList(0, 0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)35;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(180, 0, (-349));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -349
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.moveDownIndexes(intArray0);
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      renderingHints0.replaceAll(biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.moveUpIndexes(intArray0);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 2569;
      floatArray0[2] = (float) (-1633);
      floatArray0[3] = (float) (-1633);
      floatArray0[4] = (float) 0;
      hashtable0.put(sunHints_Key0, "");
      floatArray0[5] = (float) 0;
      floatArray0[6] = (float) (-1633);
      Kernel kernel0 = new Kernel(0, 2814, floatArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      RenderingHints renderingHints1 = new RenderingHints(hashtable0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 1, renderingHints1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.522929008885028
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer.compare((-447), (int) integerArray0[0]);
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      jComboBox0.addAncestorListener(ancestorListener0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      Integer.min((-16), (-395));
      Integer.getInteger("End of parsing for \"", 4);
      Integer.sum((int) integerArray0[1], 1126);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      Integer.getInteger("End of parsing for \"");
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      Integer.getInteger("uEXzV`^t$Vq");
      visualListModel0.getSize();
      visualListModel0.getElements();
      visualListModel0.getElementAt((int) integerArray0[1]);
      visualListModel0.removeElements(1, (int) integerArray0[1], false);
      visualListModel0.updateElementAt((-395), (VisualPageListItem) null);
      Integer.min((-80), 0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1304;
      intArray0[7] = 0;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.remove(visualListModel0);
      visualListModel0.addAllElements(180, (Collection<VisualPageListItem>) hashSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Vector<String> vector0 = new Vector<String>(10);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(vector0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(10, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(10) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clear();
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.3125019625949976
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      List<VisualPageListItem> list0 = new Stack<VisualPageListItem>();
      visualListModel0.removeElements(intArray0, false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (-2557);
      intArray1[1] = (-673);
      intArray1[2] = (-454);
      visualListModel1.rotateAnticlockwiseElements(intArray1);
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.undeleteElements(intArray0);
      visualListModel2.removeElements((-1084), (-1084), false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      assertEquals(0, visualListModel3.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      int int0 = 0;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-35), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-35)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      RenderingHints.Key renderingHints_Key0 = null;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, visualListModel0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byte byte0 = (byte)0;
      visualListModel0.getElementAt((byte)0);
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        renderingHints0.put((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      int int0 = (-17);
      intArray0[0] = (-17);
      VisualListModel visualListModel1 = new VisualListModel();
      int int1 = 1943;
      // Undeclared exception!
      try { 
        visualListModel1.subList(1943, (-17));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1943) > toIndex(-17)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 0;
      LookupTable lookupTable0 = null;
      RenderingHints renderingHints0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1673, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1673) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9966392780576343
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate3);
      Predicate<Object> predicate5 = predicate0.negate();
      predicate0.and(predicate1);
      predicate0.or(predicate2);
      predicate5.negate();
      Predicate.isEqual((Object) predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      predicate6.and(predicate2);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.removeIf(predicate6);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      // Undeclared exception!
      try { 
        stack0.add(1, (VisualPageListItem) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 > 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 2402;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = (Integer) 2402;
      integerArray0[1] = (Integer) 2402;
      integerArray0[2] = (Integer) 2402;
      integerArray0[3] = (Integer) 2402;
      integerArray0[4] = (Integer) 2402;
      integerArray0[5] = (Integer) 2402;
      integerArray0[6] = (Integer) 2402;
      integerArray0[7] = (Integer) 2402;
      integerArray0[8] = (Integer) 2402;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      visualListModel0.moveUpIndexes(intArray0);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 2402;
      floatArray0[4] = 1012.0855F;
      floatArray0[2] = (float) 2402;
      floatArray0[3] = (-1111.0F);
      floatArray0[4] = (float) 2402;
      floatArray0[5] = (float) 2402;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(2402, 2814, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 6 and should be 6759228
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6183330595080276
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer.compare((-447), (int) integerArray0[0]);
      integerArray0[1] = integer1;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      jComboBox0.addAncestorListener(ancestorListener0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      Integer.min(16, (-395));
      Integer.getInteger("End of parsing for \"", 4);
      Integer.sum((int) integerArray0[1], 1126);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      Integer.getInteger("End of parsing for \"");
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      Integer.getInteger("uEXzV`^t$Vq");
      visualListModel0.getSize();
      visualListModel0.getElements();
      visualListModel0.getElementAt((int) integerArray0[1]);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.setData(vector0);
      assertEquals(10, vector0.capacity());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.230825969235745
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.removeElements((-1084), (-945), false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = new Integer((-1874));
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer[] integerArray0 = new Integer[8];
      integerArray0[1] = integer1;
      Integer.getInteger("\"T3;-)!x@");
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer.compare((int) integerArray0[1], (int) integerArray0[1]);
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer3;
      integerArray0[4] = integer1;
      integerArray0[5] = integer0;
      integerArray0[6] = integer1;
      integerArray0[7] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) integerArray0[2];
      intArray0[1] = (int) integerArray0[7];
      Integer.getInteger("] for automatic log4j configuration.");
      intArray0[2] = (int) integerArray0[5];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer.compareUnsigned((-389), (-447));
      Integer.compareUnsigned((-236), (-2010));
      Integer.getInteger("", (-1609));
      integerArray0[1] = integer1;
      Integer integer2 = Integer.getInteger("", (int) integerArray0[1]);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      Integer.compare((-2045), 1024);
      ListDataEvent listDataEvent0 = new ListDataEvent(integer2, 5000, (int) integer2, 5000);
      jComboBox0.contentsChanged(listDataEvent0);
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1465));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-854));
      visualListModel0.getElementAt(179);
      visualListModel0.moveDownIndex((-854));
      int[] intArray0 = new int[22];
      intArray0[0] = (-854);
      intArray0[1] = 179;
      LookupOp lookupOp0 = null;
      try {
        lookupOp0 = new LookupOp((LookupTable) null, (RenderingHints) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-23));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -23
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      predicate0.or(predicate4);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate.isEqual((Object) linkedHashSet0);
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate6 = predicate0.and(predicate5);
      linkedHashSet0.removeIf(predicate6);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.getValidElements();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      linkedHashSet0.removeIf(predicate2);
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      linkedHashSet0.add((VisualPageListItem) null);
      Integer.compareUnsigned((-389), (-447));
      Integer.compareUnsigned((-236), (-2010));
      integerArray0[1] = integer1;
      Integer integer2 = Integer.getInteger("bM", (int) integerArray0[1]);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      ListDataEvent listDataEvent0 = new ListDataEvent(integer2, 5000, (int) integer2, 5000);
      jComboBox0.contentsChanged(listDataEvent0);
      jComboBox0.isOpaque();
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-447);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.getListDataListeners();
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 2569;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) (-1633);
      floatArray0[3] = (float) (-1633);
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) 0;
      floatArray0[6] = (float) (-1633);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-1938), (-3252), floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 7 and should be 6302376
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.and(predicate1);
      Integer integer0 = new Integer(1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-2504));
      visualListModel0.moveDownIndex(0);
      LookupOp lookupOp0 = null;
      try {
        lookupOp0 = new LookupOp((LookupTable) null, (RenderingHints) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "u|`72o\"&&3i3\"e[$AUq", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"u|`72o\"&&3i3\"e[$AUq\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(49, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 49
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-2130));
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      visualListModel0.addListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-17);
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1943;
      visualListModel0.subList(1943, 1000);
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 1943;
      floatArray0[1] = (float) 1943;
      floatArray0[2] = 0.0F;
      floatArray0[3] = (float) (-17);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-1551), 1943, floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.407879811480473
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.removeElements(518, 0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.rotateClockwiseElements(intArray0);
      List<VisualPageListItem> list0 = visualListModel1.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.4066026722722995
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.removeElements(0, 0, true);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.rotateClockwiseElements(intArray0);
      List<VisualPageListItem> list0 = visualListModel1.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.reverseElements(intArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      defaultListCellRenderer_UIResource0.addAncestorListener(ancestorListener0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)40;
      byteArray0[6] = (byte) (-1);
      boolean boolean0 = false;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((byte)40, (-532), byteArray0, (byte) (-127), false, 7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2096058100845513
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.appendAllElements(vector0);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      int int0 = 9;
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 9;
      floatArray0[1] = (float) (-1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints1 = new RenderingHints(hashtable0);
      Object object0 = new Object();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      RenderingHints renderingHints2 = new RenderingHints(sunHints_Key0, integer0);
      BiFunction<Object, Object, PdfGraphics2D.HyperLinkKey> biFunction0 = (BiFunction<Object, Object, PdfGraphics2D.HyperLinkKey>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        renderingHints2.merge((Object) null, sunHints_Key0, biFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2925, 2925, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      int int0 = 17;
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>(17, 255.0F);
      Hashtable<RenderingHints.Key, Integer> hashtable1 = null;
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      hashtable0.putIfAbsent(sunHints_Key0, integer0);
      Class<RenderingHints.Key> class0 = RenderingHints.Key.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.subList(0, 0);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      RenderingHints.Key renderingHints_Key0 = null;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, visualListModel0);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      byte[] byteArray0 = new byte[0];
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of components must  be at least 1
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel0.getValidElements();
      visualListModel0.removeElements(intArray0, false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 9;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clear();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-1983);
      intArray0[5] = 0;
      intArray0[6] = (-1);
      Vector<Object> vector1 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector1, vector1);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      vector1.add((Object) pdfGraphics2D_HyperLinkKey0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      assertNotNull(operationRegistry0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-17), (-17));
      int int0 = (-680);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 13;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-1), (-680), floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 3 and should be 680
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1874);
      intArray0[1] = (-1399);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((-3610), (Collection<VisualPageListItem>) vector0);
      Vector<Object> vector1 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector1, vector1);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = null;
      try {
        decimalFormat0 = new DecimalFormat((String) null, decimalFormatSymbols0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) linkedHashSet0);
      predicate0.and(predicate1);
      predicate0.and(predicate1);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1768), (-1178), false);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, (-1), (-1768));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1768
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      defaultComboBoxModel0.addListDataListener(jComboBox0);
      JComboBox<String> jComboBox1 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox1);
      visualListModel0.subList(0, 0, false);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-2130));
      integerArray0[5] = integer5;
      Integer.toUnsignedString(270);
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      integerArray0[6] = integer6;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(3725, 437, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(Integer.MIN_VALUE, (Collection<VisualPageListItem>) linkedHashSet0);
      Vector<Object> vector1 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector1, vector1);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      vector1.add((Object) vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
  }
}
