/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:14:23 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.964532803443662
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false, "-indentSize");
      outputFormat0.setIndent((String) null);
      OutputFormat outputFormat2 = new OutputFormat("-trimText");
      outputFormat2.setXHTML(false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6888133206245315
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      String string0 = "J,*]=\\KFtA";
      outputFormat1.setIndent("J,*]=KFtA");
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      String string1 = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-trimText";
      stringArray0[3] = null;
      stringArray0[4] = "-trimText";
      int int0 = 1;
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = false;
      outputFormat0.setIndent(false);
      String string0 = "`bYq^s]S2HL";
      String string1 = null;
      OutputFormat outputFormat1 = new OutputFormat("-lineSeparator", false, "");
      outputFormat1.setIndent("wv2]mQ");
      OutputFormat outputFormat2 = new OutputFormat("1y");
      int int0 = 2;
      // Undeclared exception!
      outputFormat2.setIndentSize(2147483645);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5135828008113843
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 475);
      OutputFormat outputFormat1 = new OutputFormat("");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-trimText";
      outputFormat1.setTrimText(false);
      stringArray1[1] = "-trimText";
      outputFormat1.parseOptions(stringArray1, 1);
      OutputFormat outputFormat2 = new OutputFormat("-trimText", false, "W`G-%NwSJmXX[Nx\"/");
      outputFormat2.parseOptions(stringArray0, 1683);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions((String[]) null, 149);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3398342889863568
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "wv2]mQdhbf1f9";
      stringArray0[1] = "-htmlqL)\"FZ!>z";
      stringArray0[2] = "wv2]mQdhbf1f9";
      stringArray0[3] = "wv2]mQdhbf1f9";
      stringArray0[5] = "wv2]mQdhbf1f9";
      stringArray0[6] = "wv2]mQdhbf1f9";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "wv2]mQdhbf1f9";
      stringArray1[1] = "wv2]mQdhbf1f9";
      stringArray1[2] = "wv2]mQdhbf1f9";
      outputFormat0.parseOptions(stringArray1, 1);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setAttributeQuoteCharacter('\'');
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('l');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (l)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.329554970890548
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String string0 = "";
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("");
      int int0 = (-2412);
      outputFormat0.setNewLineAfterNTags((-2412));
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-expandEmptyqL)\"FZ!z");
      outputFormat0.setIndent("-expandEmptyqL)\"FZ!z");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmptyqL)\"FZ!z";
      stringArray0[1] = "-expandEmptyqL)\"FZ!z";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-expandEmptyqL)\"FZ!z";
      stringArray0[5] = "-expandEmptyqL)\"FZ!z";
      stringArray0[6] = "-expandEmptyqL)\"FZ!z";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-2412));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2412
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[6] = "";
      stringArray0[7] = "";
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String string0 = outputFormat0.getIndent();
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("", string0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1526254461503203
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize(34);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.getIndent();
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0347204424249927
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize(1);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.getIndent();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(true);
      outputFormat2.setAttributeQuoteCharacter('\"');
      outputFormat1.isOmitEncoding();
      outputFormat2.getEncoding();
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat2.setAttributeQuoteCharacter('\"');
      outputFormat2.setIndent("9AU;gLP/l");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("qL)\"FZ!>z");
      outputFormat2.setEncoding("-expandEmptyp!eY59he!k)_66wj");
      outputFormat0.getEncoding();
      assertEquals("qL)\"FZ!>z", outputFormat0.getLineSeparator());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      outputFormat1.setAttributeQuoteCharacter('\"');
      stringArray0[1] = "-expandEmptyp!eY59he!k)_66wj";
      stringArray0[2] = "qL)\"FZ!>z";
      stringArray0[3] = "-expandEmptyp!eY59he!k)_66wj";
      stringArray0[4] = "-expandEmptyp!eY59he!k)_66wj";
      outputFormat1.parseOptions(stringArray0, 1);
      boolean boolean0 = outputFormat1.isExpandEmptyElements();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9017702698667782
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setPadText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      String[] stringArray0 = new String[7];
      stringArray0[1] = "-expandEmptyp!eY59he!k)_66wj";
      stringArray0[2] = "qL)\"FZ!z";
      stringArray0[3] = "-expandEmptyp!eY59he!k)_66wj";
      stringArray0[4] = "-expandEmptyp!eY59he!k)_66wj";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setAttributeQuoteCharacter('\"');
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('9');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (9)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4902928037474683
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewLineAfterNTags(1663);
      outputFormat0.setIndentSize(159);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.setIndentSize(0);
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setEncoding("");
      outputFormat0.getEncoding();
      String[] stringArray1 = new String[4];
      stringArray1[0] = null;
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8046686106167678
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat("0tZQmqZ?*,buS", false, "-lineSeparator");
      outputFormat1.setIndent("-lineSeparator");
      OutputFormat outputFormat2 = new OutputFormat("`bYq^s]S2HL");
      outputFormat2.setIndentSize(2);
      int int0 = 1;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "`bYq^s";
      stringArray0[1] = "`bYq^s]S2HL";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat1.setLineSeparator((String) null);
      OutputFormat outputFormat3 = new OutputFormat("1y", false, "`bYq^s]S2HL");
      outputFormat3.setIndent(false);
      OutputFormat outputFormat4 = new OutputFormat("0tZQmqZ?*,buS");
      String[] stringArray1 = new String[2];
      stringArray1[0] = null;
      stringArray1[1] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat4.parseOptions(stringArray1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9185967534162014
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isXHTML();
      outputFormat0.setNewLineAfterNTags((-3223));
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`bYq^s]S2HL";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isExpandEmptyElements();
      outputFormat1.setXHTML(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setNewlines(true);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat((String) null);
      outputFormat2.setNewLineAfterNTags(39);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      String string0 = outputFormat3.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7277938948158327
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "#8]";
      String string1 = "";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String string2 = "ngJ\\RYBffN)";
      outputFormat0.setIndent("ngJRYBffN)");
      outputFormat0.isOmitEncoding();
      boolean boolean0 = true;
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setTrimText(true);
      outputFormat0.isPadText();
      outputFormat0.isOmitEncoding();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter(',');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (,)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setIndent(false);
      int int0 = 1;
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      outputFormat0.setLineSeparator(stringArray0[0]);
      outputFormat0.setEncoding("[-xhtmlwv2]$Qdhbf1f9");
      OutputFormat outputFormat1 = new OutputFormat((String) null, true, (String) null);
      outputFormat1.getEncoding();
      char char0 = '2';
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('2');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (2)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.264461799096657
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(1298);
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("-5S", false, "-5S");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "wv2]mQdhbf1f9";
      outputFormat1.setEncoding((String) null);
      stringArray0[1] = "-5S";
      stringArray0[3] = "-encoding";
      stringArray0[5] = "-5S";
      stringArray0[6] = "wv2]mQdhbf1f9";
      stringArray0[7] = null;
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-2916));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2916
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2388461041110035
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setLineSeparator(")");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "Invalid attribute quote character (";
      stringArray0[2] = ")";
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = "~I8L!\"";
      outputFormat0.parseOptions(stringArray0, 2390);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-indent");
      outputFormat0.isTrimText();
      outputFormat0.setExpandEmptyElements(false);
      assertEquals("-indent", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3755754015654476
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = "[-xhtmlwv2]$Qdhbf1f9";
      stringArray0[2] = "v]mhbf1f9";
      stringArray0[3] = null;
      stringArray0[4] = stringArray0[3];
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty[-xhtmlwv2]$Qdhbf1f9", false, "[-xhtmlwv2]$Qdhbf1f9");
      int int0 = outputFormat1.parseOptions(stringArray0, 1);
      assertEquals("[-xhtmlwv2]$Qdhbf1f9", outputFormat1.getEncoding());
      assertEquals("-expandEmpty[-xhtmlwv2]$Qdhbf1f9", outputFormat1.getIndent());
      assertEquals(1, int0);
      
      int int1 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int1);
      
      String string0 = outputFormat0.getIndent();
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertNull(string0);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1508863157155376
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[1] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[2] = "";
      stringArray0[3] = "XO~AS`x\"ny<:8OJ|%";
      outputFormat0.setNewLineAfterNTags(1);
      stringArray0[5] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[8] = "XO~AS`x\"ny<:8OJ|%";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setTrimText(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("IP}%unr4u|/K,%");
      assertEquals(1, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.856561606874164
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(2018);
      outputFormat0.setXHTML(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setXHTML(false);
      outputFormat0.isTrimText();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setPadText(false);
      outputFormat0.isNewlines();
      outputFormat0.setOmitEncoding(true);
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[5];
      String[] stringArray1 = new String[1];
      stringArray1[0] = "[-xhtmlwv2]$Qdhbf1f9";
      outputFormat0.parseOptions(stringArray1, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat0.setXHTML(false);
      boolean boolean0 = true;
      outputFormat0.setLineSeparator(")");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "Invalid attribute quote character (";
      stringArray0[2] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = "~I8L!\"";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1662630289));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1662630289
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-436));
      OutputFormat outputFormat1 = new OutputFormat((String) null, true, "  ");
      String[] stringArray0 = new String[0];
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat1.parseOptions(stringArray0, 14);
      String string0 = outputFormat1.getIndent();
      assertNull(string0);
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1619231684953415
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setTrimText(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(1);
      outputFormat2.setTrimText(false);
      outputFormat2.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat2.setIndent("\n");
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-1803));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1803
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7258671398146643
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setIndent(false);
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = "-xhtmlwv2]mQdhbf1f9";
      stringArray0[2] = "wv2]mQdhbf1f9";
      stringArray0[3] = null;
      stringArray0[4] = null;
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setPadText(false);
      outputFormat0.isTrimText();
      outputFormat0.setIndent("-expandEmptyv]mhbf1f9");
      assertTrue(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      OutputFormat outputFormat1 = new OutputFormat("-trimText");
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setIndentSize((-3074));
      outputFormat1.setIndent("-expandEmp#]&J(F2");
      assertEquals("-expandEmp#]&J(F2", outputFormat1.getIndent());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 37);
      assertEquals(37, int0);
      
      outputFormat0.setPadText(false);
      outputFormat0.isPadText();
      String string0 = outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("\n", string0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("");
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7353909493384738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(1);
      OutputFormat outputFormat1 = new OutputFormat("wv2]mQdhbf1f9", true, "-xhtmlqL)\"FZ!z");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlqL)\"FZ!z";
      stringArray0[1] = "wv2]mQdhbf1f9";
      stringArray0[2] = "-xhtmlqL)\"FZ!z";
      stringArray0[3] = "wv2]mQdhbf1f9";
      stringArray0[4] = "wv2]mQdhbf1f9";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      
      String string0 = outputFormat1.getIndent();
      assertEquals("wv2]mQdhbf1f9", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(1);
      OutputFormat outputFormat1 = new OutputFormat("wv2]mQdhbf1f9", true, "-xhtmlqL)\"FZ!z");
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlqL)\"FZ!z";
      stringArray0[1] = "wv2]mQdhbf1f9";
      stringArray0[2] = "-xhtmlqL)\"FZ!z";
      stringArray0[3] = "wv2]mQdhbf1f9";
      outputFormat0.setIndent("wv2]mQdhbf1f9");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2328));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2328
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4990104312963837
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml ", false, "_oO/7;pyLPlI?!u]");
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(39);
      assertEquals("                                       ", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat("-xhtml ");
      outputFormat1.setNewlines(true);
      outputFormat1.setIndent(true);
      outputFormat0.getIndent();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3653496399444975
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      OutputFormat outputFormat1 = new OutputFormat((String) null, false, "");
      OutputFormat outputFormat2 = new OutputFormat("-lineSeparator");
      outputFormat2.setIndent("-lineSeparator");
      OutputFormat outputFormat3 = new OutputFormat("1y");
      outputFormat0.setIndentSize(2);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "0tZQmqZ?*,buS";
      outputFormat0.setLineSeparator("a4(Y/A:0 >Z|ml(0");
      assertEquals("a4(Y/A:0 >Z|ml(0", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat4 = new OutputFormat("`bYq^s", false, "-lineSeparator");
      outputFormat3.setIndent(true);
      String string0 = outputFormat4.getIndent();
      assertEquals("`bYq^s", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-xhthl ", true, "-xhthl ");
      assertEquals("-xhthl ", outputFormat1.getIndent());
      
      outputFormat1.setIndent((String) null);
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals("-xhthl ", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isOmitEncoding());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isPadText());
      
      OutputFormat outputFormat2 = new OutputFormat("-trimText");
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isPadText());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isXHTML());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals("-trimText", outputFormat2.getIndent());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isNewlines());
      
      String string0 = outputFormat0.getIndent();
      assertEquals("  ", string0);
      assertNotNull(string0);
      
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.setIndent("-trimText");
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertEquals("\n", outputFormat3.getLineSeparator());
      assertFalse(outputFormat3.isOmitEncoding());
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isTrimText());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertFalse(outputFormat3.isNewlines());
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertFalse(outputFormat3.isPadText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = "-xhtmlwv2]mQdhbf1f9";
      stringArray0[2] = "v]mhbf1f9";
      String string0 = OutputFormat.STANDARD_INDENT;
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "wv2]mQdhbf1f9";
      stringArray0[1] = "wv2]mQdhbf1f9";
      stringArray0[0] = "wv2]mQdhbf1f9";
      stringArray0[3] = "wv2]mQdhbf1f9";
      stringArray0[0] = "wv2]mQdhbf1f9";
      OutputFormat outputFormat0 = new OutputFormat("wv2]mQ", false, (String) null);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(')');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ())
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(1, outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.6176074188731815
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(1);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.isOmitEncoding();
      outputFormat0.getEncoding();
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat0.setIndent("9AU;gLP/l");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("qL\"FZ!z");
      outputFormat0.setEncoding("-expanEmptyp!eY59h!k)_66wj");
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      outputFormat1.setAttributeQuoteCharacter('\"');
      stringArray0[1] = "-expanEmptyp!eY59h!k)_66wj";
      stringArray0[2] = "qL\"FZ!z";
      stringArray0[3] = "-expanEmptyp!eY59h!k)_66wj";
      outputFormat1.parseOptions(stringArray0, 1);
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat1.setAttributeQuoteCharacter('\"');
      char char0 = 'l';
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('l');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (l)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8778076270291266
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml-expanEmptyp!eY59h!k)_66wj", false, "");
      OutputFormat outputFormat2 = new OutputFormat("-trimText", false, "[w:");
      outputFormat2.setIndent("0tZQmqZ?*,buS");
      outputFormat0.setIndentSize(2);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "IydJ7D=l%7DDaSA%F=Z";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "[w:";
      stringArray0[3] = "[w:";
      stringArray0[4] = "==vdtC)?k-";
      stringArray0[5] = "-expanEmptyp";
      outputFormat2.parseOptions(stringArray0, 2);
      outputFormat2.parseOptions(stringArray0, 0);
      assertEquals("0tZQmqZ?*,buS", outputFormat2.getIndent());
      
      String string0 = outputFormat0.getIndent();
      assertEquals("  ", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml ", true, "_oO/7;pyLPlI?!u]");
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(39);
      assertEquals("                                       ", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat("-xhtml ");
      outputFormat0.getIndent();
      assertEquals("_oO/7;pyLPlI?!u]", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",u1+L25vG|O!&");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isXHTML();
      outputFormat0.setEncoding(",u1+L25vG|O!&");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",u1+L25vG|O!&";
      stringArray0[1] = "-&vmE9Q}I~&)4Vc^[P";
      stringArray0[2] = ",u1+L25vG|O!&";
      stringArray0[3] = ",u1+L25vG|O!&";
      stringArray0[4] = ",u1+L25vG|O!&";
      outputFormat1.parseOptions(stringArray0, 4458);
      outputFormat1.setPadText(true);
      boolean boolean0 = outputFormat0.isNewlines();
      assertEquals(",u1+L25vG|O!&", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags(31);
      outputFormat0.setIndentSize(39);
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat0.getIndent();
      assertEquals(31, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false, (String) null);
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(boolean0);
      
      outputFormat0.setIndentSize(34);
      assertEquals("                                  ", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      OutputFormat outputFormat2 = new OutputFormat("org.dom4j.io.OutputFormat");
      assertFalse(outputFormat2.isOmitEncoding());
      assertEquals("org.dom4j.io.OutputFormat", outputFormat2.getIndent());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isXHTML());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertFalse(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isPadText());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      
      outputFormat0.getIndent();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7726496271670902
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(1);
      OutputFormat outputFormat1 = new OutputFormat("wv2]mQdhbf1f9", true, "-xhtmlqL)\"FZ!z");
      outputFormat1.setEncoding("wv2]mQdhbf1f9");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlqL)\"FZ!z";
      stringArray0[1] = "wv2]mQdhbf1f9";
      stringArray0[1] = "-xhtmlqL)\"FZ!z";
      stringArray0[3] = "wv2]mQdhbf1f9";
      stringArray0[4] = "wv2]mQdhbf1f9";
      int int0 = 0;
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.1610289807159075
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("@/o@?.GjTHou2o;47");
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(true);
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.isNewlines();
      outputFormat0.isXHTML();
      outputFormat0.setSuppressDeclaration(true);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      outputFormat1.setOmitEncoding(true);
      boolean boolean0 = outputFormat1.isXHTML();
      assertTrue(outputFormat1.isOmitEncoding());
      assertFalse(boolean0);
  }
}
