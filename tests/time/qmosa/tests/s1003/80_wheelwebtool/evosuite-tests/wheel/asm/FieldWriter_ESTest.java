/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 16:10:06 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.InputStream;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5028243987830903
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 239, "Deprecated", "Deprecated", (String) null, "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      Frame frame0 = new Frame();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 65535, "Deprecated", "D", "!D%,-'G|D5e=v9dH", "D");
      fieldWriter1.getSize();
      fieldWriter1.put(byteVector0);
      fieldWriter1.visitAnnotation("!D%,-'G|D5e=v9dH", false);
      fieldWriter1.getSize();
      classWriter0.invalidFrames = false;
      classWriter0.version = 1816;
      fieldWriter0.getSize();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.getSize();
      fieldWriter2.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("D", false);
      fieldWriter2.put(byteVector0);
      assertSame(fieldWriter2, fieldWriter1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt(2008);
      byte[] byteArray0 = new byte[0];
      byteVector1.data = byteArray0;
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-3), "", "-=,", "2Aa", object0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1866);
      classWriter0.version = 201;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte) (-82);
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte) (-73);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "RuntEmeVisibleAnnotationr", "qB!R/tr4C/X@W*h%", (String) null, (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      Frame frame0 = new Frame();
      Type[] typeArray0 = new Type[9];
      Type type0 = Type.CHAR_TYPE;
      typeArray0[0] = type0;
      Type type1 = Type.VOID_TYPE;
      typeArray0[1] = type1;
      // Undeclared exception!
      try { 
        Type.getReturnType("RuntimeInvisibleAnnotations");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1820);
      String string0 = "qB!R/tr4C/\\X@W*h%";
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte)35;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string1 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1196), "", "", (String) null, "RuntEmeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      URI uRI0 = MockURI.URI("Deprecated", "qB!R/tr4C/X@W*h%", "", "J`Mt7R)8/!V\"%DnM", "PDK:(TDJcH/f/R:=Q");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1825);
      String string0 = "|q;";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2193), "|q;", "", ")](#L#KsNi*5+|y#=", ")](#L#KsNi*5+|y#=");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      Frame frame0 = new Frame();
      Type type0 = Type.CHAR_TYPE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Type type1 = Type.VOID_TYPE;
      Frame frame1 = new Frame();
      Type type2 = Type.CHAR_TYPE;
      Type type3 = Type.VOID_TYPE;
      Type.getReturnType("|q;");
      Type type4 = Type.DOUBLE_TYPE;
      Type type5 = Type.FLOAT_TYPE;
      Type type6 = Type.BOOLEAN_TYPE;
      // Undeclared exception!
      try { 
        type2.getElementType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5142943527661528
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3009, "aC+XuzoK ?7(k3P`1", "aC+XuzoK ?7(k3P`1", "aC+XuzoK ?7(k3P`1", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.lastMethod = null;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      Frame frame0 = new Frame();
      fieldWriter0.visitAnnotation("wheel.asm.FieldWriter", true);
      fieldWriter1.put(byteVector0);
      fieldWriter0.getSize();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      FieldWriter fieldWriter3 = classWriter0.lastField;
      fieldWriter3.put(byteVector0);
      fieldWriter1.getSize();
      fieldWriter2.put(byteVector0);
      fieldWriter2.getSize();
      // Undeclared exception!
      try { 
        fieldWriter1.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 239, ";)'(ED|s", ";)'(ED|s", (String) null, ";)'(ED|s");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5417244729890793
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1820);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "RuntEmeVisibleAnnotations", "qB!R/tr4C/X@W*h%", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      Frame frame0 = new Frame();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      fieldWriter1.put(byteVector0);
      fieldWriter0.visitAnnotation("qB!R/tr4C/X@W*h%", true);
      fieldWriter0.put(byteVector0);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("qB!R/tr4C/X@W*h%", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5725956662809266
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 239, "Deprecated", "Deprecated", (String) null, "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      int int0 = 1199;
      String string0 = "org.apache.commons.io.filefilter.SizeFileFilter";
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1199, "H{\"/[LS9hA}GR9", "org.apache.commons.io.filefilter.SizeFileFilter", (String) null, "Deprecated");
      fieldWriter1.put(byteVector0);
      ByteVector byteVector1 = new ByteVector();
      fieldWriter1.put(byteVector1);
      fieldWriter0.getSize();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      Attribute attribute0 = new Attribute("5PSA00POP8gAj");
      fieldWriter2.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter2.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1820);
      String string0 = "RuntEmeVisibleAnnotations";
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte)35;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string1 = "qEP\\SB";
      String string2 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1196), "qEPSB", "qEPSB", (String) null, "RuntEmeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-1196);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5889499115925907
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      boolean boolean0 = true;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.invalidFrames = true;
      String string0 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 239, "Deprecated", "Deprecated", (String) null, "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      Frame frame0 = new Frame();
      String string1 = "D";
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("!D%,-'G|D5e=v9dH", true);
      fieldWriter0.getSize();
      classWriter0.invalidFrames = true;
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      Attribute attribute0 = new Attribute("System");
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5584279288053329
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 239, "Deprecated", "Deprecated", (String) null, "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      Frame frame0 = new Frame();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 65535, "Deprecated", "D", "!D%,-'G|D5e=v9dH", "D");
      fieldWriter0.visitAnnotation("", true);
      fieldWriter1.put(byteVector0);
      classWriter0.newConst("Deprecated");
      byteVector0.putByte(16);
      byteVector0.putByte(224);
      fieldWriter1.visitAnnotation("!D%,-'G|D5e=v9dH", false);
      fieldWriter1.getSize();
      classWriter0.invalidFrames = false;
      fieldWriter0.getSize();
      classWriter0.addUninitializedType("[,8.l", (-142));
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("D", false);
      fieldWriter2.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter1.put(byteVector0);
      assertNotSame(fieldWriter1, fieldWriter0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3009, "aC+XuzoK ?7(k3P`1", "aC+XuzoK ?7(k3P`1", "aC+XuzoK ?7(k3P`1", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "The list of suffixes must not be null", "Exceptions", (String) null, "Exceptions");
      ByteVector byteVector0 = new ByteVector();
      Frame frame0 = new Frame();
      byteVector0.putShort(1);
      Frame frame1 = new Frame();
      InputStream inputStream0 = null;
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "[.R4H]rR");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      classWriter0.newClass("9:sm`)9@G.G%_4/");
      int int0 = 302;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 302, "RuntimeVisibleAnnotations", "TOj[m+w#Cf", "t2Y'-TVhq-I", "TOj[m+w#Cf");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5027001498676023
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1820);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "RuntEmeVisibleAnnotations", "qB!R/tr4C/X@W*h%", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      Frame frame0 = new Frame();
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.put(byteVector0);
      fieldWriter1.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      // Undeclared exception!
      try { 
        fieldWriter1.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1866);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1330, "qB!R/tr4C/X@W*h%", (String) null, "qB!R/tr4C/X@W*h%", classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 1820;
      ClassWriter classWriter0 = new ClassWriter(1820);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 228, "org.apache.commons.io.filefilter.OrFileFilter", "~p.|4-'NYAcAT24QI", "ConstantValue", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@7e035924
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1816);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 257, "", "", "", "");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter0.next = fieldWriter1;
      fieldWriter0.visitEnd();
      assertSame(fieldWriter0, fieldWriter1);
  }
}
