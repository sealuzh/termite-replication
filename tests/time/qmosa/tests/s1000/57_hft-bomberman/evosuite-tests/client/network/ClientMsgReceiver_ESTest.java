/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 13:57:19 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLTimeoutException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLWarning;
import java.util.ArrayList;
import java.util.function.Consumer;
import messages.Message;
import messages.global.ScoreMsg;
import messages.global.StopServerMsg;
import messages.session.SessionChatMsg;
import messages.session.SessionParticipationMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getDefaultUncaughtExceptionHandler();
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler1 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler1);
      MockThread.getDefaultUncaughtExceptionHandler();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      sQLTransactionRollbackException0.forEach(consumer0);
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(true, 0, "#T31CW");
      clientMsgReceiver0.processMsg(sessionParticipationMsg0);
      MockException mockException0 = new MockException("ZwF");
      SQLWarning sQLWarning0 = new SQLWarning(sQLTransactionRollbackException0);
      ClientMsgReceiver clientMsgReceiver1 = null;
      try {
        clientMsgReceiver1 = new ClientMsgReceiver((Socket) null, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockSocket mockSocket0 = new MockSocket();
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      SQLTransactionRollbackException sQLTransactionRollbackException1 = new SQLTransactionRollbackException();
      mockSocket0.setPerformancePreferences(1, 1, 27);
      SQLTransactionRollbackException sQLTransactionRollbackException2 = new SQLTransactionRollbackException("_GH<o}|KlT", "A", 0);
      sQLTransactionRollbackException2.getLocalizedMessage();
      sQLTransactionRollbackException0.spliterator();
      sQLTransactionRollbackException2.fillInStackTrace();
      SQLTransactionRollbackException sQLTransactionRollbackException3 = new SQLTransactionRollbackException("Znd");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLTransactionRollbackException sQLTransactionRollbackException4 = new SQLTransactionRollbackException("", "_GH<o}|KlT", 1);
      SQLTransactionRollbackException sQLTransactionRollbackException5 = new SQLTransactionRollbackException("Znd");
      SQLTransactionRollbackException sQLTransactionRollbackException6 = new SQLTransactionRollbackException("Znd");
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException(sQLTransactionRollbackException2);
      SQLTransactionRollbackException sQLTransactionRollbackException7 = new SQLTransactionRollbackException();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("log4j.additivity.", 7);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("log4j.additivity.", 7);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "2ha2joined the@Name");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2ha2joined the@Name");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "Uv=;");
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      MockThread.interrupted();
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1073741824L);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "Uv=;");
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("*zeyW|L)sE_DWl1xv6");
      sQLTransactionRollbackException0.addSuppressed(sQLNonTransientConnectionException0);
      SQLTransactionRollbackException sQLTransactionRollbackException1 = new SQLTransactionRollbackException();
      SQLTransactionRollbackException sQLTransactionRollbackException2 = new SQLTransactionRollbackException("A", "A", 1630);
      sQLTransactionRollbackException2.addSuppressed(sQLTransactionRollbackException1);
      sQLTransactionRollbackException2.getLocalizedMessage();
      sQLTransactionRollbackException0.spliterator();
      SQLTransactionRollbackException sQLTransactionRollbackException3 = (SQLTransactionRollbackException)sQLTransactionRollbackException2.fillInStackTrace();
      SQLTransactionRollbackException sQLTransactionRollbackException4 = new SQLTransactionRollbackException("Znd");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLTransactionRollbackException sQLTransactionRollbackException5 = new SQLTransactionRollbackException("Znd", "{", 1);
      SQLTransactionRollbackException sQLTransactionRollbackException6 = new SQLTransactionRollbackException("");
      SQLTransactionRollbackException sQLTransactionRollbackException7 = new SQLTransactionRollbackException("A");
      sQLTransactionRollbackException3.setNextException(sQLTransactionRollbackException0);
      SQLTransactionRollbackException sQLTransactionRollbackException8 = new SQLTransactionRollbackException();
      BomberClient bomberClient0 = BomberClient.getInstance();
      bomberClient0.notifyObservers();
      bomberClient0.setServerPort((-1));
      mockSocket0.getKeepAlive();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      System.setCurrentTimeMillis(0L);
      StopServerMsg stopServerMsg0 = new StopServerMsg();
      clientMsgReceiver0.processMsg(stopServerMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)76;
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      MockThread.getDefaultUncaughtExceptionHandler();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2230);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("BO");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("{qoIJo?[FsP", "{og)~L(b.", "BO", (byte)76);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "{qoIJo?[FsP", "8V", (byte)0);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("}n|-\"u7>k f", "'vkrL4$DN,rbN", "BO", (-2230));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("b b", "{qoIJo?[FsP", "}n|-\"u7>k f", (-341));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("{qoIJo?[FsP", "u toS lelrCl|as [", "{og)~L(b.", (-2230));
      stackTraceElementArray0[4] = stackTraceElement2;
      StackTraceElement stackTraceElement5 = new StackTraceElement("'vkrL4$DN,rbN", "L7=Lx_OY%e", "b b", (byte)76);
      stackTraceElementArray0[5] = stackTraceElement5;
      MockException mockException0 = new MockException();
      SessionChatMsg sessionChatMsg0 = new SessionChatMsg("u toS lelrCl|as [", "{qoIJo?[FsP");
      clientMsgReceiver0.processMsg(sessionChatMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int[] intArray0 = new int[2];
      intArray0[0] = (-178);
      intArray0[1] = (-1);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((String) null, (String) null, intArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(batchUpdateException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = null;
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("log4j.additivity.", 7);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = " has joined the game";
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, " has joined the game");
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Uv=;");
      int int0 = 313;
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(313);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }
}
