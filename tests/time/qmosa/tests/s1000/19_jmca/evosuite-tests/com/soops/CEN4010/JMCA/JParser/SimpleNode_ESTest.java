/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 13:59:09 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter(9);
      stringWriter0.append((CharSequence) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dXZ{`ku");
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.setIdentifier("*le");
      simpleNode0.setIdentifier(">>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*lshft");
      StringWriter stringWriter1 = new StringWriter(2026);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "strictfp");
      StringBuffer stringBuffer0 = new StringBuffer(2026);
      stringBuffer0.append((CharSequence) "h%M)l'=[TMOc$RyAQF");
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "strictfp");
      stringWriter1.append((CharSequence) stringBuffer0);
      simpleNode0.dump(">>", stringWriter0);
      assertEquals("null<EnumBody>\n  <identifier>*le</identifier>\n  <identifier>*rshft</identifier>\n</EnumBody>\n", stringWriter0.toString());
      
      SimpleNode simpleNode1 = new SimpleNode(9);
      String string0 = simpleNode1.toString();
      assertEquals("EnumBody", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7991437026482773
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("{");
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(14);
      simpleNode0.dump(">t'~EC(", stringWriter0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)59;
      byteArray0[5] = (byte) (-42);
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)114, (byte) (-42));
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0863987732327742
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 28;
      SimpleNode simpleNode0 = new SimpleNode(28);
      StringWriter stringWriter0 = new StringWriter(28);
      simpleNode0.dump("6;\"+h*$%SCcQ]hP<\"1", stringWriter0);
      simpleNode0.toString("<");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter1 = stringWriter0.append('f');
      simpleNode0.dump((String) null, stringWriter1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1);
      int int1 = (-1426);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1426));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(14);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      simpleNode0.setIdentifier("i!~1jT smfR1i~E^");
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.setIdentifier(";");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NullLiteral");
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = new StringWriter(10);
      stringWriter2.append((CharSequence) "l");
      simpleNode0.dump("+2|", stringWriter0);
      assertEquals("<ClassOrInterfaceBody>\n  <identifier>i!~1jT smfR1i~E^</identifier>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceBody : i!~1jT smfR1i~E^ : ;", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2283766931186737
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      simpleNode0.setIdentifier("i!~1jT smfR1i~E^");
      StringWriter stringWriter0 = new StringWriter(10);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(39);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter3 = new StringWriter((byte)0);
      simpleNode0.jjtGetParent();
      stringWriter0.close();
      simpleNode0.dump("i!~1jT smfR1i~E^", stringWriter3);
      assertEquals("<ClassOrInterfaceBody>\n  <identifier>i!~1jT smfR1i~E^</identifier>\n  <identifier>*lshft</identifier>\n</ClassOrInterfaceBody>\n", stringWriter3.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceBody : i!~1jT smfR1i~E^ : <<", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6552386361279747
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("{");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 14);
      simpleNode0.setIdentifier("{");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 14);
      simpleNode1.setIdentifier("|.;l");
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(13);
      stringWriter0.close();
      simpleNode1.dump("|.;l", stringWriter0);
      simpleNode0.toString();
      simpleNode1.dump("|.;l", stringWriter0);
      simpleNode1.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("{");
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(14);
      simpleNode0.dump(">t'~EC(", stringWriter0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)59;
      byteArray0[5] = (byte) (-42);
      byteArray0[7] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)114, (byte) (-42));
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.001892138633659
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      simpleNode0.dump("*le", stringWriter0);
      simpleNode0.setIdentifier(">=");
      char[] charArray0 = new char[8];
      charArray0[1] = 'k';
      charArray0[2] = 'y';
      charArray0[3] = '{';
      charArray0[4] = '?';
      charArray0[5] = '}';
      charArray0[6] = 'T';
      charArray0[7] = '*';
      stringWriter1.write(charArray0, 3, 3);
      simpleNode0.setIdentifier("&&");
      stringWriter0.flush();
      simpleNode0.setIdentifier("");
      StringWriter stringWriter2 = new StringWriter(1);
      simpleNode0.dump(">=", stringWriter1);
      simpleNode0.toString();
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) ">=", 87, 87);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0182838342084826
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) null);
      simpleNode0.dump("*le", stringWriter0);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("&");
      simpleNode0.toString();
      stringWriter0.flush();
      simpleNode0.setIdentifier("UZ7u_e!eL");
      StringWriter stringWriter1 = new StringWriter(1);
      simpleNode0.dump("*le", stringWriter1);
      simpleNode0.toString();
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "Modifiers : >= : & : UZ7u_e!eL", 3, 87);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.1418605250502996
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(29);
      simpleNode0.setIdentifier("&&");
      simpleNode0.jjtAddChild(simpleNode0, 29);
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(29);
      stringWriter0.append('Y');
      // Undeclared exception!
      simpleNode0.dump("&", stringWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0974033676362451
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.setIdentifier("?");
      simpleNode0.setIdentifier("h%M)l'=[TMOc$RyAQF");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?");
      StringWriter stringWriter0 = new StringWriter(29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "strictfp");
      StringBuffer stringBuffer0 = new StringBuffer(39);
      stringBuffer0.append((CharSequence) "h%M)l'=[TMOc$RyAQF");
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      stringWriter0.append((CharSequence) null);
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("null<ReferenceType>\n  <identifier>?</identifier>\n  <identifier>h%M)l'=[TMOc$RyAQF</identifier>\n</ReferenceType>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ReferenceType : ? : h%M)l'=[TMOc$RyAQF", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3423697177621
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter('Y');
      simpleNode0.dump("", stringWriter0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4018409024473866
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(29);
      simpleNode0.setIdentifier("&&");
      simpleNode0.setIdentifier("KUN n]s#@9CG&L=AFH");
      SimpleNode simpleNode1 = new SimpleNode(13);
      simpleNode1.setIdentifier("qzJj'bla.e_:+?xnHHJ");
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode1;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(29);
      simpleNode1.dump("KUN n]s#@9CG&L=AFH", stringWriter0);
      simpleNode0.toString();
      simpleNode1.toString("U0_-");
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-4177984));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4177984
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0863987732327742
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      StringWriter stringWriter0 = new StringWriter(28);
      simpleNode0.dump("*le", stringWriter0);
      simpleNode0.toString("<");
      simpleNode0.setIdentifier("<");
      InputStream inputStream0 = null;
      StringWriter stringWriter1 = stringWriter0.append('f');
      simpleNode0.dump((String) null, stringWriter1);
      int int0 = 1;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1);
      int int1 = (-1426);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1426));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4118090007716961
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      SimpleNode simpleNode2 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(1);
      int int0 = 0;
      stringWriter0.write(1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      simpleNode0.jjtGetNumChildren();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1382135290446123
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(8);
      SimpleNode simpleNode1 = new SimpleNode(8);
      simpleNode0.jjtAddChild(simpleNode1, 8);
      simpleNode1.jjtAddChild(simpleNode1, 8);
      String string0 = "\"}\"";
      JavaParser javaParser0 = new JavaParser("\"}\"");
      SimpleNode simpleNode2 = new SimpleNode(8);
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.dump(string0, stringWriter1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1445753923108648
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      JavaParser javaParser0 = new JavaParser("\"}\"");
      SimpleNode simpleNode2 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.flush();
      int int0 = 0;
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.dump("\"}\"", stringWriter1);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream((InputStream) null, (-1848));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.id = 10;
      String string0 = "VariableDeclaratorId";
      StringReader stringReader0 = new StringReader(",S|^_+N0&;f8sz");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 100);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      SystemInUtil.addInputLine((String) null);
      JavaParser javaParser0 = new JavaParser("VariableDeclaratorId");
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 10);
      simpleNode0.jjtAddChild((Node) null, 11);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetChild(1);
      assertEquals(12, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(109);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      nodeArray0[8] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      JavaParser javaParser0 = new JavaParser("VariableDeclaratorId");
      simpleNode0.jjtOpen();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 11);
      simpleNode0.jjtGetChild(1);
      assertEquals(12, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 717);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L\"(C9x0A0w(F\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      String string0 = simpleNode0.toString("");
      assertEquals("EnumConstant", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.945928577776465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(39);
      StringWriter stringWriter0 = new StringWriter(39);
      stringWriter0.append((CharSequence) null);
      simpleNode0.dump("*le", stringWriter0);
      simpleNode0.setIdentifier("<");
      SimpleNode simpleNode1 = new SimpleNode(39);
      simpleNode1.jjtSetParent(simpleNode0);
      InputStream inputStream0 = null;
      StringWriter stringWriter1 = stringWriter0.append('f');
      simpleNode0.dump((String) null, stringWriter1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1);
      int int0 = (-1426);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1426));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1437950732));
      JavaParser javaParser0 = new JavaParser(">6^ICJi/5r");
      Node node0 = javaParser0.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1927));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "AnnotationTypeBody");
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JavaParser javaParser0 = new JavaParser((String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h%M)l'=[TMOc$RyAQF");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "strictfp");
      StringBuffer stringBuffer0 = new StringBuffer(39);
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "strictfp");
      StringBuffer stringBuffer2 = new StringBuffer((CharSequence) "?");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 39);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 255);
      assertEquals(256, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("|`+6");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2184));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 29);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      try { 
        javaParser0.EmptyStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      simpleNode0.setIdentifier("LU");
      simpleNode0.setIdentifier("LU");
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-2744));
      simpleNode1.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter(14);
      // Undeclared exception!
      try { 
        simpleNode0.dump("{", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 29;
      SimpleNode simpleNode0 = new SimpleNode(29);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      simpleNode0.toString(" ");
      simpleNode0.setIdentifier((String) null);
      InputStream inputStream0 = null;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('f');
      // Undeclared exception!
      try { 
        simpleNode0.dump("", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 2134);
      // Undeclared exception!
      try { 
        simpleNode0.toString("N:0sH7sH+d*UqS");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2134
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@XOC.w9koYXadKP@");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.close();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1912));
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3694);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      StringReader stringReader0 = new StringReader("{");
      int int0 = (-982);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-982), 3694);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-669));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -669. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
