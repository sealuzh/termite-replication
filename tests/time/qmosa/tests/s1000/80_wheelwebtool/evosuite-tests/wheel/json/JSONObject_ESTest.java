/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 14:45:05 GMT 2020
 */

package wheel.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.json.JSONArray;
import wheel.json.JSONObject;
import wheel.json.JSONTokener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONObject_ESTest extends JSONObject_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.940806642716372
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONObject jSONObject1 = jSONObject0.put("^/w`sOO9TX,9j*Q", (Collection) linkedList0);
      JSONObject jSONObject2 = jSONObject1.put("6H8s]i?^J", false);
      String string0 = jSONObject2.toString((-1915));
      assertNotNull(string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.575832360384573
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      int int0 = jSONObject0.optInt("#Bwlx5/");
      assertEquals(3, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3616219726089769
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      String[] stringArray0 = new String[7];
      JSONObject jSONObject1 = new JSONObject((Object) jSONObject0, stringArray0);
      jSONObject1.putOpt(",\n", (Object) null);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Map) null);
      double double0 = jSONObject0.optDouble("]", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2337380151460804
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.put("", 3029L);
      Object object0 = jSONObject1.opt("");
      assertEquals(4, jSONObject0.length());
      assertEquals(3029L, object0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      int int0 = jSONObject0.length();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2337380151460802
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", 3029L);
      jSONObject0.has("");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("Q(c7MbQj", 3029L);
      jSONObject0.getString("Q(c7MbQj");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5228146795137603
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0);
      JSONObject jSONObject1 = jSONObject0.put("na", 0L);
      jSONObject1.getInt("na");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("Q(c7MbQj", 3029L);
      jSONObject0.get("Q(c7MbQj");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Short short0 = new Short((short)1357);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.accumulate("p", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.666278442414676
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = JSONObject.valueToString("}oe;rfh`", 48, 1000);
      assertNotNull(string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject("gettoHexString", stringArray0);
      String string0 = jSONObject0.toString(2682, (-806));
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HashMap<String, Short> hashMap0 = new HashMap<String, Short>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      String string0 = jSONObject0.toString(0);
      assertEquals("{}", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONObject.testValidity((Object) null);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      JSONObject.testValidity(byte0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      Object object0 = jSONObject0.remove("^/w`sOO9TX,9j*Q");
      assertNull(object0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = JSONObject.quote((String) null);
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = JSONObject.quote("sub");
      assertEquals("\"sub\"", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = JSONObject.quote("");
      assertEquals("\"\"", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", false);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      Integer integer0 = new Integer(14);
      hashMap0.put(integer0, integer0);
      JSONObject jSONObject1 = jSONObject0.put("h/nc", (Map) hashMap0);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) null);
      JSONObject jSONObject1 = jSONObject0.put("", (Map) hashMap0);
      assertSame(jSONObject0, jSONObject1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Short short0 = new Short((short)3570);
      String[] stringArray0 = new String[9];
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      JSONObject jSONObject1 = jSONObject0.put("", (Collection) linkedList0);
      assertEquals(1, jSONObject1.length());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject1 = jSONObject0.put("", (Object) boolean0);
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", (-1L));
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5229550675313184
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("J?Ks!y%a&Yn", (-26752530));
      assertSame(jSONObject1, jSONObject0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1580510496905323
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("Q(c7MbQj", (double) 3029);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      String string0 = jSONObject0.optString((String) null, "wheel.json.JSONTokener");
      assertEquals("wheel.json.JSONTokener", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      String string0 = jSONObject0.optString("to", "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1464631760614805
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      long long0 = jSONObject0.optLong("P:", (-340L));
      assertEquals((-340L), long0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9568016124420413
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Float float0 = new Float(101.434);
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      long long0 = jSONObject0.optLong((String) null, 1774L);
      assertEquals(1774L, long0);
      assertEquals(8, jSONObject0.length());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1464631760614805
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Integer integer0 = new Integer(695);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      long long0 = jSONObject0.optLong("isdoubleToRawLongBits", 0L);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      long long0 = jSONObject0.optLong("", 0L);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONObject jSONObject1 = jSONObject0.optJSONObject((String) null);
      assertNull(jSONObject1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONArray jSONArray0 = jSONObject0.optJSONArray("");
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1464631760614805
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      int int0 = jSONObject0.optInt("~blB>wg-q", (-718));
      assertEquals((-718), int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HashMap<Double, Object> hashMap0 = new HashMap<Double, Object>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      int int0 = jSONObject0.optInt((String) null, 99);
      assertEquals(99, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.740511704323769
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      int int0 = jSONObject0.optInt((String) null);
      assertEquals(2, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.631107479158123
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Float float0 = new Float(101.434);
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      double double0 = jSONObject0.optDouble("b!19hETe:q", 101.434);
      assertEquals(101.434, double0, 0.01);
      assertEquals(8, jSONObject0.length());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Float float0 = new Float(0.0F);
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      double double0 = jSONObject0.optDouble("", (-2107.46383));
      assertEquals((-2107.46383), double0, 0.01);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4016171508386506
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      double double0 = jSONObject0.optDouble(",\n");
      assertEquals(2, jSONObject0.length());
      assertEquals(Double.NaN, double0, 0.01);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0823563847381665
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      boolean boolean0 = jSONObject0.optBoolean(",\n", true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6978169099032328
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject((Object) "A=^@(X7");
      boolean boolean0 = jSONObject0.optBoolean((String) null);
      assertEquals(3, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.6715952780212544
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Short short0 = new Short((short)8448);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      Boolean boolean0 = Boolean.FALSE;
      JSONObject jSONObject0 = new JSONObject(boolean0, stringArray0);
      jSONObject0.opt((String) null);
      assertEquals(5, stringArray0.length);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1285962936622185
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      jSONObject0.opt("0");
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Long long0 = new Long(0L);
      String string0 = JSONObject.numberToString(long0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject("-1151.7123259118957", stringArray0);
      boolean boolean0 = jSONObject0.isNull((String) null);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[16];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      boolean boolean0 = jSONObject0.isNull("");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Short short0 = new Short((short)8448);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      jSONObject0.has((String) null);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HashMap<Double, Integer> hashMap0 = new HashMap<Double, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      boolean boolean0 = jSONObject0.has("\b");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getString((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getLong((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      try { 
        jSONObject0.getJSONObject((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.469483727358999
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      try { 
        jSONObject0.getJSONObject("O>#G$eG4r(j~FeC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"O>#G$eG4r(j~FeC\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String[] stringArray0 = new String[7];
      JSONObject jSONObject0 = new JSONObject("java.lang.Float@0000000001", stringArray0);
      try { 
        jSONObject0.getJSONArray((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      try { 
        jSONObject0.getBoolean((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        jSONObject0.getBoolean("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Short short0 = new Short((short)1357);
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(short0, stringArray0);
      try { 
        jSONObject0.get((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = JSONObject.doubleToString(0.0F);
      assertEquals("0", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      // Undeclared exception!
      try { 
        jSONObject0.write((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4860325981639935
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      // Undeclared exception!
      jSONObject0.toString(3029, 8448);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.9550743654936178
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject("czqZRR`' 6F", stringArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      jSONObject0.put("to", (Collection) linkedList0);
      jSONObject0.put("Bf", false);
      // Undeclared exception!
      jSONObject0.toString(8192);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[6];
      JSONObject jSONObject0 = new JSONObject("b!NMriYgXM", stringArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      try { 
        jSONObject0.put(stringArray0[3], (Collection) linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.put((String) null, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        JSONObject.getNames((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.7776612957621659
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getLong("-1151.7123259118957.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"-1151.7123259118957.\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.469483727358999
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HashMap<Double, Double> hashMap0 = new HashMap<Double, Double>();
      JSONObject jSONObject0 = new JSONObject((Object) hashMap0);
      try { 
        jSONObject0.getInt("x,*XRo9xkQMbb+J");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"x,*XRo9xkQMbb+J\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6674619334292946
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONObject jSONObject0 = new JSONObject("^/w`sOO9TX,9j*Q", stringArray0);
      try { 
        jSONObject0.accumulate((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("pz*9Mw89]ndo");
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject(jSONTokener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of pz*9Mw89]ndo
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((JSONObject) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[4];
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7261420000399659
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Short short0 = new Short((short)8448);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      jSONObject0.put("y@4P0", (Collection) linkedList0);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject0.write(stringWriter0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8301392826291885
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      JSONObject jSONObject1 = jSONObject0.putOpt("^/w`sOO9TX,9j*Q", ",\n");
      JSONObject jSONObject2 = jSONObject1.put("2}ZTU6_}N#aq3WX?P", false);
      StringWriter stringWriter0 = new StringWriter();
      jSONObject2.write(stringWriter0);
      assertEquals(2, jSONObject1.length());
      assertEquals(2, jSONObject0.length());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.6707739227240033
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      jSONObject0.put("h/nc", (Map) hashMap0);
      String string0 = jSONObject0.toString((-893), 120);
      assertNotNull(string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.9775876581479563
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      Object object0 = JSONObject.NULL;
      jSONObject0.append("^/w`sOO9TX,9j*Q", object0);
      String string0 = jSONObject0.toString((-1915));
      assertNotNull(string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null, (-3406), (-3406));
      assertEquals("null", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      String string0 = JSONObject.valueToString(linkedList0);
      assertEquals("[]", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String string0 = JSONObject.valueToString(hashMap0);
      assertEquals("{}", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7127674647485507
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONObject jSONObject1 = jSONObject0.put("^/w`sOO9TX,9j*Q", (Collection) linkedList0);
      String string0 = jSONObject1.toString();
      assertNotNull(string0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.8486855577264172
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[16];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      String string0 = JSONObject.valueToString(jSONObject0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Object object0 = JSONObject.NULL;
      String string0 = JSONObject.valueToString(object0);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = JSONObject.valueToString((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.362568400406122
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(59, 59);
      JSONObject jSONObject0 = new JSONObject((Object) "^/w`sOO9TX,9j*Q");
      JSONArray jSONArray2 = jSONObject0.toJSONArray(jSONArray0);
      assertNotNull(jSONArray2);
      assertEquals(3, jSONObject0.length());
      assertEquals(60, jSONArray2.length());
      assertNotSame(jSONArray2, jSONArray1);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONObject0.toJSONArray(jSONArray0);
      assertNull(jSONArray1);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      JSONArray jSONArray0 = jSONObject0.toJSONArray((JSONArray) null);
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.6291821433649187
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      boolean boolean0 = jSONObject0.optBoolean("9G%`WW--g^KmW<g6");
      assertFalse(boolean0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.2776608407212988
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Short short0 = new Short((short)8448);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      int int0 = jSONObject0.optInt("jo\"</a$ U-%!5Lp@", 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.3906826278129532
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Integer integer0 = new Integer(695);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      long long0 = jSONObject0.optLong("\f");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.8717814824679821
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HashMap<Double, Integer> hashMap0 = new HashMap<Double, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      try { 
        jSONObject0.getJSONArray("\b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\\b\"] not found.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5936174605927702
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      boolean boolean0 = jSONObject0.optBoolean((String) null, false);
      assertEquals(3, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      try { 
        jSONObject0.append((String) null, "h/nc");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Null key.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", 3029L);
      jSONObject0.optString("", "");
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.631107479158123
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Float float0 = new Float(101.434);
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.optJSONObject("}oe;rfh`");
      assertEquals(8, jSONObject0.length());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.9338099989206319
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Short short0 = new Short((short)8448);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("y@4P0", (Collection) linkedList0);
      JSONArray jSONArray1 = jSONObject1.optJSONArray("y@4P0");
      assertEquals(5, stringArray0.length);
      assertNotNull(jSONArray1);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.0387301911573923
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Float float0 = new Float(101.434);
      String[] stringArray0 = JSONObject.getNames((Object) float0);
      JSONObject jSONObject0 = new JSONObject(float0, stringArray0);
      jSONObject0.toString(128, 83);
      assertEquals(8, jSONObject0.length());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.899528859375811
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", 3029L);
      jSONObject0.toString();
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      JSONObject jSONObject0 = new JSONObject((Map) hashMap0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertNull(jSONArray0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.3730039128771998
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0);
      JSONArray jSONArray0 = jSONObject0.names();
      assertEquals(2, jSONObject0.length());
      assertNotNull(jSONArray0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      String[] stringArray0 = JSONObject.getNames((Object) linkedList0);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = JSONObject.getNames((Object) null);
      assertNull(stringArray0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Integer integer0 = new Integer(695);
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject(integer0, stringArray0);
      String[] stringArray1 = JSONObject.getNames(jSONObject0);
      assertNull(stringArray1);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.4562909245092568
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      String[] stringArray0 = JSONObject.getNames(jSONObject0);
      assertEquals(3, jSONObject0.length());
      assertNotNull(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.6978169099032328
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.put("", 3029L);
      long long0 = jSONObject1.optLong("");
      assertEquals(4, jSONObject0.length());
      assertEquals(3029L, long0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.6761389064361045
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("b=z", true);
      long long0 = jSONObject1.optLong("b=z");
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.9251211907908186
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("", (double) 0L);
      try { 
        jSONObject0.getJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONObject.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0467385326945515
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Short short0 = new Short((short)8448);
      String[] stringArray0 = JSONObject.getNames((Object) short0);
      assertNotNull(stringArray0);
      
      JSONArray jSONArray0 = new JSONArray();
      JSONObject jSONObject0 = new JSONObject(jSONArray0, stringArray0);
      LinkedList<JSONArray> linkedList0 = new LinkedList<JSONArray>();
      JSONObject jSONObject1 = jSONObject0.put("I@4P0", (Collection) linkedList0);
      jSONObject1.getJSONArray("I@4P0");
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.6423651354584372
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.put("", 3029L);
      try { 
        jSONObject1.getJSONArray("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"\"] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.7439463313886603
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      jSONObject0.putOpt("^/w`sOO9TX,9j*Q", ",\n");
      int int0 = jSONObject0.optInt("^/w`sOO9TX,9j*Q");
      assertEquals(1, jSONObject0.length());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", 3029L);
      double double1 = jSONObject0.getDouble("");
      assertEquals(4, jSONObject0.length());
      assertEquals(3029.0, double1, 0.01);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.4335753918268728
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONObject jSONObject1 = jSONObject0.put("^/w`sOO9TX,9j*Q", (Collection) linkedList0);
      try { 
        jSONObject1.getDouble("^/w`sOO9TX,9j*Q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"^/w`sOO9TX,9j*Q\"] is not a number.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.9512595041439564
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.put("LbAD1`UYO)d6}#", true);
      boolean boolean0 = jSONObject1.optBoolean("LbAD1`UYO)d6}#", false);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.553848341566947
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      JSONObject jSONObject1 = jSONObject0.accumulate("A=^@(X7", "A=^@(X7");
      try { 
        jSONObject1.getBoolean("A=^@(X7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[\"A=^@(X7\"] is not a Boolean.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.9025992256713666
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", 3029L);
      boolean boolean0 = jSONObject0.optBoolean("");
      assertEquals(4, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.4821693083585323
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("", 3029L);
      int int0 = jSONObject0.getInt("");
      assertEquals(4, jSONObject0.length());
      assertEquals(3029, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = JSONObject.doubleToString((short)60);
      assertEquals("60", string0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = JSONObject.doubleToString((-1151.7123259118957));
      assertEquals("-1151.7123259118957", string0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.8184831630123652
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      JSONObject jSONObject1 = jSONObject0.put("^/w`sOO9TX,9j*Q", (Collection) linkedList0);
      jSONObject1.append("^/w`sOO9TX,9j*Q", stringArray0[0]);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      Iterator iterator0 = jSONObject0.keys();
      jSONObject0.append("val", iterator0);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.4218956404837546
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.put("", 3029L);
      try { 
        jSONObject1.append("", "zR,4%*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSONObject[] is not a JSONArray.
         //
         verifyException("wheel.json.JSONObject", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("isvalueOf", (Map) null);
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.4218956404837546
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      String[] stringArray0 = new String[10];
      JSONObject jSONObject1 = new JSONObject(jSONObject0, stringArray0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5358551955461084
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.put("W{yCp.d%YeGTR]Exy", 0L);
      boolean boolean0 = jSONObject1.isNull("W{yCp.d%YeGTR]Exy");
      assertEquals(4, jSONObject0.length());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      int int0 = jSONObject0.optInt("");
      assertEquals(0, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.6423651354584372
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      int int0 = jSONObject0.optInt("", 388);
      assertEquals(3, jSONObject0.length());
      assertEquals(388, int0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.8462202193216335
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HashMap<Boolean, String> hashMap0 = new HashMap<Boolean, String>();
      String[] stringArray0 = new String[1];
      JSONObject jSONObject0 = new JSONObject(hashMap0, stringArray0);
      jSONObject0.put("getsum", 25);
      double double0 = jSONObject0.optDouble("getsum", (double) 0);
      assertEquals(1, jSONObject0.length());
      assertEquals(25.0, double0, 0.01);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      String string0 = jSONObject0.optString(" .KE3?A");
      assertEquals("", string0);
      assertEquals(3, jSONObject0.length());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JSONObject jSONObject0 = null;
      try {
        jSONObject0 = new JSONObject("h/nc");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at character 1 of h/nc
         //
         verifyException("wheel.json.JSONTokener", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.4708084763221112
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      JSONObject jSONObject0 = new JSONObject(linkedList0, stringArray0);
      jSONObject0.put("{\"java.lang.String@0000000003\": \"java.lang.String@0000000004\"}", (-3608.5051));
      assertEquals(1, jSONObject0.length());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.329661348854758
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String[] stringArray0 = new String[2];
      JSONObject jSONObject0 = new JSONObject("-1151.7123259118957", stringArray0);
      JSONObject jSONObject1 = jSONObject0.put("wheel.json.JSONObject$1", (Object) null);
      assertEquals(0, jSONObject1.length());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.455500877075017
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      JSONObject jSONObject1 = jSONObject0.put("", 3029L);
      jSONObject1.accumulate("", double0);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.094408629847781
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      jSONObject0.put("get", (Collection) null);
      assertEquals(4, jSONObject0.length());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.3625664136253977
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Double double0 = new Double(5277.75677835751);
      JSONObject jSONObject0 = new JSONObject(double0);
      double double1 = jSONObject0.optDouble("");
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(3, jSONObject0.length());
  }
}
