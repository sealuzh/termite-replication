/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:18:24 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(14907, "7(4WTR/'}&L<.tHPs", "state.Player$JoinInfo", 1712, 1712);
      player0.getName();
      Player player1 = new Player(1712, "-lrxz?WE", 1712);
      player1.remove(player0);
      player0.isJoinOK(player1, true);
      player1.add(player0);
      player0.setMoney((-1720.2773F));
      player1.getZ();
      player1.getZ();
      player0.gangStrength();
      player0.gangStrength();
      player0.getMoney();
      File file0 = MockFile.createTempFile("yu=F7?g0tS<3l", "state.Player$JoinInfo", (File) null);
      MockFile mockFile0 = new MockFile(file0, "j*,NQy%");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(1535, "", "", (-10976), 1535);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)4;
      player0.unpack(byteArray0);
      player0.setX((-10976));
      player0.gangStrength();
      float float0 = player0.getX();
      assertEquals((-10976.0F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2090394390658616
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-1119.51F));
      player0.setDead();
      player0.setDead();
      player0.setZ((-2734));
      player0.type();
      player0.getY();
      player0.pack();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player1 = new Player((-2734), "R,Qcs3J&#~qj?9u:G", "state.Player$JoinInfo", (-437));
      player1.setJoinOK(player0, false);
      player1.setDead();
      player1.isJoinOK(player0, true);
      player1.isJoinOK(player0, false);
      player1.isConnected();
      player0.setZ(0.1F);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.3302170033301373
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.0F);
      player0.setY(10.0F);
      player0.setDead();
      player0.setDead();
      player0.setZ(0.2F);
      player0.type();
      player0.getY();
      player0.pack();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player1 = new Player((-1153), "", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-1153));
      player0.setJoinOK(player1, true);
      player0.setDead();
      player1.isJoinOK(player0, true);
      player0.isJoinOK(player1, false);
      player0.setX(10.0F);
      player1.isConnected();
      player0.setZ(723.89105F);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-115);
      Player player0 = new Player(4919, "", "e=", 4919, (-1640));
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      String string0 = player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(4919, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("", string0);
      assertEquals((-1640), player0.getStrength());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.KOREAN;
      Player player0 = new Player(22441, ".*[.]class$", (String) null, (byte)0, (-7600));
      Locale.getISOLanguages();
      player0.toString();
      String[] stringArray0 = Locale.getISOCountries();
      assertEquals(250, stringArray0.length);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2598627698445752
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-149), "", "", (-149));
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      Player player1 = new Player(3208, "", (short)4919);
      player1.boss = (Party) player0;
      player1.setJoinOK(player0, false);
      player0.setX(0.0F);
      player0.setJoinOK(player1, false);
      player0.setDead();
      player0.isJoinOK(player1, true);
      player0.getX();
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      Player player0 = new Player(514, ">vb`'ix/", (byte) (-1));
      Player player1 = new Player(4919, "zVEetKY|Xh#xZ", "hH3d;-N/Z", 493, (byte) (-1));
      player0.setJoinOK(player1, true);
      player1.setJoinOK(player0, false);
      Player player2 = new Player((-821), ">vb`'ix/", "hH3d;-N/Z", (byte) (-1));
      player2.add(player0);
      assertEquals("0.0.0.0", player0.getIP());
      
      boolean boolean0 = player2.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      int int0 = player1.getStrength();
      assertEquals((-1), int0);
      
      float float0 = player2.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(player2.isDead());
      assertEquals((-1), player2.getPictureId());
      assertEquals(">vb`'ix/", player2.getIP());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(1, player2.getStrength());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setX(2453);
      player0.id = 2453;
      player0.getName();
      Player player1 = new Player();
      player0.setConnected(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player1.setDead();
      player0.add(player1);
      Player player2 = new Player(2774, "M4}x~S,yRB", "", (short)4919);
      player1.prev = (Party) player2;
      player0.getMoney();
      player0.getMoney();
      player1.getName();
      System.setCurrentTimeMillis(2453);
      player0.isConnected();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte) (-43);
      byteArray0[6] = (byte)71;
      byteArray0[7] = (byte) (-109);
      byteArray0[8] = (byte)5;
      try { 
        mockFileInputStream0.read(byteArray0, (-1630), (int) (byte)5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      Player player0 = new Player((byte)0, "F:s*lqfySb?H!0$u*q", (byte)2);
      player0.unpack(byteArray0);
      player0.pack();
      player0.unpack(byteArray0);
      Player player1 = new Player((byte) (-1), "G!&141", (byte)0);
      player1.setJoinOK(player0, true);
      player0.setZ(3463.1267F);
      player0.setJoinOK(player1, false);
      Player player2 = new Player((byte)2, "G!&141", 5);
      player0.isJoinOK(player2, true);
      player2.isConnected();
      player0.getZ();
      // Undeclared exception!
      try { 
        player2.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.015748266385727
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Player player0 = new Player(1, "", "", 1, 1);
      player0.unpack(byteArray0);
      byte[] byteArray1 = player0.pack();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.add(player1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player2 = new Player(1, "", "nx", 0, 1);
      player2.isJoinOK(player1, false);
      player1.gangStrength();
      Player player3 = new Player();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      player3.setJoinOK(player1, false);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      player1.setJoinOK(player2, true);
      Player player4 = new Player((short)4919);
      player2.setJoinOK(player1, true);
      assertEquals("", player1.getName());
      
      Player player5 = new Player();
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player((-32197), "", 1374);
      player0.getMoney();
      player0.toString();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-5);
      byteArray0[6] = (byte) (-80);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 3);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(5, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.450507848988659
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((byte) (-1), "06:`V3hu~+<l", "06:`V3hu~+<l", 729);
      Player player1 = new Player(729, "", "06:`V3hu~+<l", 3686);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Player");
      player1.remove(player0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d&0lf{kai sB?<)W");
      Party party0 = new Party();
      player1.add(party0);
      player1.type();
      player0.setJoinOK(player1, false);
      player1.add(player0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = false;
      player0.isJoinOK(player1, false);
      // Undeclared exception!
      try { 
        player1.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1995756248310236
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.setDead();
      player0.setDead();
      player0.setZ(1.0F);
      player0.type();
      player0.setZ(1.0F);
      Player player1 = new Player(1802, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 4);
      player1.type();
      player1.getY();
      player0.pack();
      player0.getSubparty();
      player0.pack();
      Player player2 = new Player((short)4919, "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 1802, (short)4919);
      player2.setDead();
      player1.getTimeOfDeath();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player2.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-115);
      Player player0 = new Player(3, (String) null, "", (byte) (-64), (byte) (-64));
      player0.setMoney(1616.6013F);
      float float0 = player0.getMoney();
      assertEquals(1616.6013F, float0, 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3072109573039925
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      Player player0 = new Player((byte)2, "Jp`z 6h%~\"4zm{Qd", "Jp`z 6h%~\"4zm{Qd", (-478), 394);
      Player player1 = new Player(0);
      player0.setJoinOK(player1, false);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(394, player0.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals((-478), player0.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertTrue(boolean0);
      assertEquals("Player0", player1.toString());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.ITALY;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Player player0 = new Player(2810, "HR'`+B", "HR'`+B", 1177, 4919);
      player0.setJoinOK(player0, true);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1177, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(4919, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3, "7(7AFT]i@#8", 1000);
      player0.setDead((-1L), true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      player0.setY((-1838.68F));
      Player player1 = new Player(14085, "7(7AFT]i@#8", (String) null, (short)4919, 14085);
      player1.setJoinOK(player0, true);
      player0.setJoinOK(player1, false);
      player0.id = (-1470);
      player0.getMoney();
      player1.getStrength();
      player1.getX();
      player1.isConnected();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis((-317L));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.ITALY;
      Player player0 = new Player(2, (String) null, "#p-nFWs':8bn", 677);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-77);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[JA)c/171a[y0!}TeTL");
      Player player1 = new Player((byte) (-77), "", (String) null, 915, (-1564));
      player1.remove(player0);
      player1.add(player0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#p-nFWs':8bn");
      player0.type();
      player0.setConnected(true);
      player1.setJoinOK(player0, false);
      player1.add(player0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.isJoinOK(player1, false);
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = null;
      String string0 = "";
      int int0 = 1728;
      Player player1 = new Player(1198, "U>q+&", "U>q+&", 1198, 1728);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(1700, "a?", "", 1700);
      player0.toString();
      player0.setY(0.0F);
      player0.getPictureId();
      player0.setY((-2167.471F));
      player0.toString();
      player0.setY((-1486.7954F));
      player0.setY((-1940.242F));
      player0.isConnected();
      player0.getMoney();
      player0.getTimeOfDeath();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      Player player0 = new Player((-1303), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-1331));
      player0.setX((byte)2);
      player0.unpack(byteArray0);
      player0.setZ((byte)80);
      Player player1 = new Player(2308);
      player0.isJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      assertEquals(2.0F, player0.getX(), 0.01F);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" rcc");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 5, 5);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      Player player2 = new Player((byte)0, "fKcn:%", " rcc", (-1331), (-32197));
      player2.pack(dataOutputStream0);
      int int0 = player2.getPictureId();
      assertEquals((-1331), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-121);
      Player player0 = new Player(2851, "", 513);
      player0.getName();
      assertEquals(513, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1296233673511074
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(1073);
      Player player1 = new Player(0);
      player0.next = (Party) player1;
      player1.setDead();
      player0.setX(388.0F);
      byte[] byteArray0 = player0.pack();
      player1.getY();
      byte[] byteArray1 = player0.pack();
      player1.setZ((-1053.069F));
      player1.getY();
      player1.prev = (Party) player0;
      player0.setY(0.1F);
      player0.getIP();
      player1.unpack(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      Player player2 = new Player();
      player2.setZ(0);
      player2.unpack(byteArray1);
      assertEquals("Player1073", player2.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-115);
      Player player0 = new Player(2147340491);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-3090), "e=", (-4148));
      Player player1 = new Player(14907, "e=", "e=", (-2547));
      player0.setJoinOK(player1, true);
      player0.setJoinOK(player1, true);
      boolean boolean0 = false;
      player1.isJoinOK(player0, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      MockPrintStream mockPrintStream0 = new MockPrintStream("7(");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      Player player1 = new Player(2499);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte)40;
      player1.unpack(byteArray0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.KOREAN;
      Locale.getISOLanguages();
      Locale.getISOCountries();
      Player player0 = new Player();
      float float0 = player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Player player0 = new Player(4919, (String) null, "e=", 514, 4919);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(4);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0, false);
      Locale locale0 = Locale.GERMAN;
      Locale locale1 = locale0.stripExtensions();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) locale1;
      objectArray0[1] = (Object) player0;
      objectArray0[2] = (Object) mockPrintStream0;
      objectArray0[3] = (Object) mockPrintStream1;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ";
      mockPrintStream1.format(locale1, "", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream1);
      player0.pack(dataOutputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("Player4", player0.getName());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-1));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.JAPAN;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Locale locale1 = Locale.KOREAN;
      Player player0 = new Player((byte)0, "", "yqM$D>", (byte)0, (byte) (-1));
      player0.toString();
      String[] stringArray0 = Locale.getISOCountries();
      assertEquals(250, stringArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-2652));
      player0.setZ((-1.0F));
      player0.setX((-339.55457F));
      player0.setMoney(651.53F);
      player0.getPictureId();
      float float0 = player0.getY();
      assertEquals((-339.55457F), player0.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.1982462795335826
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(0, "0.0.0.0", "0.0.0.0", 4919, 0);
      Party party0 = new Party();
      party0.next = (Party) player0;
      player0.add(party0);
      player0.setMoney(0);
      player0.setDead(1L);
      player0.getIP();
      player0.setDead(1L, false);
      player0.setDead((long) 0);
      player0.setConnected(true);
      player0.setDead((-399L), false);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.setZ(0.0F);
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.getStrength();
      assertEquals((-399L), player0.getTimeOfDeath());
      
      player1.setMoney(0);
      player1.setDead(0L, false);
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.TAIWAN;
      Player player0 = new Player((byte)0, "}i*gJ`zjd\bD,>+", "", (byte) (-1), 1731);
      player0.pack();
      int int0 = player0.gangStrength();
      int int1 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertTrue(int1 == int0);
      assertEquals(1731, int1);
      assertEquals((-1), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(10.0F);
      Player player1 = new Player((short)4919, "=uwYOYytu@6", 2727);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      // Undeclared exception!
      try { 
        Locale.filter((List<Locale.LanguageRange>) null, (Collection<Locale>) list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      MockPrintStream mockPrintStream0 = new MockPrintStream("73T(");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      int int0 = player0.gangStrength();
      assertEquals(1, int0);
      
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream1, 967);
      mockPrintStream1.format("", (Object[]) null);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      boolean boolean0 = player0.isConnected();
      assertTrue(boolean0);
      
      long long0 = player0.getTimeOfDeath();
      assertEquals(0L, long0);
      
      player0.setY(0L);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 0, 0);
      player0.setY((-227.64644F));
      player0.setDead(3814L, false);
      player0.setY(0.0F);
      long long0 = player0.getTimeOfDeath();
      assertEquals(3814L, long0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.ITALY;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Player player0 = new Player((byte)2, "}i*gJ`zjd\bD,>+", (String) null, 5, 0);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-449));
      String string0 = "-M^S,";
      Player player1 = new Player((short)4919, "-M^S,", 2287);
      player1.head = (Party) player0;
      player0.setJoinOK(player1, false);
      player0.reset(true);
      player0.setMoney((-449));
      player0.id = 3;
      String string1 = "W#2{$\\pq";
      // Undeclared exception!
      try { 
        MockURI.create("W#2{$pq");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in fragment at index 3: W#2{$pq
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0, "kvqH%^$mt|e(j\"%u", "", 1, 4919);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      assertEquals("0.0.0.0", player1.getIP());
      
      player0.reset(false);
      assertEquals(4919, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("kvqH%^$mt|e(j\"%u", player0.getIP());
      assertEquals(1, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.ITALY;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(0, (String) null, "module.ModuleBrowserDialog$ModuleFilter", (-7600), (byte)2);
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(1.0F);
      Player player1 = new Player(5, "}i*gJ`zjd\bD,>+", 4);
      assertEquals(4, player1.getPictureId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.isDead();
      Locale.getISOLanguages();
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.ITALIAN;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.clear();
      Locale locale2 = Locale.ITALIAN;
      Set<String> set0 = locale2.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      // Undeclared exception!
      try { 
        Locale.filterTags((List<Locale.LanguageRange>) null, (Collection<String>) set0, locale_FilteringMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-423));
      player0.gangStrength();
      player0.setDead();
      player0.isDead();
      player0.isDead();
      player0.setY(1);
      player0.setDead();
      MockFile mockFile0 = new MockFile("");
      mockFile0.setReadable(true);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1073);
      Player player1 = new Player(0);
      player0.next = (Party) player1;
      player1.setDead();
      player0.setX(388.0F);
      byte[] byteArray0 = player0.pack();
      player1.getY();
      player0.pack();
      player1.setZ((-1053.069F));
      player1.getX();
      player1.boss = (Party) player0;
      player0.setY(0.1F);
      player0.getIP();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      byteArrayOutputStream0.close();
      // Undeclared exception!
      try { 
        byteArrayOutputStream0.write(byteArray0, 1073, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.JAPAN;
      Player player0 = new Player((byte)0, "joni7|m", (byte)0);
      player0.setZ((byte)0);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      float float1 = player0.getY();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.JAPAN;
      Object[] objectArray0 = new Object[5];
      Player player0 = new Player((byte)2, "yqM$D>", "", (byte)0, (byte)0);
      player0.toString();
      objectArray0[0] = (Object) (byte)0;
      objectArray0[2] = (Object) (byte) (-1);
      Locale.getISOCountries();
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) (byte) (-1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(10.0F);
      player0.setY(0.0F);
      player0.setDead();
      player0.setDead();
      player0.setZ(0.0F);
      player0.type();
      player0.getY();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.694124545362909
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.JAPAN;
      Player player0 = new Player();
      Player player1 = new Player(2147340491, "", "C]'v^U#:KHlH%<=t", 2147340491, 0);
      player1.setDead((long) 2147340491);
      player0.setJoinOK(player1, false);
      player0.setJoinOK(player1, false);
      player1.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(2147340491L, player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-115);
      Player player0 = new Player(3581, "e=", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (byte) (-64), (byte) (-64));
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("e=", player0.getIP());
      assertEquals((-64), int0);
      assertEquals((-64), player0.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.3872839993213795
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)83;
      Player player0 = new Player(1202, " ", "Osda%", 1202);
      Player player1 = new Player((byte)83, "e=", (byte)83);
      player0.setJoinOK(player1, false);
      player0.add(player1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = player0.isJoinOK(player1, false);
      Player player2 = new Player();
      int int0 = player1.gangStrength();
      assertEquals(2, int0);
      
      boolean boolean1 = player0.isJoinOK(player2, false);
      assertEquals("0.0.0.0", player2.getIP());
      assertTrue(player2.isConnected());
      assertEquals(0, player2.getPictureId());
      assertFalse(boolean1 == boolean0);
      assertEquals("Player-1", player2.getName());
      assertFalse(player2.isDead());
      assertEquals(" ", player0.getIP());
      assertEquals(1202, player0.getPictureId());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(228);
      byte[] byteArray0 = new byte[0];
      player0.unpack(byteArray0);
      Locale locale0 = Locale.ITALIAN;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.clear();
      Locale locale1 = Locale.ITALIAN;
      Set<String> set0 = locale1.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      // Undeclared exception!
      try { 
        Locale.filterTags((List<Locale.LanguageRange>) null, (Collection<String>) set0, locale_FilteringMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(0);
      Player player1 = new Player((short)4919);
      player0.add(player1);
      player0.getName();
      player0.getStrength();
      player0.gangStrength();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)5;
      player1.unpack(byteArray0);
      player0.getMoney();
      player0.getY();
      player1.getZ();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
