/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:19:30 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.GenericStorablePreparedStatement;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.store.raw.xact.TransactionTable;
import org.databene.commons.AssertionError;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.h2.jdbcx.JdbcConnectionPool;
import org.hsqldb.rowio.RowOutputText;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8165210425304488
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLUtil.renderValue("GGREGATON");
      SQLUtil.mutatesDataOrStructure("deleteexec.null, exec.null, exec.null, exec.null, exec.null");
      SQLUtil.isDDL("wP*H");
      System.setCurrentTimeMillis((-1228L));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "'GGREGATON'";
      stringArray0[1] = "wP*H";
      stringArray0[2] = "'GGREGATON'";
      stringArray0[3] = "'GGREGATON'";
      stringArray0[4] = "'GGREGATON'";
      stringArray0[5] = "'GGREGATON'";
      stringArray0[6] = "wP*H";
      stringArray0[7] = "GGREGATON";
      stringArray0[8] = "wP*H";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.isQuery("execexec");
      SQLUtil.leftJoin("Y", stringArray0, "alter session", "'GGREGATON'", stringArray0);
      SQLUtil.renderColumnListWithTableName("truncateexec", stringArray0);
      DBCatalog dBCatalog0 = new DBCatalog("'GGREGATON'");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("wP*H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.0677836456500724
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("exec");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      SQLUtil.isDDL("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-1228L));
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("updateinto");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" NOT", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockFile mockFile0 = new MockFile("left", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertNull(dBForeignKeyConstraint0.getDoc());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3480974722805594
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "< A(<du@6td+GC`g-";
      stringArray0[1] = "< A(<du@6td+GC`g-";
      stringArray0[2] = "< A(<du@6td+GC`g-";
      stringArray0[3] = "< A(<du@6td+GC`g-";
      stringArray0[4] = "< A(<du@6td+GC`g-";
      stringArray0[5] = "< A(<du@6td+GC`g-";
      SQLUtil.leftJoin("< A(<du@6td+GC`g-", stringArray0, "create table?(xm`o^wg,&lh", "< A(<du@6td+GC`g-", stringArray0);
      SQLUtil.normalize("< A(<du@6td+GC`g-", false);
      SQLUtil.isQuery("K:)g?.[DGtzy(pR");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.246022341854547
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.isQuery("alter materialized view");
      SQLUtil.removeComments("alter materialized view");
      SQLUtil.mutatesDataOrStructure("alter materialized view");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("?(xm`O^wG,&lH", true, defaultDBTable0, (String[]) null, defaultDBTable0, (String[]) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedWriter0, false);
      SQLUtil.isDDL("?(xm`O^wG,&lH");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-1228L));
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1082107938095715
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.join("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      SQLUtil.isDDL("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(1237L);
      String[] stringArray1 = new String[5];
      stringArray1[0] = string0;
      stringArray1[1] = "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null";
      stringArray1[2] = "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null";
      stringArray1[3] = string0;
      stringArray1[4] = "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null";
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null";
      objectArray0[3] = (Object) stringArray1[0];
      Object object2 = new Object();
      objectArray0[4] = object2;
      objectArray0[5] = (Object) "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null";
      String string1 = SQLUtil.renderWhereClause(stringArray1, objectArray0);
      // Undeclared exception!
      SQLUtil.isQuery(string1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "";
      SQLUtil.isQuery("");
      SQLUtil.removeComments("");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      // Undeclared exception!
      try { 
        stringBuilder0.replace((-24743057), 42111, "org.apache.derby.impl.store.access.btree.OpenBTree");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -24743057
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      StringBuilder stringBuilder2 = stringBuilder0.append(charArray0);
      stringBuilder1.append(2);
      stringBuilder2.append('|');
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      stringBuilder2.append("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      defaultDBTable0.setOwner(defaultDBTable1);
      defaultDBTable0.getColumnNames();
      String string0 = SQLUtil.typeAndName((DBObject) null);
      assertNull(string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4049182004940732
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Character character0 = Character.valueOf('o');
      SQLUtil.renderValue(character0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SQLUtil.normalize(".>#)|RBR6", true);
      DBSchema dBSchema0 = new DBSchema("selectw ` s : z \"/d\"");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "upc)";
      stringArray0[1] = "MoUllXTq";
      stringArray0[2] = ".>#)|RBR6";
      SQLUtil.leftJoin("sfe4A<c0voq54o)Vk", stringArray0, ".>#)|RBR6", "", stringArray0);
      SQLUtil.removeComments("sfe4A<c0voq54o)Vk");
      SQLUtil.join(" |[k%~Lw", "CLOB", stringArray0, "CLOB", ";R1$.@$*{u}", stringArray0);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "left join .>#)|RBR6 as  on sfe4A<c0voq54o)Vk.upc) = .upc) and sfe4A<c0voq54o)Vk.MoUllXTq = .MoUllXTq and sfe4A<c0voq54o)Vk..>#)|RBR6 = ..>#)|RBR6");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2403652918675414
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.leftJoin("EqAk`'", stringArray0, "< A(<du@6td+GC`g-", "EqAk`'", stringArray0);
      SQLUtil.normalize("w`s:Z\"/d", false);
      SQLUtil.isQuery("w ` s : Z \"/d\"");
      String string0 = ";2QcV .";
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "nf}JDfm?f_";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter tble";
      stringArray0[1] = "alter tble";
      stringArray0[2] = "alter tble";
      stringArray0[3] = "into";
      stringArray0[4] = "XMLCDATA";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XMLCDATA", true, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("XMLCDATA", "(3@Liq^m8$&u]q<3", (VersionNumber) null);
      SQLUtil.removeComments("alter tble");
      // Undeclared exception!
      try { 
        SQLUtil.join("into", "?D7oBdE$\"v94w", (String[]) null, " ADD ", "alter tble", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7627925747848114
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = "< A(<du@6tdB+GC`g-";
      SQLUtil.normalize("W`s:Z+/d", false);
      SQLUtil.isQuery("W ` s : Z + / d");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getRoleGrantDescriptor("v<h@s^QxO", "W ` s : Z + / d", ";2QcV .");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter table";
      stringArray0[1] = "alter table";
      stringArray0[2] = "alter table";
      stringArray0[3] = "into";
      stringArray0[4] = "XMLCDATA";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XMLCDATA", true, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(90063);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5960667877734185
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("exec");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      SQLUtil.isDDL("alter ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-80L));
      String[] stringArray1 = new String[6];
      stringArray1[0] = "gtfD@<)Nr{R-";
      stringArray1[2] = "exec";
      stringArray1[3] = "alter ";
      stringArray1[4] = "create materialized view";
      String string0 = "aUig?_+h24";
      stringArray1[5] = "aUig?_+h24";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.065667020707786
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.join("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("/;");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition(string0, stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append(true);
      stringBuilder2.append('k');
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-64), "");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", defaultDBTable0, dBDataType0, integer0, (Integer) null);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("execute111", defaultDBTable0, dBDataType0);
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("alter materialized view", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn2;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn("\nHAVING ", defaultDBTable0, dBDataType0, integer1, integer2);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn3;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      SQLUtil.renderColumnNames(dBColumnArray0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) pGConnectionPoolDataSource0);
      jdbcConnectionPool0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey((DBForeignKeyConstraint) null, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5804433332419343
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      String string0 = "org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode";
      SQLUtil.mutatesDataOrStructure("exec");
      SQLUtil.isDDL("alter materialized view");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-1228L));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "alter materialized view";
      stringArray0[1] = "org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode";
      stringArray0[2] = "xMY6gT+pYv~";
      stringArray0[3] = "a5";
      stringArray0[4] = "org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode";
      stringArray0[5] = "org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode";
      stringArray0[6] = "org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode";
      stringArray0[7] = "&6DmT";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.isQuery("alter materialized view");
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "XMLCDATA";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      defaultDBTable0.setOwner(defaultDBTable1);
      defaultDBTable2.getColumnNames();
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("execexec");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[11];
      StringBuilder stringBuilder0 = new StringBuilder("/;");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-64), "");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("execute111", defaultDBTable0, dBDataType0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter materialized view", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[13];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn1;
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("\nHAVING ", defaultDBTable0, dBDataType0, integer0, integer1);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn2;
      defaultDBColumn1.setDoc("WGr J)zjLM<~");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "nf}JDfm?f_";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("nf}JDfm?f_");
      String string1 = "XMLCDATA";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "XMLCDATA";
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      int int0 = 21;
      Integer.remainderUnsigned(122, 21);
      int int1 = 159;
      Integer.toUnsignedLong(159);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("nf}JDfm?f_", defaultDBTable0, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.71747278103407
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Character character0 = Character.valueOf('o');
      Character.isSurrogate('o');
      SQLUtil.renderValue(character0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[0];
      Object[] objectArray0 = new Object[1];
      SQLUtil.renderWhereClause(stringArray1, objectArray0);
      boolean boolean0 = true;
      NameSpec nameSpec0 = NameSpec.NEVER;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "";
      stringArray2[1] = "'o'";
      stringArray2[2] = "'o'";
      stringArray2[3] = "";
      stringArray2[4] = "";
      SQLUtil.renderColumnListWithTableName("'o'", stringArray2);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.469358363324484
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("exec");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[5];
      SQLUtil.renderColumnListWithTableName("exec", stringArray0);
      SQLUtil.isDML("");
      SQLUtil.mutatesStructure("exec");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getComponents();
      defaultDBTable0.getPrimaryKeyConstraint();
      SQLUtil.isDDL("");
      SQLUtil.isDML("exec.null, exec.null, exec.null, exec.null, exec.null");
      String string0 = SQLUtil.renderColumnListWithTableName("exec.null, exec.null, exec.null, exec.null, exec.null", stringArray0);
      assertEquals("exec.null, exec.null, exec.null, exec.null, exec.null.null, exec.null, exec.null, exec.null, exec.null, exec.null.null, exec.null, exec.null, exec.null, exec.null, exec.null.null, exec.null, exec.null, exec.null, exec.null, exec.null.null, exec.null, exec.null, exec.null, exec.null, exec.null.null", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Character character0 = Character.valueOf('o');
      Character.isSurrogate('o');
      SQLUtil.renderValue(character0);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = (double) 'o';
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1392921128169875
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Character character0 = Character.valueOf('o');
      SQLUtil.renderValue(character0);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 'o');
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.nval = (double) 'o';
      SQLUtil.renderNumber(streamTokenizer0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.isProcedureCall("111");
      SQLUtil.isDML("'o'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Character character0 = Character.valueOf('o');
      SQLUtil.renderValue(character0);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 'o');
      char[] charArray0 = new char[2];
      charArray0[1] = 'o';
      pipedWriter0.write(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      SQLUtil.renderNumber(streamTokenizer0);
      streamTokenizer0.pushBack();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2134798731348675
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.join("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("/;");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition(string0, stringBuilder0);
      stringBuilder1.append(true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-64), "");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", defaultDBTable0, dBDataType0, integer0, (Integer) null);
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("alter ", defaultDBTable0, dBDataType0, (Integer) null, (Integer) null);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      GenericStorablePreparedStatement genericStorablePreparedStatement0 = null;
      try {
        genericStorablePreparedStatement0 = new GenericStorablePreparedStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.GenericPreparedStatement", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7W'1X[2r\\']5");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7W'1X[2r\\']5";
      stringArray0[1] = "7W'1X[2r\\']5";
      stringArray0[2] = "7W'1X[2r\\']5";
      stringArray0[3] = "7W'1X[2r\\']5";
      stringArray0[4] = "7W'1X[2r\\']5";
      stringArray0[5] = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedWriter pipedWriter0 = new PipedWriter();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("7W'1X[2r\\']5", defaultDBTable0, 6, "c4dI 7)C!*oW{W");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("7W'1X[2r\\']5 C4DI 7)C!*OW{W NULL", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7413926873721288
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7W'1X[2r\\']5");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7W'1X[2r\\']5";
      stringArray0[1] = "7W'1X[2r\\']5";
      stringArray0[2] = "7W'1X[2r\\']5";
      stringArray0[3] = "7W'1X[2r\\']5";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "/*";
      stringArray1[1] = "/*";
      SQLUtil.renderColumnListWithTableName("/*", stringArray1);
      String string0 = "U\\y\"SdHzb=mkt86]";
      SQLUtil.isDML("XMLCDATA");
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("1:1: Tokens : ( T__61 | T__62 | T__63 | T__64 | T__65 | T__66 | T__67 | T__68 | T__69 | T__70 | T__71 | T__72 | T__73 | T__74 | T__75 | T__76 | T__77 | T__78 | T__79 | T__80 | T__81 | T__82 | T__83 | T__84 | T__85 | T__86 | T__87 | T__88 | T__89 | T__90 | T__91 | T__92 | T__93 | T__94 | T__95 | T__96 | T__97 | T__98 | T__99 | T__100 | T__101 | T__102 | T__103 | T__104 | T__105 | T__106 | T__107 | T__108 | T__109 | T__110 | T__111 | T__112 | T__113 | T__114 | T__115 | T__116 | T__117 | T__118 | T__119 | T__120 | T__121 | T__122 | T__123 | T__124 | T__125 | T__126 | T__127 | T__128 | T__129 | T__130 | T__131 | T__132 | T__133 | T__134 | T__135 | T__136 | T__137 | OR | AND | XOR | EQ | BANGEQ | LTGT | GT | GE | LT | LE | IS | NOT | NULL | IN | BETWEEN | PLUS | SUB | STAR | SLASH | PERCENT | BARBAR | ROWID | NUMBER | VARCHAR2 | NVARCHAR2 | BYTE | CHAR | DATE | TIMESTAMP | BEFORE | PRIMARY | DEFAULT | IDENTIFIER | INT | COMMENT | WS | STRING | QUOTED_NAME );");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"T__61 | T__62 | T__63 | T__64 | T__65 | T__66 | T__67 | T__68 | T__69 | T__70 | T__71 | T__72 | T__73 | T__74 | T__75 | T__76 | T__77 | T__78 | T__79 | T__80 | T__81 | T__82 | T__83 | T__84 | T__85 | T__86 | T__87 | T__88 | T__89 | T__90 | T__91 | T__92 | T__93 | T__94 | T__95 | T__96 | T__97 | T__98 | T__99 | T__100 | T__101 | T__102 | T__103 | T__104 | T__105 | T__106 | T__107 | T__108 | T__109 | T__110 | T__111 | T__112 | T__113 | T__114 | T__115 | T__116 | T__117 | T__118 | T__119 | T__120 | T__121 | T__122 | T__123 | T__124 | T__125 | T__126 | T__127 | T__128 | T__129 | T__130 | T__131 | T__132 | T__133 | T__134 | T__135 | T__136 | T__137 | OR | AND | XOR | EQ | BANGEQ | LTGT | GT | GE | LT | LE | IS | NOT | NULL | IN | BETWEEN | PLUS | SUB | STAR | SLASH | PERCENT | BARBAR | ROWID | NUMBER | VARCHAR2 | NVARCHAR2 | BYTE | CHAR | DATE | TIMESTAMP | BEFORE | PRIMARY | DEFAULT | IDENTIFIER | INT | COMMENT | WS | STRING | QUOTED_NAME\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "AGGREGATION";
      stringArray0[1] = "deleteexec.null, exec.null, exec.null, exec.null, exec.null";
      stringArray0[2] = "deleteexec.null, exec.null, exec.null, exec.null, exec.null";
      stringArray0[3] = "deleteexec.null, exec.null, exec.null, exec.null, exec.null";
      stringArray0[4] = "deleteexec.null, exec.null, exec.null, exec.null, exec.null";
      stringArray0[5] = "deleteexec.null, exec.null, exec.null, exec.null, exec.null";
      SQLUtil.isDML("deleteexec.null, exec.null, exec.null, exec.null, exec.null");
      DBSchema dBSchema0 = new DBSchema("AGGREGATION");
      TableContainer tableContainer0 = new TableContainer("xmlcdat");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("XgI", (DBSchema) null);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String[] stringArray1 = new String[3];
      stringArray1[0] = "2G(Z>T;";
      stringArray1[1] = "AGGREGATION";
      stringArray1[2] = "xmlcdat";
      // Undeclared exception!
      try { 
        defaultDBTable1.getForeignKeyConstraint(stringArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns (2G(Z>T;, AGGREGATION, xmlcdat)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("selecting ", 315);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4152914804021135
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SQLUtil.isQuery("alter table");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" yNULL");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " yNULL";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("W\"", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String[] stringArray1 = new String[7];
      stringArray1[0] = " yNULL";
      stringArray1[1] = "alter table";
      stringArray1[2] = "alter table";
      stringArray1[3] = "W\"";
      stringArray1[4] = "95R";
      stringArray1[5] = " yNULL";
      stringArray1[6] = "W\"";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8609037701089017
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.join("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("/;");
      SQLUtil.addRequiredCondition(string0, stringBuilder0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = "upc)";
      String string2 = "left";
      String[] stringArray1 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("dU9", stringArray0, "left", "exec", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("nf}JDfm?f_");
      String string0 = "XMLCDATA";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "XMLCDATA";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      defaultDBTable0.setOwner(defaultDBTable1);
      defaultDBTable2.getColumnNames();
      SQLUtil.typeAndName(defaultDBTable0);
      String string1 = "%0:@E>";
      DBDataType dBDataType0 = DBDataType.getInstance(190, "%0:@E>");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter table?(xm`o^wg,&lh", defaultDBTable1, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.402929804279346
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "teraU!j/H;|iWSM");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "7W'1X[2r\\']5";
      String string0 = SQLUtil.leftJoin("ALTER TABLE ", stringArray0, "=oY{E`Z7;!fE", "gBm", stringArray0);
      assertEquals("left join =oY{E`Z7;!fE as gBm on ALTER TABLE .7W'1X[2r\\']5 = gBm.7W'1X[2r\\']5 and ALTER TABLE .null = gBm.null and ALTER TABLE .null = gBm.null and ALTER TABLE .null = gBm.null and ALTER TABLE .null = gBm.null and ALTER TABLE .null = gBm.null and ALTER TABLE .null = gBm.null and ALTER TABLE .null = gBm.null and ALTER TABLE .null = gBm.null", string0);
      
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " and ", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" and ", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" and ", false, defaultDBTable0, stringArray0, dBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (7W'1X[2r\\']5, , , , , , , , ) REFERENCES null(7W'1X[2r\\']5, , , , , , , , )", string1);
      
      Object object0 = new Object();
      SQLUtil.substituteMarkers("Xp;4dkZsRTmT UM|", "alter session", object0);
      DBForeignKeyConstraint dBForeignKeyConstraint1 = defaultDBTable0.getForeignKeyConstraint(stringArray0);
      String string2 = SQLUtil.substituteMarkers("teraU!j/H;|iWSM", "7W'1X[2r\\']5", dBForeignKeyConstraint1);
      assertEquals("teraU!j/H;|iWSM", string2);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9593337382266454
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.renderColumnListWithTableName("drop table", stringArray0);
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.toUnsignedString((-1));
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("4294967295");
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      Integer integer3 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop table", defaultDBTable0, (DBDataType) null, integer2, integer3);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7601847720896657
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.join("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("/;");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition(string0, stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append(true);
      stringBuilder2.append('k');
      String string1 = "PGXAConnection.getConnection called";
      SQLUtil.normalize("PGXAConnection.getConnection called", false);
      SQLUtil.isQuery("/;");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0992975938210185
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter tble";
      stringArray0[1] = "alter tble";
      stringArray0[2] = "alter tble";
      stringArray0[3] = "into";
      stringArray0[4] = "XMLCDATA";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XMLCDATA", true, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      boolean boolean0 = false;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      Object object0 = new Object();
      Object object1 = new Object();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        mockPrintWriter0.printf((String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "XMLCDATA";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable2 = new DefaultDBTable();
      defaultDBTable2.getIndex("upc)");
      defaultDBTable0.setOwner(defaultDBTable1);
      defaultDBTable2.getColumnNames();
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("cJXfVTNA", defaultDBTable1, (DBDataType) null, integer0);
      defaultDBTable2.addColumn(defaultDBColumn0);
      String string0 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string0);
      assertEquals("table null", string0);
      
      String string1 = SQLUtil.ownerDotComponent(defaultDBTable2);
      assertEquals("null", string1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6349087093327204
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("alter table");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" NULL");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " NULL";
      stringArray0[1] = "XMLCDATA";
      stringArray0[2] = " NULL";
      stringArray0[3] = "alter table";
      stringArray0[4] = "alter table";
      stringArray0[5] = "alter table";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" NULL", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \" NULL\" ", stringBuilder0.toString());
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      String string0 = SQLUtil.renderQuery(defaultDBTable1, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE  NULL = ' NULL' AND XMLCDATA = 'XMLCDATA' AND  NULL = ' NULL' AND alter table = 'alter table' AND alter table = 'alter table' AND alter table = 'alter table'", string0);
      
      boolean boolean1 = SQLUtil.isProcedureCall("alter table");
      assertTrue(boolean1 == boolean0);
      
      String string1 = SQLUtil.ownerDotComponent(dBForeignKeyConstraint0);
      assertEquals(" NULL. NULL", string1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1980337727728396
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = SQLUtil.join("null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder("/;");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition(string0, stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append(true);
      StringBuilder stringBuilder3 = stringBuilder2.append('k');
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      stringBuilder3.append("/;");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("/;");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("&6_mn|'{wPr", true, defaultDBTable1, stringArray0, defaultDBTable1, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0);
      String string1 = SQLUtil.removeComments(string0);
      String[] stringArray1 = new String[5];
      stringArray1[0] = string1;
      stringArray1[1] = "XSS$}bgI)oPD";
      stringArray1[2] = "&6_mn|'{wPr";
      stringArray1[3] = "?D7oBdE$\"v94w";
      stringArray1[4] = "/;";
      // Undeclared exception!
      try { 
        SQLUtil.join("XSS$}bgI)oPD", "&6_mn|'{wPr", stringArray0, "&6_mn|'{wPr", "?D7oBdE$\"v94w", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9314830515574797
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "GGREGATON";
      String string1 = "deleteexec.null, exec.null, exec.null, exec.null, exec.null";
      String[] stringArray0 = new String[6];
      stringArray0[0] = "GGREGATON";
      String string2 = "drop tabledeleteexec.null, exec.null, exec.null, exec.null, exec.null";
      DBSchema dBSchema0 = new DBSchema("drop tabledeleteexec.null, exec.null, exec.null, exec.null, exec.null");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string3 = "U\\y\"SdHzb=mkt86]";
      String string4 = "&E";
      SQLUtil.isDML("&E");
      SQLUtil.mutatesStructure("drop tabledeleteexec.null, exec.null, exec.null, exec.null, exec.null");
      SQLUtil.isQuery("5");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("drop materialized viewj^k?!2zwq", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "3OT";
      stringArray0[1] = "insert";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[2] = "insert";
      stringArray0[3] = "org.apache.derby.impl.sql.compile.ScrollInsensitiveResultSetNode";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "insert", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("3OT", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      dBTable0.setOwner(defaultDBTable0);
      defaultDBTable0.getColumnNames();
      String string0 = SQLUtil.typeAndName(dBUniqueIndex0);
      assertNotNull(string0);
      assertEquals("index 3OT", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.325342919442848
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "";
      String string1 = "exec";
      SQLUtil.mutatesDataOrStructure("exec");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      String string2 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SQLUtil.isQuery("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("K07PteLe,2D");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "XMLCDATA";
      stringArray0[1] = "fWJ m$eX{{";
      stringArray0[2] = "l\"s{@l";
      String string0 = "Y";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("fWJ m$eX{{", (String[]) null, "Y", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SQLUtil.isQuery("alter table");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "P'cq=X*0bdN9}QPK";
      SQLUtil.isDML("Uy\"SdHzb=mkt86]");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8385947244385048
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = SQLUtil.normalize("y8&1x6:_i|=G|3>+", false);
      assertEquals("y8 & 1x6 : _i | = G | 3 > +", string0);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[3];
      String string1 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(, , )", string1);
      
      String[] stringArray1 = new String[5];
      stringArray1[0] = "y8 & 1x6 : _i | = G | 3 > +";
      stringArray1[1] = "aggregat";
      stringArray1[2] = "(, , )";
      stringArray1[3] = "?(xm`O^wG,&lH";
      stringArray1[4] = "^pEp m6p}L5;Jn";
      String string2 = SQLUtil.join((String) null, "y8&1x6:_i|=G|3>+", stringArray0, "CONSTRAINT ", "exec=*mgt;u^*]vy`0v", stringArray1);
      assertEquals("CONSTRAINT  as exec=*mgt;u^*]vy`0v on y8&1x6:_i|=G|3>+.null = exec=*mgt;u^*]vy`0v.y8 & 1x6 : _i | = G | 3 > + and y8&1x6:_i|=G|3>+.null = exec=*mgt;u^*]vy`0v.aggregat and y8&1x6:_i|=G|3>+.null = exec=*mgt;u^*]vy`0v.(, , )", string2);
      
      boolean boolean1 = SQLUtil.isProcedureCall("CONSTRAINT ");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7W'1X[2r\\']5");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7W'1X[2r\\']5";
      stringArray0[1] = "7W'1X[2r\\']5";
      stringArray0[2] = "7W'1X[2r\\']5";
      stringArray0[3] = "7W'1X[2r\\']5";
      stringArray0[4] = "7W'1X[2r\\']5";
      stringArray0[5] = "";
      stringArray0[6] = "7W'1X[2r\\']5";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.731556613448952
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "into";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("org.apache.derby.iapi.util.DoubleProperties", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      defaultDBTable0.getUniqueConstraints(true);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, true);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      boolean boolean0 = true;
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      URI uRI0 = MockURI.create("into");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7689192975524
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Px'?PtTr/(~K$");
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      String[] stringArray0 = new String[3];
      SQLUtil.renderColumnNames(stringArray0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = "&%dC\"";
      stringArray1[2] = "F9";
      stringArray1[3] = "";
      stringArray1[4] = null;
      SQLUtil.join("&%dC\"", "wd4", stringArray1, "", "", stringArray1);
      SQLUtil.isProcedureCall("defaultInfo");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      StringBuilder stringBuilder2 = stringBuilder0.append(charArray0);
      stringBuilder1.append(2);
      stringBuilder2.append('|');
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      stringBuilder2.append("");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("&6_mn|'{wPr");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("c013800d-00fb-2644-07ec-000000134f30", true, defaultDBTable2, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder2);
      SQLUtil.renderColumnListWithTableName("", stringArray0);
      SQLUtil.addRequiredCondition("E)#8ppeb+p^IAP!", stringBuilder0);
      GDSType.getType("Bit set cannot shrink from ");
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7302923387903943
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SQLUtil.parseColumnTypeAndSize("Mk{S\"8x");
      SQLUtil.removeComments("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      SQLUtil.normalize("", false);
      DBSchema dBSchema0 = new DBSchema("6");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "9ai_\",]2l";
      stringArray0[2] = "6";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "9ai_\",]2l";
      String string0 = "truncate";
      SQLUtil.leftJoin("9ai_\",]2l", stringArray0, "truncate", "", stringArray0);
      SQLUtil.removeComments("");
      SQLUtil.join("", "", stringArray0, "alter indexalter materialized view", "x_go0;GcN)6P", stringArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "alter indexalter materialized view as x_go0;GcN)6P on . = x_go0;GcN)6P. and .9ai_\",]2l = x_go0;GcN)6P.9ai_\",]2l and .6 = x_go0;GcN)6P.6 and . = x_go0;GcN)6P. and . = x_go0;GcN)6P. and . = x_go0;GcN)6P. and .9ai_\",]2l = x_go0;GcN)6P.9ai_\",]2l";
      stringArray1[3] = "alter indexalter materialized view as x_go0;GcN)6P on . = x_go0;GcN)6P. and .9ai_\",]2l = x_go0;GcN)6P.9ai_\",]2l and .6 = x_go0;GcN)6P.6 and . = x_go0;GcN)6P. and . = x_go0;GcN)6P. and . = x_go0;GcN)6P. and .9ai_\",]2l = x_go0;GcN)6P.9ai_\",]2l";
      stringArray1[4] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = null;
      try {
        dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint((DBTable) null, "alter indexalter materialized view", false, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBPrimaryKeyConstraint", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4697253909244914
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter table";
      stringArray0[1] = "alter table";
      stringArray0[2] = "alter table";
      stringArray0[3] = "into";
      stringArray0[4] = "XMLCDATA";
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = new Integer((-2954));
      DBDataType dBDataType0 = DBDataType.getInstance((-1627383850), "CHECK ");
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("META", defaultDBTable0, dBDataType0, integer2, integer2);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      Object object0 = new Object();
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      System.setCurrentTimeMillis(1L);
      SQLUtil.renderColumnNames(stringArray0);
      TableContainer tableContainer0 = new TableContainer("renameaggregat");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("CHECK ", (DBSchema) null);
      defaultDBTable1.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[8];
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("nf}JDfm?f_");
      String string0 = "XMLCDATA";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "XMLCDATA";
      stringArray1[1] = "XMLCDATA";
      stringArray1[2] = "nf}JDfm?f_";
      stringArray1[3] = "into";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XMLCDATA", true, defaultDBTable1, stringArray1, defaultDBTable1, stringArray0);
      PipedWriter pipedWriter0 = new PipedWriter();
      boolean boolean0 = false;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "into", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      int int0 = 486;
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider(486);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 486, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2344281389559963
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.setOwner((CompositeDBObject<?>) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "z3.C_=o/>.-o}p\"-m";
      stringArray0[1] = "z3.C_=o/>.-o}p\"-m";
      stringArray0[2] = "z3.C_=o/>.-o}p\"-m";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "z3.C_=o/>.-o}p\"-m", false, stringArray0);
      defaultDBTable0.isIdentical(dBPrimaryKeyConstraint0);
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      DBUniqueConstraint dBUniqueConstraint0 = defaultDBTable0.getUniqueConstraint("z3.C_=o/>.-o}p\"-m");
      String string0 = SQLUtil.constraintName(dBUniqueConstraint0);
      assertEquals("CONSTRAINT z3.C_=o/>.-o}p\"-m ", string0);
      
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("v]M{p0@-ym$}pY'HDm", false, defaultDBTable0, (String[]) null, defaultDBTable0, stringArray0);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("CONSTRAINT z3.C_=o/>.-o}p\"-m ", "djbh0bOe;\"}Tb", (VersionNumber) null);
      DBSchema dBSchema0 = new DBSchema("#BKPb>bd-(Z8h");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("(3@Liq^m8$&u]q<3", dBSchema0);
      defaultDBTable1.getUniqueConstraint(stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable1, "Fza>", false, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint1, nameSpec0);
      assertEquals("PRIMARY KEY ()", string1);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7925892665640024
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SQLUtil.removeComments("`$*-eg9&zZDT`Z");
      SQLUtil.normalize("`$*-eg9&zZDT`Z", true);
      DBSchema dBSchema0 = new DBSchema("`$*-eg9&zZDT`Z");
      SQLUtil.isDDL("`$*-eg9&zZDT`Z");
      SQLUtil.isDML("Uy\"SdHzb=mkt86]");
      SQLUtil.mutatesStructure("J^K?!2zWq");
      SQLUtil.isQuery("J^K?!2zWq");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getTriggerDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4412304851013187
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition((String) null, stringBuilder0);
      char[] charArray0 = new char[1];
      stringBuilder0.append(581.3348F);
      charArray0[0] = 'e';
      StringBuilder stringBuilder2 = stringBuilder0.append(charArray0);
      stringBuilder1.append(2);
      stringBuilder2.append('|');
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      stringBuilder2.append("");
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("&6_mn|'{wPr");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("c013800d-00fb-2644-07ec-000000134f30", true, defaultDBTable2, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder2);
      SQLUtil.normalize("&6_mn|'{wPr", true);
      SQLUtil.addRequiredCondition("E)#8ppeb+p^IAP!", stringBuilder0);
      GDSType.getType("Bit set cannot shrink from ");
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = SQLUtil.normalize("X,mpM^V!2", false);
      assertEquals("X, mpM ^ V ! 2", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      RowOutputText rowOutputText0 = new RowOutputText("K2A9'hS&p6mNTE", "oNjAh6mfLp26", "K2A9'hS&p6mNTE", false, "K2A9'hS&p6mNTE");
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputText0, false);
      Locale locale0 = Locale.GERMANY;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "Ydye6M7= x@s", (Object[]) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('Q');
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, true, nameSpec0, printWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5407108604577937
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "";
      String string1 = "exec";
      SQLUtil.mutatesDataOrStructure("exec");
      String[] stringArray0 = new String[5];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8634839209171903
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[2] = "Kx-;C9#R4}3\"!K^";
      SQLUtil.renderColumnNames(stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "defaultInfo";
      stringArray1[1] = "^pEp m6p}L5;Jn^n";
      stringArray1[2] = "(, , Kx-;C9#R4}3\"!K^, )";
      stringArray1[3] = "defaultInfo";
      String string0 = SQLUtil.join("^pEp m6p}L5;Jn^n", "defaultInfo", stringArray1, (String) null, stringArray0[0], stringArray0);
      assertEquals("^pEp m6p}L5;Jn^n join null as null on defaultInfo.defaultInfo = null.null and defaultInfo.^pEp m6p}L5;Jn^n = null.null and defaultInfo.(, , Kx-;C9#R4}3\"!K^, ) = null.Kx-;C9#R4}3\"!K^ and defaultInfo.defaultInfo = null.null", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("defaultInfo");
      assertFalse(boolean0);
      
      String string1 = SQLUtil.renderColumnNames(stringArray1);
      assertEquals("(defaultInfo, ^pEp m6p}L5;Jn^n, (, , Kx-;C9#R4}3\"!K^, ), defaultInfo)", string1);
      
      String string2 = SQLUtil.renderColumnListWithTableName("defaultInfo", stringArray1);
      assertEquals("defaultInfo.defaultInfo, defaultInfo.^pEp m6p}L5;Jn^n, defaultInfo.(, , Kx-;C9#R4}3\"!K^, ), defaultInfo.defaultInfo", string2);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0855157583485786
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SQLUtil.isProcedureCall("AGGREGATION");
      SQLUtil.isDML("AGGREGATION");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "AGGREGATION";
      stringArray0[1] = "AGGREGATION";
      stringArray0[2] = "AGGREGATION";
      String string0 = "3Ry:hDOZBr";
      String[] stringArray1 = new String[9];
      stringArray1[0] = "3Ry:hDOZBr";
      stringArray1[1] = "Q+*i.I@BC|o-E(-T";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "0W1#[f5.'yz/MItu1";
      stringArray1[6] = "AGGREGATION";
      stringArray1[7] = "3Ry:hDOZBr";
      stringArray1[8] = "3Ry:hDOZBr";
      SQLUtil.innerJoin("0W1#[f5.'yz/MItu1", stringArray0, "3Ry:hDOZBr", "", stringArray1);
      SQLUtil.renderColumnListWithTableName("0W1#[f5.'yz/MItu1", stringArray1);
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      String string1 = ":Ai8]M_?&\\%7";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string2 = "further problems destroying connection: ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "further problems destroying connection: ", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("3Ry:hDOZBr as  on 0W1#[f5.'yz/MItu1.AGGREGATION = .3Ry:hDOZBr and 0W1#[f5.'yz/MItu1.AGGREGATION = .Q+*i.I@BC|o-E(-T and 0W1#[f5.'yz/MItu1.AGGREGATION = .", false, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.getTable();
      // Undeclared exception!
      try { 
        DBDataType.getInstance("4>HIQz+c,7<.7Rb ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.1463096566766366
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = "i1x\"6^sp";
      SQLUtil.mutatesStructure("i1x\"6^sp");
      SQLUtil.parseColumnTypeAndSize("i1x\"6^sp");
      SQLUtil.isDDL("");
      SQLUtil.renderValue("");
      int int0 = 1480;
      StringBuilder stringBuilder0 = new StringBuilder(1480);
      char[] charArray0 = new char[9];
      charArray0[0] = 'X';
      charArray0[1] = 'p';
      charArray0[2] = ')';
      charArray0[3] = '1';
      charArray0[4] = 'A';
      charArray0[5] = '4';
      charArray0[6] = ';';
      charArray0[7] = '0';
      charArray0[8] = '5';
      StringBuilder stringBuilder1 = stringBuilder0.append(charArray0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(1480, "''");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1480
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.717020786717215
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter table";
      stringArray0[1] = "alter table";
      stringArray0[2] = "alter table";
      stringArray0[3] = "into";
      stringArray0[4] = "XMLCDATA";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XMLCDATA", true, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("XMLCDATA", "(3@Liq^m8$&u]q<3", (VersionNumber) null);
      DBSchema dBSchema0 = new DBSchema("(3@Liq^m8$&u]q<3");
      SQLUtil.isDDL("+2/2CXU");
      SQLUtil.isDML("");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "[CJTy?L>");
      StringBuilder stringBuilder1 = stringBuilder0.append(false);
      StringBuilder stringBuilder2 = stringBuilder1.append(0.0);
      StringBuilder stringBuilder3 = SQLUtil.addOptionalCondition("[CJTy?L>", stringBuilder2);
      SQLUtil.addRequiredCondition("[CJTy?L>", stringBuilder3);
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("[CJTy?L>");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "insert";
      stringArray0[1] = "insert";
      stringArray0[2] = "select into";
      stringArray0[3] = "6%l?hVg)H|4;#7+";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter materialized viewpdvl", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex((String) null, true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized viewpdvl", defaultDBTable0, 1, "drop indexpdvl");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("select into", dBTable0, 1454, "Wh`k3LD+");
      DBDataType dBDataType0 = DBDataType.getInstance(1, "drop indexpdvl");
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("insert", defaultDBTable1, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("alter materialized viewpdvl, insert, alter materialized viewpdvl, alter materialized viewpdvl", string0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8128472473606743
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SQLUtil.normalize("y8&1x6:_i|=G|3>+", false);
      SQLUtil.mutatesStructure("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "?(xm`O^wG,&lH";
      stringArray0[1] = "y8 & 1x6 : _i | = G | 3 > +";
      stringArray0[2] = "y8 & 1x6 : _i | = G | 3 > +";
      SQLUtil.renderColumnListWithTableName("?(xm`O^wG,&lH", stringArray0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      VersionNumber versionNumber0 = new VersionNumber(arrayList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase((String) null, "", versionNumber0);
      defaultDatabase0.getTable("?(xm`O^wG,&lH", false);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      String[] stringArray0 = new String[3];
      Character character0 = Character.valueOf('x');
      SQLUtil.substituteMarkers("ewVro_ILyR", "SELECT relname FROM pg_catalog.pg_class WHERE oid = ?", character0);
      stringArray0[0] = "@Ns#igcj9w<ug";
      String[] stringArray1 = new String[7];
      SQLUtil.renderColumnListWithTableName("alter materialized view", stringArray1);
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      int int0 = (-1);
      Integer.toUnsignedString(807);
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      Object object0 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized view");
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider((-85518062));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)88;
      byte byte0 = (byte) (-54);
      byteArray0[5] = (byte) (-54);
      byte byte1 = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)8;
      byteArray0[8] = (byte) (-62);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "alter materialized view";
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "alter materialized view", integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1524);
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      charArray0[1] = 'J';
      charArray0[2] = '+';
      charArray0[3] = 'B';
      charArray0[4] = '{';
      pipedWriter0.write(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      streamTokenizer0.pushBack();
      streamTokenizer0.ordinaryChar((-2295));
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isDML("exec");
      System.setCurrentTimeMillis(2466L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string1 = SQLUtil.renderValue(pipedWriter0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String string0 = "";
      SQLUtil.isQuery("");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.join("fH8Q`r)41u[j]RXR-;<", "fH8Q`r)41u[j]RXR-;<", stringArray0, "", "fH8Q`r)41u[j]RXR-;<", stringArray0);
      String string0 = "drop table";
      String string1 = "/;";
      StringBuilder stringBuilder0 = new StringBuilder("/;");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("fH8Q`r)41u[j]RXR-;< join  as fH8Q`r)41u[j]RXR-;< on ", stringBuilder0);
      boolean boolean0 = true;
      stringBuilder1.append(true);
      char char0 = 'k';
      TransactionTable transactionTable0 = null;
      try {
        transactionTable0 = new TransactionTable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.TransactionTable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String string0 = "call?(xm`o^wg,&lh";
      String string1 = "<mk";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("<mk", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7W'1X[2r\\']5");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7W'1X[2r\\']5";
      stringArray0[1] = "7W'1X[2r\\']5";
      stringArray0[2] = "7W'1X[2r\\']5";
      stringArray0[3] = "7W'1X[2r\\']5";
      stringArray0[4] = "7W'1X[2r\\']5";
      stringArray0[5] = "";
      stringArray0[6] = "7W'1X[2r\\']5";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[7] = "7W'1X[2r\\']5";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("deleteuy\"sdhzb=mkt86]");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "deleteuy\"sdhzb=mkt86]";
      stringArray0[1] = "deleteuy\"sdhzb=mkt86]";
      stringArray0[2] = "deleteuy\"sdhzb=mkt86]";
      stringArray0[3] = "deleteuy\"sdhzb=mkt86]";
      stringArray0[4] = "i";
      stringArray0[5] = "deleteuy\"sdhzb=mkt86]";
      stringArray0[6] = "deleteuy\"sdhzb=mkt86]";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "deleteuy\"sdhzb=mkt86]", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      SQLUtil.addRequiredCondition("deleteuy\"sdhzb=mkt86]", stringBuilder0);
      assertEquals("CONSTRAINT deleteuy\"sdhzb=mkt86]  and deleteuy\"sdhzb=mkt86]", stringBuilder0.toString());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.318305686891819
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery("alter table");
      assertFalse(boolean0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" NULL");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " NULL";
      stringArray0[1] = "XMLCDATA";
      stringArray0[2] = " NULL";
      stringArray0[3] = "alter table";
      stringArray0[4] = "alter table";
      stringArray0[5] = "alter table";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" NULL", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \" NULL\" ", stringBuilder0.toString());
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      boolean boolean1 = SQLUtil.isDDL("iTKz,mLNcPGI");
      boolean boolean2 = SQLUtil.isDML("into");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7810405096736122
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("nf}JDfm?f_");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "alter tble";
      stringArray0[1] = "alter tble";
      stringArray0[2] = "alter tble";
      stringArray0[3] = "into";
      stringArray0[4] = "XMLCDATA";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("XMLCDATA", true, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "XMLCDATA";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "alter tble";
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[4] = (Object) dBForeignKeyConstraint0;
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      Object object2 = new Object();
      objectArray0[5] = object2;
      mockPrintWriter0.printf("enter ", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("XMLCDATA", "(3@Liq^m8$&u]q<3", (VersionNumber) null);
      DBSchema dBSchema0 = new DBSchema("(3@Liq^m8$&u]q<3");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("XMLCDATA", dBSchema0);
      defaultDBTable1.getUniqueConstraint(stringArray0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      System.setCurrentTimeMillis((-1969L));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("u&b6#g;0m)y56c-Fa ");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "u&b6#g;0m)y56c-Fa ";
      stringArray0[1] = "u&b6#g;0m)y56c-Fa ";
      stringArray0[2] = "D!}=G*M&J9Spb;^( >P";
      stringArray0[3] = "u&b6#g;0m)y56c-Fa ";
      stringArray0[4] = "u&b6#g;0m)y56c-Fa ";
      stringArray0[5] = "u&b6#g;0m)y56c-Fa ";
      stringArray0[6] = "u&b6#g;0m)y56c-Fa ";
      stringArray0[7] = "f:42[(a:^G^j[r";
      stringArray0[8] = "u&b6#g;0m)y56c-Fa ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "u&b6#g;0m)y56c-Fa ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT \"u&b6#g;0m)y56c-Fa \" UNIQUE (u&b6#g;0m)y56c-Fa , u&b6#g;0m)y56c-Fa , D!}=G*M&J9Spb;^( >P, u&b6#g;0m)y56c-Fa , u&b6#g;0m)y56c-Fa , u&b6#g;0m)y56c-Fa , u&b6#g;0m)y56c-Fa , f:42[(a:^G^j[r, u&b6#g;0m)y56c-Fa )", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      String string0 = "F9";
      String string1 = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string2 = "1st column";
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "1st column", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String[] stringArray1 = new String[3];
      String string3 = "";
      stringArray1[0] = "";
      stringArray1[1] = "F9";
      stringArray1[2] = "1st column";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("F9", true, dBTable0, stringArray0, dBTable0, stringArray1);
      columnDescriptorList0.add((Object) dBForeignKeyConstraint0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.databene.jdbacl.model.DBForeignKeyConstraint cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.0120895698602603
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("create tabl2`x*tf<zpl");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean1 = SQLUtil.mutatesStructure("org.databene.commons.bean.TypedPropertyMutator");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = "Fi.J.Eog~\"Fez%";
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("Fi.J.Eog~\"Fez%", "Fi.J.Eog~\"Fez%", (VersionNumber) null);
      String string1 = "update";
      defaultDatabase0.getTable("update", false);
      String string2 = "org.apache.derby.impl.store.access.btree.OpenBTree";
      DBNotNullConstraint dBNotNullConstraint0 = null;
      try {
        dBNotNullConstraint0 = new DBNotNullConstraint((DBTable) null, "org.apache.derby.impl.store.access.btree.OpenBTree", false, "");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // owner is not supposed to be null
         //
         verifyException("org.databene.commons.Assert", e);
      }
  }
}
