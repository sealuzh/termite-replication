/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 14:08:25 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.456498665803769
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-riuexCt");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator("-padText");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(true);
      outputFormat3.getNewLineAfterNTags();
      OutputFormat outputFormat4 = new OutputFormat("-riuexCt", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml#v{%<\"UmszwY}";
      stringArray0[1] = "-xhtml+J7hU";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-xhtml+J7hU";
      stringArray0[4] = "XW|@";
      stringArray0[5] = "";
      stringArray0[6] = "-xhtml+J7hU";
      stringArray0[7] = "";
      outputFormat1.parseOptions(stringArray0, 0);
      assertEquals("-padText", outputFormat1.getLineSeparator());
      
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat3.parseOptions(stringArray0, 0);
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      String string0 = outputFormat5.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.2912668801316993
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setLineSeparator("Xp*`l]b");
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(true);
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.getEncoding();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setEncoding("-xhtml Z'7Ra, ");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat1.getAttributeQuoteCharacter();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "!8E#Ac";
      stringArray0[2] = null;
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-3182));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3182
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1385592128189197
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", false);
      assertEquals("Invalid attribute quote character (", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat1.setIndent("-indent");
      outputFormat1.setIndent(false);
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat1.setIndentSize((-1));
      outputFormat2.setIndent("IC{");
      assertFalse(outputFormat2.isNewlines());
      
      outputFormat0.setIndent(false);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Invalid attribute quote character (";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "L$StF?,[y";
      stringArray0[4] = "Invalid attribute quote character (";
      stringArray0[5] = "";
      stringArray0[7] = "";
      outputFormat1.setTrimText(false);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setIndent(false);
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isTrimText());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isPadText());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-indent";
      stringArray1[1] = "";
      stringArray1[2] = "-indent";
      stringArray1[3] = "";
      stringArray1[4] = "=V`MXM5pw3";
      int int0 = outputFormat3.parseOptions(stringArray1, 0);
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertFalse(outputFormat3.isNewlines());
      assertEquals(4, int0);
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertFalse(outputFormat3.isOmitEncoding());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isTrimText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8651730426288506
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = new OutputFormat("-xhtml:@\"+pr>\"yjq\"I*Shn");
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat1.setNewlines(false);
      OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator("-indentSize");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setAttributeQuoteCharacter('\"');
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent(true);
      outputFormat3.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-xhtml:@\"+pr>\"yjq\"I*Shn";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-xhtml:@\"+pr>\"yjq\"I*Shn";
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-xhtml:@\"+pr>\"yjq\"I*Shn\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.238117169196513
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Invalid attribute quote character (", false);
      outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      OutputFormat outputFormat1 = new OutputFormat("-suppressDeclaration");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent("-trimText");
      OutputFormat outputFormat3 = new OutputFormat();
      OutputFormat outputFormat4 = new OutputFormat((String) null);
      outputFormat4.setIndent("");
      outputFormat3.setIndent(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "";
      stringArray0[2] = "-suppressDeclaration";
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      outputFormat4.setIndent(false);
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.986061390788274
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "]mMqS";
      stringArray0[2] = "3AU_8Zv";
      stringArray0[3] = "{JAvz@nT;uW5][";
      stringArray0[4] = "-omitEncoding";
      stringArray0[5] = "'";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("]mMqS", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9470986952450837
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("t)]*Ix\"U.2d8TwVN");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      OutputFormat outputFormat2 = new OutputFormat("nnt", false, (String) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmpty-trimText";
      stringArray0[1] = "nnt";
      stringArray0[2] = "R\"fLi~Bnb$J0%%>[";
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat1.setIndent(true);
      outputFormat1.parseOptions(stringArray0, 537);
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3423697177620997
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      OutputFormat outputFormat1 = new OutputFormat("", true, "-xhtmlL$StF?,[y");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtmlL$StF?,[y";
      stringArray0[1] = "-xhtmlL$StF?,[y";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-xhtmlL$StF?,[y";
      stringArray0[6] = "-trimText";
      stringArray0[7] = "";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      int int0 = outputFormat1.parseOptions(stringArray0, 1);
      assertTrue(outputFormat1.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.049198027677203
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("X\"m3v");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat2.setLineSeparator("-trimText");
      outputFormat3.setSuppressDeclaration(false);
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat5 = new OutputFormat("-trimText", false, "");
      outputFormat5.parseOptions(stringArray0, 1);
      outputFormat3.setNewLineAfterDeclaration(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat6 = new OutputFormat("-lineSeparator", false, "");
      outputFormat6.getIndent();
      outputFormat1.isNewLineAfterDeclaration();
      OutputFormat outputFormat7 = OutputFormat.createCompactFormat();
      outputFormat7.getLineSeparator();
      outputFormat4.parseOptions(stringArray0, 1);
      outputFormat2.getLineSeparator();
      assertEquals("-trimText", outputFormat2.getLineSeparator());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8721641092944346
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("-trimText");
      OutputFormat outputFormat1 = new OutputFormat("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-trimText";
      OutputFormat.createCompactFormat();
      stringArray0[1] = "Q,: lv";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-22));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -22
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.366210333430539
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[5];
      stringArray0[1] = "";
      stringArray0[1] = "";
      stringArray0[2] = "j~j9/L9ZP";
      outputFormat0.setNewLineAfterNTags(210);
      stringArray0[3] = "";
      stringArray0[4] = "v*Nq|:W";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent(false);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray1 = new String[5];
      stringArray1[0] = "de";
      stringArray1[1] = "de";
      stringArray1[2] = "";
      stringArray1[3] = "de";
      stringArray1[4] = "";
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.isSuppressDeclaration();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7055388825605595
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":@\"+pr>\"yjq\"I*Shn", true, ":@\"+pr>\"yjq\"I*Shn");
      outputFormat0.setIndent(":@\"+pr>\"yjq\"I*Shn");
      outputFormat0.setEncoding(":@\"+pr>\"yjq\"I*Shn");
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = new OutputFormat(":@\"+pr>\"yjq\"I*Shn");
      outputFormat1.isSuppressDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":@\"+pr>\"yjq\"I*Shn";
      outputFormat2.parseOptions(stringArray0, 0);
      outputFormat2.setSuppressDeclaration(true);
      outputFormat1.getIndent();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isNewlines();
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat2.setIndent(":@\"+pr>\"yjq\"I*Shn");
      assertFalse(outputFormat2.isNewlines());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3217798019468048
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("np=vHjV", true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(true);
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "xG_lA0)fEeA";
      stringArray0[1] = "\n";
      stringArray0[2] = "xG_lA0)fEeA";
      stringArray0[3] = "";
      stringArray0[4] = "\n";
      stringArray0[5] = "";
      stringArray0[6] = "0W1#[f5.'yz/MItu1";
      stringArray0[7] = "xG_lA0)fEeA";
      stringArray0[8] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewlines(false);
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.isOmitEncoding();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setNewlines(false);
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewlines());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[4];
      outputFormat0.parseOptions(stringArray0, 815);
      outputFormat0.setIndentSize((-1));
      stringArray0[0] = "-expandEmpty-trimText";
      stringArray0[1] = "-expandEmpty-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[3] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 1858);
      outputFormat0.setIndent(false);
      outputFormat0.parseOptions(stringArray0, 1858);
      outputFormat0.setIndent("cOVzs");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Invalid attr";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setEncoding("_V a,*TAUDZr");
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setAttributeQuoteCharacter('\'');
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\'', char0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.043508145822018
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("qf&MUWuo");
      outputFormat1.setIndent("%nvU~");
      outputFormat1.setIndent("");
      outputFormat1.setLineSeparator("E]BcrU n\"F");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat1.getIndent();
      assertEquals("E]BcrU n\"F", outputFormat1.getLineSeparator());
      
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "%nvU~";
      stringArray0[1] = "\n";
      stringArray0[2] = "qf&MUWuo";
      String string0 = outputFormat2.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9747025681553483
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize(1);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setPadText(true);
      outputFormat0.setExpandEmptyElements(true);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.171659610384074
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(false);
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "xG_lA0)fEeA";
      stringArray0[1] = "|=G|3>+7UVC7d";
      stringArray0[2] = "\n";
      stringArray0[3] = "-xhtml|B7vq`t_N>\"";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "xG_lA0)fEeA";
      stringArray0[7] = "O^wG,&lH";
      stringArray0[8] = "3$)l}cI$<F.2o8+8";
      outputFormat0.parseOptions(stringArray0, 3067);
      outputFormat0.setNewlines(false);
      outputFormat0.isPadText();
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = new OutputFormat("\n", false);
      outputFormat1.setLineSeparator("0R-P?3Ce");
      boolean boolean0 = outputFormat1.isXHTML();
      assertEquals("0R-P?3Ce", outputFormat1.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7055388825605595
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setNewlines(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.isSuppressDeclaration();
      OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("", true);
      outputFormat2.setSuppressDeclaration(false);
      outputFormat2.getIndent();
      outputFormat2.isSuppressDeclaration();
      outputFormat0.isNewlines();
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      outputFormat2.setIndent("RJ`cD!Y>yVR~BadP");
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.678613397722483
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("#v{%<\"UmszwY}", false, "-encoding");
      outputFormat0.setPadText(true);
      outputFormat0.setNewlines(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setXHTML(false);
      outputFormat0.isTrimText();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "#v{%<\"UmszwY}";
      stringArray0[1] = "xG_lA0)fEeA";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "";
      stringArray0[5] = "#v{%<\"UmszwY}";
      outputFormat0.setOmitEncoding(false);
      stringArray0[6] = "#v{%<\"UmszwY}";
      stringArray0[7] = "\n";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewlines(false);
      outputFormat0.isPadText();
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat0.isXHTML();
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("|B7vq`t_N>\"");
      outputFormat0.setXHTML(true);
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "|B7vq`t_N>\"";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "xG_lA0)fEeA";
      stringArray0[3] = "|B7vq`t_N>\"";
      stringArray0[4] = "|B7vq`t_N>\"";
      stringArray0[5] = "F|XIf";
      stringArray0[6] = "|B7vq`t_N>\"";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-854));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -854
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5480936103537815
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat2 = new OutputFormat("");
      outputFormat1.isSuppressDeclaration();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "-indent";
      stringArray0[2] = "*M{MCN";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat3 = new OutputFormat("*M{MCN", false);
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-473));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -473
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5785413577162766
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":@\"+pr>\"yjq\"I*Shn", true, ":@\"+pr>\"yjq\"I*Shn");
      outputFormat0.setIndent(":@\"+pr>\"yjq\"I*Shn");
      outputFormat0.setEncoding(":@\"+pr>\"yjq\"I*Shn");
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":@\"+pr>\"yjq\"I*Shn";
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setIndent(true);
      OutputFormat.createCompactFormat();
      outputFormat0.setIndent(":@\"+pr>\"yjq\"I*Shn");
      assertEquals(":@\"+pr>\"yjq\"I*Shn", outputFormat0.getIndent());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty#v{%<\"UmszwY}", false, (String) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "cOVzsZuY;h";
      stringArray0[1] = "-expandEmpty#v{%<\"UmszwY}";
      stringArray0[2] = null;
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-expandEmpty#v{%<\"UmszwY}", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2665523914311523
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[5];
      stringArray0[1] = "";
      stringArray0[1] = "";
      stringArray0[2] = "j~j9/L9ZP";
      stringArray0[3] = "";
      stringArray0[4] = "v*Nq|:W";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent(false);
      outputFormat0.isSuppressDeclaration();
      assertTrue(outputFormat0.isPadText());
      
      String[] stringArray1 = new String[5];
      stringArray1[0] = "de";
      stringArray1[1] = "de";
      stringArray1[2] = "";
      stringArray1[3] = "de";
      stringArray1[4] = "";
      outputFormat0.setPadText(false);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.isSuppressDeclaration();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      assertTrue(outputFormat0.isPadText());
      
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[0];
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize((-1500945254));
      outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.036183821230542
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getIndent();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 3494);
      outputFormat0.getLineSeparator();
      assertEquals("  ", outputFormat0.getIndent());
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("aWHD#^c]$$e&");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-1401));
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.isOmitEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('f');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (f)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.457848345704652
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(true);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertTrue(outputFormat0.isNewlines());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-trimTe";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-trimTe";
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      outputFormat0.setNewlines(false);
      outputFormat0.setLineSeparator("-trimText");
      OutputFormat outputFormat1 = new OutputFormat("qf&MUWuo");
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndentSize(2507);
      outputFormat0.setIndent(true);
      assertEquals("", outputFormat0.getLineSeparator());
      
      String[] stringArray0 = new String[0];
      outputFormat1.parseOptions(stringArray0, 2507);
      assertEquals("UTF-8", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "dt`");
      outputFormat0.setXHTML(true);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(boolean0);
      
      outputFormat0.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.240555505820405
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setEncoding("D,73T(d$G_Ia -byK");
      outputFormat0.setIndentSize(631);
      outputFormat0.setLineSeparator("UTF-8");
      assertEquals("D,73T(d$G_Ia -byK", outputFormat0.getEncoding());
      
      OutputFormat.createCompactFormat();
      boolean boolean0 = outputFormat1.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3384481491346487
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.getIndent();
      outputFormat0.getLineSeparator();
      outputFormat0.parseOptions(stringArray0, 2697);
      outputFormat0.getLineSeparator();
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9377087726541156
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty#v{%<\"UmszwY}", false, (String) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "cOVzsZuY;h";
      stringArray0[1] = "";
      outputFormat0.setEncoding("");
      stringArray0[2] = null;
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-expandEmpty#v{%<\"UmszwY}", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals(1, int0);
      assertEquals("", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[2];
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      outputFormat0.setEncoding((String) null);
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("-newlines", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertNotNull(string0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("xatml");
      outputFormat0.setIndent("nnt");
      assertEquals("nnt", outputFormat0.getIndent());
      
      outputFormat0.setIndent(true);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml\n", false);
      outputFormat0.setIndentSize(224);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtml\n";
      stringArray0[1] = "-xhtml\n";
      stringArray0[2] = "-xhtml\n";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1287));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1287
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.689633901762005
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent("-trimText");
      assertEquals("-trimText", outputFormat1.getIndent());
      
      outputFormat1.setIndent(false);
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isNewlines());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isPadText());
      assertTrue(outputFormat2.isTrimText());
      
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat3.getLineSeparator());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertEquals("  ", outputFormat3.getIndent());
      assertTrue(outputFormat3.isPadText());
      assertFalse(outputFormat3.isOmitEncoding());
      assertTrue(outputFormat3.isNewlines());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertFalse(outputFormat3.isXHTML());
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertTrue(outputFormat3.isTrimText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setIndentSize((-1));
      outputFormat1.setIndent("IC{");
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "L$StF?,[y";
      stringArray0[5] = "";
      stringArray0[7] = "";
      outputFormat0.setTrimText(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-trimText");
      assertEquals("-trimText", outputFormat0.getIndent());
      
      outputFormat0.setIndent(false);
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat0.setOmitEncoding(true);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      stringArray0[1] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 886);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-expandEmpty#v{%<\"UmszwY}";
      stringArray0[1] = "-padText";
      stringArray0[2] = "";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-expandEmpty#v{%<\"UmszwY}";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-rmeText";
      stringArray1[1] = "cOVzsZuY;h";
      stringArray1[2] = "-trimText";
      stringArray1[3] = "Liq^m8$&u]";
      OutputFormat outputFormat0 = new OutputFormat("-trimText", false, "-rmeText");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-302));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -302
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("S*EBgcG*%\u0004A#a");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("-expandEmpty-lineSeparator");
      assertEquals("-expandEmpty-lineSeparator", outputFormat0.getIndent());
  }
}
