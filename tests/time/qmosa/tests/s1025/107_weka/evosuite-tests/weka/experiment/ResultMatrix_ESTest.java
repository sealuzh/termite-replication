/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 10:38:31 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1006770686898317
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toArray();
      resultMatrixLatex0.getRowName(55);
      resultMatrixLatex0.clearSummary();
      resultMatrixLatex0.toStringKey();
      resultMatrixLatex0.m_MeanPrec = 3642;
      double[][] doubleArray0 = new double[5][8];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 55;
      doubleArray1[1] = 1219.1;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 9.223372036854776E18;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = 1219.1;
      doubleArray2[3] = (double) 3642;
      doubleArray2[4] = 1219.1;
      doubleArray2[5] = (double) 55;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = 0.0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = 1219.1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = 1219.1;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) 55;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (double) 55;
      doubleArray5[3] = (double) 1;
      doubleArray5[4] = (double) 3642;
      doubleArray5[5] = (double) 0;
      doubleArray5[6] = (double) 1;
      doubleArray5[7] = (double) 1;
      doubleArray5[8] = (double) 3642;
      doubleArray0[4] = doubleArray5;
      resultMatrixLatex0.m_Mean = doubleArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("3Sc\"j!Ay%!J-D]Vx");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.185086454182749
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.getSignificanceCount(227, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 227);
      resultMatrixHTML0.getDefaultPrintColNames();
      int[][] intArray0 = new int[7][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray0[1] = intArray1;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setColOrder(intArray3);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.clear();
      resultMatrixLatex1.getDefaultCountWidth();
      resultMatrixLatex1.m_ColNameWidth = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex1);
      resultMatrixGnuPlot1.isStdDev(1);
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex1.toArray();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.5673961913895167
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setCount(218, 0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixHTML0.getMeanPrec();
      resultMatrixLatex0.getStdDevPrec();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.5673961913895167
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.LOSS_STRING = "$circ$";
      resultMatrixHTML0.setCount(218, 0);
      resultMatrixLatex0.padString("", 2, false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.879141741528518
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      int[][] intArray1 = new int[9][7];
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getSummaryTitle((-2947));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      resultMatrixCSV1.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixPlainText0.setRanking(intArray1);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.setRowNameWidth(10);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("CrU_2k`6");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9019660696039558
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setStdDev(17, 3274, 0.0);
      resultMatrixPlainText0.isSignificance(17);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(60, 60);
      resultMatrixCSV0.removeFilterNameTipText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.4620123818890542
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      resultMatrixPlainText0.clear();
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.3263400473164495
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 2);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, (-3373));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5500649603556877
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setSignificanceWidth(3);
      resultMatrixHTML0.setCount(0, Double.NaN);
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2476158035455143
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden((-4806), true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "d";
      stringArray0[1] = "[";
      stringArray0[3] = "[";
      stringArray0[4] = "[";
      stringArray0[5] = "]";
      stringArray0[6] = "]";
      stringArray0[7] = "[";
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("Generates output for a data and script file for GnuPlot.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1704586649552255
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getSignificanceCount(2, 97);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setColOrder((int[]) null);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixHTML1);
      assertEquals(25, resultMatrixLatex1.getRowNameWidth());
      
      resultMatrixLatex1.clear();
      resultMatrixLatex1.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixHTML1);
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot2.isStdDev(0);
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex1.toArray();
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.615943935369156
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.isRowName(211);
      Vector<String> vector0 = new Vector<String>();
      vector0.stream();
      vector0.add(" ");
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.addHeader("(", "");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4586508992961362
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      int int0 = 0;
      resultMatrixCSV0.setEnumerateColNames(false);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getSignificanceCount((-1), 2);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1718), (-3591));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4345170475252678
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.getSignificanceCount(227, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 227);
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.removeFilterName("");
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText1.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(11, 3);
      resultMatrixPlainText0.setColNameWidth(2);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      assertEquals(11, resultMatrixPlainText0.getColCount());
      
      resultMatrixPlainText1.getCount(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = "(";
      resultMatrixSignificance0.setOptions(stringArray0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.toStringSummary();
      assertEquals(2, resultMatrixSignificance1.getDefaultMeanPrec());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8871876276384967
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.doubleToString(0.0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setColHidden(1, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixSignificance0.getSummaryTitle(3);
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.getCountWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixCSV1.getHeader("O0V3.nB");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.351525551998743
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "d";
      stringArray0[1] = "[";
      stringArray0[3] = "CSV";
      stringArray0[4] = "[";
      stringArray0[5] = "]";
      stringArray0[6] = "]";
      stringArray0[7] = "[";
      resultMatrixCSV0.getCountWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(1);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      try { 
        resultMatrixSignificance1.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4157921309720916
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
      assertEquals(19, stringArray0.length);
      
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.isRowName(0);
      vector0.add("");
      resultMatrixCSV0.setRowHidden(48, false);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 1);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 48;
      intArray0[4] = 1;
      resultMatrixHTML0.setMeanPrec((-1744));
      intArray0[5] = 0;
      intArray0[6] = 1;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixHTML1.m_RankingDiff = intArray0;
      int int0 = resultMatrixHTML1.getVisibleRowCount();
      int int1 = resultMatrixHTML1.getMeanWidth();
      assertFalse(int1 == int0);
      
      resultMatrixHTML0.rowNameWidthTipText();
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      resultMatrixHTML0.setColOrder(intArray1);
      resultMatrixHTML0.toStringKey();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.3994069441780477
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 0);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.setRowNameWidth((-3697));
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.615943935369156
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixSignificance0.setPrintRowNames(false);
      intArray0[0] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixSignificance0.clearHeader();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(1629);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3274061159714567
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.setOptions((String[]) null);
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.setSize(0, 1251);
      resultMatrixPlainText0.setColNameWidth(2461);
      resultMatrixPlainText0.LEFT_PARENTHESES = "Get position of option -o: ";
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(0);
      assertEquals(2461, resultMatrixPlainText0.getColNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_EnumerateRowNames = false;
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.543099180473535
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.removeFilterName("]");
      resultMatrixPlainText0.setEnumerateColNames(true);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(1, 1244);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount((-893));
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.toStringSummary();
      assertFalse(resultMatrixSignificance0.getShowAverage());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.889292138267767
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.doubleToString(0.0, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      int[] intArray0 = new int[9];
      intArray0[0] = 1220;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 2435;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 1;
      intArray0[7] = 1213;
      intArray0[8] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixLatex1.getRowNameWidth());
      
      resultMatrixLatex1.clear();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex2.getDefaultCountWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      boolean boolean0 = resultMatrixGnuPlot1.isStdDev(0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = 27;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(27, 27);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      String[] stringArray0 = null;
      int[][] intArray0 = new int[12][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 27;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 27;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(false);
      int int1 = 2461;
      // Undeclared exception!
      resultMatrixPlainText0.setSize(27, 1251);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4098752044924123
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.isRowName(0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.setRowHidden(48, false);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 1);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[4] = 1;
      intArray0[2] = 0;
      intArray0[3] = 48;
      intArray0[4] = 1;
      resultMatrixHTML0.setMeanPrec((-1744));
      intArray0[3] = 0;
      intArray0[6] = 1;
      intArray0[7] = 2;
      intArray0[8] = 0;
      resultMatrixHTML1.m_RankingDiff = intArray0;
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 734);
      resultMatrixCSV0.setCount(0, 0.0);
      resultMatrixCSV1.enumerateColNamesTipText();
      resultMatrixCSV0.getColName(1);
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.044404464687264
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[17];
      intArray0[5] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getColName(3);
      resultMatrixGnuPlot0.setRowNameWidth(97);
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(97, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9162169748409807
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      String[] stringArray0 = null;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8871876276384967
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 54);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.doubleToString((-2889.9837), 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 3;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixGnuPlot0.isStdDev(4);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.550688754818698
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(1);
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(46, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[0];
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getCountWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.getHeader(":S;EjqQV^");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.285990780715851
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[][] intArray0 = new int[4][1];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 2;
      intArray2[1] = 147;
      intArray2[2] = 1;
      intArray2[3] = 2;
      intArray2[4] = 1;
      intArray2[5] = 2;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 147;
      intArray3[1] = 2;
      intArray3[2] = 0;
      intArray3[3] = 25;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 1;
      intArray4[1] = 147;
      intArray4[2] = 25;
      intArray4[3] = 1;
      intArray0[3] = intArray4;
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixSignificance0.toStringKey();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.setRemoveFilterName(false);
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.setSize(2, 0);
      resultMatrixPlainText0.setPrintColNames(false);
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.235867546247888
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[1] = "CSV";
      stringArray0[2] = "v";
      stringArray0[3] = " ";
      stringArray0[4] = "v";
      stringArray0[5] = "vJU(e\"kN@we>7Hn";
      try { 
        resultMatrixCSV0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.299668260750111
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray0[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray0[2] = 0;
      intArray0[3] = 1;
      resultMatrixPlainText0.removeFilterName("-unsupervised..*");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(true);
      resultMatrixPlainText0.setSize(2461, 0);
      resultMatrixPlainText0.setColNameWidth(0);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      resultMatrixPlainText1.showAverageTipText();
      resultMatrixPlainText1.getCount(2461);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance1.setOptions((String[]) null);
      assertFalse(resultMatrixSignificance1.getPrintRowNames());
      
      resultMatrixSignificance0.toStringSummary();
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5366933917926833
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount(1, (-586.961296));
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getColCount());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = "*";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixHTML0.isSignificance(2);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.3676368586775576
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(3, 577);
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getDefaultCountWidth();
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      
      resultMatrixGnuPlot0.isStdDev((-1584));
      String string0 = resultMatrixGnuPlot0.padString("[", 135, true);
      assertEquals("                                                                                                                                      [", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.307601910812601
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      String[] stringArray0 = new String[9];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "v";
      stringArray0[3] = "*";
      stringArray0[4] = " ";
      stringArray0[5] = "(";
      stringArray0[6] = "v";
      stringArray0[7] = ")";
      stringArray0[8] = "(";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.doubleToString(0.0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringRanking();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 3;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixGnuPlot0.isStdDev(4);
      int[][] intArray1 = new int[0][9];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray1, intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.4320023172698217
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.doubleToString(1153.57200849, 2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML0.isRowName(2161);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("# file: plot.scr #\n");
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV((-2182), 125);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.4924626233355944
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getSummaryTitle(1);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, false);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ")";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      stringArray0[3] = "(";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 3);
      resultMatrixCSV1.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.6115401721829175
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixCSV0.listOptions();
      resultMatrixHTML0.setCount(207, (-4226.908));
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      
      ResultMatrixSignificance.main((String[]) null);
      resultMatrixCSV0.getDisplayName();
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex0.setPrintColNames(true);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixLatex1.getDisplayName();
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.743535678836661
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("s)\"2z]y>`7c}4vd,!", (String) null);
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixLatex1.getDisplayName();
      resultMatrixLatex1.getSignificance(1, 1088);
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex1.getVisibleColCount());
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertFalse(resultMatrixLatex1.getDefaultShowStdDev());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7014790429915907
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixGnuPlot0.m_CountWidth = 42;
      resultMatrixGnuPlot0.addHeader("#replot\n", "x'[");
      resultMatrixGnuPlot0.clearSummary();
      resultMatrixGnuPlot0.toStringHeader();
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8871876276384967
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.doubleToString(0.0, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 3;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getDefaultCountWidth();
      resultMatrixGnuPlot0.isStdDev(1);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.5363944164127403
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setCount(218, 218);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = " ";
      stringArray0[2] = " ";
      resultMatrixHTML0.getRowName(1215);
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = " ";
      stringArray0[6] = "(";
      stringArray0[7] = "(";
      ResultMatrixSignificance.main(stringArray0);
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.01031686038804
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.getDefaultPrintRowNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.3710496373258434
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("", 1);
      int int0 = 0;
      String[] stringArray0 = null;
      ResultMatrixLatex resultMatrixLatex1 = null;
      try {
        resultMatrixLatex1 = new ResultMatrixLatex((-3311), (-894));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0335193589394978
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.setEnumerateRowNames(true);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.doubleToString(0.0, 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(1);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(218, 2880);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9394080795036506
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = true;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.doubleToString(2, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot2.toStringRanking();
      int[] intArray0 = new int[3];
      intArray0[1] = 0;
      resultMatrixGnuPlot2.setEnumerateRowNames(true);
      intArray0[2] = 2;
      resultMatrixGnuPlot2.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot1);
      assertTrue(resultMatrixLatex0.getPrintColNames());
      
      resultMatrixLatex0.clear();
      resultMatrixLatex0.getStdDev(102, 1808);
      assertEquals(1, resultMatrixGnuPlot1.getVisibleRowCount());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.556879563071386
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(3, 16);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV1);
      resultMatrixHTML0.setCount((-1472), 0.0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = "]";
      resultMatrixHTML0.setRowNameWidth(30);
      stringArray0[3] = "@y2*+{~S>K[";
      stringArray0[4] = "[";
      stringArray0[5] = "v";
      stringArray0[6] = "]";
      stringArray0[7] = "*";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.5366933917926833
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount(3, 3);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "3";
      stringArray0[1] = "";
      stringArray0[2] = "v";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.69690085000884
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 3;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixLatex1.getDisplayName();
      resultMatrixLatex1.getSignificance(1, 0);
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertFalse(resultMatrixLatex1.getShowStdDev());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      assertEquals(0, resultMatrixLatex1.getRowNameWidth());
      assertEquals(3, resultMatrixLatex1.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6023807799324836
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[][] intArray0 = new int[6][2];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      String string0 = resultMatrixLatex0.enumerateRowNamesTipText();
      assertEquals("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).", string0);
      
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getSignificance(0, 0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(50, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.941189147059528
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount(1, (-586.961296));
      boolean boolean0 = resultMatrixHTML0.isRowName((-423));
      assertFalse(boolean0);
      
      Vector<String> vector0 = new Vector<String>();
      Vector<String> vector1 = new Vector<String>();
      resultMatrixGnuPlot0.m_HeaderValues = vector1;
      vector0.add("");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.setRowHidden((-2), false);
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      int int1 = resultMatrixHTML0.getMeanWidth();
      assertEquals(0, int1);
      
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      assertEquals(2, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getRowCount());
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6316121865953988
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(3, 3);
      resultMatrixLatex0.setColNameWidth(248);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.getDefaultShowStdDev();
      assertEquals(248, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5986051779973067
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDisplayName();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.522091318769919
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "d";
      stringArray0[1] = "[";
      stringArray0[2] = "]";
      stringArray0[3] = "CSV";
      stringArray0[4] = "[";
      stringArray0[5] = "]";
      stringArray0[6] = "]";
      stringArray0[7] = "[";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("Generates output for a data and script file for GnuPlot.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.024568765090593
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      int int0 = resultMatrixLatex0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixLatex0.setShowStdDev(false);
      int int1 = resultMatrixLatex0.getSignificanceCount(227, 0);
      assertEquals(0, int1);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 227);
      resultMatrixHTML0.getDefaultPrintColNames();
      assertEquals(227, resultMatrixHTML0.getVisibleRowCount());
      
      int[][] intArray0 = new int[7][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray4[2] = 1;
      intArray4[3] = (-2308);
      intArray4[4] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = (-2308);
      intArray6[1] = 231;
      intArray6[2] = 2;
      intArray6[3] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[2];
      intArray7[0] = 227;
      intArray7[1] = 1;
      intArray0[6] = intArray7;
      resultMatrixLatex0.setRanking(intArray0);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.7011014009503405
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[][] intArray0 = new int[6][2];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 1;
      intArray3[4] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[13];
      intArray4[0] = 2;
      intArray4[1] = 0;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 56);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.361908713646982
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(0, 1251);
      resultMatrixPlainText0.setColNameWidth(2461);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.toStringSummary();
      resultMatrixPlainText0.padString("Generates the matrix in CSV ('comma-separated values') format.", 0);
      assertEquals(1251, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.466573443616366
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("hYJfl1$KCsmw,#u", (-894));
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixLatex.main((String[]) null);
      resultMatrixLatex0.padString("-show-avg", 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.getDefaultStdDevWidth();
      ResultMatrixLatex.main((String[]) null);
      resultMatrixSignificance0.setColNameWidth((-894));
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>($\\circ$/ /$\\bullet$)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDisplayName();
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixCSV0.setEnumerateColNames(true);
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 46;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(46, (-641));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int int0 = (-10);
      resultMatrixLatex0.m_StdDevWidth = (-10);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize(0, (-10));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 46;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-1126), (-641));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.698215536154872
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 1);
      int[][] intArray0 = new int[6][2];
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 1;
      intArray3[4] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[13];
      intArray4[0] = 2;
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray4[3] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 0;
      intArray5[1] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[7];
      intArray6[0] = 915;
      intArray6[1] = 2;
      intArray6[2] = 1;
      intArray6[3] = 2;
      intArray6[4] = 2;
      intArray6[6] = (-2430);
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.2743324740937747
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.setRowNameWidth((-3697));
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, int0);
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.9963067983056155
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = 264;
      resultMatrixPlainText0.setMeanWidth(264);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.meanPrecTipText();
      int int1 = 0;
      int int2 = (-3972);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(0, (-3972));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec((-4347));
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultStdDevWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.515099302948161
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.LEFT_PARENTHESES = "-print-row-names";
      resultMatrixSignificance0.m_RowNameWidth = (-886);
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(1);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.462012381889054
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getVisibleColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.assign(resultMatrixSignificance0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(46, 1);
      resultMatrixHTML1.getEnumerateRowNames();
      resultMatrixHTML1.getDisplayName();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "show-stddev";
      stringArray0[1] = "v";
      double[][] doubleArray0 = new double[4][5];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) (-1);
      doubleArray1[1] = (double) (-1);
      doubleArray1[2] = (double) 46;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 1;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (double) 1;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) 2;
      doubleArray4[1] = (double) 0;
      doubleArray0[3] = doubleArray4;
      resultMatrixSignificance0.m_StdDev = doubleArray0;
      stringArray0[2] = "HTML";
      ResultMatrixLatex.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7485462919025654
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int[] intArray0 = new int[1];
      int[][] intArray1 = new int[9][7];
      intArray1[1] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray2 = new int[1];
      intArray1[7] = intArray2;
      int[][] intArray3 = new int[4][0];
      intArray3[0] = intArray0;
      intArray3[1] = intArray0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.padString("6?i,", 1688, true);
      resultMatrixPlainText0.globalInfo();
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.941189147059528
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.getSignificanceCount(227, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 227);
      resultMatrixHTML0.getDefaultPrintColNames();
      int[][] intArray0 = new int[7][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = (-1);
      intArray0[0] = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(26);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2145, 912);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.9019660696039558
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setMeanWidth((-1843));
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.significanceWidthTipText();
      resultMatrixCSV0.m_ColNameWidth = (-1843);
      resultMatrixCSV0.setSignificance(12, 0, 682);
      int[] intArray0 = new int[3];
      intArray0[0] = 12;
      intArray0[1] = 1;
      intArray0[2] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray0;
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 1);
      resultMatrixGnuPlot0.m_MeanWidth = 1;
      resultMatrixLatex0.globalInfo();
      resultMatrixCSV0.padString("[", 1, false);
      resultMatrixLatex0.getSignificanceCount(1, 97);
      int int0 = resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSize(0, 692);
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixSignificance0.m_ColNameWidth = 0;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      int int0 = resultMatrixSignificance0.getRowNameWidth();
      assertEquals(0, resultMatrixSignificance0.getColCount());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 2);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultPrintColNames();
      boolean boolean0 = resultMatrixHTML0.getEnumerateRowNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.3825185811855047
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(3);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1538;
      doubleArray1[2] = (double) 1538;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 2852.196223963715;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 3;
      doubleArray2[3] = (double) 1538;
      doubleArray2[4] = (double) 1538;
      doubleArray2[5] = (double) 2;
      doubleArray0[1] = doubleArray2;
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.isRowName(2);
      vector0.add("]");
      resultMatrixCSV0.setRowHidden(0, true);
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1538, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.515376668024621
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(3);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 2852.196223963715;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = (double) 3;
      doubleArray1[3] = (double) 1538;
      doubleArray1[4] = (double) 1538;
      doubleArray1[5] = (double) 2;
      doubleArray0[1] = doubleArray1;
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.isRowName(2);
      vector0.add("]");
      resultMatrixCSV0.setRowHidden(0, true);
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1538, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.121280506071869
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      Vector<String> vector0 = new Vector<String>(40);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(34, 45);
      boolean boolean0 = resultMatrixHTML0.isRowName(1106);
      vector0.add((String) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRowHidden(7, false);
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(45, int0);
      
      int int1 = resultMatrixHTML0.getMeanWidth();
      assertEquals(0, int1);
      
      resultMatrixHTML0.rowNameWidthTipText();
      boolean boolean1 = resultMatrixCSV0.getEnumerateRowNames();
      assertTrue(boolean1 == boolean0);
      
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.408481088879686
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixCSV0.setColNameWidth((-36));
      int int0 = 667;
      resultMatrixCSV0.getSummaryTitle(667);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(667, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.845638493134257
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      String string0 = resultMatrixSignificance0.doubleToString(0.0, 0);
      assertEquals("0.", string0);
      assertEquals(0, resultMatrixSignificance0.getRowCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.isRowName(0);
      Vector<String> vector0 = new Vector<String>();
      vector0.stream();
      vector0.add("v");
      resultMatrixHTML0.addHeader("13:Ou", "*");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[][] intArray0 = new int[0][8];
      resultMatrixGnuPlot0.setRanking(intArray0);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      int int0 = resultMatrixHTML0.getDisplayRow(1880);
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertEquals((-1), int0);
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2172674369391396
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.setStdDevPrec((-1649));
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = (-1649);
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 1652;
      intArray0[7] = 0;
      intArray0[8] = 2;
      resultMatrixCSV0.m_RowOrder = intArray0;
      String string0 = resultMatrixLatex0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      resultMatrixCSV0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      int[][] intArray1 = new int[0][3];
      resultMatrixPlainText0.setRanking(intArray1);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixLatex0.trimString("]", 32);
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.2743324740937747
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      double[][] doubleArray0 = new double[7][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 2;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 2;
      doubleArray3[6] = (double) 2;
      doubleArray3[7] = (-33.6546155315);
      doubleArray3[8] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (-33.6546155315);
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = 622.521886519;
      doubleArray4[4] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (double) 2;
      doubleArray5[1] = 622.521886519;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = 622.521886519;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 1;
      doubleArray6[2] = (double) 1;
      doubleArray6[3] = (double) 0;
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (double) 1;
      doubleArray6[6] = 622.521886519;
      doubleArray6[7] = (double) 1;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[7];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = (double) 2;
      doubleArray7[2] = (-33.6546155315);
      doubleArray7[3] = (double) 1;
      doubleArray7[4] = 622.521886519;
      doubleArray7[5] = (double) 0;
      doubleArray7[6] = (-33.6546155315);
      doubleArray0[6] = doubleArray7;
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixGnuPlot0.setRowNameWidth(0);
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.setRowNameWidth((-572));
      int int0 = ResultMatrix.SIGNIFICANCE_LOSS;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.61916324975505
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_PrintColNames = true;
      resultMatrixPlainText0.toString();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.doubleToString(5.5, (-1877));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.507104358870502
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      String string0 = resultMatrixSignificance0.doubleToString(0.0, 0);
      assertEquals("0.", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.isRowName(0);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("v");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV0.setRowHidden(0, true);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "*";
      stringArray0[1] = "(";
      stringArray0[2] = "";
      stringArray0[3] = "remove-filter";
      stringArray0[4] = " <> ";
      stringArray0[5] = " ";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.8466796372141983
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
      resultMatrixGnuPlot1.getRowOrder();
      int[][] intArray0 = new int[6][9];
      intArray0[0] = null;
      intArray0[1] = null;
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(0, (-2867));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.5433263791664626
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount((-6), (-586.961296));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "3";
      stringArray0[1] = "3";
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = new int[7];
      intArray1[0] = (-6);
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 3;
      intArray1[4] = 1;
      intArray1[5] = (-6);
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 3;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 3;
      intArray3[1] = 2;
      intArray3[2] = 3;
      intArray3[3] = 1;
      intArray3[4] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 0;
      intArray4[1] = 3;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = (-6);
      intArray5[4] = 3;
      intArray5[5] = 1;
      intArray5[6] = 0;
      intArray5[7] = 0;
      intArray5[8] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 2;
      intArray6[1] = 2;
      intArray6[2] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 2;
      intArray7[1] = (-6);
      intArray7[2] = 0;
      intArray7[3] = 2;
      intArray7[4] = (-6);
      intArray0[6] = intArray7;
      int[] intArray8 = new int[7];
      intArray8[0] = (-6);
      intArray8[1] = 0;
      intArray8[2] = 1;
      intArray8[3] = 2;
      intArray8[4] = 3;
      intArray8[5] = 3;
      intArray8[6] = 2;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[7];
      intArray9[0] = 0;
      intArray9[1] = 1;
      intArray9[2] = 2;
      intArray9[3] = 0;
      intArray9[4] = 1;
      intArray9[5] = 0;
      intArray9[6] = 1;
      intArray0[8] = intArray9;
      resultMatrixHTML0.m_Wins = intArray0;
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      stringArray0[2] = "*";
      stringArray0[3] = "3";
      stringArray0[4] = "3";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      
      resultMatrixGnuPlot0.setStdDevWidth(2);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      resultMatrixLatex0.m_StdDevWidth = (-10);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex1.getSignificance((-10), (-10));
      assertTrue(resultMatrixLatex1.getPrintRowNames());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.69690085000884
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      String string0 = resultMatrixLatex1.enumerateRowNamesTipText();
      assertEquals("Whether to enumerate the row names (prefixing them with '(x)', with 'x' being the index).", string0);
      
      resultMatrixLatex1.getDisplayName();
      assertEquals(0, resultMatrixLatex1.getStdDevWidth());
      assertFalse(resultMatrixLatex1.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex1.getCountWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
      assertTrue(resultMatrixLatex1.getPrintRowNames());
      assertTrue(resultMatrixLatex1.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex1.getMeanPrec());
      assertEquals(2, resultMatrixLatex1.getStdDevPrec());
      
      resultMatrixLatex0.getSignificance(1088, (-2160));
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.569902468002828
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray0[4] = 0;
      int[] intArray1 = new int[0];
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.m_MeanPrec = 6;
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(0, 1251);
      resultMatrixPlainText0.setColNameWidth(2461);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      ResultMatrixSignificance.main((String[]) null);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.6226547442694517
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.isStdDev(2);
      String[] stringArray0 = resultMatrixCSV0.getOptions();
      resultMatrixCSV0.setShowAverage(false);
      assertEquals(2, resultMatrixCSV0.getVisibleColCount());
      
      Vector<String> vector0 = new Vector<String>(3);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[3] = (double) 3;
      doubleArray0[0] = doubleArray1;
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(19, stringArray0.length);
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(2, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.1212805060718685
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.getSignificanceCount(227, 1);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 227);
      resultMatrixHTML0.getDefaultPrintColNames();
      int[][] intArray0 = new int[7][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray0[1] = intArray2;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.headerKeys();
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("Ox.BUuj>T[3!");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.9291483119788557
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getVisibleColCount();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(670, 2);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(2);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-613), (-613));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5313550293210514
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 5;
      intArray0[7] = 2;
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      resultMatrixGnuPlot0.setStdDevWidth(2);
      resultMatrixHTML0.getEnumerateColNames();
      resultMatrixGnuPlot0.setMean(1222, 5, 2);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5127618553247215
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.m_PrintRowNames = true;
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = "*";
      stringArray0[4] = ")";
      stringArray0[5] = "*";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixCSV0.setMeanWidth(795);
      resultMatrixCSV0.m_StdDevWidth = 2474;
      resultMatrixLatex0.isAverage((-1421));
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixPlainText0.setStdDevPrec((-1421));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.m_SignificanceWidth = 1;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.8456384931342575
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(32);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.m_StdDevPrec = 32;
      resultMatrixPlainText0.setStdDevPrec(25);
      int[] intArray0 = new int[3];
      intArray0[0] = 25;
      intArray0[1] = 25;
      intArray0[2] = 0;
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.1751539589795965
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toArray();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.setStdDevPrec((-1649));
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = (-1649);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixLatex1.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.8243648409235025
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      int[][] intArray1 = new int[9][7];
      intArray1[0] = resultMatrixSignificance0.m_RankingWins;
      intArray1[1] = intArray0;
      intArray1[2] = resultMatrixSignificance0.m_RankingDiff;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = resultMatrixSignificance0.m_RankingDiff;
      intArray1[6] = resultMatrixSignificance0.m_RankingWins;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray1[7] = intArray2;
      intArray1[8] = intArray0;
      resultMatrixSignificance0.m_Significance = intArray1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray3 = new int[4][0];
      intArray3[0] = intArray0;
      intArray3[1] = intArray0;
      intArray3[2] = resultMatrixSignificance0.m_RankingDiff;
      intArray3[3] = resultMatrixSignificance0.m_RankingDiff;
      resultMatrixLatex0.setRanking(intArray3);
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.3350385645543703
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 0;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.getRowName(0);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(0, 1251);
      resultMatrixPlainText0.setColNameWidth(2461);
      resultMatrixPlainText0.LEFT_PARENTHESES = "Get position of option -o: ";
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(0);
      assertEquals(1251, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.4620123818890542
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      ResultMatrixLatex.main((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.9913616173293627
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(3);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1538;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 1538;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 2852.196223963715;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 3;
      doubleArray2[3] = (double) 1538;
      doubleArray2[4] = (double) 1538;
      doubleArray2[5] = (double) 2;
      doubleArray0[1] = doubleArray2;
      resultMatrixHTML0.m_HeaderValues = vector0;
      vector0.add(" ");
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      int int1 = resultMatrixHTML0.getMeanWidth();
      assertEquals(0, int1);
      
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      resultMatrixHTML0.printColNamesTipText();
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.2673290673038835
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.m_RemoveFilterName = false;
      resultMatrixGnuPlot1.getColCount();
      resultMatrixGnuPlot0.getMeanWidth();
      boolean boolean0 = resultMatrixGnuPlot0.isMean(0);
      assertFalse(boolean0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
      
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot1.toStringRanking();
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot1.getMeanWidth());
      assertFalse(resultMatrixGnuPlot1.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot1.getStdDevPrec());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.2782549492012323
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.setColNameWidth((-1925));
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "d";
      stringArray0[1] = "[";
      stringArray0[3] = "CSV";
      stringArray0[4] = "[";
      stringArray0[5] = "]";
      stringArray0[6] = "]";
      stringArray0[7] = "[";
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("Generates output for a data and script file for GnuPlot.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.7485462919025654
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.padString("e'b Ze.3!&", 2566);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertFalse(resultMatrixSignificance0.getDefaultRemoveFilterName());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int[] intArray0 = new int[1];
      Vector<String> vector0 = new Vector<String>();
      vector0.stream();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(110, 26);
      int[][] intArray1 = new int[1][3];
      intArray1[0] = intArray0;
      int int0 = resultMatrixHTML0.getDisplayRow(27);
      assertEquals((-1), int0);
      assertEquals(110, resultMatrixHTML0.getColCount());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(26, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.8004698251768687
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[1];
      intArray0[0] = 8;
      resultMatrixPlainText0.m_RankingLosses = intArray0;
      resultMatrixPlainText0.setMean(8, 3, (-2987.5));
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_StdDevPrec = (-836);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.printRowNamesTipText();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertFalse(resultMatrixCSV0.getDefaultShowAverage());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
  }
}
