/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:40:52 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.534086149891918
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth(0);
      resultMatrixHTML0.m_CountWidth = 2;
      resultMatrixLatex0.setSize(2878, 1);
      resultMatrixHTML0.setEnumerateRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(0);
      resultMatrixSignificance0.getMeanPrec();
      resultMatrixLatex0.toStringSummary();
      resultMatrixSignificance0.addHeader(" ", "");
      assertEquals(0, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.284424357294769
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRowName((-1));
      resultMatrixHTML0.setCount(1, (-586.961296));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.474218372302873
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setMeanWidth((-1843));
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      
      resultMatrixGnuPlot0.assign(resultMatrixPlainText0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      String string0 = resultMatrixGnuPlot0.significanceWidthTipText();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals("The width of the significance indicator (0 = optimal).", string0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setSignificance(0, 682, 1);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      resultMatrixLatex0.globalInfo();
      String string1 = resultMatrixCSV0.padString("v", 1, true);
      assertEquals("v", string1);
      
      int int0 = resultMatrixLatex0.getSignificanceCount(12, 2);
      assertEquals(0, int0);
      
      resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2372065649126105
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_RemoveFilterName = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      String string0 = resultMatrixLatex0.toStringKey();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption (Key)}\n\\scriptsize\n{\\centering\n\\begin{tabular}{cl}\\\\\n(1) & col0 \\\\\n\\end{tabular}\n}\n\\end{table}\n", string0);
      
      resultMatrixLatex0.countWidthTipText();
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(1, resultMatrixLatex0.getRowCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.9665445067565943
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.padString("hYJfl1$KCsmw,#u", (-894));
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      ResultMatrixLatex.main((String[]) null);
      resultMatrixLatex0.padString("", 0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.m_ShowStdDev = false;
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.getDefaultStdDevWidth();
      ResultMatrixLatex.main((String[]) null);
      resultMatrixSignificance0.setColNameWidth((-894));
      resultMatrixHTML0.toString();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setEnumerateColNames(true);
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.4032666658465534
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "b";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount(0, (-586.961296));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "b";
      stringArray0[3] = "b";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.padString("O", 2, true);
      assertEquals(" O", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(136, 0);
      resultMatrixLatex0.getSignificanceCount(66, 2);
      resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, resultMatrixLatex0.getRowCount());
      
      resultMatrixHTML0.getCount(53);
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4963258125369525
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth(0);
      String string0 = resultMatrixHTML0.doubleToString(0, 0);
      assertEquals("0.", string0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      resultMatrixHTML0.m_Counts = doubleArray0;
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setCount(0, 0.0);
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
      
      String[] stringArray0 = new String[0];
      String[][] stringArray1 = new String[2][0];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      int int0 = resultMatrixLatex0.getColSize(stringArray1, (-4339), false, false);
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=4.036084010608879
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      resultMatrixGnuPlot0.getRowName(2382);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCount(3910, 0);
      resultMatrixHTML0.clearHeader();
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      resultMatrixHTML0.showAverageTipText();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=4.026401253978008
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      int int0 = (-8);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden((-8), true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "d";
      stringArray0[1] = "[";
      stringArray0[2] = "]";
      stringArray0[3] = "CSV";
      stringArray0[4] = "[";
      stringArray0[5] = "]";
      stringArray0[6] = "]";
      stringArray0[7] = "[";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("Generates output for a data and script file for GnuPlot.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2411555543783788
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setMeanPrec(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[][] intArray1 = new int[7][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 1;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 1;
      intArray2[6] = 0;
      intArray1[6] = intArray2;
      resultMatrixSignificance0.setSummary(intArray1, intArray1);
      resultMatrixSignificance0.getDefaultPrintRowNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, (-85));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.888158185572261
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setMeanPrec(1);
      assertEquals(1, resultMatrixHTML0.getMeanPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(26, 2);
      resultMatrixSignificance0.toStringRanking();
      resultMatrixSignificance0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setSignificanceWidth(0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML1.setSignificanceWidth((-3018));
      resultMatrixHTML1.padString(")", (-302));
      resultMatrixLatex1.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getMean(1, 2569);
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.177048155965674
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      assertEquals(2, resultMatrixHTML0.getVisibleColCount());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getSignificance((-1), 110);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML1.getDefaultEnumerateColNames();
      assertEquals(0, resultMatrixHTML1.getSignificanceWidth());
      assertEquals(0, resultMatrixHTML1.getDefaultColNameWidth());
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(50, resultMatrixHTML1.getRowNameWidth());
      assertFalse(resultMatrixHTML1.getEnumerateRowNames());
      assertFalse(resultMatrixHTML1.getDefaultShowStdDev());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=4.043257914152085
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(1, 0);
      resultMatrixHTML1.setCountWidth(1456);
      resultMatrixHTML1.setEnumerateRowNames(true);
      resultMatrixHTML0.setCount((-1), 1199.2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.930181346459874
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_EnumerateColNames = false;
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setSize(37, 0);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      doubleArray0[1] = (double) 1;
      resultMatrixLatex0.m_CountWidth = 1305;
      resultMatrixLatex0.setSize(0, 2);
      resultMatrixPlainText0.m_Counts = doubleArray0;
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.RIGHT_PARENTHESES = "";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixHTML0.toStringKey();
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.setSignificanceWidth(2);
      resultMatrixHTML0.setSignificanceWidth(3);
      resultMatrixHTML0.padString(" ", 1490);
      resultMatrixLatex0.getDisplayName();
      resultMatrixPlainText0.getMean(18, 120);
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.9489303176845483
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      boolean boolean0 = true;
      resultMatrixGnuPlot0.setPrintColNames(true);
      resultMatrixGnuPlot0.globalInfo();
      resultMatrixGnuPlot0.getMeanPrec();
      int int0 = 2326;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2326, 2);
      // Undeclared exception!
      resultMatrixSignificance0.toStringMatrix();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2087291374784415
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[] intArray0 = new int[17];
      intArray0[0] = 1;
      resultMatrixHTML0.m_RankingWins = intArray0;
      intArray0[1] = 0;
      intArray0[2] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getSignificance(1238, 34);
      assertEquals(0, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4098336385300656
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setMeanWidth(264);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getVisibleColCount();
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.getSignificanceCount(2, 264);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultPrintColNames();
      int[][] intArray0 = new int[3][6];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 2;
      intArray3[1] = 0;
      intArray3[2] = (-1);
      intArray3[3] = 2;
      intArray3[4] = 2;
      intArray3[5] = 0;
      intArray3[6] = 1;
      intArray3[7] = 264;
      intArray3[8] = (-2308);
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=4.049657412911431
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRowName((-1));
      resultMatrixHTML0.setCountWidth(2);
      resultMatrixHTML0.setEnumerateRowNames(true);
      resultMatrixHTML0.setCount(1484, 1);
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2847500689747897
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      resultMatrixHTML0.m_RankingWins = intArray0;
      intArray0[1] = 0;
      resultMatrixGnuPlot0.setStdDevWidth((-2413));
      intArray0[2] = 1;
      resultMatrixGnuPlot0.setColOrder(intArray0);
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      
      resultMatrixHTML0.setMeanPrec(2);
      resultMatrixGnuPlot0.clear();
      resultMatrixGnuPlot0.toStringRanking();
      resultMatrixGnuPlot0.getCountWidth();
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=4.049996099317263
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCountWidth(0);
      resultMatrixHTML0.setEnumerateRowNames(false);
      resultMatrixHTML0.setCount(0, 0.0);
      String[] stringArray0 = new String[0];
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=4.036325193098328
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRowName((-1));
      resultMatrixHTML0.setCount(1, (-586.961296));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "3";
      stringArray0[2] = "*";
      stringArray0[3] = "3";
      stringArray0[4] = "3";
      ResultMatrixSignificance.main(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=4.012346364994317
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(3);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 1538;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 3;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 2852.196223963715;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 3;
      doubleArray2[3] = (double) 1538;
      doubleArray2[4] = (double) 1538;
      doubleArray2[5] = (double) 2;
      doubleArray0[1] = doubleArray2;
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.isRowName(2);
      vector0.add("]");
      resultMatrixCSV0.setRowHidden(1538, true);
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1538, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.575211840132402
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringRanking();
      resultMatrixHTML0.clearSummary();
      resultMatrixHTML0.enumerateColNamesTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 7);
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.trimString("", (-3));
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.340808823201759
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setMeanPrec(5);
      resultMatrixGnuPlot0.getRowName((-1));
      resultMatrixHTML0.setCount(1, 2);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2);
      resultMatrixLatex0.getSignificance(0, 0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(5, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.497397986377172
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = true;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.enumerateRowNamesTipText();
      resultMatrixLatex0.getDisplayName();
      boolean[] booleanArray0 = new boolean[0];
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.getSignificance(0, 796);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanPrec(1046);
      resultMatrixSignificance0.getMeanPrec();
      resultMatrixSignificance0.toStringKey();
      assertEquals(1046, resultMatrixSignificance0.getMeanPrec());
      
      resultMatrixGnuPlot0.toStringRanking();
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.441847180997983
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.isRowName((-1487));
      resultMatrixLatex0.getVisibleRowCount();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString(10.0, (-2838));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.93508325387895
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "b";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.setCount(0, (-586.961296));
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "b";
      stringArray1[3] = "b";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.padString("O", 2, true);
      assertEquals(" O", string0);
      
      boolean boolean0 = resultMatrixHTML0.isRowName(0);
      assertTrue(boolean0);
      
      Vector<String> vector0 = new Vector<String>();
      vector0.add("g^Ol$$\"$qiNh/^mka:");
      resultMatrixCSV0.setRowHidden(2, true);
      int int0 = resultMatrixHTML0.getVisibleRowCount();
      assertEquals(1, int0);
      
      resultMatrixHTML0.getMeanWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML1.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      
      resultMatrixHTML1.getDefaultStdDevWidth();
      resultMatrixCSV0.getDefaultShowStdDev();
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.141379169300235
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[0][0];
      resultMatrixGnuPlot1.setRanking(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize((String[][]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.520367084418324
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanWidth((-1));
      resultMatrixLatex0.toStringRanking();
      int int0 = resultMatrixLatex0.getVisibleColCount();
      assertEquals(1, int0);
      
      resultMatrixLatex0.setShowStdDev(false);
      int int1 = resultMatrixLatex0.getSignificanceCount(227, 0);
      assertEquals(0, int1);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 227);
      resultMatrixHTML0.getDefaultPrintColNames();
      int[][] intArray0 = new int[7][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray4[2] = 1;
      intArray4[3] = (-2308);
      intArray4[4] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 1;
      intArray5[1] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = (-2308);
      intArray6[1] = 231;
      intArray6[2] = 2;
      intArray6[3] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[2];
      intArray7[0] = 227;
      intArray7[1] = 1;
      intArray0[6] = intArray7;
      resultMatrixLatex0.setRanking(intArray0);
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.144073801240875
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getDefaultSignificanceWidth();
      resultMatrixGnuPlot1.getRowOrder();
      int[][] intArray0 = new int[9][9];
      intArray0[1] = null;
      intArray0[2] = null;
      intArray0[3] = null;
      intArray0[4] = null;
      intArray0[5] = null;
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      intArray0[6] = intArray1;
      intArray0[7] = null;
      intArray0[8] = null;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setRanking(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.2886062789553234
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_StdDevWidth = 46;
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize((-1126), (-641));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.326471952922522
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(832, 2);
      resultMatrixGnuPlot0.setStdDevWidth(2);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex1.getSignificance((-1351), (-1351));
      int[][] intArray0 = new int[7][8];
      int[] intArray1 = new int[2];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = 832;
      intArray2[1] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray4[3] = 2;
      intArray4[4] = 0;
      intArray4[5] = 2;
      intArray4[6] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = 1;
      intArray5[3] = 832;
      intArray5[4] = 1;
      intArray5[5] = 1;
      intArray5[6] = 0;
      intArray5[7] = 2;
      intArray5[8] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = (-1351);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[5];
      intArray7[0] = 1;
      intArray7[1] = 2;
      intArray7[2] = 0;
      intArray7[3] = 1;
      intArray7[4] = 2;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.059559979121308
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      intArray0[0] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.setMeanPrec(2);
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(1629);
      resultMatrixSignificance0.getMeanPrec();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4892645447844886
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = 264;
      resultMatrixPlainText0.setMeanWidth(264);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.meanPrecTipText();
      int int1 = 0;
      int int2 = (-3972);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(0, (-3972));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5038917230545827
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 0);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCount(0, 3025.2310249290467);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(1, 2);
      String string0 = resultMatrixCSV1.padString(" ", 111, false);
      assertEquals("                                                                                                               ", string0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(25, 0);
      int int0 = resultMatrixLatex0.getSignificanceCount(2, 13);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      int int1 = resultMatrixLatex1.getStdDevWidth();
      assertEquals(0, resultMatrixLatex1.getDefaultRowNameWidth());
      assertTrue(int1 == int0);
      
      double double0 = resultMatrixHTML0.getCount(0);
      assertEquals(3025.2310249290467, double0, 0.01);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertFalse(resultMatrixHTML0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixHTML0.getShowAverage());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2831315324725323
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setMeanWidth((-1843));
      resultMatrixGnuPlot0.assign(resultMatrixCSV0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.significanceWidthTipText();
      resultMatrixCSV0.m_ColNameWidth = (-1843);
      resultMatrixCSV0.setSignificance(12, 0, 682);
      int[] intArray0 = new int[3];
      intArray0[0] = 12;
      intArray0[1] = 1;
      intArray0[2] = 0;
      resultMatrixGnuPlot0.setRowNameWidth(113);
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(113, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.735540490660589
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(0, 1251);
      resultMatrixPlainText0.setColNameWidth(2461);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(0);
      assertEquals(1251, resultMatrixPlainText0.getRowCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultPrintColNames();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML1.getEnumerateRowNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3725433410726087
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2321, 0);
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(6);
      assertEquals(6, resultMatrixSignificance0.getMeanPrec());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance1.toStringKey();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.assign(resultMatrixCSV0);
      resultMatrixHTML0.globalInfo();
      resultMatrixHTML0.getDefaultPrintColNames();
      boolean boolean0 = resultMatrixHTML1.getEnumerateRowNames();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.9570687818202166
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2, 2);
      resultMatrixCSV0.m_EnumerateRowNames = true;
      resultMatrixCSV0.getPrintColNames();
      resultMatrixCSV0.isStdDev(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixCSV0.getOptions();
      resultMatrixHTML0.removeFilterName("*");
      resultMatrixHTML0.m_CountWidth = 1538;
      resultMatrixHTML0.TIE_STRING = "]";
      resultMatrixHTML0.clearRanking();
      resultMatrixHTML0.getDefaultPrintColNames();
      Vector<String> vector0 = new Vector<String>(3);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[4];
      doubleArray1[1] = (double) 1538;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 3;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 1.0;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 3;
      doubleArray2[3] = (double) 1538;
      doubleArray2[4] = (double) 1538;
      doubleArray0[1] = doubleArray2;
      resultMatrixCSV0.m_StdDev = doubleArray0;
      resultMatrixHTML0.m_HeaderValues = vector0;
      resultMatrixHTML0.isRowName(2);
      vector0.add("]");
      resultMatrixCSV0.setRowHidden(0, true);
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertEquals(1538, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.15904612329127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[0][0];
      resultMatrixGnuPlot1.setRanking(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot1);
      int int0 = resultMatrixHTML0.getMeanWidth();
      assertEquals(0, int0);
      
      resultMatrixHTML0.rowNameWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertFalse(resultMatrixHTML0.getRemoveFilterName());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.413606690117975
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setMeanPrec(1);
      assertEquals(1, resultMatrixHTML0.getMeanPrec());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.clear();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[][] intArray1 = new int[7][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      resultMatrixSignificance0.clearRanking();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.getDefaultColNameWidth();
      resultMatrixSignificance0.setMeanPrec(2);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixSignificance0.m_ColNameWidth = 1;
      Vector<String> vector1 = new Vector<String>(vector0);
      resultMatrixSignificance1.m_HeaderValues = vector1;
      int int0 = resultMatrixSignificance0.getMeanPrec();
      assertEquals(2, int0);
      
      resultMatrixSignificance1.toStringKey();
      resultMatrixLatex1.getDefaultPrintColNames();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex1.getSignificanceWidth());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0851171470102146
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.m_RankingDiff = intArray0;
      intArray0[0] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.m_PrintRowNames = true;
      resultMatrixSignificance0.getDefaultColNameWidth();
      resultMatrixSignificance0.LOSS_STRING = "c^p\"S6-H&vC";
      resultMatrixSignificance0.doubleToString(0.0, 2);
      resultMatrixSignificance0.setMeanPrec(1629);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.141583292590702
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      resultMatrixGnuPlot0.m_PrintColNames = true;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.getDefaultSignificanceWidth();
      resultMatrixGnuPlot1.getRowOrder();
      int[][] intArray0 = new int[6][9];
      intArray0[0] = null;
      intArray0[1] = null;
      intArray0[2] = null;
      intArray0[3] = null;
      intArray0[4] = null;
      intArray0[5] = null;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.setRanking(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.124569933074272
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixLatex0);
      resultMatrixLatex1.enumerateRowNamesTipText();
      resultMatrixLatex1.getDisplayName();
      double double0 = Double.NaN;
      int int0 = 16;
      // Undeclared exception!
      try { 
        resultMatrixLatex1.setSize(0, (-1649));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.9326778269705285
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      int int0 = 3;
      resultMatrixCSV0.getSummaryTitle(3);
      boolean boolean0 = false;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toString();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.2296037791383503
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setSize(0, 692);
      resultMatrixSignificance0.m_StdDevPrec = 0;
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixSignificance0.m_ColNameWidth = 0;
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getRowNameWidth();
      assertEquals(692, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.500115164444912
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowStdDev(false);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setSize(37, 0);
      resultMatrixHTML0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1;
      resultMatrixPlainText0.assign(resultMatrixLatex0);
      doubleArray0[1] = (double) 1;
      resultMatrixLatex0.m_CountWidth = 1305;
      resultMatrixHTML0.isRowName(1);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("Average");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.setRowHidden(1305, false);
      resultMatrixHTML0.getVisibleRowCount();
      resultMatrixCSV0.toStringSummary();
      resultMatrixHTML0.getMeanWidth();
      resultMatrixHTML0.rowNameWidthTipText();
      resultMatrixCSV0.getEnumerateRowNames();
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixHTML0.meanWidthTipText();
      String[][] stringArray0 = new String[5][0];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "(";
      stringArray1[1] = "(";
      stringArray1[2] = "$\bullet$";
      stringArray1[3] = "$circ$";
      stringArray1[4] = " ";
      stringArray1[5] = "BK[9-qFbT}l,\"S8pzte";
      stringArray1[6] = "$\bullet$";
      stringArray1[7] = "$\bullet$";
      stringArray1[8] = "The width of the mean (0 = optimal).";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "Key,\n";
      stringArray2[1] = ")";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[3];
      stringArray3[0] = ")";
      stringArray3[1] = "Generates the matrix output in LaTeX-syntax.";
      stringArray3[2] = "$\bullet$";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "BK[9-qFbT}l,\"S8pzte";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[6];
      stringArray5[0] = "(";
      stringArray5[1] = "Average";
      stringArray5[2] = "-summary data not set-";
      stringArray5[3] = "$circ$";
      stringArray5[4] = "The width of the mean (0 = optimal).";
      stringArray5[5] = "Key,\n";
      stringArray0[4] = stringArray5;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize(stringArray0, 2, false, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.9859797967166375
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.m_PrintRowNames = true;
      String[] stringArray0 = new String[6];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "(";
      stringArray0[3] = "*";
      stringArray0[4] = ")";
      stringArray0[5] = "*";
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixCSV0.getEnumerateColNames();
      resultMatrixCSV0.setMeanWidth(795);
      resultMatrixCSV0.m_StdDevWidth = 2474;
      resultMatrixLatex0.isAverage((-1421));
      resultMatrixLatex0.setShowStdDev(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixPlainText0.setStdDevPrec((-1421));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.m_SignificanceWidth = 1;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.340483853959
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth(32);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.m_StdDevPrec = 32;
      resultMatrixPlainText0.setStdDevPrec(25);
      int[] intArray0 = new int[3];
      intArray0[0] = 25;
      intArray0[1] = 25;
      intArray0[2] = 0;
      resultMatrixPlainText0.setColOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.7158746792789725
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String[][] stringArray0 = resultMatrixCSV0.toArray();
      assertEquals(3, stringArray0.length);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixCSV0.setStdDevPrec((-1649));
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = (-1649);
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 1652;
      intArray0[7] = 0;
      intArray0[8] = 2;
      resultMatrixCSV0.m_RowOrder = intArray0;
      String string0 = resultMatrixLatex0.getSummaryTitle(0);
      assertEquals("a", string0);
      
      resultMatrixCSV0.toStringKey();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 0);
      int[][] intArray1 = new int[0][3];
      resultMatrixPlainText0.setRanking(intArray1);
      String string1 = resultMatrixPlainText0.toStringKey();
      assertEquals("Key:\n(1) col0\n(2) col1\n", string1);
      
      resultMatrixPlainText0.getDisplayName();
      resultMatrixLatex0.trimString("]", 32);
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=4.117964208987663
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.m_PrintColNames = true;
      resultMatrixPlainText0.toString();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.4221276117638824
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.WIN_STRING = "3";
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixGnuPlot0.getRowName((-1));
      resultMatrixHTML0.setCount(1, (-586.961296));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.getRevision();
      resultMatrixGnuPlot0.setRowNameWidth(0);
      resultMatrixLatex0.setRowNameWidth((-2064));
      resultMatrixLatex0.padString("si<BMuX", 1, true);
      resultMatrixLatex0.getSignificance(1, 861);
      resultMatrixLatex0.isAverage(1);
      resultMatrixLatex0.setSignificance(2787, 1, (-1));
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2956154562448297
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_StdDevWidth = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setCount(2, 100.0);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertFalse(resultMatrixHTML0.getDefaultShowAverage());
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.7683083777082325
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      double[][] doubleArray0 = new double[7][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 2;
      doubleArray2[3] = (double) 1;
      doubleArray0[3] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 2;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 2;
      doubleArray3[7] = (-33.6546155315);
      doubleArray3[8] = (double) 0;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (-33.6546155315);
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = 622.521886519;
      doubleArray4[4] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (double) 2;
      doubleArray5[1] = 622.521886519;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = 622.521886519;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 1;
      doubleArray6[2] = (double) 1;
      doubleArray6[3] = (double) 0;
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (double) 1;
      doubleArray6[6] = 622.521886519;
      doubleArray6[7] = (double) 1;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[7];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = (double) 2;
      doubleArray7[2] = (-33.6546155315);
      doubleArray7[3] = (double) 1;
      doubleArray7[4] = 622.521886519;
      doubleArray7[5] = (double) 0;
      doubleArray7[6] = (-33.6546155315);
      doubleArray0[6] = doubleArray7;
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixGnuPlot0.setRowNameWidth(0);
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.7970775871749813
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.m_SignificanceWidth = 1;
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 2;
      resultMatrixPlainText0.m_SignificanceWidth = 2;
      intArray1[1] = 0;
      resultMatrixPlainText0.getRevision();
      intArray1[2] = 0;
      intArray1[3] = 1;
      resultMatrixPlainText0.setPrintColNames(false);
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      resultMatrixPlainText0.m_ColNames = null;
      resultMatrixPlainText0.removeFilterName("Vn='xMon*Xr#f\"");
      resultMatrixPlainText0.setEnumerateColNames(false);
      resultMatrixPlainText0.setRemoveFilterName(false);
      resultMatrixPlainText0.setSize(0, 1251);
      resultMatrixPlainText0.setColNameWidth(2461);
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.showAverageTipText();
      resultMatrixPlainText0.getCount(0);
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.toStringSummary();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.7658184932857566
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.m_RemoveFilterName = false;
      resultMatrixGnuPlot1.getColCount();
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, int0);
      
      boolean boolean0 = resultMatrixGnuPlot0.isMean(0);
      assertFalse(boolean0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset col0\n------------\nrow0        \n", string0);
      
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot1.toStringRanking();
      assertEquals(2, resultMatrixGnuPlot1.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot1.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot1.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=4.022038358278445
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setEnumerateColNames(true);
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.LOSS_STRING = "CSV";
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixCSV0.LOSS_STRING = "CSV";
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.getSummaryTitle(3);
      resultMatrixCSV0.setEnumerateColNames(false);
      resultMatrixCSV0.toArray();
      resultMatrixCSV0.setColHidden(0, true);
      resultMatrixCSV0.getDefaultPrintRowNames();
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.headerKeys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "d";
      stringArray0[1] = "[";
      stringArray0[2] = "]";
      stringArray0[3] = "CSV";
      stringArray0[4] = "[";
      stringArray0[5] = "]";
      stringArray0[6] = "]";
      stringArray0[7] = "[";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixCSV0.getCountWidth();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("Generates output for a data and script file for GnuPlot.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.7683083777082325
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      double[][] doubleArray0 = new double[7][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 1;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 1;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 2;
      doubleArray3[2] = (double) 2;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) 2;
      doubleArray3[6] = (double) 2;
      doubleArray3[7] = (-33.6546155315);
      doubleArray3[8] = (double) 0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1;
      doubleArray4[1] = (-33.6546155315);
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = 623.1629403146045;
      doubleArray4[4] = (double) 2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (double) 2;
      doubleArray5[1] = 623.1629403146045;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = 623.1629403146045;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = (double) 1;
      doubleArray6[1] = (double) 1;
      doubleArray6[2] = (double) 1;
      doubleArray6[3] = (double) 0;
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (double) 1;
      doubleArray6[6] = 623.1629403146045;
      doubleArray6[7] = (double) 1;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[8];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = (double) 2;
      doubleArray7[2] = (-33.6546155315);
      doubleArray7[3] = (double) 1;
      doubleArray7[4] = 623.1629403146045;
      doubleArray7[5] = (double) 0;
      doubleArray7[6] = (-33.6546155315);
      doubleArray0[6] = doubleArray7;
      resultMatrixGnuPlot0.m_Mean = doubleArray0;
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixGnuPlot0.setRowNameWidth(0);
      int int0 = resultMatrixGnuPlot0.getStdDevPrec();
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=4.0366241876404345
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 0;
      resultMatrixPlainText0.getRevision();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.setCount(931, 0);
      ResultMatrixSignificance.main((String[]) null);
  }
}
