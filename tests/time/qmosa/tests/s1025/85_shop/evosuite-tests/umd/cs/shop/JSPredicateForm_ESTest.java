/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:59:50 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Collection;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4337347263854032
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      boolean boolean0 = jSPredicateForm2.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSTerm0.clonePF();
      jSTerm0.makeVariable();
      streamTokenizer0.wordChars((-205), (-205));
      jSPredicateForm3.print();
      StringBuffer stringBuffer0 = jSPredicateForm2.toStr();
      assertEquals(9, stringBuffer0.length());
      
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.lowerCaseMode(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      stringReader0.reset();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      jSTerm0.print();
      boolean boolean1 = jSTerm0.equals(jSPredicateForm1);
      assertFalse(boolean1 == boolean0);
      
      jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.applySubstitutionPF(jSSubstitution1);
      jSTerm0.toStr();
      JSSubstitution jSSubstitution3 = jSPredicateForm4.matches((JSPredicateForm) jSTerm0, jSSubstitution2);
      assertEquals(1, jSSubstitution3.size());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader(">WN");
      stringReader0.close();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nval = 0.0;
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9497210427237612
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      stringReader0.skip((-4));
      streamTokenizer0.eolIsSignificant(false);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.makeVariable();
      streamTokenizer0.wordChars((-2), (-2));
      jSPredicateForm0.print();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      stringReader0.reset();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer2);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm1.applySubstitutionPF(jSSubstitution1);
      boolean boolean0 = jSTerm0.equals(jSPredicateForm1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      jSPredicateForm0.parallelStream();
      jSPredicateForm0.toStr();
      objectArray0[3] = (Object) jSPredicateForm0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) jSPredicateForm0;
      Object[] objectArray1 = new Object[6];
      jSPredicateForm0.addElement("HTM*~|$Xg0DgVD_[!f");
      objectArray1[0] = (Object) jSPredicateForm0;
      objectArray1[1] = (Object) jSPredicateForm0;
      objectArray1[2] = (Object) jSPredicateForm0;
      objectArray1[3] = (Object) jSPredicateForm0;
      objectArray1[4] = (Object) null;
      objectArray1[5] = (Object) null;
      jSPredicateForm0.toArray(objectArray1);
      jSPredicateForm0.print();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      stringReader0.skip((-4));
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.equals((JSPredicateForm) null);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7530283365896258
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2gCg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeEval(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSTerm0.clonePF();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm2.clonePF();
      StringReader stringReader1 = new StringReader("2gCg;6e");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      streamTokenizer1.eolIsSignificant(true);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      stringReader1.reset();
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader1);
      streamTokenizer1.whitespaceChars((-1720699463), (-1283));
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader1);
      StreamTokenizer streamTokenizer6 = new StreamTokenizer(stringReader1);
      streamTokenizer6.whitespaceChars(1, (-988));
      JSTerm jSTerm3 = new JSTerm(streamTokenizer6);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) streamTokenizer6);
      JSTerm jSTerm4 = new JSTerm();
      JSPredicateForm jSPredicateForm0 = jSTerm3.applySubstitutionPF(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm3.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.440981419536016
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.print();
      jSPredicateForm0.toStr();
      JSTerm jSTerm1 = new JSTerm();
      System.setCurrentTimeMillis(452L);
      JSTerm jSTerm2 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9275521940157818
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean0);
      
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution2);
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution3);
      jSTerm0.isEmpty();
      JSPredicateForm jSPredicateForm2 = jSTerm0.applySubstitutionPF(jSSubstitution4);
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm0));
      assertNotSame(jSPredicateForm2, jSPredicateForm1);
      assertFalse(jSSubstitution4.fail());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.414482892918478
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      StringReader stringReader0 = new StringReader("sxHI@");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSJshopVars.flagLevel = (-4);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm2.clear();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm2.toStr();
      JSPredicateForm jSPredicateForm4 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm3 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm5 = jSPredicateForm4.standarizerPredicateForm();
      jSTerm2.add((Object) jSPredicateForm3);
      jSPredicateForm5.removeAllElements();
      stringReader0.ready();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSSubstitution0.clone();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm2);
      JSPredicateForm jSPredicateForm6 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm7 = new JSPredicateForm();
      jSPredicateForm6.equals(jSPredicateForm7);
      JSPredicateForm jSPredicateForm8 = null;
      try {
        jSPredicateForm8 = new JSPredicateForm("");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StringReader stringReader1 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      boolean boolean0 = false;
      streamTokenizer0.eolIsSignificant(true);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) stringReader1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.107502173902236
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.eolIsSignificant(true);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches((JSPredicateForm) jSTerm1);
      assertNotSame(jSPredicateForm0, jSPredicateForm1);
      assertTrue(jSSubstitution0.fail());
      
      boolean boolean0 = jSTerm0.equals(jSPredicateForm2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0307973085839617
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2C;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("ggbskhtmz");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer2);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, (JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3656352865579353
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      StringReader stringReader0 = new StringReader("sxHI@");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm2.clear();
      jSPredicateForm3.isEmpty();
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm4 = jSTerm0.applySubstitutionPF(jSSubstitution1);
      JSTerm jSTerm3 = new JSTerm();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm5 = jSPredicateForm4.standarizerPredicateForm();
      jSPredicateForm5.removeAllElements();
      stringReader0.ready();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      jSSubstitution0.clone();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm2);
      JSPredicateForm jSPredicateForm6 = jSPredicateForm1.applySubstitutionPF(jSSubstitution1);
      JSPredicateForm jSPredicateForm7 = new JSPredicateForm();
      jSPredicateForm6.equals(jSPredicateForm7);
      JSPredicateForm jSPredicateForm8 = null;
      try {
        jSPredicateForm8 = new JSPredicateForm("");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4386193835573455
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      StringReader stringReader0 = new StringReader("YOz:FBaKRP4LZTk{8Z");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.clonePF();
      jSPredicateForm1.equals(jSPredicateForm2);
      JSPredicateForm jSPredicateForm4 = jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSPredicateForm2.standarizerPredicateForm();
      jSTerm0.matches(jSPredicateForm3, jSSubstitution2);
      JSPredicateForm jSPredicateForm5 = jSTerm1.applySubstitutionPF(jSSubstitution2);
      JSSubstitution jSSubstitution4 = jSTerm1.matches(jSPredicateForm0, jSSubstitution2);
      jSSubstitution4.clone();
      jSPredicateForm4.equals((JSPredicateForm) jSTerm0);
      jSPredicateForm5.applySubstitutionPF(jSSubstitution4);
      JSPredicateForm jSPredicateForm6 = new JSPredicateForm();
      jSPredicateForm2.equals(jSPredicateForm3);
      JSPredicateForm jSPredicateForm7 = null;
      try {
        jSPredicateForm7 = new JSPredicateForm("");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) jSPredicateForm0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) jSPredicateForm0;
      jSPredicateForm0.toArray();
      JSJshopVars.lessT = 47;
      jSPredicateForm0.equals((JSPredicateForm) null);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm((String) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9703656144797845
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm1 = jSTerm1.clonePF();
      jSPredicateForm0.equals(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = new JSPredicateForm((String) null);
      // Undeclared exception!
      try { 
        jSPredicateForm2.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.eolIsSignificant(false);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      char[] charArray0 = new char[5];
      charArray0[0] = '>';
      charArray0[1] = '>';
      charArray0[2] = 'K';
      charArray0[3] = 'k';
      charArray0[4] = 'V';
      stringReader0.read(charArray0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      Object object0 = new Object();
      jSTerm0.add(object0);
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.350841144863373
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      jSPredicateForm2.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm2.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSPredicateForm1.standarizerPredicateForm();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm3, jSSubstitution3);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      JSSubstitution jSSubstitution7 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      JSSubstitution jSSubstitution8 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm4 = null;
      try {
        jSPredicateForm4 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1247325957170227
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      jSPredicateForm2.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm2.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSPredicateForm1.standarizerPredicateForm();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm3, jSSubstitution3);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution6 = new JSSubstitution();
      JSSubstitution jSSubstitution7 = new JSSubstitution();
      JSTerm jSTerm2 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm2.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      boolean boolean0 = false;
      streamTokenizer0.eolIsSignificant(true);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.013265352715179
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      stringReader0.skip((-4));
      streamTokenizer0.sval = "vT3{L/W~";
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.makeVariable();
      streamTokenizer0.wordChars((-2), (-2));
      jSPredicateForm0.print();
      streamTokenizer0.nextToken();
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      stringReader0.reset();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer3.slashStarComments(true);
      streamTokenizer1.ordinaryChars((-4), (-4));
      streamTokenizer2.nextToken();
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("2*Cg;6e");
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader1);
      assertFalse(streamTokenizer5.equals((Object)streamTokenizer2));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.013265352715179
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      stringReader0.skip((-4));
      streamTokenizer0.eolIsSignificant(false);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.makeVariable();
      streamTokenizer0.wordChars((-2), (-2));
      jSPredicateForm0.print();
      jSPredicateForm0.toStr();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.lowerCaseMode(false);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      stringReader0.ready();
      stringReader0.reset();
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      jSTerm0.print();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      System.setCurrentTimeMillis((-4));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      jSPredicateForm0.addElement((Object) null);
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) jSPredicateForm0;
      objectArray0[4] = (Object) null;
      jSPredicateForm0.clone();
      objectArray0[5] = (Object) jSPredicateForm0;
      jSPredicateForm0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "PlanningDomain: error";
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = null;
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) jSPredicateForm0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) jSPredicateForm0;
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) jSPredicateForm0;
      objectArray1[1] = (Object) jSPredicateForm0;
      objectArray1[2] = (Object) jSPredicateForm0;
      objectArray1[3] = (Object) jSPredicateForm0;
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.equals(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.121526006217654
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Plancing(omain:verror");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      jSPredicateForm2.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.clonePF();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      jSPredicateForm1.standarizerPredicateForm();
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm4, jSSubstitution0);
      jSTerm0.applySubstitutionPF(jSSubstitution3);
      JSTerm jSTerm1 = null;
      try {
        jSTerm1 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2738706471394226
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.eolIsSignificant(false);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.makeEval(false);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.standarizerPredicateForm();
      jSPredicateForm2.equals(jSPredicateForm0);
      jSPredicateForm4.matches(jSPredicateForm2);
      // Undeclared exception!
      try { 
        jSPredicateForm1.addAll((-1), (Collection) jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("wi");
      char[] charArray0 = null;
      int int0 = (-274);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars((-274), 1431);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.eolIsSignificant(true);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.standarizerPredicateForm();
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.close();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer2);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSJshopVars.verticalL = (-1984652823);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      stringReader0.skip((-4));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ordinaryChar((-4));
      streamTokenizer0.eolIsSignificant(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.lowerCaseMode(true);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer5 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) jSPredicateForm0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) jSPredicateForm0;
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) jSPredicateForm0;
      objectArray1[1] = (Object) jSPredicateForm0;
      objectArray1[2] = (Object) jSPredicateForm0;
      objectArray1[3] = (Object) jSPredicateForm0;
      objectArray1[4] = (Object) null;
      objectArray1[5] = (Object) null;
      jSPredicateForm0.toArray(objectArray1);
      jSPredicateForm0.print();
      assertEquals(0, jSPredicateForm0.size());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) null;
      jSPredicateForm0.removeElement((Object) null);
      objectArray0[1] = (Object) null;
      JSJshopVars.astherisk = (-2758);
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) null;
      objectArray0[8] = (Object) jSPredicateForm0;
      jSPredicateForm0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("2*Cg;6e");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) stringReader0;
      stringReader0.close();
      objectArray0[1] = (Object) stringReader0;
      objectArray0[2] = (Object) stringReader0;
      objectArray0[3] = (Object) stringReader0;
      objectArray0[4] = (Object) stringReader0;
      jSTerm0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }
}
