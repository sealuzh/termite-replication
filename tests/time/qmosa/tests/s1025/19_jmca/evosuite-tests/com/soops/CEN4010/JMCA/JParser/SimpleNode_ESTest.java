/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 09:08:35 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2303899811147658
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-531));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(";");
      simpleNode0.id = 10;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) ";");
      stringWriter0.append('2');
      simpleNode0.toString();
      simpleNode0.dump("nV", stringWriter0);
      assertEquals(";2<EnumConstant>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.295789001088607
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EjZM\"\"BL");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-780), 1693, 1693);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6]VrfY");
      javaParserTokenManager0.curLexState = (-1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"]xvmqyg_GGm8psd,<.");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      stringReader0.read();
      simpleNode0.id = 57;
      JavaParser javaParser1 = new JavaParser("\"]xvmqyg_GGm8psd,<.");
      javaParser1.currNode = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, 1693);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier("&");
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode1.dump("\"?|e#Ev2", stringWriter0);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1693
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8437690607064712
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      nodeArray0[8] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      String string0 = "com.soops.CEN4010.JMCA.JParser.SimpleNode";
      SystemInUtil.addInputLine("");
      arrayList0.add("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      simpleNode0.jjtGetParent();
      arrayList0.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      String string1 = "/Ot";
      arrayList0.add("/Ot");
      simpleNode0.dump(string0, stringWriter0);
      int int0 = (-90);
      arrayList0.ensureCapacity(int0);
      String string2 = "%";
      simpleNode0.dump(string2, stringWriter0);
      simpleNode0.toString(string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-531));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      simpleNode0.id = 3789;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList0.add((String) null);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) stringBuffer0);
      StringWriter stringWriter2 = stringWriter1.append('j');
      // Undeclared exception!
      try { 
        simpleNode0.dump("", stringWriter2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9569051706452845
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("\"<\"", stringWriter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 2727);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetChild(0);
      assertEquals(2728, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.294307519607125
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Ck");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      StringWriter stringWriter0 = new StringWriter(10);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.jjtGetParent();
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 0);
      simpleNode2.dump("*ge", stringWriter1);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-3541));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3541
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.323230114698323
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-531));
      JavaParser javaParser0 = new JavaParser("MVT9xE=4CUk[F|3~dQ2");
      javaParser0.token_source.getNextToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2383);
      JavaParser javaParser1 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, (-531));
      SimpleNode simpleNode2 = new SimpleNode(javaParser1, 1);
      ArrayList<String> arrayList0 = simpleNode2.identifiers;
      arrayList0.add("CompilationUnit");
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(1485);
      simpleNode2.dump("MVT9xE=4CUk[F|3~dQ2", stringWriter0);
      SimpleNode simpleNode3 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode3.toString("Hp97!+P?s");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.212658720199207
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("");
      simpleNode0.setIdentifier("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent((Node) null);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.655315419445857
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.dump("\"<\"", stringWriter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      JavaParser javaParser0 = new JavaParser("\"<\"");
      Node node0 = javaParser0.currNode;
      int int0 = 2727;
      simpleNode0.jjtAddChild((Node) null, 2727);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(",R4@QLmb^U", stringWriter1);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2728);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2728
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = (-531);
      SimpleNode simpleNode0 = new SimpleNode((-531));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      int int1 = 10;
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-531));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-531));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      simpleNode0.id = 10;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      arrayList1.add((String) null);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      String string0 = ">=";
      arrayList2.add(">=");
      // Undeclared exception!
      try { 
        simpleNode0.dump("&&", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      JavaParser javaParser1 = new JavaParser(sequenceInputStream0);
      Node node0 = javaParser1.currNode;
      simpleNode0.jjtAddChild((Node) null, 445);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.toString();
      simpleNode1.jjtClose();
      simpleNode1.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2727);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2727
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EnumConstant");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      JavaParser javaParser0 = new JavaParser("EnumConstant");
      StringReader stringReader0 = new StringReader("EnumConstant");
      int int0 = (-2446);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2446), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      Node node0 = javaParser1.currNode;
      SimpleNode simpleNode0 = new SimpleNode((-2446));
      simpleNode0.jjtAddChild((Node) null, 214);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("EnumConstant", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.7046360973492382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-531));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      simpleNode0.id = 10;
      StringWriter stringWriter0 = new StringWriter(10);
      stringWriter0.append((CharSequence) "");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append('a');
      simpleNode0.dump("}", stringWriter1);
      assertEquals("a<EnumConstant>\n</EnumConstant>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("  <identifier>");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 17);
      String string0 = simpleNode0.toString(",8d");
      assertEquals(",8dVariableDeclarator", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[4];
      char char0 = 'f';
      charArray0[0] = 'f';
      charArray0[1] = ',';
      charArray0[2] = '\"';
      charArray0[3] = '\u001B';
      StringWriter stringWriter1 = new StringWriter();
      String string0 = "V[u|G(>iHkN)mC\\|5:=";
      StringWriter stringWriter2 = null;
      try {
        stringWriter2 = new StringWriter((-3900));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaParser javaParser0 = null;
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2011);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2048);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = 'w';
      charArray0[2] = '6';
      charArray0[3] = 'x';
      charArray0[4] = '(';
      charArray0[5] = 'H';
      charArray0[6] = 't';
      charArray0[7] = ':';
      charArray0[8] = 'K';
      stringReader0.read(charArray0);
      try { 
        javaParser0.NameList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J`U}^n");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-318));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-511));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      int int0 = (-2359);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2359));
      simpleNode0.jjtOpen();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      // Undeclared exception!
      try { 
        pipedInputStream0.read(byteArray0, (int) (byte)70, (-1666));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      SimpleNode simpleNode1 = new SimpleNode((-123));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode1.children = nodeArray0;
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.jjtAddChild((Node) null, 44);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-123));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -123
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
