/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:47:52 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setPadText(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setXHTML(true);
      outputFormat0.getEncoding();
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.getEncoding();
      outputFormat0.getEncoding();
      outputFormat0.getEncoding();
      assertTrue(outputFormat0.isPadText());
      assertEquals(1, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.75828663663733
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndentSize(1307);
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.setPadText(false);
      outputFormat1.setXHTML(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setIndent("}[K9c6fe");
      outputFormat0.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat();
      String[] stringArray0 = new String[4];
      outputFormat2.setNewLineAfterDeclaration(false);
      stringArray0[0] = "}[K9c6fe";
      stringArray0[1] = "1bYPk~iJg";
      outputFormat1.setPadText(true);
      stringArray0[2] = "1bYPk~iJg";
      stringArray0[3] = "}[K9c6fe";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createCompactFormat();
      outputFormat2.setIndentSize(1);
      String[] stringArray1 = new String[2];
      outputFormat1.parseOptions(stringArray1, 2172);
      assertTrue(outputFormat1.isPadText());
      
      outputFormat0.getLineSeparator();
      boolean boolean0 = outputFormat2.isNewLineAfterDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.923749075357105
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = new OutputFormat("-suppressDeclaration", false, "Nvsq*co");
      outputFormat3.setSuppressDeclaration(true);
      outputFormat2.setIndent(true);
      OutputFormat.createPrettyPrint();
      outputFormat1.setAttributeQuoteCharacter('\'');
      outputFormat2.setIndent("fWx;%(Q*8RNQkNQq\"l");
      assertEquals("fWx;%(Q*8RNQkNQq\"l", outputFormat2.getIndent());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4901989593898826
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(false);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat("-suppressDeclaration", false, "Nvsq*co");
      OutputFormat outputFormat3 = new OutputFormat("Nvsq*co", true, "Nvsq*co");
      outputFormat3.setOmitEncoding(true);
      outputFormat1.setIndentSize(4);
      outputFormat0.setEncoding("-padText");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-padText";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-padText";
      stringArray0[3] = "-padText";
      stringArray0[4] = "-padText";
      stringArray0[5] = "-suppressDeclaration";
      stringArray0[6] = ")";
      stringArray0[7] = "-padText";
      stringArray0[8] = "Nvsq*co";
      outputFormat1.parseOptions(stringArray0, 4);
      OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('1');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (1)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5685129750105107
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = new OutputFormat("4;", false, "nj*?:");
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-indentSize";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8355007457389183
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(false);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat("-suppressDeclaration", false, "-suppressDeclaration");
      outputFormat2.setSuppressDeclaration(true);
      OutputFormat outputFormat3 = new OutputFormat("-suppressDeclaration", false, "-suppressDeclaration");
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      outputFormat4.setIndent(true);
      outputFormat3.setIndentSize(1281);
      outputFormat1.setSuppressDeclaration(false);
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "-suppressDeclaration";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "-suppressDeclaration";
      stringArray0[4] = "-suppressDeclaration";
      int int0 = 3;
      // Undeclared exception!
      try { 
        outputFormat5.parseOptions(stringArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.366658571305604
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags((-1042));
      outputFormat1.setTrimText(true);
      outputFormat1.setIndentSize(1);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmptys";
      stringArray0[1] = "-xhtml";
      stringArray0[2] = "-expandEmptys";
      stringArray0[3] = "inentSize";
      stringArray0[4] = "-expandEmptys";
      stringArray0[5] = "-expandEmptys";
      stringArray0[6] = "-expandEmptys";
      stringArray0[7] = "-expandEmptys";
      stringArray0[8] = "-xhtml";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals((-1042), outputFormat0.getNewLineAfterNTags());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setPadText(false);
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterNTags(3191);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "u8!rTP%/ECEsTtCzFq";
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(3191, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1139172386274323
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setLineSeparator("-lineSeparator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "";
      int int0 = 0;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1619231684953415
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat1.setIndent("nj*?:");
      outputFormat1.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat1.setPadText(true);
      String[] stringArray0 = new String[0];
      outputFormat2.setNewLineAfterNTags((-1508));
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat2.setIndentSize((-748));
      assertEquals((-1508), outputFormat2.getNewLineAfterNTags());
      
      outputFormat3.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndent("LKk>0HJ$>+y-9t90");
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4860337389803027
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setEncoding("Z");
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags((-497));
      outputFormat1.setIndent("-omitEncoding");
      outputFormat0.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "m#&fn8E_aQq&%(-|";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-hSQ16";
      stringArray0[4] = "F)!%}B";
      stringArray0[5] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat3 = new OutputFormat("W", false, "jP,1c&");
      outputFormat3.setIndent(false);
      outputFormat3.setIndentSize(34);
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat2.isXHTML();
      boolean boolean0 = outputFormat3.isNewLineAfterDeclaration();
      assertEquals("                                  ", outputFormat3.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.707529922879126
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeprator", false);
      OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("-lineSeprator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setNewLineAfterNTags(7);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      outputFormat1.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-lineSeprator";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.getEncoding();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isPadText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = " 83em<{'?+@+nyN%";
      stringArray0[5] = "B";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 2717);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      outputFormat0.setPadText(true);
      String string0 = outputFormat0.getEncoding();
      assertEquals("", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.762064591127935
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat0.isTrimText());
      assertEquals("  ", outputFormat0.getIndent());
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      
      OutputFormat outputFormat1 = new OutputFormat("n8_Va.c]*F", true, "n8_Va.c]*F");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtmlF)!%}B>z9nBx";
      outputFormat1.parseOptions(stringArray0, 1);
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("n8_Va.c]*F", outputFormat1.getIndent());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals("n8_Va.c]*F", outputFormat1.getEncoding());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      outputFormat3.setIndentSize(1);
      assertEquals(" ", outputFormat3.getIndent());
      
      int int0 = outputFormat2.parseOptions(stringArray0, 1);
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isOmitEncoding());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals(1, int0);
      assertFalse(outputFormat2.isNewlines());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isPadText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.878666739983584
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("");
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("-encoding");
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "1bYPk~iJg";
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setXHTML(false);
      outputFormat0.getIndent();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('2');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (2)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2912668801316993
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(false);
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterNTags(34);
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags(34);
      outputFormat0.isTrimText();
      outputFormat0.setPadText(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndentSize(34);
      outputFormat0.setIndentSize(1009);
      outputFormat0.setPadText(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setEncoding("sT&");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(false);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("sT&", outputFormat0.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String string0 = "-|`f>xgK**8*";
      outputFormat0.setNewLineAfterDeclaration(false);
      char char0 = ' ';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("cRDH(f-");
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.3454749304652576
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(3213);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      outputFormat0.getEncoding();
      outputFormat0.isNewlines();
      outputFormat0.getEncoding();
      outputFormat0.isOmitEncoding();
      outputFormat0.isNewLineAfterDeclaration();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals("-encoding", outputFormat0.getEncoding());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isPadText());
      assertTrue(outputFormat0.isTrimText());
      assertEquals("  ", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("Fnn4x1U2<uiku");
      outputFormat0.setXHTML(false);
      outputFormat0.getIndent();
      outputFormat0.getIndent();
      assertEquals("Fnn4x1U2<uiku", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1594815919344765
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterNTags((-2078));
      outputFormat0.setIndent("Ba,3NI0q=");
      outputFormat0.setNewLineAfterNTags((-2078));
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("-xtmlF!%}B>znB");
      outputFormat0.setNewlines(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isPadText();
      outputFormat0.setEncoding("vm;4\t.;}]A");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Ba,3NI0q=";
      stringArray0[1] = "W";
      stringArray0[4] = "-hSQ16~[L)vwU";
      stringArray0[3] = "-xtmlF!%}B>znB";
      stringArray0[4] = "vm;4\t.;}]A";
      stringArray0[5] = "Ba,3NI0q=";
      outputFormat1.parseOptions(stringArray0, 2472);
      outputFormat1.setIndent("W");
      assertEquals("W", outputFormat1.getIndent());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9954171502194566
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlF)!%}B>z9nBx", true, "-indentSize");
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      outputFormat0.setIndent(true);
      outputFormat0.parseOptions(stringArray0, 39);
      OutputFormat outputFormat1 = new OutputFormat("\"-G?<8gtz!|2X");
      outputFormat1.setIndentSize(39);
      outputFormat1.setIndent("u8!rTP%/ECEsTtCzFq");
      outputFormat1.setXHTML(true);
      outputFormat1.getIndent();
      outputFormat0.setEncoding("C9_;JTajDi+}W.M");
      assertEquals("C9_;JTajDi+}W.M", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2137026173659393
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("Z");
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isPadText();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("-encoding");
      outputFormat0.isXHTML();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "Z";
      stringArray0[2] = "Z";
      stringArray0[3] = "Z";
      outputFormat0.setTrimText(false);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("Z", outputFormat0.getEncoding());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9906380498271754
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml4;");
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setIndentSize(0);
      outputFormat1.setEncoding("x/zuV Z");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(false);
      outputFormat1.setIndent("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-xhtml4;";
      stringArray0[2] = " 83em<{'?+@+nyN%";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-xhtml4;", outputFormat0.getEncoding());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      outputFormat0.setXHTML(true);
      assertEquals("", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = new OutputFormat("", false);
      outputFormat1.getIndent();
      assertEquals("UTF-8", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.073421647530602
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(">EaX.]U4reTAiZ", true);
      outputFormat0.setNewLineAfterNTags(1339);
      outputFormat0.setIndent("");
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(3813);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.getEncoding();
      outputFormat0.isNewlines();
      outputFormat0.setLineSeparator("AY77");
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertEquals("AY77", outputFormat0.getLineSeparator());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2410283190591764
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterNTags(2668);
      outputFormat0.setNewLineAfterNTags((-1461));
      outputFormat0.setIndent("J8'r[Dw8F#uV");
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("5^:3? B8^@IG");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setNewlines(true);
      outputFormat0.setIndentSize((-4053));
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(true);
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = "n8_Va.c]*F";
      stringArray0[3] = "";
      stringArray0[4] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 329);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(329, int0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setLineSeparator("-lineSeparator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.isXHTML();
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "Tk!E%/0fM6@u Aj";
      stringArray0[4] = "Tk!E%/0fM6@u Aj";
      stringArray0[5] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 2717);
      assertEquals("-lineSeparator", outputFormat0.getLineSeparator());
      assertEquals(2717, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("?:DC}n]Cc~gsiRJ95l/");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?:DC}n]Cc~gsiRJ95l/";
      stringArray0[1] = "?:DC}n]Cc~gsiRJ95l/";
      stringArray0[2] = "?:DC}n]Cc~gsiRJ95l/";
      stringArray0[3] = "?:DC}n]Cc~gsiRJ95l/";
      stringArray0[4] = "?:DC}n]Cc~gsiRJ95l/";
      stringArray0[5] = "?:DC}n]Cc~gsiRJ95l/";
      stringArray0[6] = "!^Tucnxokv?8CDOJAqV";
      stringArray0[7] = "?:DC}n]Cc~gsiRJ95l/";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3859));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3859
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4575530066893423
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qg", true, "9\"{kp");
      outputFormat0.setNewLineAfterNTags((-932));
      outputFormat0.setNewLineAfterNTags((-932));
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndent("qg");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndentSize((-932));
      outputFormat0.setEncoding("9\"{kp");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(0);
      outputFormat0.isSuppressDeclaration();
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat1.getLineSeparator();
      outputFormat1.isExpandEmptyElements();
      outputFormat2.isPadText();
      outputFormat2.setExpandEmptyElements(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "qg";
      boolean boolean0 = outputFormat2.isNewLineAfterDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      int int0 = (-1);
      outputFormat0.setIndentSize((-1));
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-2881));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlF)!%}B>z9nBx", true, "-indentSize");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "-xhtmlF)!%}B>z9nBx";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewlines());
      assertEquals(0, int0);
      assertEquals("-indentSize", outputFormat0.getEncoding());
      assertEquals("-xhtmlF)!%}B>z9nBx", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0696990273065996
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("");
      outputFormat0.setEncoding("-encoding");
      outputFormat0.isPadText();
      outputFormat0.setEncoding("WgwxFLFV~z>Wh{eD");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setIndent("-encoding");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "n8_Va.c]*F";
      stringArray0[2] = "";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "n8_Va.c]*F";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-33));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -33
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setLineSeparator("-lineSeparator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat0.isXHTML();
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "1bYPk~iJg";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 2717);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setIndent("1bYPk~iJg");
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlu8!rTP%/ECEsTtCzFq", false, "-lineSeparator");
      outputFormat1.isExpandEmptyElements();
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setXHTML(true);
      outputFormat1.getIndent();
      outputFormat0.setEncoding("-lineSeparator");
      outputFormat1.setEncoding("'8 o__/M=X@gd~!");
      assertEquals("'8 o__/M=X@gd~!", outputFormat1.getEncoding());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setPadText(true);
      assertTrue(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent(false);
      outputFormat0.setXHTML(true);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qLo");
      outputFormat0.setLineSeparator("qLo");
      assertEquals("qLo", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", string0);
      assertTrue(outputFormat0.isNewlines());
      assertEquals("-suppressDeclaration", outputFormat0.getIndent());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.373030131495957
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(1307);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.setIndent("-indentSize");
      assertEquals("-indentSize", outputFormat0.getIndent());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("d\"cFV|9!X\f+[Z#");
      outputFormat0.setIndent("-expandEmptyJ5'UqI<LS|}V^X");
      String[] stringArray0 = new String[4];
      outputFormat0.setIndent(false);
      stringArray0[0] = "d\"cFV|9!X\f+[Z#";
      stringArray0[1] = "d\"cFV|9!X\f+[Z#";
      stringArray0[2] = "d\"cFV|9!X\f+[Z#";
      stringArray0[3] = "d\"cFV|9!X\f+[Z#";
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1341));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1341
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("oXck1WA!;?fqv,3&Ms", true, (String) null);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertEquals("oXck1WA!;?fqv,3&Ms", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.7403440760878386
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat("Nvsq*co", false, "Nvsq*co");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent(true);
      outputFormat1.setIndentSize(1281);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Va/QZUK!0";
      stringArray0[1] = "Nvsq*co";
      stringArray0[2] = "Nvsq*co";
      stringArray0[3] = "Nvsq*co";
      outputFormat0.parseOptions(stringArray0, 1243);
      outputFormat2.setIndent("Nvsq*co");
      int int0 = outputFormat2.parseOptions(stringArray0, 1273);
      assertEquals("Nvsq*co", outputFormat2.getIndent());
      assertEquals(1273, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.2448173018630233
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("i6h3xV<|5l7vv%K_");
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setPadText(false);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isTrimText();
      outputFormat2.setEncoding("i6h3xV<|5l7vv%K_");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isXHTML();
      outputFormat0.isSuppressDeclaration();
      outputFormat2.setIndent(false);
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "i6h3xV<|5l7vv%K_";
      stringArray0[1] = "i6h3xV<|5l7vv%K_";
      stringArray0[2] = "u$tF)e99v-OB@";
      stringArray0[3] = "i6h3xV<|5l7vv%K_";
      stringArray0[4] = "i6h3xV<|5l7vv%K_";
      stringArray0[5] = "i6h3xV<|5l7vv%K_";
      stringArray0[6] = "i6h3xV<|5l7vv%K_";
      stringArray0[7] = "i6h3xV<|5l7vv%K_";
      stringArray0[8] = "i6h3xV<|5l7vv%K_";
      outputFormat1.parseOptions(stringArray0, 389);
      outputFormat2.setNewLineAfterNTags(957);
      assertEquals(957, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", false);
      outputFormat0.setLineSeparator("KD}]S_ozdrVNV");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize(2717);
      outputFormat0.setEncoding("G,KrFi2w`");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("sy&ea,`>");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "KD}]S_ozdrVNV";
      outputFormat0.parseOptions(stringArray0, 2717);
      outputFormat0.getEncoding();
      assertEquals("sy&ea,`>", outputFormat0.getIndent());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml1bYPk~iJg");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('t');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (t)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.1591556045964002
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlF)!%}B>z9nBx", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[1] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[2] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[3] = "-xhtmlF)!%}B>z9nBx";
      stringArray0[4] = "";
      stringArray0[5] = "zz/Jh!`d$mM12NAr=";
      stringArray0[6] = "-xhtmlF)!%}B>z9nBx";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat("-omitEncoding", true);
      OutputFormat outputFormat2 = new OutputFormat("{akE");
      int int0 = outputFormat0.parseOptions(stringArray0, 4);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat0.setExpandEmptyElements(true);
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty1bYPk~iJg", true, "J5'UqI<LS|}V");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "J5'UqI<LS|}V";
      stringArray0[1] = "";
      stringArray0[2] = "J5'UqI<LS|}V";
      stringArray0[3] = "-expandEmpty1bYPk~iJg";
      stringArray0[4] = "-lineSeprator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat1.isOmitEncoding());
      assertTrue(outputFormat1.isPadText());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("  ", outputFormat1.getIndent());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertTrue(outputFormat1.isNewlines());
      
      OutputFormat outputFormat2 = new OutputFormat("-indentSize", true, (String) null);
      assertEquals("-indentSize", outputFormat2.getIndent());
      
      outputFormat2.setIndent((String) null);
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isPadText());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertTrue(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isTrimText());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      OutputFormat outputFormat0 = new OutputFormat("", false, (String) null);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, int0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeprator", false);
      outputFormat0.setLineSeparator("-lineSeprator");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(2746);
      outputFormat0.setEncoding("-lineSeprator");
      String[] stringArray0 = new String[9];
      outputFormat0.setLineSeparator("-lineSeprator");
      stringArray0[0] = "-lineSeprator";
      stringArray0[1] = "-lineSeprator";
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.parseOptions(stringArray0, 749);
      int int0 = outputFormat0.parseOptions(stringArray0, 39);
      assertEquals("-lineSeprator", outputFormat0.getEncoding());
      assertEquals(39, int0);
  }
}
