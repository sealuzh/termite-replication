/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:25:54 GMT 2019
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9468155095542574
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-642));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4185, "CNgg\"V5E>qiDzZ gK", "^&R=y()>E4NID4rLH", "^&R=y()>E4NID4rLH", (String[]) null, true, false);
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(1899, (-168));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(1948, 1899);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1948
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)20;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-65);
      byteArray0[7] = (byte) (-128);
      byteArray0[8] = (byte)72;
      short short0 = MethodWriter.readShort(byteArray0, (byte)6);
      assertEquals((short) (-16512), short0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte)6;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)20;
      byteArray0[5] = (byte)46;
      byteArray0[6] = (byte) (-65);
      byteArray0[7] = (byte) (-128);
      byteArray0[8] = (byte)72;
      short short0 = MethodWriter.readShort(byteArray0, (byte)0);
      assertEquals((short)0, short0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = (-404);
      ClassWriter classWriter0 = new ClassWriter((-404));
      int int1 = 251;
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 251, "J)i", "J)i", "OaFd9dZc_MwTQ)b5'nE", (String[]) null, false, false);
      Label label0 = new Label();
      Label label1 = label0.next;
      Label[] labelArray0 = new Label[9];
      labelArray0[0] = label0;
      labelArray0[1] = null;
      labelArray0[2] = null;
      labelArray0[3] = null;
      labelArray0[4] = null;
      labelArray0[5] = null;
      labelArray0[6] = null;
      labelArray0[7] = null;
      labelArray0[8] = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn((-563), 32, (Label) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4542749320671717
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String string0 = "@N| kobcOz?oJxh\"";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleParameterAnnotations", "@N| kobcOz?oJxh\"", "StackMapTable", stringArray0, false, false);
      methodWriter0.visitFrame(17, (-3), stringArray0, (-2382), stringArray0);
      methodWriter0.visitInsn(1);
      methodWriter0.visitIincInsn((-2382), 1);
      methodWriter0.visitMethodInsn(49, "java/lang/Throwable", "<init>", "StackMapTable");
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(1, 248);
      methodWriter0.visitVarInsn(12, (-1447));
      methodWriter0.visitLdcInsn("A$Oy_aKwaN?)b#t+");
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, 8388607);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.113852136330551
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)15;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((byte)15);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte)99, "t[qCwF>Jm9u.#;", "XHP[V<n47pH2", "java/lang/dyn/Dynamic", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort((byte)99);
      classWriter0.version = (int) (byte)99;
      methodWriter0.visitFrame(2, 439, stringArray0, (byte)99, stringArray0);
      ByteVector byteVector2 = byteVector0.put11(47, 63);
      byteVector0.put12((byte)99, (byte)99);
      byteVector1.putUTF8("java/lang/dyn/Dynamic");
      methodWriter0.put(byteVector2);
      methodWriter0.visitVarInsn(3440, 2);
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn((-128), "XHP[V<n47pH2", "/&", "0p");
      methodWriter0.visitFrame(65280, 4028, stringArray0, (-3552), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte)15, 40, (Object[]) null, 874, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6412795790059391
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      int int0 = (-128);
      methodWriter0.classReaderOffset = (-128);
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-51);
      int int1 = MethodWriter.SAME_FRAME_EXTENDED;
      int int2 = MethodWriter.APPEND_FRAME;
      methodWriter0.visitFieldInsn((-1141), "", "F-S.Q+WBfr6+xwD#Z&", "3-");
      int int3 = MethodWriter.SAME_FRAME_EXTENDED;
      methodWriter0.visitVarInsn(252, (byte) (-25));
      methodWriter0.visitMultiANewArrayInsn("Vi4`5A.a'i@i~|QDTk", 4369);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0579219661479846
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      label0.status = 185;
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitJumpInsn((-1445), label0);
      methodWriter0.visitLabel(label0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      intArray0[1] = 1;
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn(1, "J)i", "x(-iNV", "F-S.Q+WBfr6+xwD#Z&");
      methodWriter0.visitFrame(422, 1, stringArray0, (-404), stringArray0);
      methodWriter0.visitMultiANewArrayInsn("d}", 2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8739497409309143
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S#Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte) (-25);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      methodWriter0.getSize();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.firstField = null;
      String string0 = "?nAIwAa";
      methodWriter0.visitMethodInsn(196, "?nAIwAa", "?nAIwAa", "-");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte)0, 40, stringArray0, (-3552), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.662325138102236
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-642));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4185, "CNgg\"V5E>qiDzZ gK", "^&R=y()>E4NID4rLH", "x`[i!YC6YZJcF~x", (String[]) null, false, false);
      methodWriter0.visitVarInsn(4185, 1472);
      classWriter0.newField("^&R=y()>E4NID4rLH", "Code", "RuntimeInvisibleAnnotations");
      int int0 = 9;
      methodWriter0.visitIntInsn(9, 16777220);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn(74, (String) null, "^&R=y()>E4NID4rLH", "x`[i!YC6YZJcF~x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9927778869998267
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitFrame(1224736769, 2, stringArray0, 1, stringArray0);
      methodWriter0.visitJumpInsn((-1445), label0);
      methodWriter0.visitLabel(label0);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("Code");
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 197;
      intArray0[4] = 1;
      intArray0[5] = (-404);
      intArray0[6] = 1;
      intArray0[7] = (-404);
      intArray0[8] = (-1445);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(1, labelArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7460963377173877
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      int int0 = (-347);
      String string0 = "J)i";
      String string1 = "OaFd9dZc_MwTQ)b5'nE";
      String[] stringArray0 = null;
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-347), "J)i", "J)i", "OaFd9dZc_MwTQ)b5'nE", (String[]) null, false, false);
      methodWriter0.visitFrame((-347), 1, (Object[]) null, 1, (Object[]) null);
      methodWriter0.visitIincInsn((-404), 422);
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "java/lang/Throwable", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.252962875655653
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 251, "J)i", "J)i", "OaFd9dZc_MwTQ)b5'nE", (String[]) null, false, false);
      methodWriter0.visitFrame(251, 1, (Object[]) null, 1, (Object[]) null);
      methodWriter0.visitIincInsn((-404), 422);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      ClassWriter classWriter1 = new ClassWriter(3218);
      String string0 = "long";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 0, "long", "OaFd9dZc_MwTQ)b5'nE", "tB6+|9v_20%;2j?UmaQ", (String[]) null, false, false);
      methodWriter0.visitVarInsn(345, 185);
      int int1 = 3890;
      methodWriter1.visitIntInsn(16777226, 256);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        methodWriter1.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@23de0937
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2432159334760577
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String string0 = "-";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-51);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      methodWriter0.getSize();
      int int1 = 196;
      String string1 = "?nAIwAa";
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.376429342078671
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">q1lR%r\"'M";
      stringArray0[1] = "org.objectweb.asm.jip.Type";
      stringArray0[2] = "org.objectweb.asm.jip.Type";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1427), "^s] vY", "Code", (String) null, stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitJumpInsn(285212674, label0);
      ByteVector byteVector0 = new ByteVector(738);
      byteVector0.putUTF8("Code");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector1 = byteVector0.putByte(738);
      methodWriter1.put(byteVector1);
      int[] intArray0 = new int[1];
      intArray0[0] = (-404);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8074257024385258
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitJumpInsn((-1445), label0);
      methodWriter0.visitLabel(label0);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("Code");
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      intArray0[1] = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitVarInsn((-1445), 1);
      methodWriter0.visitIntInsn(1, 690);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0984274088390213
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte)6, "t[qCwF>Jm9u.#;", "XHP[V<n47pH2", "java/lang/dyn/Dynamic", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort((byte)6);
      ByteVector byteVector2 = byteVector0.put11(63, 63);
      byteVector0.put12((byte)6, (byte)6);
      byteVector1.putUTF8("java/lang/dyn/Dynamic");
      methodWriter0.put(byteVector2);
      methodWriter0.visitVarInsn(3440, 2);
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn((byte)6, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "t[qCwF>Jm9u.#;");
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) byteVector0;
      objectArray0[1] = (Object) "java/lang/dyn/Dynamic";
      objectArray0[2] = (Object) "java/lang/dyn/Dynamic";
      objectArray0[3] = (Object) (byte)0;
      methodWriter0.visitFrame(127, 35, stringArray0, 50331648, objectArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6860506803000208
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-51);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn(196, "?nAIwAa", "?nAIwAa", "-");
      methodWriter0.visitIntInsn(2723, 196);
      ClassWriter classWriter1 = new ClassWriter(1687);
      ByteVector byteVector0 = classWriter1.pool;
      ByteVector byteVector1 = byteVector0.putByte(41);
      ByteVector byteVector2 = byteVector1.put11(4109, 166);
      methodWriter0.put(byteVector2);
      Label label0 = new Label();
      methodWriter0.visitLineNumber((-128), label0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1148345904757457
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)15;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((byte)15);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte)6, "t[qCwF>Jm9u.#;", "XHP[V<n47pH2", "java/lang/dyn/Dynamic", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort((byte)6);
      ByteVector byteVector2 = byteVector0.put11(47, 63);
      byteVector0.put12((byte)6, (byte)6);
      byteVector1.putUTF8("java/lang/dyn/Dynamic");
      methodWriter0.put(byteVector2);
      methodWriter0.visitVarInsn(3440, 2);
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn((-128), "XHP[V<n47pH2", "/&", "0p");
      methodWriter0.visitFrame(65280, 4028, stringArray0, (-3552), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte)15, 40, (Object[]) null, 874, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6904161822032564
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitJumpInsn((-1445), label0);
      methodWriter0.visitLabel(label0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      methodWriter0.visitFieldInsn(2, "^s] vY", "F_RopUF*nLO", ",L'C(stU");
      ByteVector byteVector0 = classWriter0.pool;
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter1 = classWriter1.lastMethod;
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.put(byteVector0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@N| kobcOz?oJxh\"");
      methodWriter0.visitLineNumber(184, label0);
      Object object0 = new Object();
      methodWriter0.visitLocalVariable("F_RopUF*nLO", "", "F_RopUF*nLO", label0, label0, (-1445));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-36);
      byteArray0[5] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(byteArrayInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.ByteArrayInputStream@263974b0
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)46;
      byteArray0[6] = (byte) (-65);
      byteArray0[7] = (byte) (-128);
      byteArray0[8] = (byte)72;
      short short0 = MethodWriter.readShort(byteArray0, (byte)0);
      assertEquals((short)1536, short0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7120042517400225
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      classWriter0.version = (-404);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte) (-66);
      Item item0 = classWriter0.key3;
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-51);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      MethodWriter.readUnsignedShort(byteArray0, 0);
      methodWriter0.getSize();
      Frame frame0 = new Frame();
      methodWriter0.visitVarInsn(0, (-1790428835));
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (-4063));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4063
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7522859251123417
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-51);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      MethodWriter.readUnsignedShort(byteArray0, 0);
      methodWriter0.getSize();
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "-");
      Label label1 = new Label();
      Label label2 = label1.next;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "kuJOhg/X3NhS7Xw");
      methodWriter0.visitLabel(label1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)68;
      // Undeclared exception!
      try { 
        MethodWriter.readShort((byte[]) null, (byte)68);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7058666849130535
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      methodWriter0.visitMethodInsn(1, "", "-", "S");
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      int int1 = MethodWriter.APPEND_FRAME;
      int int2 = (-1141);
      methodWriter0.visitFieldInsn((-1141), "[QuTRb50:<3", "z.MqUF<)=wn]ay/Qam", "<init>");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort((-1141));
      methodWriter0.getSize();
      ByteVector byteVector1 = byteVector0.putByte((-404));
      methodWriter0.put(byteVector1);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber((-1015), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6355064766041247
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-642));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "t[qCwF>Jm9u.#;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 6890, "java/lang/dyn/Dynamic", "RuntimeVisibleParameterAnnotations", "Ljava/lang/Synthetic;", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort((-642));
      ByteVector byteVector2 = byteVector1.put11(262151, (-642));
      ByteVector byteVector3 = byteVector2.put12(6890, (-642));
      ByteVector byteVector4 = byteVector3.putUTF8("A+Vi(>hv*I^*fc ");
      methodWriter0.put(byteVector4);
      methodWriter0.visitVarInsn(1, (-607));
      methodWriter0.visitIntInsn(1512, 6890);
      methodWriter0.visitVarInsn(133, 161);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitLdcInsn(byteVector2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ByteVector@c
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8441306273262141
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      methodWriter0.classReaderOffset = (-128);
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte) (-51);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(0, 251);
      methodWriter0.visitVarInsn((-4459), 6);
      methodWriter0.visitLdcInsn("-");
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.636638945204742
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      classWriter0.visitInnerClass("J)i", "OaFd9dZc_MwTQ)b5'nE", "OaFd9dZc_MwTQ)b5'nE", (-404));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 255, "J)i", "J)i", "OaFd9dZc_MwTQ)b5'nE", (String[]) null, false, false);
      methodWriter0.visitFrame(255, 1, (Object[]) null, 1, (Object[]) null);
      methodWriter0.visitIincInsn((-404), 422);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.478006498651262
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, (-404), (-1693));
      ClassWriter classWriter0 = new ClassWriter((-870));
      String string0 = "<init>";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "6BIh8`", "<init>", "6BIh8`", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMultiANewArrayInsn("A3||j#", 2);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-1693), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7481675303713455
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitJumpInsn((-1445), label0);
      methodWriter0.visitLabel(label0);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("Code");
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 197;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[4] = 1;
      intArray0[5] = (-404);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      methodWriter0.visitMaxs((-404), 1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6569901150122779
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitJumpInsn((-1445), label0);
      methodWriter0.visitLabel(label0);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("Code");
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 197;
      intArray0[4] = 1;
      methodWriter0.visitIntInsn(15, (-404));
      methodWriter0.visitVarInsn(4505, (-1775));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.9779217946828969
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("Code");
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      intArray0[1] = 1;
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6119187527683554
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "6FBIh8`";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "Deprecated";
      stringArray0[4] = "6FBIh8`";
      stringArray0[5] = "6FBIh8`";
      stringArray0[6] = "6FBIh8`";
      stringArray0[7] = "6FBIh8`";
      stringArray0[8] = "6FBIh8`";
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Deprecated";
      stringArray1[1] = "";
      stringArray1[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1296, "6FBIh8`", "", "", stringArray1, false, false);
      methodWriter0.visitIntInsn(32, 512);
      methodWriter0.visitIincInsn(4558, 1);
      Label label0 = new Label();
      label0.position = 188;
      methodWriter0.visitIntInsn(32, (-2841));
      methodWriter0.visitMaxs((-1513), (-2841));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.2590892538586764
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[0];
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "6FBIh8`";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "Deprecated";
      stringArray0[4] = "6FBIh8`";
      stringArray0[5] = "6FBIh8`";
      stringArray0[6] = "6FBIh8`";
      stringArray0[7] = "6FBIh8`";
      stringArray0[8] = "6FBIh8`";
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Deprecated";
      stringArray1[1] = "";
      stringArray1[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1296, "6FBIh8`", "", "", stringArray1, false, false);
      methodWriter0.visitIntInsn(32, 512);
      Label label0 = new Label();
      label0.position = 188;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7460963377173877
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      int int0 = 251;
      String string0 = "OaFd9dZc_MwTQ)b5'nE";
      String[] stringArray0 = null;
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 251, "J)i", "J)i", "OaFd9dZc_MwTQ)b5'nE", (String[]) null, false, false);
      methodWriter0.visitFrame(251, 1, (Object[]) null, 1, (Object[]) null);
      methodWriter0.visitIincInsn((-404), 422);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "java/lang/Throwable", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.411377361229268
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      int int0 = (-1445);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F_RopUF*nLO";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "F-S.Q+WBfr6+xwD#Z&", "^s] vY", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      methodWriter0.visitJumpInsn((-1445), label0);
      methodWriter0.visitLabel(label0);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("Code");
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-404);
      intArray0[1] = 1;
      Label[] labelArray0 = new Label[1];
      label0.info = (Object) label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.15003511526394
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = (-2505);
      MethodWriter.getNewOffset(intArray0, intArray0, (-2505), (-2505));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "6FBIh8`";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "Deprecated";
      stringArray0[4] = "6FBIh8`";
      stringArray0[5] = "6FBIh8`";
      stringArray0[6] = "6FBIh8`";
      stringArray0[7] = "6FBIh8`";
      stringArray0[8] = "6FBIh8`";
      ClassWriter classWriter0 = new ClassWriter((-1437847809));
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Deprecated";
      stringArray1[1] = "";
      stringArray1[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1296, "6FBIh8`", "", "", stringArray1, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[8];
      labelArray0[0] = label0;
      Label label1 = label0.next;
      labelArray0[1] = null;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, (-2505), (-1693));
      ClassWriter classWriter0 = new ClassWriter((-2505));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "6BIh8`";
      stringArray0[1] = "6BIh8`";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "Deprecated";
      stringArray0[4] = "6BIh8`";
      stringArray0[5] = "6BIh8`";
      stringArray0[6] = "6BIh8`";
      stringArray0[7] = "6BIh8`";
      stringArray0[8] = "6BIh8`";
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      int int1 = 255;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 255);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3430350262974167
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1445), "-", "^s] vY", "-", stringArray0, false, false);
      methodWriter0.visitFrame((-404), 1, stringArray0, 248, stringArray0);
      methodWriter0.visitInsn(1);
      methodWriter0.visitIincInsn(2, (-404));
      methodWriter0.signature = "java/lang/Throwable";
      methodWriter0.visitMethodInsn((-1445), "<init>", "ARTn#!:& /", "");
      classWriter0.visitMethod((-404), "java/lang/dyn/Dynamic", "<init>", "^s] vY", stringArray0);
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(2, 4026);
      methodWriter0.visitVarInsn(2, 185);
      methodWriter0.visitMaxs(3764, 127);
      Attribute attribute0 = new Attribute("<init>");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-1208);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-1208));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8878063982599882
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      classWriter0.visitOuterClass("stnL", "rh,~", "stnL");
      methodWriter1.visitAnnotation("rh,~", false);
      methodWriter0.visitTypeInsn((-404), "nSc2}6t'/(F)!%}B>z");
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = (int) (byte) (-51);
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = (int) (byte) (-66);
      intArray0[5] = (-404);
      intArray0[6] = (-404);
      intArray0[7] = (int) (byte) (-66);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-404), (-404));
      assertEquals(0, int0);
      
      methodWriter1.visitMethodInsn((-1719559327), "Ljava/lang/Synthetic;", "StackMap", "._\"D?<XsgJ1");
      int int1 = methodWriter1.getSize();
      assertEquals(76, int1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8772659375444252
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2731);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CXA|u.";
      stringArray0[1] = "CXA|u.";
      stringArray0[2] = "J)i";
      stringArray0[3] = "CXA|u.";
      stringArray0[4] = "CXA|u.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "CXA|u.", "CXA|u.", "J)i", stringArray0, false, false);
      Integer integer0 = new Integer(2559);
      methodWriter0.visitLdcInsn(integer0);
      Label label0 = new Label();
      label0.position = 169;
      methodWriter0.visitLineNumber(9, label0);
      methodWriter0.visitFieldInsn(2, "UR`u$</%Ynv-aEQ", "CXA|u.", "CXA|u.");
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("w~,VL`g:OOwk1dyY0", true);
      methodWriter0.visitIntInsn(2731, 1);
      methodWriter0.visitIntInsn(1, 1);
      methodWriter0.visitLdcInsn("w~,VL`g:OOwk1dyY0");
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("CXA|u.", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0790290890591137
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String string0 = "^s] vY";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      classWriter0.invalidFrames = true;
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1445), "-", "^s] vY", "-", stringArray0, false, false);
      methodWriter0.visitFrame((-404), 1, stringArray0, 248, stringArray0);
      methodWriter0.visitInsn(262144);
      methodWriter0.visitIincInsn(2, (-404));
      methodWriter0.visitEnd();
      methodWriter0.visitMultiANewArrayInsn("mWNsb1<)k@&]", (-1445));
      methodWriter0.signature = "java/lang/Throwable";
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "-", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4031363037698164
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      Label label0 = new Label();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      int[] intArray0 = new int[2];
      intArray0[0] = (-320);
      intArray0[1] = (-404);
      MethodWriter.getNewOffset(intArray0, intArray0, 1, 16777220);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-320), "\"S&=!u", "\"S&=!u", "", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(2, "", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{)E");
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      Attribute attribute0 = new Attribute("-");
      ClassWriter classWriter1 = new ClassWriter((-1437847809));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4558, "", "-", "-", stringArray0, false, false);
      String string0 = "java/lang/dyn/Dynamic";
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 820, "java/lang/dyn/Dynamic", (String) null, (String) null, stringArray0, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-642));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "t[qCwF>Jm9u.#;";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 6890, "java/lang/dyn/Dynamic", "RuntimeVisibleParameterAnnotations", "Ljava/lang/Synthetic;", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0517565611726531
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1442, "-", "-", "z.MqUF<)=wn]ay/Qam", stringArray0, false, false);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      int int1 = MethodWriter.CHOP_FRAME;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn((-404), 184);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("[QuTRb50:<3");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "t[qCwF>Jm9u.#;";
      Edge edge0 = new Edge();
      edge0.info = 86;
      edge0.info = 76;
      edge0.info = 65535;
      edge0.info = 65535;
      edge0.info = 285212675;
      Edge edge1 = edge0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)66;
      byteArray0[5] = (byte) (-18);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)90;
      MethodWriter.readInt(byteArray0, (byte)0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("RuntimeVisibleAnnotations");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7285429199288522
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = MethodWriter.FULL_FRAME;
      ClassWriter classWriter0 = new ClassWriter((-2505));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "6BIh8`";
      stringArray0[1] = "6BIh8`";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "6BIh8`";
      stringArray0[4] = "6BIh8`";
      stringArray0[5] = "Deprecated";
      stringArray0[6] = "6BIh8`";
      stringArray0[7] = "6BIh8`";
      stringArray0[8] = "6BIh8`";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3548), "6BIh8`", "6BIh8`", "Deprecated", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.next = methodWriter1;
      classWriter0.visitOuterClass("Deprecated", "rh,~", "stnL");
      methodWriter0.visitAnnotation("nSc2}6t'/(F)!%}B>z", true);
      methodWriter0.visitTypeInsn(255, "6BIh8`");
      MethodWriter.getNewOffset(intArray0, intArray0, 1, 1);
      methodWriter0.next.visitMethodInsn(222, "._\"D?<XsgJ1", "nSc2}6t'/(F)!%}B>z", "6BIh8`");
      methodWriter1.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11((-3548), 0);
      ByteVector byteVector2 = byteVector1.putByte(1);
      ByteVector byteVector3 = byteVector2.putUTF8("6BIh8`");
      ByteVector byteVector4 = byteVector3.putInt(1126);
      methodWriter0.put(byteVector4);
      assertSame(byteVector4, byteVector0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.758906758224732
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S#Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte) (-25);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      methodWriter0.getSize();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn((-2936), 647);
      classWriter0.newField("-", "StackMapTable", "Xhx");
      methodWriter1.visitIntInsn(3, 1858);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      methodWriter3.getSize();
      methodWriter1.visitFieldInsn(1, "java/lang/Throwable", "", "java/lang/Throwable");
      MethodWriter methodWriter4 = classWriter0.lastMethod;
      methodWriter4.visitTypeInsn(3604, "StackMapTable");
      assertSame(methodWriter4, methodWriter0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0765259604935
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(248, "1.v[bjsjK", "Exceptions", "RuntimeVisibleParameterAnnotations", stringArray0);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = MethodWriter.APPEND_FRAME;
      int[] intArray0 = new int[2];
      intArray0[0] = 25;
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset(intArray0, intArray0, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.2915336713312904
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Attribute attribute0 = new Attribute("-");
      methodWriter0.visitAttribute(attribute0);
      String string0 = null;
      methodWriter0.visitMultiANewArrayInsn("F-S.Q+WBfr6+xwD#Z&", 76);
      methodWriter0.visitInsn((byte) (-38));
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn((String) null, (-389));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      MethodWriter.readUnsignedShort(byteArray0, (byte)1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      ClassWriter classWriter0 = new ClassWriter((byte)1);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "-", "org.objectweb.asm.jip.Attribute", "[\"}D|U\u0005{~(#I", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0332653667861926
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2731);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CXA|u.";
      stringArray0[1] = "CXA|u.";
      stringArray0[2] = "J)i";
      stringArray0[3] = "CXA|u.";
      stringArray0[4] = "CXA|u.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "CXA|u.", "CXA|u.", "J)i", stringArray0, false, false);
      Integer integer0 = new Integer(2571);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitFieldInsn(2, "UR`u$</%Ynv-aEQ", "CXA|u.", "CXA|u.");
      classWriter0.newDouble(2571);
      classWriter0.visitAnnotation("w~,VL`g:OOwk1dyY0", true);
      methodWriter0.visitIntInsn(2731, 1);
      methodWriter0.visitIntInsn(1, 1);
      methodWriter0.visitLdcInsn("w~,VL`g:OOwk1dyY0");
      methodWriter0.visitLdcInsn("w~,VL`g:OOwk1dyY0");
      methodWriter0.visitVarInsn(2, 1);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(2, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, (-2505), (-1693));
      ClassWriter classWriter0 = new ClassWriter((-2505));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "6BIh8`";
      stringArray0[1] = "6BIh8`";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "Deprecated";
      stringArray0[4] = "6BIh8`";
      stringArray0[5] = "6BIh8`";
      stringArray0[6] = "6BIh8`";
      stringArray0[7] = "6BIh8`";
      stringArray0[8] = "6BIh8`";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3548), "6BIh8`", "6BIh8`", "Deprecated", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.next = methodWriter1;
      classWriter0.visitOuterClass("6BIh8`", "rh,~", "stnL");
      String string0 = "nSc2}6t'/(F)!%}B>z";
      methodWriter0.visitAnnotation("nSc2}6t'/(F)!%}B>z", true);
      methodWriter0.visitTypeInsn(812, "6BIh8`");
      Attribute attribute0 = new Attribute("Deprecated");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("rh,~");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9915761342703662
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2731);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CXA|u.";
      stringArray0[1] = "CXA|u.";
      stringArray0[2] = "CXA|u.";
      stringArray0[3] = "CXA|u.";
      stringArray0[4] = "CXA|u.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "CXA|u.", "CXA|u.", "J)i", stringArray0, false, false);
      Integer integer0 = new Integer(2559);
      methodWriter0.visitMultiANewArrayInsn("CXA|u.", 255);
      methodWriter0.visitInsn(2731);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(196, 2731);
      methodWriter0.visitIntInsn(255, 2);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter1.visitFieldInsn((-1037), "J)i", "CXA|u.", "^^\"e,Vp");
      MethodWriter methodWriter3 = classWriter0.lastMethod;
      methodWriter0.visitTypeInsn(255, "CXA|u.");
      assertSame(methodWriter0, methodWriter2);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5003015226838812
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-642));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4185, "CNgg\"V5E>qiDzZ gK", "^&R=y()>E4NID4rLH", "x`[i!YC6YZJcF~x", (String[]) null, true, false);
      methodWriter0.signature = "CNgg\"V5E>qiDzZ gK";
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((byte) (-66), 11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -66
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-7);
      int[] intArray0 = new int[4];
      intArray0[0] = (-3519);
      intArray0[1] = 0;
      intArray0[2] = (int) (byte) (-7);
      intArray0[3] = (int) (byte) (-7);
      int[] intArray1 = new int[9];
      intArray1[0] = (int) (byte) (-7);
      intArray1[1] = (int) (byte) (-7);
      intArray1[2] = (int) (byte) (-7);
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 3241;
      intArray1[6] = 0;
      intArray1[7] = (int) (byte) (-7);
      intArray1[8] = 248;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray1, (-7), 1609);
      assertEquals(1609, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = (-121);
      int int1 = 0;
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, (-121), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.169171588276908
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 251, "J)i", "J)i", "OaFd9dZc_MwTQ)b5'nE", (String[]) null, false, false);
      methodWriter0.visitFrame(251, 1, (Object[]) null, 1, (Object[]) null);
      int int0 = 422;
      methodWriter0.visitIincInsn((-404), 422);
      int int1 = MethodWriter.SAME_FRAME_EXTENDED;
      ClassWriter classWriter1 = new ClassWriter(3218);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 0, "long", "OaFd9dZc_MwTQ)b5'nE", "tB6+|9v_20%;2j?UmaQ", (String[]) null, false, false);
      int int2 = 345;
      methodWriter0.visitVarInsn(345, 185);
      methodWriter1.visitIntInsn(16777226, 256);
      methodWriter1.visitFieldInsn(3890, "D( k-36~#Q..l", "?nOZ&bnToQ/B1", "RuntimeVisibleParameterAnnotations");
      int int3 = (-268435456);
      methodWriter1.visitTypeInsn((-268435456), "long");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)116;
      byte byte0 = (byte) (-60);
      byteArray0[4] = (byte) (-60);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-120);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7795863384221537
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2731);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "-", "", "Deprecated", stringArray0, false, false);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter1.visitMethodInsn(0, "{:9uC", "StackMapTable", "`jpHNg#k7");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "Deprecated";
      objectArray0[1] = (Object) "-";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "-";
      objectArray0[4] = (Object) "`jpHNg#k7";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "-";
      objectArray0[7] = (Object) "";
      methodWriter0.visitFrame(2, 185, stringArray0, (byte) (-25), objectArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.798521983883233
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-394));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-394), "-", "F-S.Q+WBfr6+xwD#Z&", "", stringArray0, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      methodWriter0.visitIincInsn(190, 1);
      methodWriter0.visitMethodInsn(1, "", "-", "S");
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      methodWriter0.visitVarInsn((-1135), (-5851));
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.090715180129253
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      int int0 = 2509;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2509, "-", "F-S.Q+WBfr6+xwD#Z&", "@tN`Qz$$Unn^B", stringArray0, false, false);
      methodWriter0.visitFrame(3, (-404), stringArray0, 2509, stringArray0);
      methodWriter0.visitInsn(184);
      methodWriter0.visitIincInsn(3, 184);
      methodWriter0.visitMethodInsn(33, "-", "", "-");
      classWriter0.visitMethod(248, "1.v[bjsjK", "Exceptions", "RuntimeVisibleParameterAnnotations", stringArray0);
      methodWriter0.getSize();
      int int1 = 1594;
      methodWriter0.visitIntInsn(63, 1594);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-404), "Exceptions", "F-S.Q+WBfr6+xwD#Z&", "Exceptions", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1442, "-", "-", "z.MqUF<)=wn]ay/Qam", stringArray0, false, false);
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      int int1 = MethodWriter.CHOP_FRAME;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2694, "F-S#Q+WBfr6+xwD#Z&", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int int0 = (-1437847809);
      ClassWriter classWriter0 = new ClassWriter((byte)1);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (byte)1, "java/lang/Throwable", "SE$T{N!gN|k", ").k82b5'*.TcPJt:K", (String[]) null, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-96);
      byteArray0[3] = (byte) (-86);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-29);
      byteArray0[6] = (byte) (-108);
      byteArray0[7] = (byte) (-103);
      MethodWriter.writeShort(byteArray0, (byte)0, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-96), (byte) (-86), (byte)0, (byte) (-29), (byte) (-108), (byte) (-103)}, byteArray0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 68, (byte) (-17));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.787119016615464
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String string0 = "-";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-404), "-", "-", "-", stringArray0, false, false);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Attribute attribute0 = new Attribute("-");
      methodWriter0.visitAttribute(attribute0);
      String string1 = null;
      methodWriter0.visitInsn((byte) (-38));
      int int0 = 185;
      methodWriter0.visitVarInsn((-3685), (-2936));
      classWriter0.newField("-", "-", "StackMapTable");
      methodWriter0.visitIntInsn(2, 6);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5070828701676986
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1445), "-", "^s] vY", "-", stringArray0, false, false);
      methodWriter0.visitInsn(262144);
      methodWriter0.signature = "java/lang/Throwable";
      methodWriter0.visitMethodInsn((-404), "-", "-", "-");
      int int0 = methodWriter0.getSize();
      assertEquals(62, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-1850));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1850
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "t[qCwF>Jm9u.#;";
      Edge edge0 = new Edge();
      edge0.info = 86;
      edge0.info = 65535;
      edge0.info = 285212675;
      Edge edge1 = edge0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)66;
      byteArray0[5] = (byte) (-18);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)90;
      MethodWriter.readInt(byteArray0, (byte)0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("RuntimeVisibleAnnotations");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "t[qCwF>Jm9u.#;";
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)66;
      byteArray0[5] = (byte) (-18);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)90;
      MethodWriter.readInt(byteArray0, (byte)0);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 131072);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 131072
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-117);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1692);
      intArray0[1] = (int) (byte) (-117);
      intArray0[2] = (int) (byte)0;
      intArray0[3] = (int) (byte) (-117);
      intArray0[4] = (int) (byte)0;
      intArray0[5] = (int) (byte)0;
      intArray0[6] = 0;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 1923, (-117));
      assertEquals((-2040), int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      int[] intArray0 = new int[5];
      intArray0[1] = 0;
      intArray0[1] = (int) (byte) (-51);
      intArray0[0] = (-404);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-51), 0);
      assertEquals(51, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      int int0 = 1138;
      ClassWriter classWriter0 = new ClassWriter(1138);
      String string0 = "wubf6vCqU";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "java/lang/Throwable";
      stringArray0[1] = "wubf6vCqU";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "wubf6vCqU", "wubf6vCqU", "wubf6vCqU", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
