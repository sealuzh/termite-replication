/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:44:48 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.event.MouseWheelListener;
import java.nio.charset.Charset;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.Stack;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JSpinner;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.PrimaryKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactory;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getWebSite();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      DatabaseObjectType.createNewDatabaseObjectType("?\"q");
      ImageIcon imageIcon0 = new ImageIcon("org.jfree.data.xy.XYDataItem");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SCHEMA;
      assertSame(databaseObjectType3, databaseObjectType0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getLibraryDirectory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n-8Dc3[=c\"Oo-");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("E$bl", "`#rmHIb-[", "`#rmHIb-[", "gEjS$,_*;h", (-3), "SQLDatabaseMetaData == null", (-192), 643, 1699, 1678, "SQLDatabaseMetaData == null", "(_36z=-gc", (-60), (-60), "P");
      DBUtil.isBinaryType(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "n-8Dc3[=c\"Oo-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      dBCopyPlugin0.getDestDatabaseObject();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      iDatabaseObjectInfoArray0[0] = null;
      boolean boolean0 = true;
      dBCopyPlugin0.setCopyMenuEnabled(true);
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      int int0 = (-1071);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(arrayList0);
      String string0 = "))Frd7A\\<";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" CHAR(10) )", "/g;+-xG", "&qJEYoXqB)Bix}[I", " CHAR(10) )", 1145, (String) null, 2408, 2, (-1071), 1111, "x|7?'^", "y3XP{}zbEifl1[>oN", (-1071), (-771), "))Frd7A<");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT;
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "d[6G", "x|7?'^", "y3XP{}zbEifl1[>oN");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("9?r)l\"1W36H0Z4", "\", but sessionMenu (", "9?r)l\"1W36H0Z4", "L Cs(MfM{OI-kL", 806, "L Cs(MfM{OI-kL", (-2555), 125, 2073, 2006, (String) null, "replaceDistinctDataType: Unexpected exception - ", 1003, 4, "replaceDistinctDataType: Unexpected exception - ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      DatabaseObjectType.createNewDatabaseObjectType("DBUtil.info.bindclobmem");
      JInternalFrame jInternalFrame0 = new JInternalFrame("9?r)l\"1W36H0Z4");
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener1);
      MouseWheelListener mouseWheelListener3 = AWTEventMulticaster.add(mouseWheelListener2, mouseWheelListener2);
      jInternalFrame0.addMouseWheelListener(mouseWheelListener3);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil.replaceDistinctDataType(32765, tableColumnInfo0, (ISession) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "9'zMC~tyI", (-1519), (String) null, (-1519), 1103, (-1519), (-885), (String) null, "child must not be null", 1103, 2736, "%GXz");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1519), int0);
      
      int int1 = DBUtil.replaceDistinctDataType(2716, tableColumnInfo0, (ISession) null);
      assertEquals(2716, int1);
      
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("9'zMC~tyI, 9'zMC~tyI", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      ImageIcon imageIcon0 = new ImageIcon("0* w/M7l?V$3cxN");
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      databaseObjectType0.getIdentifier();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo(sQLAliasSchemaProperties1);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("c8K'}Gk((=P|x;>JVXv", "c8K'}Gk((=P|x;>JVXv", "c8K'}Gk((=P|x;>JVXv", "g&/L'vF/", (-3), "?s3c%*[=pJJ[-V$8", 4438, 793, (-3), 793, "R^4QDmit ;g", "?s3c%*[=pJJ[-V$8", 1345, (-3), "?s3c%*[=pJJ[-V$8");
      linkedList0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 414;
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL((SessionInfoProvider) null, ";7^p,T @zwP0", (ITableInfo) null, 414);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("current_time", "aZPG'", "cI^f@:_WIg!Y", "d[6G", 7, "current_time", 3279, 1647, 3525, 3279, "aZPG'", "l", (-95), (-95), ";$");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.COLUMN;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("aZPG'", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("p#]i$.gMgW\"", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "p#]i$.gMgW\"", " ( ", (-2028178998), " ( ", 44, 44, 3, (-2008), "/_@yW`DA", "T\"$o^NirbA<3SbU?}", 44, 1108, "org.jfree.data.general.DefaultPieDataset");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      dBCopyPlugin0.getApplication();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "/_@yW`DA", "T\"$o^NirbA<3SbU?}");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "j:ZuI@";
      ISession iSession0 = null;
      TableColumnInfo tableColumnInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getWelcomeFile();
      applicationFileWrappersImpl0.getWelcomeFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(+)");
      dBCopyPlugin0.setCopyMenuEnabled(true);
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getFwJarFile();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("lib/squirrel-sql.jar");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create(fileWrapperImpl0);
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile2, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "http://www.squirrelsql.org");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("gEjS$,_*;h", "http://www.squirrelsql.org", "aVWQR0e?=p\":nq;", "P\"P*-?](", 3, "P\"P*-?](", 1699, (-60), 1024, (-192), "E$bl", "eS@0y,b'm`Jr?", 0, 1145, "`#rmHIb-[");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("vfhve2>{xR@@d~8hk^", "uid", "DBUtil.error.firebirdcommit", " CASCADE", (-1119), "Skipping FK (", (-1119), 3810, 3810, 1496, "uid", "9'zMC~tyI", (-1268), 1496, "S3i@SbDW`3{Yy");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dSyq\"x YN9|[lrs", (String) null, " schema = ", "dSyq\"x YN9|[lrs", 9999, "aU2^N,Y", 8, 748, (-1736), (-1249), "48CIOedXXB!*yLv_9", "kV", 34, 304, (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dSyq\"x YN9|[lrs", "/Q", "j:ZuI@", "0*dQL/iOM:B3G`!#/_", 1984, "j:ZuI@", 1984, (-2278), 1984, (-1), "Skipping FK (", "/Q", 2115, (-2278), "dSyq\"x YN9|[lrs");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("4qeg,#ZW~5", "&qJEYoXqB)Bix}[I", ".", "Ec~]HAc", 1984, "Q=er-", (-1), (-2278), (-1), 3279, "d[6G", "`", 1427, (-1), "Skipping FK (");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo1);
      assertFalse(boolean0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1984, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "bytea", "", (-1436), "DBUtil.error.firebirdcommit", 1, 1, 0, (-1973), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "value", 7, (-38), "DBUtil.error.firebirdcommit");
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias0.getDriverPropertiesClone();
      assertNotSame(sQLDriverPropertyCollection1, sQLDriverPropertyCollection0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectType0.getIdentifier();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo(sQLAliasSchemaProperties1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, "wc?<'>wcETzG@", 2351, (-1799), 2, (-885), "%GXz", (String) null, (-1519), (-1799), "");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
      
      int int1 = DBUtil.replaceDistinctDataType((-1799), tableColumnInfo0, (ISession) null);
      assertEquals((-1799), int1);
      
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy, net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("MD?TPr$", "", "MD?TPr$", "z!f@", 896, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1845, 1003, 896, 749, "Could not convert [", "ADD", 0, (-2067947214), "&Xm~i4W(p7");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(896, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayDeque<PrimaryKeyInfo> arrayDeque0 = new ArrayDeque<PrimaryKeyInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("w(", "w(", "5|tk3D]Ve%", "5|tk3D]Ve%", (-1142), "IMainPanelTab == null", (-1091), 5, 5, 1689, (String) null, (String) null, 5, (-815), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatement());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("p#]i$.gMgW\"", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "p#]i$.gMgW\"", " ( ", (-2028178998), " ( ", 44, 44, 3, (-2008), "/_@yW`DA", "T\"$o^NirbA<3SbU?}", 124, 1108, "org.jfree.data.general.DefaultPieDataset");
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = (-2008);
      dBCopyPlugin0.getPluginJarFilePath();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("p#]i$.gMgW\"", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "p#]i$.gMgW\"", " ( ", (-2028178998), " ( ", 44, 44, (-8), (-2008), "/_@yW`", "T\"$o^NirbA<3SbU?}", 124, 1079, "org.jfree.data.general.DefaultPieDataset");
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "p#]i$.gMgW\"", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder(evoSuiteFile0);
      dBCopyPlugin0.getSourceSession();
      String string0 = "The following classpath entries are available to the bundle loader:\n";
      String string1 = "`#@lGX>z\\c)<rj%ps/$";
      dBCopyPlugin0.getWebSite();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("`#@lGX>zc)<rj%ps/$", "The following classpath entries are available to the bundle loader:\n", "DatabaseObjectType.database", "", (-2013265917), "", 2, 0, 2001, 2, "", "http://www.squirrelsql.org", (-1677), 21, "}Ys cvV>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[5];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLibraryDirectory();
      applicationFileWrappersImpl4.getUpdateDirectory();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl4);
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "YQ-LS+=FRAMm^/'R'", "g)(iQU_j<4?", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestDatabaseObject();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin1.setCopyMenuEnabled(false);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "uuid_from_char", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-7), "TRUNCATE TABLE ", (-7), (-4), (-4), 146, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "%", 147, (-3037), "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("g)(iQU_j<4?");
      ImageIcon imageIcon0 = new ImageIcon("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType.createNewDatabaseObjectType("&qJEYoXqB)Bix}[I", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.SCHEMA;
      assertEquals("Schema", databaseObjectType5.toString());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = " ( ";
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, " ( ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      boolean boolean0 = true;
      dBCopyPlugin0.setCopyMenuEnabled(true);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dSyq\"x YN9|[lrs", "/Q", "j:ZuI@", "0*dQL/iOM:B3G`!#/_", 1984, "j:ZuI@", 1984, (-2278), 1984, (-1), "Skipping FK (", "/Q", 2115, (-2278), "dSyq\"x YN9|[lrs");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("aS0mv");
      ImageIcon imageIcon0 = new ImageIcon("&qJEYoXqB)Bix}[I");
      DatabaseObjectType.createNewDatabaseObjectType("Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("dSyq\"x YN9|[lrs", (Icon) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.SCHEMA;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("/Q", "0*dQL/iOM:B3G`!#/_", "aS0mv", "kV", 2127, "dSyq\"x YN9|[lrs", 64, (-1896), 1, 2539, "kV", "jarFileNames", 445, (-421), "informix");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType((-1), tableColumnInfo1, (ISession) null);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getSquirrelHomeDir();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      applicationFileWrappersImpl2.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getFAQFile();
      applicationFileWrappersImpl4.getSquirrelHomeDir();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl2.getUserSettingsDirectory();
      applicationFileWrappersImpl3.getSQuirrelJarFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.createTempFile("lHZ+aLO4)_", "qon", fileWrapper0);
      fileWrapperFactoryImpl0.createTempFile("5d>;FC9w7WVzg0/", "catalog=");
      fileWrapperFactoryImpl0.create(fileWrapper0, "kV");
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      System.setCurrentTimeMillis(0L);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "", "dSyq\"x YN9|[lrs", "qon", 806);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getLibraryDirectory();
      applicationFileWrappersImpl3.getUpdateDirectory();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl3);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Qt5iN3qr)sm", "q|\"[Zc~M&RC]wr!wi");
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      arrayList0.containsAll(set0);
      DBUtil.convertObjectToTableList(arrayList0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType.createNewDatabaseObjectType("!D/?+U");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, (String) null);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dSyq\"x YN9|[lrs", "/Q", "j:ZuI@", "0*dQL/iOM:B3G`!#/_", 1984, "j:ZuI@", 1984, (-2278), 1984, (-1), "Skipping FK (", "/Q", 2115, (-2278), "dSyq\"x YN9|[lrs");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(1984, tableColumnInfo0, (ISession) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias1.getDriverPropertiesClone();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)108;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-17);
      byteArray0[5] = (byte) (-52);
      byteArray0[6] = (byte)80;
      byteArray0[7] = (byte) (-7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", "q|\"[Zc`M&RC]wr!wi");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      dBCopyPlugin0.getApplication();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      sQLConnection0.removePropertyChangeListener(jSpinner_NumberEditor0);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "/_@yW`DA", "T\"$o^NirbA<3SbU?}");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dSyq\"x YN9|[lrs", "/Q", "j:ZuI@", "0*dQL/iOM:B3G`!#/_", 1984, "j:ZuI@", 1984, (-2278), 1984, (-1), "Skipping FK (", "/Q", 2115, (-2278), "dSyq\"x YN9|[lrs");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("[", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("Skipping FK (");
      DatabaseObjectType.createNewDatabaseObjectType("Skipping FK (");
      DatabaseObjectType.createNewDatabaseObjectType("select ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "0*dQL/iOM:B3G`!#/_", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName((String) null);
      dBCopyPlugin0.getDestSession();
      int int0 = 0;
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.info.executeupdate", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName((String) null);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "getContextClassLoader");
      DBUtil.typesAreEquivalent((-3622), (-2105376123));
      DBUtil dBUtil0 = new DBUtil();
      System.setCurrentTimeMillis((-1092L));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ArrayDeque<PrimaryKeyInfo> arrayDeque0 = new ArrayDeque<PrimaryKeyInfo>();
      ArrayDeque<PrimaryKeyInfo> arrayDeque1 = arrayDeque0.clone();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.containsAll(arrayDeque1);
      arrayList0.spliterator();
      arrayDeque0.spliterator();
      DBUtil.convertTableToObjectList(arrayList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("changes.txt", dBCopyPlugin0.getChangeLogFileName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBUtil.setLastStatement("");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = " tableName = ";
      String string1 = "quote_literal";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", " tableName = ", 0, "8ko\"[Pj3Bq%gi&m\"", (-944), 0, 0, (-944), "EAe}(c$", "8ko\"[Pj3Bq%gi&m\"", 6, 0, "quote_literal");
      // Undeclared exception!
      try { 
        dBCopyPlugin0.setFileWrapperFactory((FileWrapperFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setFileWrapperFactory: Argument fileWrapperFactory cannot be null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.util.Utilities", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 2002;
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin1.setSourceSession((ISession) null);
      dBCopyPlugin0.setCopyMenuEnabled(true);
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      ImageIcon imageIcon0 = new ImageIcon("&qJEYoXqB)Bix}[I");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SCHEMA;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, (String) null, 3, "&qJEYoXqB)Bix}[I", 2000, 3, 3, 2000, (String) null, "&qJEYoXqB)Bix}[I", 3, (-2553), "C6XY8nYz7] )52`.");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getSquirrelHomeDir();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLibraryDirectory();
      applicationFileWrappersImpl2.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "http://www.squirrelsql.org");
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "dialectChooseTitle", "dialectChooseTitle");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      String string0 = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "9I$:1x\"", (String) null, (ForeignKeyInfo) null, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dSyq\"x YN9|[lrs", "/Q", "j:ZuI@", "0*dQL/iOM:B3G`!#/_", 1984, "j:ZuI@", 1984, (-2278), 1984, (-1), "Skipping FK (", "/Q", 2115, (-2278), "dSyq\"x YN9|[lrs");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("[", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("Skipping FK (");
      DatabaseObjectType.createNewDatabaseObjectType("Skipping FK (");
      DatabaseObjectType.createNewDatabaseObjectType("select ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "Skipping invokation of method: ", "dSyq\"x YN9|[lrs");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, (String) null, "Ny #[4E7UEdFSP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "lHpZwaLOW)_", "0*dQL/iOM:B3G`!#/_", "j:ZuI@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.parallelStream();
      DBUtil.convertObjectToTableList(stack0);
      String string0 = "]U4reTAiZ";
      DBUtil.setLastStatementValues("]U4reTAiZ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        dBCopyPlugin0.sessionStarted((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getSQuirrelJarFile();
      applicationFileWrappersImpl2.getLibraryDirectory();
      applicationFileWrappersImpl2.getUpdateDirectory();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl3.setFileWrapperFactory(fileWrapperFactoryImpl0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"zoff.T% $JQ");
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("YSB4YWff0o):Z-+0O:", "Vp}'y>_#:L", "2IgX?F?z):", (ISession) null, true, (-901));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      ImageIcon imageIcon0 = new ImageIcon("&qJEYoXqB)Bix}[I");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SCHEMA;
      assertNotSame(databaseObjectType4, databaseObjectType2);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("getContextClassLoader", "]\">2\"wakcpIP!", "lHpZwaLOW)_", "tE", 91, "lHpZwaLOW)_", 91, 91, 0, (-3), "", "tE", 41, (-1973), "lHpZwaLOW)_");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql((SessionInfoProvider) null, tableColumnInfo0, "dd MMMM yyyy", " and catalog ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.7774035244144605
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBUtil.typesAreEquivalent(19, 19);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      DBUtil.typesAreEquivalent((-7), 76);
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatementValues());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "> 0mjW5nL+]'1");
      DBUtil.typesAreEquivalent((-192), 1523);
      DBUtil dBUtil0 = new DBUtil();
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "w5f#;o<G$x?a7");
      DBUtil.typesAreEquivalent((-7), (-7));
      DBUtil dBUtil0 = new DBUtil();
      System.setCurrentTimeMillis((-7));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBUtil.typesAreEquivalent(205, 3);
      System.setCurrentTimeMillis(3);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBUtil.typesAreEquivalent(1, 1);
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatementValues());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "g)(iQU_j<4?");
      DBUtil.typesAreEquivalent(7, 3);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBUtil dBUtil0 = new DBUtil();
      System.setCurrentTimeMillis(7);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getSQuirrelJarFile();
      applicationFileWrappersImpl2.getLibraryDirectory();
      applicationFileWrappersImpl2.getLibraryDirectory();
      applicationFileWrappersImpl2.getUpdateDirectory();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl3.setFileWrapperFactory(fileWrapperFactoryImpl1);
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl3 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
