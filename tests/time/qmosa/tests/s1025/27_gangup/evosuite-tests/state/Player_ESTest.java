/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:25:46 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5651558273941215
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-488), "$5U", "", (-488), (-488));
      player0.add(player0);
      player0.getStrength();
      Player player1 = new Player(1673, "module.ModuleBrowserDialog$ModuleFilter", "Player.unpack(): *** WARNING *** data is not of proper type!", (short)4919, (-488));
      Player player2 = new Player((short)4919, "0.0.0.0", 4919);
      boolean boolean0 = player1.isJoinOK(player2, true);
      assertFalse(boolean0);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      player2.pack();
      assertEquals(1, player2.getStrength());
      assertEquals("0.0.0.0", player2.getIP());
      
      byteArrayOutputStream0.writeTo(byteArrayOutputStream0);
      player1.pack();
      assertEquals(4919, player1.getPictureId());
      assertEquals((-488), player1.getStrength());
      
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals("$5U", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-488), int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9930948689671983
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = (Player)player0.gangBoss();
      player1.boss = (Party) player0;
      player0.isJoinOK(player1, true);
      player1.pack();
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player2 = new Player(1411, "r10~#Q_3Wb#}G^i4", "r10~#Q_3Wb#}G^i4", 10);
      player2.setMoney((-1.0F));
      player2.pack();
      player2.pack();
      player2.getZ();
      player2.getMoney();
      int int0 = player2.gangStrength();
      assertEquals((-1.0F), player2.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", "", 0, 3);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      Player player1 = new Player(0, "-", 0);
      player0.isJoinOK(player1, true);
      player0.getY();
      player0.isJoinOK(player1, false);
      player1.getY();
      player0.next = (Party) player1;
      assertEquals(10.0F, player1.getX(), 0.01F);
      
      player1.setX(0.0F);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis(3);
      player0.getY();
      player0.getZ();
      player1.getX();
      player0.setMoney(0.0F);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(0);
      player0.getY();
      player1.getY();
      float float0 = player1.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.888488895463434
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-1120.0651F));
      Player player1 = new Player();
      Player player2 = new Player(354);
      player2.isBoss();
      player2.setJoinOK(player0, true);
      player2.setZ(0.0F);
      player2.isJoinOK(player0, true);
      assertEquals((-1120.0651F), player0.getY(), 0.01F);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player3 = new Player((short)4919, "", "", 19712);
      player2.pack();
      player3.getIP();
      assertTrue(player3.isConnected());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7257318471278023
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(0.2F);
      Player player1 = (Player)player0.gangBoss();
      Player player2 = new Player(341);
      player0.isJoinOK(player2, false);
      player2.setJoinOK(player0, false);
      player2.prev = null;
      player2.isJoinOK(player0, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player3 = new Player((-4023), "state.Player$JoinInfo", "state.Player$JoinInfo", 413);
      player3.pack();
      float float0 = player1.getY();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = (Player)player0.gangBoss();
      player1.head = (Party) player0;
      player0.setZ(0.1F);
      player0.setJoinOK(player1, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player2 = new Player(1411, "r10~#Q_3Wb#}G^i4", "r10~#Q_3Wb#}G^i4", 10);
      player2.pack();
      System.setCurrentTimeMillis(14999L);
      float float0 = player0.getZ();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(31116, "state.Party", "ap", (-2245), (-2245));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-116);
      Party party0 = new Party();
      player0.next = party0;
      player0.gangStrength();
      party0.id = 31116;
      byteArray0[2] = (byte)77;
      byteArray0[3] = (byte)91;
      player0.setDead((long) (byte) (-116), true);
      player0.unpack(byteArray0);
      player0.getMoney();
      player0.type();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      player0.gangStrength();
      player0.type();
      player0.pack();
      player0.getIP();
      int int0 = player0.gangStrength();
      assertEquals((-116L), player0.getTimeOfDeath());
      assertEquals((-2245), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8277334069312325
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "a$Y z:,t*~", "", (short)4919, (short)4919);
      player0.isJoinOK(player1, false);
      player0.setDead((long) (short)4919, false);
      player0.setJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player2 = new Player((short)4919, "U/$y?=A1,~)", "!`P`PKikg-&*'y", (-950));
      Player player3 = new Player((short)4919, "", "!`P`PKikg-&*'y", (-61), 1581);
      byte[] byteArray0 = player3.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 2140);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4919L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(982);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player1 = new Player(1281, "", "", 1281, 0);
      player1.setDead((-741L), false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)33;
      byteArray0[5] = (byte)77;
      byteArray0[6] = (byte)93;
      player1.unpack(byteArray0);
      player0.setConnected(false);
      player1.setDead((-3075L), false);
      player0.getPictureId();
      player1.getStrength();
      long long0 = player1.getTimeOfDeath();
      assertEquals((-3075L), long0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0284083968442363
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(4919, "", 4919);
      player0.type();
      player0.getZ();
      player0.setConnected(false);
      player0.gangStrength();
      player0.pack();
      player0.setDead((-1L));
      player0.setDead((-779L));
      player0.getPictureId();
      System.setCurrentTimeMillis((short)4919);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.gangStrength();
      player0.getX();
      player0.getX();
      player0.isConnected();
      player0.getPictureId();
      player0.getX();
      player0.getX();
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      try { 
        dataInputStream0.skip(4919);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3752697138726195
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(982);
      Player player1 = new Player((short)4919, "o(|8|4j02{L2?", (String) null, (-1628));
      player0.isJoinOK(player1, false);
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockFile mockFile0 = new MockFile("", "");
      File file0 = MockFile.createTempFile("o(|8|4j02{L2?", "f.P={6%7I;");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Player player2 = new Player((-1112), "", "HP48.", 982);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(982);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player1 = new Player(1281, "", "", 1281, 13);
      player1.setDead((-741L), false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)33;
      byteArray0[5] = (byte)77;
      byteArray0[6] = (byte)93;
      player0.unpack(byteArray0);
      player1.setConnected(false);
      player0.setDead((-2692L), true);
      player1.getPictureId();
      player0.getStrength();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-2692L), long0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-389));
      player0.getSubparty();
      Player player1 = new Player((short)4919, (String) null, (-389));
      player0.pack();
      player1.getName();
      int int0 = 0;
      int int1 = (-2942);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-2942));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2942
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(2317, "a8y/$7", "7G|q>c_w<bu+V7C0", 2317, 806);
      player0.setDead((-741L), false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte)33;
      player0.unpack(byteArray0);
      player0.setConnected(false);
      player0.setDead((long) 2317, false);
      player0.getPictureId();
      player0.getStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-13959), 806);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(982);
      player0.setY(1154.0F);
      Party party0 = player0.gangBoss();
      player0.remove(party0);
      player0.setZ((-656.58307F));
      Player player1 = new Player(982, " ", " ", (short)4919);
      player1.add(party0);
      player0.gangStrength();
      player1.setDead();
      player0.setX((-656.58307F));
      player1.setDead((-287L));
      assertEquals((-287L), player1.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(982);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(31116, "Player.unpack(): *** WRNING *** data is not of propr type!", 31116);
      player0.setY((-488));
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-1), "", (-425));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)77;
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte)18;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)77, 1939);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-425), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(982);
      PipedInputStream pipedInputStream0 = new PipedInputStream(982);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("Player982", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player((-2340), "+8,_3}", "o#K.J", (-2340), 0);
      player0.gangStrength();
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      Player player0 = new Player(10497, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 1738, 10497);
      Player player1 = new Player((-701));
      player0.remove(player1);
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals("Player-701", player1.getName());
      
      float float0 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertEquals(1738, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10497, player0.getStrength());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(982);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player1 = new Player(982, "", "", 982, 0);
      player1.setDead((-741L), false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)33;
      byteArray0[6] = (byte)93;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)77;
      player0.unpack(byteArray1);
      player0.setConnected(false);
      player1.setDead(2229L, true);
      player0.getStrength();
      player1.getTimeOfDeath();
      assertEquals(2229L, player1.getTimeOfDeath());
      
      player0.getX();
      System.setCurrentTimeMillis(1L);
      player0.pack();
      assertEquals("Player982", player0.getName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(982);
      MockFile mockFile0 = new MockFile("8%yIR{lc9~y0$D\"+[=h", "8%yIR{lc9~y0$D\"+[=h");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "8%yIR{lc9~y0$D\"+[=h";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "=Gh[5";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      objectArray0[8] = (Object) "=Gh[5";
      Player player1 = new Player(982, "=Gh[5", "=Gh[5", (-1));
      assertEquals((-1), player1.getPictureId());
      
      float float0 = player0.getY();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player982", player0.getName());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 819;
      Player player0 = new Player(819);
      int int1 = 0;
      player0.setX(819);
      String string0 = "PXz-p";
      int int2 = 10;
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      Object object0 = new Object();
      Player player1 = new Player(19744, "", "0e<M&U", (-1));
      assertEquals((-1), player1.getPictureId());
      assertEquals("", player1.getIP());
      
      int int0 = player0.type();
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(5, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0, "<a|A0M", "gui.ModuleBrowserDialog$ModuleFilter", 3024, 3024);
      Party party0 = player0.prev;
      player0.add((Party) null);
      player0.getX();
      player0.getZ();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-20);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte) (-24);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(982);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-91);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)116;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-20);
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player982", player0.getName());
      
      MockFile mockFile0 = new MockFile("8%yIR{lc9~y0$D\"+[=h", "8%yIR{lc9~y0$D\"+[=h");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "8%yIR{lc9~y0$D\"+[=h";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "=Gh[5";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      mockFile0.getAbsolutePath();
      objectArray0[7] = (Object) "";
      objectArray0[8] = (Object) "=Gh[5";
      Player player1 = new Player(982, "=Gh[5", "=Gh[5", (-1));
      player1.pack();
      assertTrue(player1.isConnected());
      assertEquals((-1), player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = (Player)player0.gangBoss();
      player1.boss = (Party) player0;
      byte byte0 = (byte)59;
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(982);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      player0.gangBoss();
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      player0.setZ((-627.0F));
      player1.setJoinOK(player0, true);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(543, (String) null, "y_K#|4atxB!!Bci5`u", 543, 543);
      player0.getIP();
      player0.gangStrength();
      player0.setZ(1202.0103F);
      Party party0 = new Party(543);
      party0.getSubparty();
      party0.id = 0;
      party0.id = 19;
      party0.boss = (Party) player0;
      player0.add(party0);
      player0.getSubparty();
      Party party1 = player0.head;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      player0.getX();
      player0.setZ((-3110.328F));
      assertEquals((-3110.328F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(982);
      Player player1 = new Player(982, "r10~#Q_3Wb#}G^i4", "", 1421);
      assertEquals("r10~#Q_3Wb#}G^i4", player1.getIP());
      assertEquals(1421, player1.getPictureId());
      
      Player player2 = new Player();
      player2.setZ(0.0F);
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0.0F, player2.getZ(), 0.01F);
      assertEquals("Player-1", player2.toString());
      assertEquals(0, player2.getPictureId());
      assertEquals("0.0.0.0", player2.getIP());
      assertEquals(1, player2.getStrength());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(982);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player982", player0.getName());
      
      MockFile mockFile0 = new MockFile("8%yIR{lc9~y0$D\"+[=h", "8%yIR{lc9~y0$D\"+[=h");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "8%yIR{lc9~y0$D\"+[=h";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "=Gh[5";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      objectArray0[8] = (Object) "=Gh[5";
      Player player1 = new Player(982, "=Gh[5", "=Gh[5", (-1));
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player1.getIP();
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals((-1), player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(1699, "", "", 1, 297);
      player0.getSubparty();
      player0.getName();
      player0.setDead(0L, false);
      player0.gangStrength();
      Party party0 = new Party();
      player0.prev = party0;
      player0.getPictureId();
      player0.getSubparty();
      player0.getPictureId();
      player0.setX(1);
      player0.setY((-539.0F));
      int int0 = player0.getStrength();
      assertEquals(1.0F, player0.getX(), 0.01F);
      assertEquals(297, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(982);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player1 = new Player(1281, "", "", 1281, 0);
      player1.setDead((-741L), false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)33;
      byteArray0[5] = (byte)77;
      byteArray0[6] = (byte)93;
      player0.unpack(byteArray0);
      player1.setConnected(false);
      player0.setDead((-2692L), false);
      player1.getPictureId();
      player1.pack();
      assertFalse(player1.isConnected());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.241028319059176
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-3390), "L\"\"j", "", (-3390));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** data is not of proper type!");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead();
      player0.getSubparty();
      player0.getPictureId();
      Party party0 = player0.next;
      player0.add((Party) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      dataInputStream0.skipBytes((-3390));
      player0.unpack(dataInputStream0);
      player0.getStrength();
      System.setCurrentTimeMillis(1);
      player0.getX();
      player0.getMoney();
      player0.setDead((-1931L), false);
      player0.getZ();
      player0.gangStrength();
      Player player1 = new Player(1958, "Player.unpack(): *** WARNING *** data is not of proper type!", "=BJb9#U6+jd_s", (-2420));
      player0.isJoinOK(player1, false);
      player1.type();
      player0.getIP();
      System.setCurrentTimeMillis((short)4919);
      player1.gangStrength();
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-806), " ", "", (-806), 10);
      player0.setZ(903.487F);
      player0.getY();
      byte[] byteArray0 = player0.pack();
      System.setCurrentTimeMillis((-806));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4919, 4919);
      player0.setY(1484.56F);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.getStrength();
      player0.pack();
      float float0 = player0.getX();
      assertEquals(903.487F, player0.getZ(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(982);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player982", player0.toString());
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player1 = new Player((byte)1, "gui.ModuleBrowserDialog$ModuleFilter", (String) null, (byte)1);
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
      assertEquals(1, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-1120.0651F));
      assertEquals((-1120.0651F), player0.getY(), 0.01F);
      
      Object object0 = new Object();
      Player player1 = new Player((-1), "0~_>>v##c<R5H9", "", (-2518));
      assertEquals((-2518), player1.getPictureId());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = (Player)player0.gangBoss();
      player1.boss = (Party) player0;
      player0.setConnected(true);
      player0.isJoinOK(player1, true);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertFalse(boolean0);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockFile mockFile0 = new MockFile(";Y8QDja", ";Y8QDja");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[0];
      MockPrintStream mockPrintStream1 = (MockPrintStream)mockPrintStream0.printf("=Gh[5", objectArray0);
      byteArrayOutputStream0.writeTo(mockPrintStream1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      int int0 = player1.getPictureId();
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.getName());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, int0);
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 503);
      Player player1 = new Player(3325);
      player0.add(player1);
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertEquals(503, player0.getStrength());
      assertFalse(boolean0);
      
      String string0 = player1.getName();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals("Player3325", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 1);
      player0.toString();
      player0.setMoney(1);
      player0.getTimeOfDeath();
      Player player1 = new Player((short)4919, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 2577, 180);
      player0.setJoinOK(player1, false);
      player0.setConnected(true);
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      boolean boolean0 = player1.isDead();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7307781044869275
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "a$Y z:,t*~", "", (short)4919, (short)4919);
      boolean boolean0 = player0.isDead();
      player0.setJoinOK(player1, false);
      boolean boolean1 = player0.isJoinOK(player1, false);
      assertFalse(boolean1 == boolean0);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      player1.setJoinOK(player0, true);
      Player player2 = new Player();
      boolean boolean2 = player2.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player2.getIP());
      assertFalse(boolean2);
      assertEquals(0, player2.getPictureId());
      assertEquals("Player-1", player2.toString());
      
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      Player player3 = new Player(162, "", "r10~#Q_3Wb#}G^i4", (short)4919);
      assertEquals(1, player3.getStrength());
      
      player1.pack();
      assertEquals("a$Y z:,t*~", player1.getIP());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(4919, player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(3280, "", 0);
      player0.id = 0;
      player0.setY(1.0F);
      Player player1 = new Player((-2040), "Z8[/8/WU,0M+!", (short)4919);
      player0.setJoinOK(player1, true);
      player1.add(player0);
      player0.getSubparty();
      player0.toString();
      player0.getStrength();
      player1.head = (Party) player0;
      player1.isConnected();
      player1.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      player0.isConnected();
      player1.setX(0.0F);
      player1.next = (Party) player0;
      player1.setConnected(false);
      player1.getY();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(2727, "9q HW}!oG3fqd(+\">NV", "9q HW}!oG3fqd(+\">NV", 2072, (-509));
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      player0.boss.next = party0;
      party0.next = (Party) player0;
      player0.prev = party0;
      player0.setZ(2727);
      player0.setMoney(0.0F);
      player0.getIP();
      player0.getY();
      player0.getX();
      party0.add(player0.boss);
      player0.setDead((long) (-509), true);
      player0.setDead();
      player0.getName();
      player0.isDead();
      player0.setX((-639.0F));
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Party party0 = player0.gangBoss();
      party0.boss = (Party) player0;
      party0.boss.boss = (Party) player0;
      player0.id = 314;
      player0.remove(party0);
      player0.setZ(10.0F);
      player0.add((Party) null);
      player0.gangStrength();
      player0.setDead();
      player0.setX(1154.0F);
      player0.setDead((long) 314);
      assertEquals(1154.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.502808529414704
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = (Player)player0.gangBoss();
      player1.boss = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.setZ(0.1F);
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player2 = new Player((short)4919, "j-'=%aRQX|?wlo.m", (-1));
      player2.setConnected(true);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(0.1F, player1.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(982);
      MockFile mockFile0 = new MockFile("8%yIR{lc9~y0$D\"+[=h", "8%yIR{lc9~y0$D\"+[=h");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "8%yIR{lc9~y0$D\"+[=h";
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "=Gh[5";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      objectArray0[8] = (Object) "=Gh[5";
      PrintStream printStream0 = mockPrintStream0.printf("=Gh[5", objectArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)4919);
      byteArrayOutputStream0.writeTo(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      assertEquals(35L, mockFile0.length());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      
      player0.setJoinOK(player1, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockFile mockFile0 = new MockFile("", "\">~c-j");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-98);
      byteArray0[5] = (byte) (-34);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      mockPrintStream0.printf("a$Y z:,t*~", (Object[]) null);
      mockPrintStream0.println((-534.72F));
      PrintStream printStream0 = mockPrintStream0.format("", (Object[]) null);
      byteArrayOutputStream0.writeTo(printStream0);
      byteArrayOutputStream0.toByteArray();
      int int0 = player1.getStrength();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.795294412433909
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.1F);
      Player player1 = new Player((short)4919, "a$Y z:,t*~", "", (short)4919, (short)4919);
      player0.isConnected();
      player0.setJoinOK(player1, false);
      player0.isConnected();
      player0.setZ(0.0F);
      player1.setJoinOK(player0, true);
      player0.isJoinOK(player1, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-1855));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-85);
      byteArray0[4] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player((byte)0, "", 8525);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      int int0 = player0.gangStrength();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(8525, player0.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.944797816169571
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(543, (String) null, "y_K#|4atxB!!Bci5`u", 543, 543);
      player0.getIP();
      player0.gangStrength();
      player0.setZ(1202.0103F);
      Party party0 = new Party(543);
      party0.getSubparty();
      party0.id = 0;
      party0.id = 0;
      player0.add(party0);
      player0.getSubparty();
      player0.setX(0.0F);
      player0.pack();
      assertEquals(1202.0103F, player0.getZ(), 0.01F);
      
      player0.setZ(0);
      player0.getTimeOfDeath();
      Player player1 = new Player(0, (String) null, "", 4919);
      player1.pack();
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9935129220439047
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(1154.0F);
      Player player1 = (Player)player0.gangBoss();
      player1.boss = (Party) player0;
      player1.setX(585.8656F);
      player0.isJoinOK(player1, true);
      player0.setZ(0.1F);
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      assertEquals(0.1F, player1.getZ(), 0.01F);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player2 = new Player(1390, "r10~#Q_3Wb#}G^i4", "r10~#Q_3Wb#}G^i4", 10);
      player2.reset(true);
      player2.pack();
      player2.pack();
      System.setCurrentTimeMillis((short)4919);
      float float0 = player2.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) "=Gh[5";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      Player player1 = new Player(29183, "", "", 236);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(236, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
  }
}
