/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:44:16 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Cursor;
import java.awt.Dialog;
import java.awt.Graphics;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.renderable.ParameterBlock;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.BiConsumer;
import java.util.function.Predicate;
import javax.media.jai.OperationRegistry;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.event.ListDataListener;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.updateElementAt((-2689), (VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-2689));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.534088008112886
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElementAt(0);
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[0] = (-2339);
      intArray1[2] = (-2339);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      defaultComboBoxModel0.getListDataListeners();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElementAt((VisualPageListItem) null, 1278);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.moveUpIndexes(intArray1);
      assertEquals(8, visualListModel1.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 13);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.304960205575741
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      List<VisualPageListItem> list0 = new Vector<VisualPageListItem>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 13);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4459311899497576
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      defaultComboBoxModel0.getListDataListeners();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")8Z");
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 13);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[19];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      visualListModel0.getListDataListeners();
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[7] = 0;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      jComboBox0.removeNotify();
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex((-602));
      visualListModel0.subList((-1), 1, true);
      visualListModel0.getListDataListeners();
      visualListModel0.moveUpIndex((-423));
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 0, renderingHints0);
      short[][] shortArray0 = new short[9][5];
      short[] shortArray1 = new short[1];
      shortArray1[0] = (short) (-7);
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[7];
      shortArray2[0] = (short) (-7);
      shortArray2[1] = (short) (-7);
      shortArray2[2] = (short) (-7);
      shortArray2[3] = (short) (-7);
      shortArray2[4] = (short) (-7);
      shortArray2[5] = (short)3075;
      shortArray2[6] = (short) (-255);
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[9];
      shortArray3[0] = (short) (-7);
      shortArray3[1] = (short)3075;
      shortArray3[3] = (short)3075;
      shortArray3[4] = (short)3075;
      shortArray3[5] = (short) (-7);
      shortArray3[6] = (short)1809;
      shortArray3[7] = (short) (-7);
      shortArray3[8] = (short) (-255);
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[6];
      shortArray4[0] = (short)1809;
      shortArray4[1] = (short) (-255);
      shortArray4[2] = (short) (-7);
      shortArray4[3] = (short) (-7);
      shortArray4[4] = (short) (-365);
      shortArray4[5] = (short) (-7);
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[4];
      shortArray5[0] = (short) (-7);
      shortArray5[1] = (short)1809;
      shortArray5[2] = (short) (-365);
      shortArray5[3] = (short) (-7);
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[9];
      shortArray6[0] = (short)1809;
      shortArray6[1] = (short) (-7);
      shortArray6[2] = (short) (-365);
      shortArray6[3] = (short) (-7);
      shortArray6[4] = (short)3075;
      shortArray6[5] = (short)0;
      shortArray6[6] = (short)3075;
      shortArray6[7] = (short) (-365);
      shortArray6[8] = (short)276;
      shortArray0[5] = shortArray6;
      short[] shortArray7 = new short[7];
      shortArray7[0] = (short) (-7);
      shortArray7[1] = (short) (-365);
      shortArray7[2] = (short)1809;
      shortArray7[3] = (short) (-365);
      shortArray7[4] = (short)276;
      shortArray7[5] = (short) (-1);
      shortArray7[6] = (short)276;
      shortArray0[6] = shortArray7;
      short[] shortArray8 = new short[1];
      shortArray8[0] = (short) (-255);
      shortArray0[7] = shortArray8;
      short[] shortArray9 = new short[6];
      shortArray9[0] = (short) (-651);
      shortArray9[1] = (short)0;
      shortArray9[2] = (short) (-255);
      shortArray9[3] = (short) (-365);
      shortArray9[4] = (short) (-7);
      shortArray9[5] = (short) (-7);
      shortArray0[8] = shortArray9;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(0, shortArray0);
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.290664210654739
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      TreeSet<Dialog.ModalExclusionType> treeSet0 = new TreeSet<Dialog.ModalExclusionType>();
      Vector<Dialog.ModalExclusionType> vector1 = new Vector<Dialog.ModalExclusionType>(treeSet0);
      vector0.removeAll(vector1);
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.getListDataListeners();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      String[] stringArray0 = new String[21];
      stringArray0[1] = "";
      stringArray0[2] = "~Q|cE\"E?Dv,";
      stringArray0[3] = "] does not exist.";
      stringArray0[4] = "D.7^";
      stringArray0[5] = "org.pdfsam.guiclient.dto.Rotation";
      stringArray0[6] = "";
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[2];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(5, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9069014163712663
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      TreeSet<Dialog.ModalExclusionType> treeSet0 = new TreeSet<Dialog.ModalExclusionType>();
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.APPLICATION_EXCLUDE;
      treeSet0.add(dialog_ModalExclusionType0);
      Vector<Dialog.ModalExclusionType> vector1 = new Vector<Dialog.ModalExclusionType>(treeSet0);
      vector0.removeAll(vector1);
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.getListDataListeners();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CE?");
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      String[] stringArray0 = new String[21];
      stringArray0[1] = "";
      stringArray0[2] = "~Q|cE\"E?Dv,";
      stringArray0[3] = "] does not exist.";
      stringArray0[4] = "D.7^";
      stringArray0[5] = "org.pdfsam.guiclient.dto.Rotation";
      stringArray0[6] = "";
      visualListModel0.addElementAt((VisualPageListItem) null, (-2127));
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = 4;
      intArray0[1] = (-2127);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2127
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("6=,Ax&\"$e21&-+O0-");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.removeNotify();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-715));
      visualListModel0.removeElements(0, (-651), true);
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7406471237485377
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList(0, 276);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndex(1);
      visualListModel0.moveUpIndex(276);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      Object object0 = visualListModel0.getElementAt(276);
      assertNull(object0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[3];
      intArray0[0] = 1400;
      intArray0[1] = 1400;
      intArray0[2] = (-1230);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      defaultComboBoxModel0.getSelectedItem();
      String string0 = "hX)ySH9bg`0eE,DPV$";
      defaultComboBoxModel0.addElement("hX)ySH9bg`0eE,DPV$");
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      defaultComboBoxModel0.getListDataListeners();
      jComboBox0.firePropertyChange("hX)ySH9bg`0eE,DPV$", (-1088), 1400);
      jComboBox0.getBaselineResizeBehavior();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveUpIndex((-2127));
      visualListModel0.getElements();
      int int0 = 125;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(1400, 717, 125);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 125
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2414456828156455
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[19];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      Vector<Object> vector2 = parameterBlock1.getParameters();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1, vector2);
      vector1.removeElement((Object) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      parameterBlock0.add(1813.003F);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, operationRegistry0);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet1);
      // Undeclared exception!
      try { 
        operationRegistry0.createCollection((String) null, parameterBlock2, renderingHints0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name parameter may not be null.
         //
         verifyException("javax.media.jai.util.CaselessStringKey", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.68178883521687
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = new int[3];
      intArray0[1] = 2439;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      defaultComboBoxModel0.addElement("hX)ySH9bg`0eE,DPV$");
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      defaultComboBoxModel0.getListDataListeners();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.elementsChanged();
      visualListModel0.addElementAt((VisualPageListItem) null, 13);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.700025327834538
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OperationRegistry.getThreadSafeOperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(11, 1637);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[5];
      intArray0[0] = 14;
      intArray0[1] = (-3601);
      intArray0[2] = 11;
      intArray0[3] = 2;
      intArray0[4] = (-3601);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList(244, 1017, true);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.clone();
      visualListModel0.addAllElements(4, (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OperationRegistry.getThreadSafeOperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector1);
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("No appenders could be found for logger (");
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.362843374280337
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[9];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getListDataListeners();
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      visualListModel0.removeListDataListener(jComboBox1);
      visualListModel0.clearData();
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel1.moveUpIndex(0);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel2.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1712);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1400, (-1712));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1400) > toIndex(-1712)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.787378005510327
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("6=,Ax&\"$e21&-+O0-");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.removeNotify();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-715));
      visualListModel0.removeElements(0, (-651), true);
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 7);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel1.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.elementChanged((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel1.updateElementAt(0, (VisualPageListItem) null);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.9971871050667476
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[1] = (-2339);
      intArray0[2] = 276;
      intArray0[3] = 9999;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements((-15), collection0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.addAllElements((-2339), collection0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(collection0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2217515590724055
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.elementsChanged();
      int[] intArray0 = new int[1];
      visualListModel0.elementsChanged();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.elementsChanged();
      visualListModel0.removeElements(1, 0, false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>(comparator0);
      visualListModel0.appendAllElements(treeSet0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1486;
      intArray0[1] = 3955;
      intArray0[2] = (-700);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getElements();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      // Undeclared exception!
      try { 
        operationRegistry0.createCollection("", parameterBlock0, renderingHints0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.377872234615497
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      jComboBox0.getBaselineResizeBehavior();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jComboBox0.removeMouseListener(mouseListener0);
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((-866), (Collection<VisualPageListItem>) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(7, intArray0.length);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.getElementAt(0);
      int int0 = (-2339);
      visualListModel0.subList((-1), (-2339));
      Stack<String> stack0 = new Stack<String>();
      stack0.add("/V]?cBe1sC~f8;bE]");
      JComboBox<String> jComboBox0 = new JComboBox<String>(stack0);
      jComboBox0.removeNotify();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex((-1));
      visualListModel0.moveUpIndex((-1));
      // Undeclared exception!
      try { 
        visualListModel0.subList(507, (-3429), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(507) > toIndex(-3429)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.getListDataListeners();
      int int0 = 0;
      Vector<String> vector0 = new Vector<String>();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ":pri=[";
      stringArray0[1] = "<r{\"";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "org.apache.log4j.spi.DefaultRepositorySelector";
      stringArray0[7] = "";
      stringArray0[8] = "";
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      vector0.add("");
      JComboBox<String> jComboBox1 = new JComboBox<String>(vector0);
      jComboBox1.getMouseWheelListeners();
      jComboBox1.removeNotify();
      visualListModel0.removeListDataListener(jComboBox1);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1230), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1230)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8184506609563127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.removeNotify();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(11);
      visualListModel0.moveUpIndex(602);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(602, 2054, true);
      visualListModel1.getListDataListeners();
      visualListModel1.moveUpIndex(2054);
      VisualListModel visualListModel2 = new VisualListModel();
      assertFalse(visualListModel2.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8207751622034678
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.getListDataListeners();
      Vector<String> vector0 = new Vector<String>();
      String string0 = "";
      vector0.add("");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      vector0.add("] using context classloader ");
      jComboBox0.removeNotify();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.subList(0, 0, true);
      visualListModel0.getListDataListeners();
      int int0 = 1;
      VisualListModel visualListModel1 = new VisualListModel();
      int int1 = (-1241);
      visualListModel0.moveUpIndex((-1241));
      int[] intArray0 = new int[4];
      intArray0[0] = (-1241);
      intArray0[1] = (-1241);
      intArray0[2] = (-1241);
      intArray0[3] = (-1241);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1, 1, intArray0, (-1241), true, (-1241), (-1241));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // transferType must be eitherDataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.7244547079196284
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (-2339);
      intArray0[2] = (-2339);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList((-1), (-2339));
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.moveUpIndex(2180);
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      byte[] byteArray2 = byteLookupTable0.lookupPixel(byteArray1, byteArray1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("'OZSsm)2`", 5000);
      hashtable0.put(sunHints_Key0, integer0);
      BiConsumer<Object, Integer> biConsumer0 = (BiConsumer<Object, Integer>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      visualListModel0.subList((-2339), 0, false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndex(552);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1927), 2180, byteArray1, byteArray2, byteArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-3414);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-3414));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3414
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementsChanged();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "org.apache.logrj.Rolling]alendar";
      stringArray0[2] = "";
      stringArray0[3] = "Error during default initialization";
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.removeNotify();
      int[] intArray0 = new int[1];
      intArray0[0] = 9999;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.711308620836633
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[1] = (-2339);
      intArray0[2] = 276;
      intArray0[3] = 9999;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements(collection0);
      visualListModel0.addAllElements((-15), collection0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.subList(6, 14, true);
      visualListModel0.addAllElements((-2339), (Collection<VisualPageListItem>) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(4, intArray0.length);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.setEnabled(false);
      jComboBox0.createToolTip();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.subList(0, 0, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)40;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(11, 1708, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "org.apache.logrj.Rolling]alendar";
      stringArray0[2] = "";
      stringArray0[3] = "Error during default initialization";
      stringArray0[5] = "com.lowagie.tet.pdfPdfGra5hics2D$HyperLinkKey";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Cursor cursor0 = Cursor.getDefaultCursor();
      jComboBox0.setCursor(cursor0);
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((MouseListener) defaultCaret0, mouseListener0);
      jComboBox0.removeMouseListener(mouseListener0);
      defaultCaret0.isSelectionVisible();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.toArray();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      JComboBox<VisualPageListItem> jComboBox1 = new JComboBox<VisualPageListItem>();
      jComboBox1.getGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      // Undeclared exception!
      try { 
        debugGraphics0.getClipBounds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-814), (-814), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndex((-809));
      visualListModel0.removeElements(intArray0, true);
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 21.24557F, renderingHints0);
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((short) (-365), (short[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "org.apache.logrj.Rolling]alendar";
      stringArray0[2] = "";
      stringArray0[3] = "Error during default initialization";
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      JComboBox<String> jComboBox0 = new JComboBox<String>(vector0);
      jComboBox0.removeNotify();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.moveDownIndex((-1));
      int int0 = (-2127);
      visualListModel0.moveUpIndex((-2127));
      boolean boolean0 = false;
      visualListModel0.subList((-2127), (-2127), false);
      visualListModel0.getListDataListeners();
      visualListModel0.moveUpIndex(1);
      VisualListModel visualListModel1 = new VisualListModel();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[8];
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(1039);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.04776041683849
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "org.apache.logrj.Rolling]alendar";
      stringArray0[2] = "";
      stringArray0[3] = "Error during default initialization";
      stringArray0[5] = "com.lowagie.tet.pdfPdfGra5hics2D$HyperLinkKey";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Cursor cursor0 = Cursor.getDefaultCursor();
      jComboBox0.setCursor(cursor0);
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((MouseListener) defaultCaret0, mouseListener0);
      jComboBox0.removeMouseListener(mouseListener0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.undeleteElements(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 129;
      visualListModel1.reverseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OperationRegistry.getThreadSafeOperationRegistry();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector1);
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      priorityQueue0.removeIf(predicate0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) priorityQueue0);
      PriorityQueue<VisualPageListItem> priorityQueue1 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.prependAllElements(priorityQueue1);
      assertFalse(priorityQueue1.equals((Object)priorityQueue0));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.log4j.xml.DOMConfigurator";
      stringArray0[1] = "org.apache.logrj.Rolling]alendar";
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-416), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -416
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.log4j.xml.DOMConfigurator";
      stringArray0[1] = "org.apache.logrj.Rolling]alendar";
      stringArray0[2] = "";
      stringArray0[3] = "Error during default initialization";
      stringArray0[5] = "com.lowagie.tet.pdfPdfGra5hics2D$HyperLinkKey";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jComboBox0.removeMouseListener(mouseListener0);
      defaultCaret0.isSelectionVisible();
      visualListModel0.addListDataListener(jComboBox0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      defaultCaret0.height = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      intArray1[2] = 0;
      intArray1[2] = 0;
      intArray1[5] = 0;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      defaultCaret0.setVisible(false);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(1, 1, true);
      assertEquals(0, visualListModel0.getSize());
  }
}
