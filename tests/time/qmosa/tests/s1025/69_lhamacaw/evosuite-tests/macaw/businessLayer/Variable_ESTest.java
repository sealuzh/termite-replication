/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 08:58:49 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8420932571263893
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "DUPLICATE_SUPPORTING_DOCUMENT_CODE";
      rawVariable0.setNotes("DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.codeBookNumber = "DUPLICATE_SUPPORTING_DOCUMENT_CODE";
      rawVariable0.createVariableSummary();
      rawVariable0.getCleaningDescription();
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        rawVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.7541605478328224
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.setCategory("^>v{L()Bj;|");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.containsSourceVariable(rawVariable1);
      User user0 = new User("^>v{L()Bj;|", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("^>v{L()Bj;|", derivedVariable0.getCategory());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable2.getSourceVariables();
      derivedVariable2.addSourceVariables(arrayList2);
      derivedVariable2.cloneAttributes(rawVariable0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.735241043174561
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("38ZDm.(h%*KObH7hHl", "Unknown");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      Function<Object, OntologyTerm> function0 = (Function<Object, OntologyTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super RawVariable, ? extends OntologyTerm>) function0);
      arrayList0.replaceAll(unaryOperator0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.containsAll(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.setAvailability("38ZDm.(h%*KObH7hHl");
      derivedVariable0.cloneAttributes(rawVariable1);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      User user1 = new User("", "8M;gT;a'm+/q");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      assertEquals("38ZDm.(h%*KObH7hHl", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.821978374837229
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("0");
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setAvailability("0");
      assertEquals("0", derivedVariable0.getAvailability());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getName();
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7256531900355307
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable2.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.setAvailability("38ZDm.(h%*KObH7hHl");
      derivedVariable0.cloneAttributes(rawVariable2);
      rawVariable2.updateOntologyTerm(ontologyTerm1);
      assertEquals("38ZDm.(h%*KObH7hHl", rawVariable2.getAvailability());
      
      rawVariable1.getName();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.782038182535737
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setOntologyName("DUPLICATE_USER");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable1.cloneAttributes(derivedVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable2.containsSupportingDocument(supportingDocument1);
      derivedVariable1.getColumnEnd();
      derivedVariable1.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      // Undeclared exception!
      try { 
        derivedVariable1.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User(",x", ",x");
      user0.setFirstName("eg(!PE1T");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.842324604726158
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("Unknown");
      User user0 = new User("", "");
      user0.setAddressLine2("Unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("user.postCode.saveChanges", "_IUt");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getName();
      derivedVariable0.setColumnEnd("");
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2295488300275705
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      ontologyTerm0.setOntologyName("lha.mrc.ac.uk:LHA");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setEmail("");
      user0.setPostCode("");
      user0.setPostCode("lqk3)aZGfZjL4g|z");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("^!E&Y)tmo&}");
      user0.setCounty("^!E&Y)tmo&}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("+");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList0);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      Variable.validateFields(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.763003557027956
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("Bw*uZ6~H\"C\"H6,dJt @");
      rawVariable0.getSupportingDocuments();
      rawVariable0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.getAlias();
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAvailability("UNABLE_TO_GET_ALL_SUPPORTING_DOCUMENTS");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.hasSameDisplayName(rawVariable1);
      User user0 = new User("Bw*uZ6~H\"C\"H6,dJt @", "Bw*uZ6~H\"C\"H6,dJt @");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      User user1 = new User();
      User user2 = new User();
      User.detectFieldChanges(user0, user2, user0);
      derivedVariable1.containsSourceVariable(rawVariable0);
      assertEquals("Bw*uZ6~H\"C\"H6,dJt @", rawVariable0.getCategory());
      
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      derivedVariable2.addSourceVariables(arrayList0);
      derivedVariable2.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "A75?J/Q]e$_%Y";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User(",x", ",x");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "A75?J/Q]e$_%Y";
      rawVariable0.setCleaningStatus("A75?J/Q]e$_%Y");
      rawVariable0.getSupportingDocuments();
      rawVariable0.setIdentifier(0);
      rawVariable0.columnEnd = "A75?J/Q]e$_%Y";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "A75?J/Q]e$_%Y";
      derivedVariable0.columnEnd = "A75?J/Q]e$_%Y";
      derivedVariable0.setIdentifier(0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      rawVariable0.getFilePath();
      rawVariable0.setAvailability("'+/");
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getColumnEnd();
      assertEquals("", string0);
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getDisplayName();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string1 = derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string1);
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getQuestionNumber();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setLabel("5hk9");
      assertEquals("5hk9", derivedVariable0.getLabel());
      
      rawVariable0.getForm();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.6714099174633295
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.setCategory("variable.category.label");
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setColumnEnd("variable.category.label");
      rawVariable0.setFilePath("");
      rawVariable0.clone();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.getCategory();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.7084216255763276
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "Bw*uZ6~H\"C\"H6,dJt @";
      rawVariable0.setCategory("Bw*uZ6~H\"C\"H6,dJt @");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      arrayList0.add(supportingDocument1);
      rawVariable0.addSupportingDocuments(arrayList0);
      String string1 = "general.error.blankField";
      rawVariable0.setForm("general.error.blankField");
      rawVariable0.setAvailability("");
      rawVariable0.getCodeBookNumber();
      String string2 = "general.error.promotesSecurityRisk";
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7860342593768137
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("^>v{L()Bj;|");
      assertEquals("^>v{L()Bj;|", derivedVariable0.getDisplayName());
      
      User user0 = new User("VI~", "Unknown");
      user0.setAddressLine2("VI~");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("4$+|n`,", "^>v{L()Bj;|");
      user1.setAddressLine2("La^XCAPFC9Dn}xM");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getName();
      derivedVariable2.setColumnEnd("");
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.84263726757139
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getColumnEnd();
      derivedVariable0.setName("ndZ_}Lt1L9Y-p'S");
      User user0 = new User("", "VI~");
      user0.setAddressLine2("");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User("", "ndZ_}Lt1L9Y-p'S");
      user1.setAddressLine2("ndZ_}Lt1L9Y-p'S");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getName();
      derivedVariable1.setColumnEnd("");
      try { 
        DerivedVariable.validateFields(derivedVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      arrayList0.listIterator();
      derivedVariable0.setSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.notes = "{!aHJJymJ";
      derivedVariable0.getLabel();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("variable.columnStart.label");
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.7031817257086974
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable0.cloneAttributes(rawVariable3);
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
      assertFalse(rawVariable3.isCoded());
      assertEquals("Unknown", rawVariable3.getCategory());
      assertEquals("Unknown", rawVariable3.getAvailability());
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
      assertFalse(rawVariable3.isNewRecord());
      assertFalse(rawVariable3.isCleaned());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "A75?J/Q]e$_%Y";
      rawVariable0.setCleaningStatus("A75?J/Q]e$_%Y");
      rawVariable0.setCleaningStatus("A75?J/Q]e$_%Y");
      rawVariable0.getSupportingDocuments();
      rawVariable0.setIdentifier(0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "A75?J/Q]e$_%Y";
      derivedVariable0.columnEnd = "A75?J/Q]e$_%Y";
      derivedVariable0.setIdentifier(0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      rawVariable0.getFilePath();
      rawVariable0.setAvailability("'+/");
      Variable variable0 = null;
      rawVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1180287352108915
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("0");
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.getCleaningStatus();
      derivedVariable0.getValueLabels();
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("0", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7211353503391975
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("A75?J/Q]e$_%Y");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("A75?J/Q]e$_%Y");
      assertEquals("A75?J/Q]e$_%Y", derivedVariable1.getAvailability());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable2);
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.8320773387167666
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.createVariableSummary();
      String string0 = "MA@&gs|61-m`";
      User user0 = new User("MA@&gs|61-m`", "supportingDocument.title.saveChanges");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        arrayList0.replaceAll((UnaryOperator<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.6859385423302635
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setAvailability("general.fieldValue.unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable3);
      User user0 = new User("variable.alternativeVariable.label", "general.fieldValue.unknown");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      User user2 = new User("general.fieldValue.unknown", "variable.alternativeVariable.label");
      User.detectFieldChanges(user0, user2, user2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSourceVariable(rawVariable2);
      User user3 = new User("qciGhn\"IY&nEa", "UNABLE_TO_GET_USER_IDENTIFIER");
      DerivedVariable.detectFieldChanges(user2, derivedVariable2, derivedVariable2);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable1);
      derivedVariable2.addSourceVariables(arrayList1);
      derivedVariable2.cloneAttributes(rawVariable2);
      assertEquals("Unknown", rawVariable2.getAvailability());
      
      derivedVariable1.getAlternativeVariable();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.759481376886379
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertFalse(arrayList0.isEmpty());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      derivedVariable0.setOntologyTerms(arrayList2);
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList3);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      rawVariable0.setCategory((String) null);
      rawVariable0.setFilePath((String) null);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.6321973813118107
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("Unknown");
      User user0 = new User("", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("user.postCode.saveChanges", "user.postCode.saveChanges");
      User user2 = new User();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable2);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.cloneAttributes(derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getDisplayName());
      
      derivedVariable1.getAlternativeVariable();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("Unknown");
      derivedVariable0.setIdentifier((-3931));
      derivedVariable0.setCoded(false);
      derivedVariable0.columnEnd = "Unknown";
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      derivedVariable0.setYear("8%yIR{lc9~y0$D\"+[=h");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setCategory("EDIT");
      derivedVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getDisplayName();
      assertEquals("EDIT", rawVariable0.getCategory());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("variable.isCleaned.saveChanges.changedToNotClean");
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.594865038223946
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("'+/");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      String string0 = "YCPw!0`0RqNe<GU4";
      User user0 = new User("YCPw!0`0RqNe<GU4", "variable.alternativeVariable.label");
      User user1 = null;
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      try { 
        User.checkValidUserIDField("'+/");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"'+/\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable1.createVariableSummary();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9495499810681953
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("Unknown");
      User user0 = new User("", "");
      user0.setAddressLine2("Unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("user.postCode.saveChanges", "_IUt");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.getName();
      derivedVariable1.setYear("");
      derivedVariable1.setColumnEnd("6+xwD#Z&{u");
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.7056294350264856
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("38ZDm.(h%*KObH7hHl", "Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable2);
      int int0 = derivedVariable2.getIdentifier();
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.0689315768778553
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("");
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCoded(false);
      derivedVariable1.setCoded(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setYear("");
      rawVariable0.getYear();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.9640004381675213
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setName("0");
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      rawVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      derivedVariable0.setAvailability("variable.columnStart.label");
      derivedVariable0.cloneAttributes(rawVariable0);
      Variable.validateFields(rawVariable1);
      derivedVariable0.createVariableSummary();
      assertEquals("variable.columnStart.label", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.707014852170303
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.getFilePath();
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      Function<Object, OntologyTerm> function0 = (Function<Object, OntologyTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends OntologyTerm>) function0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.replaceAll(unaryOperator0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setAvailability("*;cuxMl!m=Ng{>dU\" ");
      assertEquals("*;cuxMl!m=Ng{>dU\" ", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("valueLabel.value.saveChanges", "valueLabel.value.saveChanges");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable0.getAlternativeVariable();
      rawVariable0.getYear();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.addValueLabel((ValueLabel) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      String string0 = "'+/";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "'+/";
      rawVariable0.setAvailability("'+/");
      Variable variable0 = null;
      derivedVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.8314417011158293
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.addAll((Collection<? extends OntologyTerm>) linkedList0);
      arrayList1.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable2.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getCleaningStatus();
      derivedVariable0.getValueLabels();
      rawVariable2.getCleaningDescription();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.updateOntologyTerm(ontologyTerm2);
      boolean boolean1 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.9314183800348093
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("Bw*uZ6~H\"C\"H6,dJt @");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getColumnStart();
      rawVariable0.setAlias("");
      rawVariable0.getYear();
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getIdentifier();
      rawVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      derivedVariable0.setNotes("&H~#{");
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.7075862036882743
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("EDIT", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.7033269818055663
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      User user0 = new User(",x", ",x");
      user0.setFirstName("eg(!PE1T");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      UnaryOperator.identity();
      derivedVariable0.setName((String) null);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      User user0 = new User(",x", ",x");
      user0.setFirstName("eg(!PE1T");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability(",x");
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.709836450220835
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getName();
      assertFalse(rawVariable3.isCoded());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.clone();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getForm();
      derivedVariable0.setCoded(false);
      derivedVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setValue((String) null);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setColumnStart((String) null);
      rawVariable0.setCategory("Nsu#^Esq7+O~Z2IX%");
      rawVariable0.isNewRecord();
      rawVariable1.setIsNewRecord(true);
      assertTrue(rawVariable1.isNewRecord());
      
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      assertEquals("Nsu#^Esq7+O~Z2IX%", rawVariable0.getCategory());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.7243245326328576
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      rawVariable0.setQuestionNumber("[Hv^5d'lJVBr)oo>6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "LaT";
      derivedVariable0.setYear("LaT");
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setColumnEnd("[Hv^5d'lJVBr)oo>6");
      derivedVariable0.setLabel("U*'d,|2r28@9Kg0Svm");
      rawVariable0.setFilePath("");
      derivedVariable0.setCodeBookNumber("[Hv^5d'lJVBr)oo>6");
      derivedVariable0.addOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.149083569676786
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      rawVariable0.setAvailability("tK|g{9'HZO~Twt'dH9 ");
      rawVariable0.setColumnEnd("tK|g{9'HZO~Twt'dH9 ");
      rawVariable0.setForm("ontologyTerm.ontologyName.saveChanges");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.removeValueLabel(valueLabel0);
      assertEquals("tK|g{9'HZO~Twt'dH9 ", rawVariable0.getColumnEnd());
      
      rawVariable1.setAlias("tK|g{9'HZO~Twt'dH9 ");
      rawVariable1.setCoded(true);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.removeSupportingDocuments(arrayList0);
      rawVariable1.setAlias("tK|g{9'HZO~Twt'dH9 ");
      rawVariable1.addSupportingDocuments(arrayList0);
      rawVariable1.setIsNewRecord(true);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      Variable.validateFields(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber((String) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.867906539278039
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.getLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("Q}'G");
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.setCategory("user.email.label");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList0);
      derivedVariable1.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable2.setAvailability("variable.questionNumber.label");
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Q}'G", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.7015046708135313
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      User user0 = new User(",x", ",x");
      user0.setFirstName("eg(!PE1T");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      rawVariable0.setCategory("eg(!PE1T");
      rawVariable0.setFilePath(",x");
      assertEquals(",x", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.6562262650916555
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("Unknown");
      User user0 = new User("", "");
      user0.setAddressLine2("Unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable1.getName();
      derivedVariable0.setColumnEnd("BL`_&[iJ{cMK!NiSa_a");
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("BL`_&[iJ{cMK!NiSa_a", derivedVariable1.getColumnEnd());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.620959571408677
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCoded();
      rawVariable0.setCleaningDescription("~C<+A1\"I");
      User user0 = new User();
      user0.setPassword("~C<+A1\"I");
      user0.setAffiliation("");
      user0.setCity("W");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.7047979390274213
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("'+/");
      User user0 = new User("", "");
      user0.setAddressLine2("j");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.getName();
      derivedVariable1.setColumnEnd("'+/");
      assertEquals("'+/", derivedVariable1.getColumnEnd());
      
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("", derivedVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.setCodeBookNumber("R,YVGw?'<-");
      rawVariable0.getFilePath();
      rawVariable0.setAlias("0");
      rawVariable0.getIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription((String) null);
      ontologyTerm1.setTerm("0");
      ontologyTerm1.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.getCleaningStatus();
      derivedVariable0.getValueLabels();
      rawVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertEquals("R,YVGw?'<-", rawVariable0.getCodeBookNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.664996904105534
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      derivedVariable1.addValueLabel(valueLabel0);
      derivedVariable1.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getName();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.cloneAttributes(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.296336295281036
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      user0.setStatus("");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.setCleaningDescription("`]MFwc&qCT`");
      user0.setIdentifier(301);
      rawVariable0.getQuestionNumber();
      rawVariable0.setNotes("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setFilePath("u@");
      rawVariable1.setNotes("");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable1.setQuestionNumber("u@");
      derivedVariable0.columnEnd = "general.error.promotesSecurityRisk";
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable1.setForm("");
      rawVariable1.isNewRecord();
      rawVariable1.getNotes();
      rawVariable1.setNotes("`]MFwc&qCT`");
      rawVariable0.setCodeBookNumber("J//wB:zwvR2fhh~y)y");
      rawVariable1.setQuestionNumber("J//wB:zwvR2fhh~y)y");
      rawVariable1.getDisplayItemIdentifier();
      assertEquals("J//wB:zwvR2fhh~y)y", rawVariable1.getQuestionNumber());
      
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6699756656540683
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = rawVariable1.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList2);
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      derivedVariable0.setAvailability("8`(X.HmfcvAdX4- #");
      derivedVariable0.cloneAttributes(rawVariable1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.sort((Comparator<? super ValueLabel>) null);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setIdentifier(0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.3761705986354715
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      String string0 = "'+/";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      String string1 = "variable.alternativeVariable.label";
      User user0 = new User("'+/", "'+/");
      User user1 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      supportingDocument0.setFilePath("8^W4=]~6'v;H@U");
      ArrayList<SupportingDocument> arrayList0 = rawVariable2.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      rawVariable2.getCodeBookNumber();
      assertFalse(rawVariable2.isCleaned());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals(0, rawVariable2.getIdentifier());
      assertFalse(rawVariable2.isCoded());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.706112785573594
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("38ZDm.(h%*KObH7hHl", "Unknown");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      Function<Object, OntologyTerm> function0 = (Function<Object, OntologyTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super RawVariable, ? extends OntologyTerm>) function0);
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.containsAll(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.setAvailability("Unknown");
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList3 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCleaned());
      assertTrue(arrayList3.isEmpty());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.785694393057566
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      User user0 = new User("", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("user.postCode.saveChanges", "_IUt");
      User user2 = new User("", "");
      User.detectFieldChanges(user1, user2, user2);
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.getName();
      derivedVariable1.setColumnEnd("6+xwD#Z&{u");
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.form = "EDIT";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.7431259319171497
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setAvailability("general.fieldValue.unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable3);
      User user0 = new User("variable.alternativeVariable.label", "general.fieldValue.unknown");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      User user2 = new User("general.fieldValue.unknown", "variable.alternativeVariable.label");
      User.detectFieldChanges(user0, user2, user2);
      User user3 = new User("qciGhn\"IY&nEa", "UNABLE_TO_GET_USER_IDENTIFIER");
      DerivedVariable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      rawVariable2.setValueLabels((ArrayList<ValueLabel>) null);
      arrayList1.add((Variable) derivedVariable1);
      derivedVariable1.addSourceVariables(arrayList1);
      derivedVariable1.cloneAttributes(rawVariable2);
      assertEquals("Unknown", rawVariable2.getAvailability());
      
      derivedVariable1.getAlternativeVariable();
      rawVariable3.getValueLabels();
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.8092658184687953
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("38ZDm.(h%*KObH7hHl", "Unknown");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("?wlo.m#)\">'s+<HT");
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      String string0 = rawVariable0.getCleaningStatus();
      assertNotNull(string0);
      assertEquals("Unknown", string0);
  }
}
