/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 10:42:21 GMT 2020
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4915265359893075
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">!IH?6EmkKA5/Lmk9i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1383972463477248
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<d<.!N8");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("<", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("d", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.relationalOperator();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      assertNotNull(token2);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.653532030916293
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.653532030916293
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.666332585328325
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z,KAHG");
      boolean boolean0 = xPathLexer0.isIdentifierChar('}');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LCX4TLDDDe|YQi@");
      String string0 = xPathLexer0.getXPath();
      assertEquals("LCX4TLDDDe|YQi@", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uiBu[wh");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("uiBu", token0.getTokenText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3955852454859713
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      int int0 = xPathLexer0.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uiBu[wh");
      Token token0 = xPathLexer0.dots();
      assertEquals("u", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setPreviousToken((Token) null);
      assertNull(xPathLexer0.getXPath());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2686052856349663
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("Dnj", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('+');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P I");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('Z');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      boolean boolean0 = xPathLexer0.isIdentifierChar('_');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('9');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(0);
      assertNull(xPathLexer0.getXPath());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(2307);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<d<.!N8");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      xPathLexer0.consume((-2764));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      xPathLexer0.consume((-70));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z,KAHG");
      xPathLexer0.consume((-1242));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2949));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      xPathLexer0.consume((-847));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-959));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-889));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g_/`= QyZIp.");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("_/", token1.getTokenText());
      assertEquals(12, token1.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.945934775756114
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gl@!+DOg^c<");
      Token token0 = xPathLexer0.literal();
      assertEquals("l@!+DO", token0.getTokenText());
      assertNotNull(token0);
      assertEquals(27, token0.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.1711943783081258
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".>}{Lrm@[m>qgw6x(Ht");
      Token token0 = xPathLexer0.number();
      assertEquals(31, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.not();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9345071288432268
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.2441986233916889
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".>}{Lrm@[m>qgw6x(Ht");
      Token token0 = xPathLexer0.identifier();
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("}", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("{", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Lrm", token4.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0538629889859417
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("5", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("QpVi3GDu", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("", token5.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.8822117420464162
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".>}{Lrm@[m>qgw6x(Ht");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("}", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("{Lrm@[m>qgw6x(Ht", token3.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9956820430839045
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[bq}_xsD3OO-\"by:O");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("q", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("}", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("_", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("xsD3OO-", token6.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0091430224983697
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uiBu[wh");
      Token token0 = xPathLexer0.dots();
      assertEquals("u", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("[", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("wh", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.2075133904466895
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Dnj", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("(A", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("v-eZ.", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.077585272653389
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(".>}{Lrm@[m>qgw6x(Ht");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.plus();
      assertEquals("}", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("{", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals("L", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("rm@[m>qgw6x(Ht", token4.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[bq}_xsD3OO-\"by:O");
      Token token0 = xPathLexer0.identifier();
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("[b", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("q", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3301465530287677
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Pa", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Gh", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("[", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals("Q", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.8725846978719726
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("nj", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.8822117420464163
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("n", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3560109809824055
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Pa", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.relationalOperator();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("Q", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("pV", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.8441138774034159
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Pa", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("h", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/f9=*2Dz");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("f9", token1.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.8106536471487246
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("a", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.7513862775354921
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      xPathLexer0.setXPath("_^ol@b#n`");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("^", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("@b", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("`", token5.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.4927983298381057
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.at();
      assertEquals("V", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(4, token2.getTokenType());
      assertEquals("]", token2.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1293714574582034
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("G", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("[", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("<", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("Q", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("p", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("Vi3GDu", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.1518405630865705
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[bq}_xsD3OO-\"by:O");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("[", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("_xsD3OO-", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.7711904826943476
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      xPathLexer0.setXPath("Z1HC");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Z1HC", token0.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X2_,B5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("X2_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WQ#Zmym=A|xwgcELq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("WQ", token0.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.7711904826943476
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z,KAHG");
      xPathLexer0.setXPath("UV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("UV", token0.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(OIbQ\"");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("OIbQ", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.7711904826943476
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KD}]S_ozdrVNV");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("KD", token0.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("J*\"7c/5w'jJi$b;Q]4");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.2347128471837907
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z,KAHG");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("z", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals(",", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("A", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("HG", token4.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.320539884407433
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("G", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("5", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("<", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("QpVi3GDu", token8.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CVuB*X");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("CVuB", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('B', char0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%B;.S$-");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4927983298381057
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gl@!+DOg^c<");
      Token token0 = xPathLexer0.equals();
      assertEquals("g", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(16, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.8414667562477093
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l>E$`7`||H!2LZ[YVq");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("l", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1105843940695626
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("G", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("h", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("5", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(7, token7.getTokenType());
      assertEquals("<", token7.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9+WmpWXvWg~-s");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("9", token0.getTokenText());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0455619622862329
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals("V4", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("A", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("ax", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("8", token4.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6J\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4649984209544125
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("=", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("[", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("5", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("<", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.7123333326585803
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("4", token1.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("11b?{JD#+*#R9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("11", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0v~Nq+B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("0", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.4404171327229754
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/f9=*2Dz");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("/", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.232866118522971
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Dnj", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("*", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("(", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("Av", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("-", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("eZ.", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.068733678215966
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("35^1%,US");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("35", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("^", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("%", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(",", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0463653355842024
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      Token token0 = xPathLexer0.identifier();
      assertEquals("Dnj", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0434807312318155
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J)z}go/hMm\"");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("z}go/hMm\"", token2.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1926674827769062
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Dnj*(Av-eZ.");
      Token token0 = xPathLexer0.identifier();
      assertEquals("Dnj", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Av-eZ.", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.8917904850273749
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      xPathLexer0.setXPath("_^ol@b#n`");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("_", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("l@", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("b", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("#n`", token5.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.1225008940596604
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("[bq}_xsD3OO-\"by:O");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("b", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("q", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("}", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("_", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("x", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.equals();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("3", token7.getTokenText());
      
      Token token8 = xPathLexer0.equals();
      assertEquals("O", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("O", token9.getTokenText());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals("-", token10.getTokenText());
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      assertEquals("", token11.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4897087038588192
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gl@!+DOg^c<");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      xPathLexer0.not();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.9305453275600951
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P I");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      xPathLexer0.consume(61);
      assertEquals("Pa=Gh[5<QpVi3GDu", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uiBu[wh");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("u", token0.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Pa", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.48213452706026033
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      Token token0 = xPathLexer0.equals();
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("a", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V4]mAax8+Gu2zpnHH");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("V4", token0.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pa=Gh[5<QpVi3GDu");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
  }
}
