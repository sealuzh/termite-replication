/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:59:11 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.FromBaseTable;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.value.ValueLong;
import org.hsqldb.jdbc.jdbcClob;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.005057863835706
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append('9');
      SQLUtil.addOptionalCondition("9:<'Z", stringBuilder0);
      Object object0 = new Object();
      SQLUtil.normalize("3(0p,8K:'+", true);
      DBSchema dBSchema0 = new DBSchema("H0*");
      TableContainer tableContainer0 = new TableContainer("9:<'Z");
      tableContainer0.getTable("0");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s8[}h0P/m");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7&a2g(l]=*FX{HUtZgA";
      stringArray0[1] = "7&a2g(l]=*FX{HUtZgA";
      stringArray0[2] = "x,'>Ty:J";
      stringArray0[3] = "9:<'Z";
      stringArray0[4] = "u-AlL@' 2DLRVX;>/K";
      stringArray0[5] = "3(0p,8K:'+";
      stringArray0[6] = "x,'>Ty:J";
      stringArray0[7] = "s8[}h0P/m";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "u-AlL@' 2DLRVX;>/K", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("H0*", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      dBSchema0.removeTable(dBTable0);
      dBSchema0.getTable("Wlb'EJzH:h#");
      SQLUtil.isDDL("s8[}h0P/m");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("0");
      assertNull(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3469054972678647
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "42X25");
      SQLUtil.mutatesStructure(".SgP<.O$e8^?{[}|i\"}");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("3e+q#n<|");
      assertNull(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("selecte)}ciflz^v");
      assertTrue(boolean1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.092883882347058
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer("create tableexec");
      tableContainer0.getTable("create tableexec");
      DBDataType dBDataType0 = DBDataType.getInstance((-2870), "BP8/ hnQgo;");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer.getInteger("M0B\u0002+wcuU;");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drp table", (DBTable) null, dBDataType0, integer0);
      Integer.divideUnsigned(411, (-77893317));
      SQLUtil.removeComments("M0B\u0002+wcuU;");
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("BP8/ HNQGO;(3)", string0);
      
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("BP8/ HNQGO;(3)");
      assertEquals(2, objectArray0.length);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "'1%";
      String string1 = SQLUtil.renderColumnListWithTableName("'1%", stringArray0);
      assertEquals("'1%.'1%", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("('1%)", string2);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3977154591503356
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "exec");
      StringBuilder stringBuilder0 = new StringBuilder("exec");
      stringBuilder0.append(1995.499235802);
      SQLUtil.addRequiredCondition((String) null, stringBuilder0);
      assertEquals("exec1995.499235802 and null", stringBuilder0.toString());
      
      SQLUtil.isProcedureCall("exec");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-38);
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte) (-38);
      byteArray0[4] = (byte) (-38);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(463, "hW");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("RowInputText", (DBTable) null, dBDataType0, integer1);
      String string0 = SQLUtil.normalize(" DEFAULT ", false);
      assertEquals("DEFAULT", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[4] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[5] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[6] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[7] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[8] = "U-ID)i#p,&2O)J$Tv";
      Object object0 = new Object();
      SQLUtil.normalize("s8[}h0P/m", false);
      DBSchema dBSchema0 = new DBSchema("alter sessionalter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_");
      TableContainer tableContainer0 = new TableContainer("x,'>Ty:J");
      tableContainer0.getTable("U-ID)i#p,&2O)J$Tv");
      // Undeclared exception!
      try { 
        dBSchema0.removeTable((DBTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBSchema", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "exec");
      StringBuilder stringBuilder0 = new StringBuilder("exec");
      stringBuilder0.append(0.0F);
      StringBuilder stringBuilder1 = stringBuilder0.append(2129.31015709);
      SQLUtil.addRequiredCondition("truncate", stringBuilder1);
      SQLUtil.isDML("exec");
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer((String) null, compositeDBObject0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "truncate";
      stringArray0[1] = null;
      String[] stringArray1 = new String[2];
      stringArray1[1] = null;
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[0];
      StringBuilder stringBuilder0 = new StringBuilder(125);
      stringBuilder0.append("L,IG#Lt\"wk|sAt.6^");
      stringBuilder0.chars();
      SQLUtil.addRequiredCondition("exec", stringBuilder0);
      assertEquals("L,IG#Lt\"wk|sAt.6^ and exec", stringBuilder0.toString());
      
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("XCL51.S");
      Locale locale0 = Locale.ROOT;
      mockPrintWriter0.printf(locale0, "drop materialized view", (Object[]) stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "UA,/", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT UA,/ UNIQUE ()", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "WN`.JigT%xT`?6nQL7";
      TableContainer tableContainer0 = new TableContainer("WN`.JigT%xT`?6nQL7");
      String string1 = "insert?yav]c;:/)d:6nk";
      TableContainer tableContainer1 = new TableContainer("WN`.JigT%xT`?6nQL7");
      tableContainer1.getTable("insert?yav]c;:/)d:6nk");
      String string2 = null;
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7465208925003344
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLUtil.isProcedureCall("6fl{}");
      SQLUtil.mutatesStructure("exec");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      delayQueue0.poll((-84L), timeUnit0);
      // Undeclared exception!
      try { 
        delayQueue0.add((Delayed) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PriorityQueue", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[0];
      StringBuilder stringBuilder0 = new StringBuilder(125);
      stringBuilder0.append("L,IG#Lt\"wk|sAt.6^");
      stringBuilder0.chars();
      SQLUtil.addRequiredCondition("exec", stringBuilder0);
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("XCL51.S");
      Locale locale0 = Locale.ROOT;
      mockPrintWriter0.printf(locale0, "drop materialized view", (Object[]) stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6379940485425777
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      TableContainer tableContainer0 = new TableContainer(".9VzJY-.wlU<");
      TableContainer tableContainer1 = new TableContainer(".9VzJY-.wlU<", tableContainer0);
      tableContainer0.getTable(".9VzJY-.wlU<");
      DBSequence dBSequence0 = new DBSequence("80~Hg\"Wr'Ox", "insert?yav]c;:/)d:6nk", (String) null);
      BigInteger bigInteger0 = ValueLong.MAX;
      dBSequence0.setMaxValue(bigInteger0);
      SQLUtil.typeAndName((DBObject) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "OntI+]+}<,7\"Pz";
      stringArray0[1] = "alter index";
      stringArray0[2] = "OntI+]+}<,7\"Pz";
      SQLUtil.renderColumnListWithTableName("alter index", stringArray0);
      SQLUtil.renderColumnNames(stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(414, "OntI+]+}<,7\"Pz");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("aA?]", (DBTable) null, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "OntI+]+}<,7\"Pz");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("OntI+]+}<,7\"PzONTI+]+}<,7\"PZ(2,2)", stringBuilder0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("update", compositeDBObject0);
      tableContainer0.getTable("M0B\u0002+wcuU;");
      Object object0 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("drop tablebm_*+8<+h:", defaultDBTable0, (-1938515924), "XSAX1.S");
      DBDataType dBDataType0 = DBDataType.getInstance((-1938515924), " as ");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("drop tablebm_*+8<+h:", (DBTable) null, dBDataType0, integer0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("alter table", defaultDBTable0, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "7&a2g(l]=*FX{HUtZgA";
      String string1 = "9:<'Z";
      stringBuilder0.reverse();
      SQLUtil.addOptionalCondition("0", stringBuilder0);
      String string2 = null;
      int int0 = 46;
      // Undeclared exception!
      try { 
        stringBuilder0.insert(46, "0!");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 46
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8973520027539594
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "}G#X;@^l7_";
      stringArray0[1] = "}G#X;@^l7_";
      stringArray0[2] = "}G#X;@^l7_";
      stringArray0[3] = "}G#X;@^l7_";
      stringArray0[4] = "}G#X;@^l7_";
      stringArray0[5] = "}G#X;@^l7_";
      stringArray0[6] = "}G#X;@^l7_";
      stringArray0[7] = "}G#X;@^l7_";
      String string0 = SQLUtil.innerJoin("}G#X;@^l7_", stringArray0, "drop index", "43Y50.U", stringArray0);
      assertEquals("drop index as 43Y50.U on }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_", string0);
      
      String[] stringArray1 = new String[8];
      stringArray1[0] = "drop index as 43Y50.U on }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_";
      stringArray1[1] = "43Y50.U";
      stringArray1[2] = "!";
      stringArray1[3] = "5Q3o5~#_Ppuu>K";
      stringArray1[4] = "!";
      stringArray1[5] = "43Y50.U";
      stringArray1[6] = "drop index as 43Y50.U on }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_";
      stringArray1[7] = "}G#X;@^l7_";
      SQLUtil.leftJoin("}G#X;@^l7_", stringArray0, "drop index as 43Y50.U on }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_", "!", stringArray1);
      Boolean boolean0 = SQLUtil.mutatesStructure("drop index as 43Y50.U on }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_ and }G#X;@^l7_.}G#X;@^l7_ = 43Y50.U.}G#X;@^l7_");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9526752070438513
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "42X25");
      SQLUtil.mutatesStructure(".SgP<.O$e8^?{[}|i\"}");
      SQLUtil.normalize("Bm_*+8<+h:", false);
      DBSchema dBSchema0 = new DBSchema(")lRAd&]clH");
      dBSchema0.getTable("Bm_ * + 8 < + h :");
      SQLUtil.isDDL("Bm_*+8<+h:");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("42X25");
      assertNull(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5370474233484974
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "exec");
      StringBuilder stringBuilder0 = new StringBuilder("exec");
      DBSequence dBSequence0 = new DBSequence("1DzU7vIu27", "create unique index42x25", "create unique index42x25");
      BigInteger bigInteger0 = ValueLong.MAX;
      bigInteger0.clearBit(1959);
      dBSequence0.setMaxValue(bigInteger0);
      SQLUtil.typeAndName(dBSequence0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "sequence 1DzU7vIu27";
      stringArray0[1] = "exec";
      stringArray0[2] = "1DzU7vIu27";
      stringArray0[3] = "\u0000";
      stringArray0[4] = "exec";
      stringArray0[5] = null;
      stringArray0[6] = "exec";
      stringArray0[7] = "VTI";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      FromBaseTable fromBaseTable0 = new FromBaseTable();
      fromBaseTable0.getTableDescriptor();
      DataDictionaryImpl dataDictionaryImpl1 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl1.getConstraintDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("8%K6Sm,>d3sfI*o_1");
      tableContainer0.getTable("8%K6Sm,>d3sfI*o_1");
      DBDataType dBDataType0 = DBDataType.getInstance(55, "8%K6Sm,>d3sfI*o_1");
      dBDataType0.isAlpha();
      DBDataType.getInstance((-188463515), "exec");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      System.setCurrentTimeMillis(0L);
      DBSequence dBSequence0 = new DBSequence((String) null, "\u0000", "S#9ZJ1l)+z}r3-=~");
      BigInteger bigInteger0 = ValueLong.MAX;
      dBSequence0.setMaxValue(bigInteger0);
      String string0 = SQLUtil.typeAndName(dBSequence0);
      assertNotNull(string0);
      assertEquals("sequence null", string0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "\u0000";
      stringArray0[1] = "S#9ZJ1l)+z}r3-=~";
      stringArray0[2] = "org.apache.derby.impl.store.raw.data.StoredPage";
      stringArray0[3] = "8%K6Sm,>d3sfI*o_1";
      stringArray0[4] = "1DzU7vIu27";
      stringArray0[5] = "renamedrop index";
      stringArray0[6] = "exec";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "exec";
      stringArray1[1] = "org.apache.derby.impl.store.raw.data.StoredPage";
      String string1 = SQLUtil.renderColumnListWithTableName("7oUJXA3=x+{", stringArray1);
      assertEquals("7oUJXA3=x+{.exec, 7oUJXA3=x+{.org.apache.derby.impl.store.raw.data.StoredPage", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray1);
      assertEquals("(exec, org.apache.derby.impl.store.raw.data.StoredPage)", string2);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[4] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[5] = "U-ID)i#p,&2O)J$Tv";
      Object object0 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<H(fSqq,$XQKG");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("k!1(r", defaultDBTable0, 3579, "#.mi");
      DBDataType dBDataType0 = DBDataType.getInstance((-1100), "deleteey#b98jrxhk'5lt]u%v");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("PYNNj.<e(#5Eih", defaultDBTable0, dBDataType0, integer1);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("!|\"", defaultDBTable1, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[8];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[6] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[7] = (DBColumn) defaultDBColumn0;
      String string0 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("k!1(r, !|\", k!1(r, PYNNj.<e(#5Eih, !|\", k!1(r, !|\", k!1(r", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      String string0 = "op_drop_database ";
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("U-ID)i#p,&2O)J$Tv", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1042672674808696
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<EB&+Pb");
      Boolean boolean0 = SQLUtil.mutatesStructure("SYSFUN");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.normalize("drkEU!; ", true);
      assertEquals("drkEU ! ;", string0);
      
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("drkEU ! ;", false, "I/", "SYSFUN");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      assertEquals("CHECK SYSFUN", string1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4414449033839847
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("\"H!4Hd##Gzwy(WF");
      tableContainer0.getTable("T$v-USW+");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Q", (DBTable) null, (-635), "cr>ate materialized iewyav]c;:/)d:6nk");
      DBDataType dBDataType0 = DBDataType.getInstance((-635), "T$v-USW+");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBDataType.getInstance((-635), "cr>ate materialized iewyav]c;:/)d:6nk");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("Q", (DBTable) null, dBDataType0, integer0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\"H!4Hd##Gzwy(WF";
      stringArray0[1] = "T$v-USW+";
      String string0 = SQLUtil.renderColumnListWithTableName("getZRL", stringArray0);
      assertEquals("getZRL.\"H!4Hd##Gzwy(WF, getZRL.T$v-USW+", string0);
      
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("cr>ate materialized iewyav]c;:/)d:6nk", (DBTable) null, (-635), "alter t");
      String string1 = SQLUtil.normalize("'", false);
      assertEquals("''", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(\"H!4Hd##Gzwy(WF, T$v-USW+)", string2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[0];
      StringBuilder stringBuilder0 = new StringBuilder(125);
      String string0 = "L,IG#Lt\"wk|sAt.6^";
      stringBuilder0.append("L,IG#Lt\"wk|sAt.6^");
      stringBuilder0.chars();
      SQLUtil.addRequiredCondition("exec", stringBuilder0);
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("XCL51.S");
      Locale locale0 = Locale.ROOT;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "drop materialized view", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      // Undeclared exception!
      try { 
        dataDictionaryImpl0.getConstraintDescriptors((TableDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.catalog.DataDictionaryImpl", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[4] = "U-ID)i#p,&2O)J$Tv";
      Object object0 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("g$lZtZdW", defaultDBTable0, 45, "exec");
      DBDataType dBDataType0 = DBDataType.getInstance((-1938515924), "exec");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("?", defaultDBTable0, dBDataType0, integer0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("U-ID)i#p,&2O)J$Tv", defaultDBTable1, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[9];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[4] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[7] = (DBColumn) defaultDBColumn2;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9669578607670715
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "1";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " trunk: ", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" trunk: ", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      String[] stringArray1 = new String[7];
      stringArray1[0] = "4]+9zP,^Q/.{ tc@";
      stringArray1[1] = "n#";
      stringArray1[2] = "1";
      stringArray1[3] = "exec";
      stringArray1[4] = "1";
      stringArray1[5] = "drop index";
      stringArray1[6] = "4]+9zP,^Q/.{ tc@";
      String string0 = SQLUtil.renderColumnListWithTableName("4]+9zP,^Q/.{ tc@", stringArray1);
      assertEquals("4]+9zP,^Q/.{ tc@.4]+9zP,^Q/.{ tc@, 4]+9zP,^Q/.{ tc@.n#, 4]+9zP,^Q/.{ tc@.1, 4]+9zP,^Q/.{ tc@.exec, 4]+9zP,^Q/.{ tc@.1, 4]+9zP,^Q/.{ tc@.drop index, 4]+9zP,^Q/.{ tc@.4]+9zP,^Q/.{ tc@", string0);
      
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Bx)VPK[]kdYz5b~#k", dBTable0, (-3053), "`%");
      String string1 = SQLUtil.normalize("4]+9zP,^Q/.{ tc@.4]+9zP,^Q/.{ tc@, 4]+9zP,^Q/.{ tc@.n#, 4]+9zP,^Q/.{ tc@.1, 4]+9zP,^Q/.{ tc@.exec, 4]+9zP,^Q/.{ tc@.1, 4]+9zP,^Q/.{ tc@.drop index, 4]+9zP,^Q/.{ tc@.4]+9zP,^Q/.{ tc@", false);
      assertEquals("4 ] + 9zP,  ^ Q /.{ tc @.4 ] + 9zP,  ^ Q /.{ tc @, 4 ] + 9zP,  ^ Q /.{ tc @.n #, 4 ] + 9zP,  ^ Q /.{ tc @.1, 4 ] + 9zP,  ^ Q /.{ tc @.exec, 4 ] + 9zP,  ^ Q /.{ tc @.1, 4 ] + 9zP,  ^ Q /.{ tc @.drop index, 4 ] + 9zP,  ^ Q /.{ tc @.4 ] + 9zP,  ^ Q /.{ tc @", string1);
      
      String string2 = SQLUtil.normalize("create table", true);
      assertEquals("create table", string2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable((String) null, false);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      assertEquals(368, jdbcDataSource0.getTraceId());
      assertEquals(268, jdbcDataSource0.getTraceId());
      
      String[] stringArray0 = new String[8];
      stringArray0[1] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-38);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(463, "U-ID)i#p,&2O)J$Tv");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("3RBUpV", (DBTable) null, dBDataType0, integer0);
      String string0 = SQLUtil.normalize("U-ID)i#p,&2O)J$Tv", true);
      assertEquals("U - ID) i # p, & 2O) J $ Tv", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      SQLUtil.isQuery("e)}CIFlz^V");
      SQLUtil.mutatesDataOrStructure("alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_");
      String[] stringArray0 = new String[8];
      stringArray0[1] = "avaS";
      stringArray0[2] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray0[3] = "avaS";
      stringArray0[4] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray0[5] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray0[7] = "e)}CIFlz^V";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray1[1] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("!y*Tu^@X3Av|us{buG");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, 448, ", t");
      assertNull(defaultDBColumn0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[0];
      StringBuilder stringBuilder0 = new StringBuilder(125);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("exec", stringBuilder0);
      stringBuilder1.append(173L);
      stringBuilder1.chars();
      int int0 = 2840;
      Character character0 = Character.valueOf('i');
      SQLUtil.renderValue(character0);
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      String string0 = "(";
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("(", compositeDBObject0);
      tableContainer0.getTable("# Zy1 ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("@g1J-XmGvT&", (DBTable) null, 2840, "@g1J-XmGvT&");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DBDataType dBDataType0 = DBDataType.getInstance(2840, "exec");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("truncate", (DBTable) null, dBDataType0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      String string1 = "Do5IdCBV~A\"B{a";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Do5IdCBV~A\"B{a");
      String string2 = null;
      // Undeclared exception!
      try { 
        defaultDBTable0.getColumn((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'null' not found in table 'Do5IdCBV~A\"B{a'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[4] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[5] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[6] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[7] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[8] = "U-ID)i#p,&2O)J$Tv";
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[3] = (Object) "INTO";
      objectArray0[4] = (Object) "U-ID)i#p,&2O)J$Tv";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Character character0 = Character.valueOf('I');
      String string0 = SQLUtil.substituteMarkers("alter table", ".", character0);
      assertEquals("alter table", string0);
      
      String string1 = SQLUtil.renderColumnListWithTableName("oEn*76U9+I:", stringArray0);
      assertEquals("oEn*76U9+I:.U-ID)i#p,&2O)J$Tv, oEn*76U9+I:.null, oEn*76U9+I:.U-ID)i#p,&2O)J$Tv, oEn*76U9+I:.U-ID)i#p,&2O)J$Tv, oEn*76U9+I:.U-ID)i#p,&2O)J$Tv, oEn*76U9+I:.U-ID)i#p,&2O)J$Tv, oEn*76U9+I:.U-ID)i#p,&2O)J$Tv, oEn*76U9+I:.U-ID)i#p,&2O)J$Tv, oEn*76U9+I:.U-ID)i#p,&2O)J$Tv", string1);
      
      String string2 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(U-ID)i#p,&2O)J$Tv, , U-ID)i#p,&2O)J$Tv, U-ID)i#p,&2O)J$Tv, U-ID)i#p,&2O)J$Tv, U-ID)i#p,&2O)J$Tv, U-ID)i#p,&2O)J$Tv, U-ID)i#p,&2O)J$Tv, U-ID)i#p,&2O)J$Tv)", string2);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8877511359125316
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLUtil.normalize("truncatedrop index?yav]c;:/)d:6nk", true);
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("drop indextruncatedrop index?yav]c;:/)d:6nk", compositeDBObject0);
      tableContainer0.setDoc("truncatedrop index ? yav ] c ; : /) d : 6nk");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("truncatedrop index?yav]c;:/)d:6nk", (DBSchema) null);
      TableContainer tableContainer1 = new TableContainer("drop index");
      tableContainer1.getTable("y");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("Ar*zJ;K6%OBRo\"");
      // Undeclared exception!
      SQLUtil.mutatesStructure("/*");
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDDL("alter tablesyscs_unfreeze_database");
      CompositeDBObject<DBCheckConstraint> compositeDBObject0 = (CompositeDBObject<DBCheckConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      DBDataType.getInstance((-2870), "left");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")L]{";
      stringArray0[1] = "update";
      stringArray0[3] = "M0B\u0002+wcuU;";
      stringArray0[4] = "XSRSA.S";
      stringArray0[5] = "update";
      stringArray0[6] = "XSAX1.S";
      stringArray0[7] = "left";
      stringArray0[8] = "alter tablesyscs_unfreeze_database";
      boolean boolean1 = SQLUtil.isDDL("M0B\u0002+wcuU;");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9675699367373816
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "W6|0";
      stringArray0[1] = "43X46.U";
      stringArray0[2] = null;
      stringArray0[3] = "W6|0";
      stringArray0[4] = "43X46.U";
      String string0 = SQLUtil.join("43X46.U", "alter materialized viewu-id)i#p,&2o)j$tv", stringArray0, (String) null, "org.apache.derby.impl.sql.execute.ColumnInfo", stringArray0);
      assertEquals("43X46.U join null as org.apache.derby.impl.sql.execute.ColumnInfo on alter materialized viewu-id)i#p,&2o)j$tv.W6|0 = org.apache.derby.impl.sql.execute.ColumnInfo.W6|0 and alter materialized viewu-id)i#p,&2o)j$tv.43X46.U = org.apache.derby.impl.sql.execute.ColumnInfo.43X46.U and alter materialized viewu-id)i#p,&2o)j$tv.null = org.apache.derby.impl.sql.execute.ColumnInfo.null and alter materialized viewu-id)i#p,&2o)j$tv.W6|0 = org.apache.derby.impl.sql.execute.ColumnInfo.W6|0 and alter materialized viewu-id)i#p,&2o)j$tv.43X46.U = org.apache.derby.impl.sql.execute.ColumnInfo.43X46.U", string0);
      
      TableContainer tableContainer0 = new TableContainer("un8h:&a");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("43X46.U", (DBSchema) null);
      String string1 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM 43X46.U WHERE W6|0 = 'W6|0' AND 43X46.U = '43X46.U' AND null = null AND W6|0 = 'W6|0' AND 43X46.U = '43X46.U'", string1);
      
      String string2 = SQLUtil.renderColumnListWithTableName("alter ", stringArray0);
      assertEquals("alter .W6|0, alter .43X46.U, alter .null, alter .W6|0, alter .43X46.U", string2);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " trunk: ", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" trunk: ", true, dBUniqueConstraint0);
      DBDataType dBDataType0 = DBDataType.getInstance((-47), "alter table?yav]c;:/)d:6nk");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Rtyg/3i?0| h`,4FZDm", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setVersionColumn(true);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder("Pvmp36.PbS");
      NameSpec nameSpec1 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec1);
      // Undeclared exception!
      try { 
        stringBuilder1.append((CharSequence) "alter table?yav]c;:/)d:6nk", (-47), (-3075));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -47, end -3075, s.length() 26
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.076104579100767
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      String[] stringArray0 = new String[8];
      DBDataType dBDataType0 = DBDataType.getInstance((-1142574433), "left");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter table?yav]c;:/)d:6nk");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create unique index", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("left", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter table?yav]c;:/)d:6nk", dBTable0, dBDataType0);
      defaultDBColumn0.setVersionColumn(true);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      NameSpec nameSpec1 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec1);
      StringBuilder stringBuilder0 = new StringBuilder("alter table?yav]c;:/)d:6nk");
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.append((CharSequence) "left", (-47), (-47));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -47, end -47, s.length() 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "alter index*/";
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("alter index*/", compositeDBObject0);
      String string1 = "Q1~%0kqD[PM)=6D/";
      tableContainer0.getTable("Q1~%0kqD[PM)=6D/");
      String string2 = "=[y2e1T*.q_)2rK}qN;";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter index*/");
      defaultDBTable0.getIndex("=[y2e1T*.q_)2rK}qN;");
      String string3 = "7o0s";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "alter index*/";
      CompositeDBObject<DBUniqueConstraint> compositeDBObject0 = (CompositeDBObject<DBUniqueConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("alter index*/", compositeDBObject0);
      String string1 = "Q1~%0kqD[PM)=6D/";
      tableContainer0.getTable("Q1~%0kqD[PM)=6D/");
      String string2 = "=[y2e1T*.q_)2rK}{N;";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter index*/");
      String[] stringArray0 = null;
      defaultDBTable0.getIndex("=[y2e1T*.q_)2rK}{N;");
      String string3 = "{^M/oUL#3^AANn";
      String string4 = "7o0s'";
      // Undeclared exception!
      try { 
        SQLUtil.join("W6|0", "7o0s'", (String[]) null, "=[y2e1T*.q_)2rK}{N;", "alter index*/", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SQLUtil.isDDL(" ADD ");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBDataType.getInstance(2631, "T$v-USW+");
      StringBuilder stringBuilder0 = new StringBuilder("QZGBk]N1Rh~ ");
      StringBuilder stringBuilder1 = new StringBuilder(795);
      SQLUtil.addRequiredCondition("QZGBk]N1Rh~ ", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(2318, "QZGBk]N1Rh~ ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2318
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7056594516388692
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("truncatedrop index?yav]c;:/)d:6nk");
      SQLUtil.mutatesStructure("truncatedrop index?yav]c;:/)d:6nk");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "%*J]\"X{pp<[`z";
      stringArray0[2] = "alter session";
      stringArray0[4] = "m?f3/=ecj[";
      SQLUtil.innerJoin("alter session", stringArray0, ".{#&leKVdCi~\";BJ", " NOT NULL", stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "alter session");
      Object object0 = new Object();
      Object object1 = new Object();
      SQLUtil.renderValue(stringBuilder0);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<DBColumn> linkedList0 = new LinkedList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.371919820900468
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("\"H!4Hd##Gzwy(WF");
      tableContainer0.getTable("T$v-USW+");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Q", (DBTable) null, (-635), "cr>ate materialized iewyav]c;:/)d:6nk");
      DBDataType dBDataType0 = DBDataType.getInstance((-635), "T$v-USW+");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBDataType.getInstance((-635), "cr>ate materialized iewyav]c;:/)d:6nk");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("Q", (DBTable) null, dBDataType0, integer0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\"H!4Hd##Gzwy(WF";
      stringArray0[1] = "T$v-USW+";
      String string0 = SQLUtil.renderColumnListWithTableName("getURL", stringArray0);
      assertEquals("getURL.\"H!4Hd##Gzwy(WF, getURL.T$v-USW+", string0);
      
      String string1 = SQLUtil.join((String) null, "getURL.\"H!4Hd##Gzwy(WF, getURL.T$v-USW+", stringArray0, "8,6E@iP:xs:%>}(", (String) null, stringArray0);
      assertEquals("8,6E@iP:xs:%>}( as null on getURL.\"H!4Hd##Gzwy(WF, getURL.T$v-USW+.\"H!4Hd##Gzwy(WF = null.\"H!4Hd##Gzwy(WF and getURL.\"H!4Hd##Gzwy(WF, getURL.T$v-USW+.T$v-USW+ = null.T$v-USW+", string1);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1528885421290225
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      SQLUtil.isQuery("e)}CIFlz^V");
      SQLUtil.mutatesDataOrStructure("alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_");
      String[] stringArray0 = new String[11];
      stringArray0[0] = "avaS";
      stringArray0[1] = "avaS";
      stringArray0[2] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray0[4] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray0[5] = "avaS";
      stringArray0[6] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray0[7] = "e)}CIFlz^V";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray1[1] = "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_";
      stringArray1[2] = "rH/p+53vVc";
      stringArray1[3] = "avaS";
      stringArray1[4] = "avaS";
      stringArray1[5] = "e)}CIFlz^V";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("avaS", stringArray0, "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_", "drop materialized view", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.innerJoin("alter indexalter tablesyscs_unfreeze_database", stringArray0, "alter indexalter tablesyscs_unfreeze_database", "create tablealter tablesyscs_unfreeze_database", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create tablealter tablesyscs_unfreeze_database");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("alter indexalter tablesyscs_unfreeze_database", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      File file0 = MockFile.createTempFile("select", "create unique indexalter tablesyscs_unfreeze_database");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0);
      outputStreamWriter0.append('I');
      BufferedWriter bufferedWriter0 = new BufferedWriter(outputStreamWriter0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedWriter0, true);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      assertEquals(65L, file0.length());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "1";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " trunk: ", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" trunk: ", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-3075), "drop index");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("1", dBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.524999402259769
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      SQLUtil.isQuery("e)}CIFlz^V");
      SQLUtil.mutatesDataOrStructure("alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_");
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "rH/p+53vVc";
      stringArray0[1] = "e)}CIFlz^V";
      stringArray0[2] = "rN";
      stringArray0[3] = "rH/p+53vVc";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("rN", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance(90, " DEFAULT ");
      int int0 = (-4050);
      Integer integer0 = new Integer((-4050));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("v4Z$RV:[^UjB$BiH9", defaultDBTable0, dBDataType0, integer0);
      int int1 = 168;
      DBDataType dBDataType1 = DBDataType.getInstance(168, "alter materialized viewdrop index as 43y50.u on }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_ and }g#x;@^l7_.}g#x;@^l7_ = 43y50.u.}g#x;@^l7_");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("<=DFO hdl&]9IHgy", dBTable0, dBDataType1, integer0, integer0);
      arrayList0.add((DBColumn) defaultDBColumn1);
      SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
      int int2 = 931;
      StringBuilder stringBuilder0 = new StringBuilder(931);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition("e)}CIFlz^V", stringBuilder1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      charArray0[1] = 'g';
      charArray0[2] = 'u';
      charArray0[3] = 'K';
      int int3 = 1795;
      // Undeclared exception!
      try { 
        stringBuilder2.insert((-4050), charArray0, 1795, 1795);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4050
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0499251260871434
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " trunk: ", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" trunk: ", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBDataType dBDataType0 = DBDataType.getInstance((-47), "alter table?yav]c;:/)d:6nk");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Rtyg/3i?0| h`,4FZDm", dBTable0, dBDataType0);
      defaultDBColumn0.setVersionColumn(true);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder("Pvmp36.PbS");
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec1);
      // Undeclared exception!
      try { 
        stringBuilder1.append((CharSequence) "alter table?yav]c;:/)d:6nk", (-47), (-3075));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -47, end -3075, s.length() 26
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SQLUtil.isDDL("sk}`9fd8Y@J LLK`");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBCatalog dBCatalog0 = new DBCatalog("sk}`9fd8Y@J LLK`");
      String string0 = "";
      dBCatalog0.getTable("", false);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "update", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.159098580890948
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[23];
      stringArray0[0] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[4] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[5] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[6] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[7] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[8] = "U-ID)i#p,&2O)J$Tv";
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[3] = (Object) "-eft";
      objectArray0[4] = (Object) "U-ID)i#p,&2O)J$Tv";
      objectArray0[5] = (Object) "U-ID)i#p,&2O)J$Tv";
      objectArray0[6] = (Object) "U-ID)i#p,&2O)J$Tv";
      objectArray0[7] = (Object) "U-ID)i#p,&2O)J$Tv";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("\"H!4Hd##Gzwy(WF");
      tableContainer0.getTable("T$v-USW+");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Q", (DBTable) null, (-635), "create materialized view?yav]c;:/)d:6nk");
      DBDataType dBDataType0 = DBDataType.getInstance((-635), "T$v-USW+");
      Integer integer0 = RawTransaction.ABORT;
      DBDataType.getInstance((-635), "create materialized view?yav]c;:/)d:6nk");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("Q", (DBTable) null, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn1);
      assertEquals("Q T$V-USW+(1) NULL", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "}G#X;@^l7_";
      stringArray0[1] = "}G#X;@^l7_";
      stringArray0[2] = "}G#X;@^l7_";
      stringArray0[3] = "}G#X;@^l7_";
      stringArray0[4] = "}G#X;@^l7_";
      TableContainer tableContainer0 = new TableContainer("s");
      tableContainer0.getSchema();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tableContainer0.getTable("}G#X;@^l7_");
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("vC{tNc#:|-*a5VDt", (DBTable) null, (-330397673), "?(JAUd1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: ?(JAUd1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2756304369699905
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("sk}`9fd8y@j", (DBSchema) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "truncate";
      stringArray0[1] = "sk}`9fd8y@j";
      stringArray0[2] = "truncate";
      stringArray0[3] = "sk}`9fd8y@j";
      stringArray0[4] = "truncate";
      stringArray0[5] = "s";
      stringArray0[6] = "sk}`9fd8y@j";
      stringArray0[7] = "sk}`9fd8y@j";
      stringArray0[8] = "s";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "s", true, stringArray0);
      dBPrimaryKeyConstraint0.setOwner(dBCatalog0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT s PRIMARY KEY (truncate, sk}`9fd8y@j, truncate, sk}`9fd8y@j, truncate, s, sk}`9fd8y@j, sk}`9fd8y@j, s)", string0);
      
      Object object0 = new Object();
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("truncate = 'truncate' AND sk}`9fd8y@j = 'sk}`9fd8y@j' AND truncate = 'truncate' AND sk}`9fd8y@j = 'sk}`9fd8y@j' AND truncate = 'truncate' AND s = 's' AND sk}`9fd8y@j = 'sk}`9fd8y@j' AND sk}`9fd8y@j = 'sk}`9fd8y@j' AND s = 's'", string1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "}G#X;@^l7_";
      stringArray0[1] = "}G#X;@^l7_";
      stringArray0[2] = "}G#X;@^l7_";
      stringArray0[3] = "}G#X;@^l7_";
      stringArray0[4] = "}G#X;@^l7_";
      TableContainer tableContainer0 = new TableContainer("s");
      tableContainer0.getSchema();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tableContainer0.getTable("}G#X;@^l7_");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("s;/#W$,v.$(C[#", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.append(0.0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(47, "org.apache.derby.iapi.types.ConcatableDataValue");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 47
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = new Boolean("sk}`9fd8Y@J LLK`");
      TableContainer tableContainer0 = new TableContainer("alter materialized view?yav]c;:/)d:6nk");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBDataType dBDataType0 = DBDataType.getInstance(55, "sk}`9fd8Y@J LLK`");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("=Ku6=banzI-rC", defaultDBTable0, dBDataType0, integer1, integer1);
      String string0 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("SK}`9FD8Y@J LLK`(2,2)", string0);
      
      String string1 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals("null.=Ku6=banzI-rC", string1);
      
      String string2 = SQLUtil.removeComments("SK}`9FD8Y@J LLK`(2,2)");
      assertTrue(string2.equals((Object)string0));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.327235215055768
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("truncatedrop index?yav]c;:/)d:6nk");
      SQLUtil.mutatesStructure("truncatedrop index?yav]c;:/)d:6nk");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "m?f3/=ecj[";
      stringArray0[2] = "m?f3/=ecj[";
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "WG`AGt]$_'UmD%WNBO", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("WG`AGt]$_'UmD%WNBO", true, dBUniqueConstraint0);
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("iK~}A&%m)iDxf_`3*", (String[]) null, "LY5$?FU*dmFowW", "POwhtXA\"=*cJ5u*&", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(125);
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("L,IG#Lt\"wk|sAt.6^", compositeDBObject0);
      tableContainer0.getTable("L,IG#Lt\"wk|sAt.6^");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("$", (DBTable) null, (-924), "alter materialized view");
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable("U-ID)i#p,&2O)J$Tv", false);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("U-ID)i#p,&2O)J$Tv");
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable((DBTable) null, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("8%K6Sm,>d3sfI*o_1");
      tableContainer0.getTable("8%K6Sm,>d3sfI*o_1");
      DBDataType.getInstance(55, "8%K6Sm,>d3sfI*o_1");
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "8%K6Sm,>d3sfI*o_1";
      stringArray0[1] = "XSDG8.D";
      stringArray0[2] = "8%K6Sm,>d3sfI*o_1";
      stringArray0[4] = "XSDG8.D";
      stringArray0[5] = "rpvw-4YKO8L[^,+";
      String string0 = SQLUtil.renderValue("rpvw-4YKO8L[^,+");
      assertEquals("'rpvw-4YKO8L[^,+'", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "s,jn[~+>0>W.&VYm=";
      stringArray0[2] = "";
      stringArray0[3] = "eL{i8WQGeY8%|wpLP";
      stringArray0[4] = "";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" or ");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string0 = "create unique indexdrop index";
      StringBuilder stringBuilder0 = new StringBuilder("create unique indexdrop index");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "1";
      defaultDBTable0.toString();
      DBDataType.getInstance((-3075), "drop index");
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      StringBuilder stringBuilder0 = new StringBuilder();
      String[] stringArray0 = new String[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = "0";
      stringArray0[1] = "0";
      stringArray0[2] = "0";
      stringArray0[3] = "0";
      stringArray0[4] = "0";
      stringArray0[5] = "0";
      stringArray0[6] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "0", true, stringArray0);
      stringBuilder0.append((Object) dBPrimaryKeyConstraint0);
      SQLUtil.addOptionalCondition("7&a2g(l]=*FX{HUtZgA", stringBuilder0);
      StringBuilder stringBuilder1 = new StringBuilder("0");
      String string0 = "j=Y2\\G$:~p4Jm+4i";
      String string1 = null;
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-589593284), (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -589593284
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("truncatedrop index?yav]c;:/)d:6nk");
      String[] stringArray0 = new String[0];
      defaultDBTable0.getUniqueConstraint(stringArray0);
      TableContainer tableContainer0 = new TableContainer("fo8{J{2cSX\"0s/", defaultDBTable0);
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("3ej&M[i}`h8@IYc\"", (DBSchema) null);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "VK6`.Y<a~");
      SQLUtil.renderColumnListWithTableName("truncatedrop index?yav]c;:/)d:6nk", stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        defaultDBTable1.getColumn("k");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'k' not found in table '3ej&M[i}`h8@IYc\"'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable((String) null, false);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      //  // Unstable assertion: assertEquals(194, jdbcDataSource0.getTraceId());
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("qC$RI>V'Vu!", defaultDBTable0, 761, "truncaedro index?yav]c");
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      //  // Unstable assertion: assertEquals("qC$RI>V'Vu! TRUNCAEDRO INDEX?YAV]C NULL", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil sQLUtil0 = new SQLUtil();
      Object object0 = new Object();
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBDataType.getInstance(39, "n^\"K8J*%e`");
      Integer integer0 = RawTransaction.ABORT;
      jdbcClob jdbcClob0 = null;
      try {
        jdbcClob0 = new jdbcClob((String) null);
        fail("Expecting exception: SQLException");
      
      } catch(Throwable e) {
         //
         // java.lang.String@0000000003
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = " trunk: ";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, " trunk: ", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(" trunk: ", true, dBUniqueConstraint0);
      String string1 = "Rtyg/3i?0| h`,4FZDm";
      int int0 = (-47);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-80);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte) (-80), "0}]=]0\"`b^");
      String string2 = "exec";
      Integer integer0 = Integer.getInteger("exec", (-3075));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter table?yav]c;:/)d:6nk", defaultDBTable0, dBDataType0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("0}]=]0\"`b^", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.6443289980983895
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "42X25");
      Boolean boolean0 = SQLUtil.mutatesStructure(".SgP<.O$e8^?{[}|i\"}");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.normalize("Bm_*+8<+h:", false);
      assertEquals("Bm_ * + 8 < + h :", string0);
      
      DBSchema dBSchema0 = new DBSchema(")lRAd&]clH");
      dBSchema0.toString();
      dBSchema0.equals((Object) null);
      dBSchema0.getTables(true);
      boolean boolean1 = SQLUtil.isQuery("sslfactoryarg");
      assertFalse(boolean1);
      
      String string1 = SQLUtil.ownerDotComponent(dBSchema0);
      assertEquals(")lRAd&]clH", string1);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.6270866719173012
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCatalog0.getTable((String) null, false);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource1.getLogWriter();
      dBCatalog0.equals(jdbcDataSource0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, (DBTable) null, 0, "AX-nH]~#t");
      SQLUtil.normalize("drop materialized view", true);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      String string0 = "KHU:C3_Xm>gq^2l";
      stringArray0[0] = "KHU:C3_Xm>gq^2l";
      String string1 = "deJqy*f-q'z]\\8,";
      stringArray0[1] = "deJqy*f-q'z]8,";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("exec", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SQLUtil.isProcedureCall("sk}`9fd8Y@J LLK`");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Object[] objectArray0 = new Object[8];
      objectArray0[1] = (Object) defaultDBTable0;
      objectArray0[3] = (Object) defaultDBTable0;
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer((String) null);
      TableContainer tableContainer1 = new TableContainer("insert?yav]c;:/)d:6nk", tableContainer0);
      tableContainer1.getTable("insert?yav]c;:/)d:6nk");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("qC$RI>V'Vu!", (DBTable) null, 761, "truncatedrop index?yav]c");
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("derby.subSubProtocol.", (String[]) null, "alter table*/", "BLOB", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[2] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[3] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[4] = "U-ID)i#p,&2O)J$Tv";
      stringArray0[5] = "U-ID)i#p,&2O)J$Tv";
      Object object0 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("<H(fSqq,$XQKG");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("k!1(r", defaultDBTable0, 3579, "#.mi");
      DBDataType dBDataType0 = DBDataType.getInstance((-1100), "deleteey#b98jrxhk'5lt]u%v");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("PYNNj.<e(#5Eih", defaultDBTable0, dBDataType0, integer1);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("!|\"", defaultDBTable1, dBDataType0);
      DBColumn[] dBColumnArray0 = new DBColumn[8];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn2;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn1;
      String string0 = SQLUtil.substituteMarkers("U-ID)i#p,&2O)J$Tv", "\"~Z:", "U-ID)i#p,&2O)J$Tv");
      assertEquals("U-ID)i#p,&2O)J$Tv", string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2151264569629228
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "WG`AGt]$_'UmD%WNBO", false, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("WG`AGt]$_'UmD%WNBO", true, dBUniqueConstraint0);
      DBDataType dBDataType0 = DBDataType.getInstance((-47), "alter table?yav]c;:/)d:6nk");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Rtyg/3i?0| h`,4FZDm", defaultDBTable0, dBDataType0);
      defaultDBColumn0.setVersionColumn(true);
      defaultDBColumn0.getForeignKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      String string0 = SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec1);
      assertEquals("CONSTRAINT WG`AGt]$_'UmD%WNBO UNIQUE ()", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("_fT),u?~ENp2nLoz3");
      assertEquals(1, objectArray0.length);
  }
}
