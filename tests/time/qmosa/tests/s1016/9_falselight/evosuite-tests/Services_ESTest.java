/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:05:40 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.65746215038855
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.works = false;
      String string0 = services_HTTP_Result0.toString();
      Services.testHTTPS("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", (-2319));
      services_HTTP_Result0.reset();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://Services$SIMPLE_Result:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****");
      Services.testPOP3("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 0);
      Services.testHTTPS("**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-2319) **", 0);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("Services$SIMPLE_Result", 0);
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("", (-1));
      String string1 = services_HTTP_Result1.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : true\n** Temps : 0 ms\n** Poid de la page : 136 octets\n** Code de page : -1\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string1);
      
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 0);
      services_HTTP_Result2.reset();
      String string2 = services_SIMPLE_Result0.Error;
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result3 = new Services.HTTP_Result();
      services_SIMPLE_Result0.reset();
      Services services0 = new Services();
      Services.testPOP3("c2cT}&dE7", (-3767));
      Services.HTTP_Result services_HTTP_Result4 = new Services.HTTP_Result();
      String string3 = services_HTTP_Result2.toString();
      assertTrue(string3.equals((Object)string0));
      
      Services.HTTP_Result services_HTTP_Result5 = new Services.HTTP_Result();
      assertFalse(services_HTTP_Result5.works);
      
      Services.testHTTPS("GVKy-O};c`pN<", 0);
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-2319) **", (-42));
      assertFalse(services_SIMPLE_Result1.works);
      assertEquals(0L, services_SIMPLE_Result1.time);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "6g");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 0);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(3, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      System.setCurrentTimeMillis(1296L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1405);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testPOP3("pT2#Tw1g;43n5y`( ", 1405);
      System.setCurrentTimeMillis((-1138L));
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(1296L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(271L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7969671154659554
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.works = false;
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("", 0);
      services_HTTP_Result0.reset();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://Services$SIMPLE_Result:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 0);
      services_SIMPLE_Result0.works = false;
      services_SIMPLE_Result0.reset();
      Services.testHTTP("s1Sj}uf)zf5I:H/S", 0);
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_HTTP_Result1.works = false;
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      Services.SIMPLE_Result services_SIMPLE_Result3 = new Services.SIMPLE_Result();
      Services.testHTTPS("**Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **", 0);
      Services.HTTP_Result services_HTTP_Result2 = Services.testHTTPS("Services$SIMPLE_Result", 0);
      Services.HTTP_Result services_HTTP_Result3 = Services.testHTTPS("**Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: [s1Sj}uf)zf5I:H/S]) **", 0);
      services_HTTP_Result2.toString();
      assertEquals((-1), services_HTTP_Result2.code);
      
      Services.testPOP3("%135B7])1=QMl\"'X>z1", 0);
      services_HTTP_Result3.reset();
      services_HTTP_Result1.toString();
      services_HTTP_Result1.toString();
      Services.HTTP_Result services_HTTP_Result4 = new Services.HTTP_Result();
      services_HTTP_Result0.time = (-3059L);
      services_HTTP_Result2.code = 0;
      Services.testPOP3("", 1690);
      services_SIMPLE_Result3.reset();
      Services services0 = new Services();
      Services.testSMTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: ) **.\n****", (-1));
      Services.testHTTP("", 0);
      String string0 = services_HTTP_Result2.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : true\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testSMTP("", 1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-37);
      byteArray0[6] = (byte)21;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)59;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("* Err#er g\u00E9n\u00E9r\u00E9e : ", (-27));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.time = 0L;
      services_SIMPLE_Result0.works = true;
      services_SIMPLE_Result0.Error = "+OK";
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.time = 412L;
      services_SIMPLE_Result0.time = 412L;
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      
      Services.testHTTP((String) null, (-347));
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 0);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("SqMFQCM:Bfy", 1);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }
}
