/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:10:35 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = Optimization.m_Debug;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 49;
      doubleArray0[2] = (double) (-1826);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      doubleArray0[4] = 2328.41267143;
      doubleArray0[5] = (double) (-1826);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      doubleArray0[6] = (double) 49;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(37, 37, 3.0);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
      assertArrayEquals(new double[] {16.333333333333332, (-16.333333333333332), (-608.6666666666666), 608.6666666666666, 776.1375571433333, (-1384.80422381), 625.0, (-16.333333333333332)}, doubleArray1, 0.01);
      
      Random.setNextRandom(4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = true;
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {16.333333333333332, 0.0, (-625.0), 608.6666666666666, 0.0, (-608.6666666666666), 625.0, (-16.333333333333332)}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.233582383181043
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      optimization_DynamicIntArray0.getRevision();
      Optimization.DynamicIntArray optimization_DynamicIntArray1 = (Optimization.DynamicIntArray)optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      FileSystemHandling.shouldAllThrowIOExceptions();
      optimization_DynamicIntArray0.addElement((-1890));
      optimization_DynamicIntArray0.removeElementAt(1);
      optimization_DynamicIntArray0.addElement((-3882));
      optimization_DynamicIntArray0.addElement(13);
      optimization_DynamicIntArray0.addElement(21);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Random.setNextRandom(3173);
      optimization_DynamicIntArray0.addElement((-4676));
      optimization_DynamicIntArray0.addElement(1051);
      optimization_DynamicIntArray1.addElement(46);
      assertEquals(3, optimization_DynamicIntArray0.size());
      assertEquals(2, optimization_DynamicIntArray1.size());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2552685166968862
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(49);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      double[][] doubleArray0 = new double[2][5];
      optimization_DynamicIntArray0.removeAllElements();
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, (-1819), 7);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("8076");
      mockPrintWriter0.println((double) (-1819));
      matrix0.write(mockPrintWriter0);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 7;
      doubleArray1[1] = (double) (-1819);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[7] = true;
      booleanArray0[7] = true;
      booleanArray0[8] = true;
      Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray0);
      Random.setNextRandom((-1819));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 1133;
      Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, false, booleanArray0);
      StringReader stringReader0 = new StringReader("t*u_P>>`bM0K0 HH");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      BufferedReader bufferedReader1 = new BufferedReader(stringReader0);
      bufferedReader0.close();
      BufferedReader bufferedReader2 = new BufferedReader(stringReader0);
      BufferedReader bufferedReader3 = new BufferedReader(bufferedReader2);
      BufferedReader bufferedReader4 = new BufferedReader(bufferedReader2);
      BufferedReader bufferedReader5 = new BufferedReader(bufferedReader2, 957);
      BufferedReader bufferedReader6 = null;
      try {
        bufferedReader6 = new BufferedReader(bufferedReader1, (-405));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 49;
      doubleArray1[1] = (double) (-1819);
      doubleArray1[2] = (double) 1810;
      doubleArray1[3] = (double) 1810;
      doubleArray1[4] = 2328.41267143;
      doubleArray1[5] = (double) (-1819);
      doubleArray1[6] = (double) 49;
      doubleArray1[7] = (double) 1810;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 49;
      doubleArray2[1] = (double) 49;
      doubleArray2[2] = (double) 49;
      doubleArray2[3] = (double) 49;
      doubleArray2[4] = 2328.41267143;
      doubleArray2[5] = (double) 1810;
      doubleArray2[6] = 1.000000000014552;
      doubleArray0[1] = doubleArray2;
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 1133, (-1819));
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray1, true, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 1133;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 1133;
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      double[] doubleArray0 = new double[0];
      Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, false, booleanArray0);
      StringReader stringReader0 = new StringReader("vq4oq];tLP|}z8oX-");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 1133);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      BufferedReader bufferedReader2 = new BufferedReader(bufferedReader1);
      BufferedReader bufferedReader3 = new BufferedReader(bufferedReader1);
      BufferedReader bufferedReader4 = new BufferedReader(bufferedReader3);
      BufferedReader bufferedReader5 = null;
      try {
        bufferedReader5 = new BufferedReader(bufferedReader3, (-1109));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 49;
      doubleArray0[1] = (double) (-1819);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[1 2 3 4;3 4 5 6;7 8 9 10]");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "REStL`b8B5{%k8MY9$x");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(49, 7, 2964.5056717653);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, false, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 1133;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1133;
      doubleArray0[1] = (double) 1133;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, booleanArray0);
      StringReader stringReader0 = new StringReader(",7yT.^N6XQsFmBE/$g)");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      bufferedReader0.close();
      BufferedReader bufferedReader2 = new BufferedReader(bufferedReader0);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        bufferedReader2.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(3705);
      optimization_DynamicIntArray0.size();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt((-189));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      int int0 = 1507;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Random.setNextRandom(1507);
      Random.setNextRandom(1507);
      Random.setNextRandom(19);
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int1 = 14;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(14);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(1507);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(200);
      int int0 = optimization_DynamicIntArray0.elementAt(0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2381744996028692
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      optimization_DynamicIntArray0.getRevision();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-91);
      byteArray0[1] = (byte)21;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix((byte)21, 4, (-509.9));
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) (byte)21;
      doubleArray0[2] = (double) (byte)21;
      doubleArray0[3] = (double) (byte)21;
      Optimization.solveTriangle(matrix0, doubleArray0, false, (boolean[]) null);
      Random.setNextRandom(8);
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 49;
      doubleArray0[1] = (double) (-1826);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      doubleArray0[4] = 2328.41267143;
      doubleArray0[5] = (double) (-1826);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      doubleArray0[6] = (double) 49;
      doubleArray0[2] = (double) 1810;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(37, 37, 3.0);
      Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
      Random.setNextRandom(4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(4);
      optimization_DynamicIntArray0.addElement((-1171));
      assertEquals(1, optimization_DynamicIntArray0.size());
  }
}
