/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 03:56:41 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(30, 30);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.padString((String) null, 3833, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.495626649608327
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.meanPrecTipText();
      String[] stringArray0 = new String[8];
      resultMatrixPlainText0.m_HeaderKeys = null;
      resultMatrixPlainText0.m_ColNameWidth = 1482;
      stringArray0[0] = "g";
      stringArray0[1] = "The number of decimals after the decimal point for the mean.";
      stringArray0[2] = "*";
      stringArray0[3] = ")";
      stringArray0[4] = "*";
      stringArray0[5] = "(";
      stringArray0[6] = "(";
      stringArray0[7] = "The number of decimals after the decimal point for the mean.";
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixPlainText0.getRowNameWidth();
      resultMatrixPlainText0.getCount(25);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7437733554254993
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setMeanWidth((-1148));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.m_Significance = null;
      resultMatrixLatex1.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-515), 2686);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2514470009975125
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      resultMatrixSignificance0.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.doubleToString(0.0, (-949));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3125284573173617
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 2;
      intArray2[8] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = 617;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = 617;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.addHeader("D_", "");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[][] intArray0 = new int[0][5];
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.718626421043041
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 2;
      intArray2[8] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = 617;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = 617;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 617;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.padString("", 1);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      String[] stringArray0 = new String[3];
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      resultMatrixPlainText1.m_ColNames = stringArray0;
      resultMatrixPlainText1.getEnumerateRowNames();
      resultMatrixPlainText0.getEnumerateRowNames();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.044404464687264
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixSignificance0.isSignificance((-3126));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2248339604723344
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.toStringHeader();
      resultMatrixGnuPlot1.m_RowNameWidth = 1;
      resultMatrixCSV0.getHeader("");
      resultMatrixCSV0.setRemoveFilterName(false);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      try { 
        resultMatrixGnuPlot0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.507129807329839
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "]%-xuwl$q~";
      stringArray0[5] = "";
      stringArray0[6] = "#te";
      stringArray0[7] = "PY2O0niGwN.xZ@D";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_MeanWidth = 1488;
      resultMatrixLatex0.addHeader("", "t(g*>78O,<QlL6_6");
      resultMatrixLatex0.rowNameWidthTipText();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0624332675559933
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixPlainText0.setShowStdDev(false);
      int[][] intArray0 = new int[8][6];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1936;
      intArray0[1] = intArray2;
      intArray0[2] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray3[2] = 2;
      intArray3[3] = 2;
      intArray3[4] = 1069;
      intArray3[5] = 2;
      intArray3[6] = 1;
      intArray0[3] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 1;
      intArray4[1] = 0;
      intArray0[4] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = 660;
      intArray5[1] = 2;
      intArray5[2] = 0;
      intArray5[3] = 2;
      intArray5[4] = 1074;
      intArray5[5] = 1;
      intArray5[6] = 1;
      intArray0[5] = intArray5;
      int[] intArray6 = new int[20];
      intArray6[0] = 1;
      intArray6[1] = 49;
      intArray6[2] = 1074;
      intArray6[3] = 1936;
      intArray6[4] = 1069;
      intArray6[5] = 2;
      intArray0[6] = intArray6;
      int[] intArray7 = new int[0];
      intArray0[7] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.897357129212931
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      int[][] intArray0 = new int[6][0];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 1;
      intArray1[2] = 0;
      intArray1[3] = 1336;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 1336;
      intArray2[1] = 0;
      intArray2[2] = 2416;
      intArray2[3] = 2;
      intArray2[4] = 1;
      intArray2[5] = 2;
      intArray2[6] = 1336;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[1] = 2;
      intArray3[2] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 2416;
      intArray4[1] = 0;
      intArray4[2] = 1336;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 2;
      intArray5[1] = 2416;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[2];
      intArray6[0] = 1;
      intArray6[1] = 2416;
      intArray0[5] = intArray6;
      resultMatrixPlainText0.m_Significance = intArray0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixPlainText0.getDisplayRow((-492));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.468508456904889
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toString();
      resultMatrixPlainText0.getDisplayName();
      resultMatrixLatex0.significanceWidthTipText();
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.507129807329839
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "]%-xuwl$q~";
      stringArray0[5] = "";
      stringArray0[6] = "#te";
      stringArray0[7] = "PY2O0niGwN.xZ@D";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.addHeader("", "t(g*>78O,<QlL6_6");
      resultMatrixLatex0.toStringRanking();
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4942288589873125
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "#te";
      stringArray0[2] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray0[3] = "";
      stringArray0[4] = "";
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      stringArray0[5] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("", (String) null);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0003565662588296
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowName(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int int0 = new Integer(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixSignificance0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2);
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.253796224922846
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.getRowName(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificance(2, (-2601));
      resultMatrixLatex0.isAverage(1964);
      resultMatrixLatex0.clearRanking();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(4527, 0);
      resultMatrixHTML1.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(2, 15);
      resultMatrixLatex2.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML2 = new ResultMatrixHTML(1964, 480);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.3773317895660053
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      int[][] intArray0 = new int[8][6];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1932;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1069;
      resultMatrixSignificance0.LEFT_PARENTHESES = "v";
      intArray3[1] = 0;
      intArray3[2] = 660;
      intArray0[2] = intArray3;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setCount(590, (-1529.14));
      resultMatrixGnuPlot0.addHeader("", "SA]*NX te?w`GXi");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixGnuPlot0.toArray();
      assertEquals(3, stringArray1.length);
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixSignificance0.getDefaultMeanWidth();
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.369580265011967
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixPlainText0.setSignificanceWidth(0);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.setCount(0, (-2783.3092));
      resultMatrixGnuPlot0.addHeader("o", "(");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixGnuPlot0.toArray();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(3, stringArray1.length);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9025538185947704
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ColNameWidth = (-118);
      resultMatrixGnuPlot0.trimString("N)[", 2171);
      int[] intArray0 = new int[5];
      intArray0[1] = 0;
      intArray0[2] = 2171;
      intArray0[4] = 2;
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixGnuPlot0.setPrintRowNames(false);
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      
      resultMatrixGnuPlot0.clear();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4503293216558673
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.setEnumerateRowNames(true);
      assertTrue(resultMatrixHTML0.getEnumerateRowNames());
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setColName(504, (String) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(9, 50);
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.setStdDevPrec(504);
      assertEquals(504, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.114414117418198
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixSignificance0);
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.setEnumerateRowNames(false);
      ResultMatrixSignificance resultMatrixSignificance1 = null;
      try {
        resultMatrixSignificance1 = new ResultMatrixSignificance((-1467), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.7102012482965714
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(9, 9);
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixSignificance0.setCountWidth(10);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " ";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.addHeader("*", " ");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot2 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot2.toArray();
      resultMatrixGnuPlot0.padString(" ", (-1));
      ResultMatrixGnuPlot resultMatrixGnuPlot3 = new ResultMatrixGnuPlot(resultMatrixGnuPlot2);
      resultMatrixGnuPlot3.m_EnumerateRowNames = false;
      resultMatrixGnuPlot3.showStdDevTipText();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(1, 1);
      resultMatrixSignificance0.getRevision();
      assertEquals(10, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.4520702007159616
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setMeanWidth(1);
      assertEquals(1, resultMatrixSignificance0.getMeanWidth());
      
      resultMatrixLatex0.setColOrder(intArray1);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(10, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(2, 0);
      int int0 = new Integer(2);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.874519625657589
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(10, 1);
      resultMatrixCSV0.getSummaryTitle(5);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixSignificance1.m_HeaderKeys = vector0;
      vector0.add((Object) "*");
      ResultMatrixSignificance resultMatrixSignificance2 = new ResultMatrixSignificance(resultMatrixSignificance1);
      resultMatrixSignificance1.setStdDevWidth(0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.2062651007397753
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      String string0 = resultMatrixCSV0.toString();
      assertEquals("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", string0);
      
      resultMatrixCSV0.getColCount();
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getDisplayName();
      resultMatrixCSV0.setRowHidden(70, true);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixHTML0.getDefaultEnumerateColNames();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
      assertFalse(resultMatrixHTML0.getDefaultRemoveFilterName());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.6023715066689674
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 2;
      intArray2[8] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2253, 1);
      resultMatrixGnuPlot0.addHeader("", "6&i\"]YIYOh(FN$");
      resultMatrixGnuPlot0.getOptions();
      // Undeclared exception!
      resultMatrixGnuPlot0.toArray();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.271788462161189
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[][] stringArray0 = resultMatrixGnuPlot0.toArray();
      assertEquals(3, stringArray0.length);
      
      resultMatrixSignificance0.enumerateColNamesTipText();
      assertFalse(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getVisibleColCount());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.4318119944529175
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.assign(resultMatrixHTML0);
      resultMatrixSignificance0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex1.setRowNameWidth((-1437));
      resultMatrixLatex0.toStringRanking();
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      
      resultMatrixLatex1.setShowAverage(false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.225275296722886
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      int[] intArray0 = new int[1];
      intArray0[0] = (-1314);
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(17, 37);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(631, 0);
      resultMatrixHTML1.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixHTML1.getColNameWidth());
      
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex(resultMatrixLatex2);
      ResultMatrixLatex resultMatrixLatex4 = new ResultMatrixLatex(resultMatrixLatex1);
      resultMatrixLatex1.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex1);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertEquals(0, resultMatrixPlainText0.getRowNameWidth());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixLatex1.getMeanWidth());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.596453852557383
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.addHeader("", "");
      resultMatrixGnuPlot0.setColNameWidth(91);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.showStdDevTipText();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevPrec());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 1;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixSignificance0.getRevision();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.7725887222397807
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 2;
      intArray1[6] = 1;
      intArray1[7] = 2;
      intArray1[8] = 2;
      intArray0[1] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 617;
      intArray2[3] = 1;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray0[2] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray0[3] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = 617;
      intArray4[1] = 2;
      intArray4[2] = 617;
      intArray4[3] = 1;
      intArray4[4] = 2;
      int[] intArray5 = new int[2];
      intArray5[1] = 0;
      intArray0[5] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = 0;
      intArray6[1] = 617;
      intArray6[2] = 0;
      intArray6[3] = 0;
      intArray0[6] = intArray6;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.118266953513217
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixPlainText0.setShowStdDev(false);
      int[][] intArray0 = new int[8][6];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1932;
      intArray0[1] = intArray2;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixSignificance0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText1);
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText3.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.2717884621611883
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.setSignificanceWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[10];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDefaultColNameWidth();
      assertEquals(2, resultMatrixSignificance0.getMeanWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 333);
      resultMatrixGnuPlot0.toArray();
      assertEquals(333, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.874519625657589
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixSignificance0.setCountWidth((-2400));
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(24, 2);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.414806198347023
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_StdDevPrec = 0;
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "   <tr><td><b>(";
      stringArray0[1] = "[";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(0);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      assertEquals(40, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2501444518297604
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(18, stringArray0.length);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 1);
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      assertEquals(1, resultMatrixLatex0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      int int0 = resultMatrixPlainText0.getRowCount();
      assertFalse(resultMatrixPlainText0.getPrintColNames());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(1, int0);
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5590687272914243
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.getRowName(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificance(2, (-2601));
      resultMatrixLatex0.isAverage(1964);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(4527, 0);
      resultMatrixHTML1.getDefaultRowNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(2, (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3879751788421224
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getSummaryTitle(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 1152);
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixGnuPlot1.m_HeaderValues = vector0;
      resultMatrixGnuPlot1.setCount(3257, 2);
      resultMatrixGnuPlot0.addHeader("v", "");
      resultMatrixGnuPlot1.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader((String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.620756434587015
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getSummaryTitle(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.setStdDevWidth(1);
      int[][] intArray0 = new int[0][6];
      resultMatrixSignificance0.m_Wins = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 1;
      resultMatrixCSV0.m_Wins = intArray0;
      intArray1[2] = 2;
      intArray1[3] = 0;
      resultMatrixGnuPlot0.m_RankingLosses = intArray1;
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.showStdDevTipText();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setOptions(stringArray0);
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.2384186430937043
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixGnuPlot0.toArray();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(3, stringArray1.length);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      double double0 = resultMatrixPlainText0.getCount((-273));
      assertEquals(0.0, double0, 0.01);
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      assertEquals(0, resultMatrixPlainText0.getDefaultColNameWidth());
      assertFalse(resultMatrixPlainText0.getDefaultShowAverage());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.69690085000884
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_ColNameWidth = (-118);
      resultMatrixGnuPlot0.trimString("iN)[", 2171);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixPlainText0.setCountWidth(1);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 2171;
      intArray0[2] = 2171;
      intArray0[3] = 1;
      intArray0[4] = 2;
      resultMatrixPlainText0.m_RowOrder = intArray0;
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixPlainText0.getRevision();
      assertEquals(1, resultMatrixPlainText0.getCountWidth());
      
      resultMatrixGnuPlot0.setStdDevPrec((-1));
      resultMatrixGnuPlot0.clear();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.996306798305616
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.getRowName((-661));
      resultMatrixSignificance0.meanWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.2248339604723344
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.toStringHeader();
      resultMatrixGnuPlot1.m_RowNameWidth = 1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("|t");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.9808777308924803
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixSignificance0.printColNamesTipText();
      resultMatrixCSV0.clear();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("wc49t{[HN{3+-g;");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(50, 50);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(50, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(50, resultMatrixSignificance0.getVisibleColCount());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.426686858664434
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      int[][] intArray0 = new int[8][6];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      intArray2[3] = 1932;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 1069;
      intArray3[1] = 0;
      intArray3[2] = 660;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 0;
      intArray4[1] = 2;
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray4[4] = 1069;
      intArray4[5] = 0;
      intArray4[6] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 1;
      intArray5[1] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[7];
      intArray6[0] = 660;
      intArray6[1] = 2;
      intArray6[2] = 0;
      intArray6[3] = 2;
      intArray6[4] = 1074;
      intArray6[5] = 1;
      intArray6[6] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 1;
      intArray7[1] = 49;
      intArray7[2] = 1074;
      intArray7[3] = 1932;
      intArray7[4] = 1069;
      intArray7[5] = 2;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[0];
      intArray0[7] = intArray8;
      resultMatrixSignificance0.setRanking(intArray0);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "   <tr><td><b>(";
      stringArray0[1] = "[";
      stringArray0[2] = "v";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 2);
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex1.getStdDevWidth();
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      String string0 = resultMatrixPlainText1.toStringMatrix();
      assertEquals("Dataset (1) \n------------\nrow0(0)    |\n------------\n($\\circ$/  |\n", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[7];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(30, 49);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5796317015626657
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[][] stringArray1 = new String[7][9];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      stringArray1[3] = stringArray0;
      stringArray1[4] = stringArray0;
      stringArray1[5] = stringArray0;
      stringArray1[6] = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getColSize(stringArray1, 1, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9761388013384344
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 32;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setCount(0, 0);
      String[][] stringArray0 = new String[9][6];
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = "v";
      stringArray1[5] = " ";
      stringArray1[6] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray2[1] = "*";
      stringArray2[2] = "";
      stringArray2[3] = "8034";
      stringArray2[4] = " ";
      stringArray2[5] = "v";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray3[1] = " ";
      stringArray3[2] = "8034";
      stringArray3[3] = "";
      stringArray3[4] = "8034";
      stringArray3[5] = "8034";
      stringArray3[6] = "";
      stringArray3[7] = "";
      stringArray3[8] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = "v";
      stringArray4[1] = "*";
      stringArray4[2] = "*";
      stringArray4[3] = "8034";
      stringArray4[4] = "v";
      stringArray4[5] = " ";
      stringArray4[6] = " ";
      stringArray4[7] = "8034";
      stringArray4[8] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[9];
      stringArray5[0] = "row";
      stringArray5[1] = "v";
      stringArray5[2] = "";
      stringArray5[3] = "8034";
      stringArray5[4] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray5[5] = "v";
      stringArray5[6] = " ";
      stringArray5[7] = "";
      stringArray5[8] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[6];
      stringArray6[0] = "Xm";
      stringArray6[1] = "";
      stringArray6[2] = "";
      stringArray6[3] = "'Tx";
      stringArray6[4] = " ";
      stringArray6[5] = "";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[0];
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[3];
      stringArray8[0] = "";
      stringArray8[1] = "*";
      stringArray8[2] = "Xm";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[4];
      stringArray9[0] = "";
      stringArray9[1] = "*";
      stringArray9[2] = "'Tx";
      stringArray9[3] = "Xm";
      stringArray0[8] = stringArray9;
      int int0 = resultMatrixGnuPlot0.getColSize(stringArray0, 10, true, false);
      assertEquals(0, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(0, int0);
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.4942288589873125
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "PY2O0niGwN.xZ@D";
      stringArray0[4] = "   <tr><td><b>(";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("@o[<*_zCr", "   <tr><td><b>(");
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7936567840058286
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.TIE_STRING = "setRowOrder: length does not match (";
      resultMatrixLatex0.getDisplayName();
      int int0 = resultMatrixLatex0.getStdDevPrec();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(2, int0);
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.4812329012959573
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]%-xuwl$q~";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(47, 16);
      resultMatrixPlainText0.getEnumerateRowNames();
      resultMatrixPlainText0.getEnumerateRowNames();
      assertEquals(2, resultMatrixPlainText0.getStdDevPrec());
      assertEquals(47, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.3193144108825
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.getRowName(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-746.80732552216);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 1;
      resultMatrixPlainText0.m_Counts = doubleArray0;
      resultMatrixHTML0.getSignificance(2, (-2601));
      resultMatrixLatex0.isAverage(1964);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(4527, 0);
      resultMatrixHTML1.getSummaryTitle(2);
      resultMatrixHTML1.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.404142528605343
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 2;
      intArray2[8] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = 617;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = 617;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 2;
      intArray4[1] = 2;
      intArray4[2] = 1;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 617;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText(resultMatrixPlainText1);
      ResultMatrixPlainText resultMatrixPlainText3 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText3.toStringMatrix();
      // Undeclared exception!
      try { 
        resultMatrixPlainText2.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8322602295395347
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.LOSS_STRING = "";
      resultMatrixLatex0.setColNameWidth(0);
      resultMatrixLatex0.setCount(0, 0.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setShowAverage(false);
      assertEquals(1, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.328607345866262
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.setCount(0, 0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[6] = "*";
      resultMatrixGnuPlot0.addHeader("~Y", "stddev-prec");
      resultMatrixGnuPlot0.getOptions();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.076705030953835
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 0;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      resultMatrixLatex0.setSignificanceWidth(0);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
      resultMatrixPlainText0.getRowCount();
      assertEquals(2, resultMatrixSignificance0.getMeanWidth());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.2313893106078018
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
      
      resultMatrixSignificance0.getDisplayName();
      assertEquals(0, resultMatrixSignificance0.getDefaultSignificanceWidth());
      assertEquals(0, resultMatrixSignificance0.getStdDevWidth());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.5633323525472833
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (-702.22977746958);
      ResultMatrixSignificance.main((String[]) null);
      doubleArray0[8] = (double) 0;
      resultMatrixSignificance0.m_Counts = doubleArray0;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML1.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex(resultMatrixLatex0);
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex(resultMatrixLatex2);
      resultMatrixLatex3.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = null;
      try {
        resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixSignificance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.0263471886756794
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 115);
      resultMatrixHTML0.getDefaultRowNameWidth();
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.1579357775042105
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.m_RankingLosses = null;
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      int[][] intArray0 = new int[7][7];
      intArray0[0] = null;
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.toStringSummary();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML1.getColOrder();
      assertEquals(0, resultMatrixHTML1.getMeanWidth());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(50, resultMatrixHTML1.getRowNameWidth());
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(0, resultMatrixHTML1.getColNameWidth());
      assertEquals(0, resultMatrixHTML1.getCountWidth());
      assertTrue(resultMatrixHTML1.getPrintColNames());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixHTML1.getPrintRowNames());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.519229552579168
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?=U3Sp\"[3";
      stringArray0[1] = "b";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "}{c}{$circ$, $\bullet$";
      stringArray0[5] = "aDFFf,R6\"?gaPw$U";
      stringArray0[6] = "";
      stringArray0[7] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3, 3);
      String string0 = resultMatrixHTML0.removeFilterName("b");
      assertEquals("b", string0);
      
      resultMatrixHTML0.m_ColNames = stringArray0;
      resultMatrixHTML0.getRowName(3);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getColOrder();
      resultMatrixHTML0.getCountWidth();
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      int[] intArray0 = new int[1];
      intArray0[0] = (-1314);
      resultMatrixLatex0.setColOrder(intArray0);
      booleanArray0[1] = true;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      resultMatrixLatex0.setColNameWidth((-1314));
      resultMatrixLatex0.showAverageTipText();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowAverage());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.8739867076185663
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      int[] intArray0 = new int[1];
      intArray0[0] = (-1314);
      resultMatrixLatex0.setColOrder(intArray0);
      booleanArray0[1] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      resultMatrixLatex0.setColNameWidth((-1314));
      resultMatrixLatex0.showAverageTipText();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertTrue(resultMatrixLatex0.getDefaultPrintRowNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.507129807329839
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "]%-xuwl$q~";
      stringArray0[5] = "";
      stringArray0[6] = "#te";
      stringArray0[7] = "PY2O0niGwN.xZ@D";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName((-1641), (String) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 899);
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.335919503922513
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 512);
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML2 = null;
      try {
        resultMatrixHTML2 = new ResultMatrixHTML(115, (-299));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 2559;
      intArray0[2] = 0;
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.getSignificance(787, 0);
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.591160164277772
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.LOSS_STRING = "";
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixLatex0.setColNameWidth(0);
      resultMatrixLatex0.setCount(0, 0.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "B\"`\n-";
      stringArray0[2] = ")";
      stringArray0[3] = " ";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = ")";
      stringArray0[7] = ")";
      stringArray0[8] = "$circ$";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.removeFilterNameTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2, 1652);
      resultMatrixLatex0.toStringKey();
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.619437958513032
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.addHeader("", "");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.showStdDevTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 50);
      resultMatrixLatex0.setColName(1033, "*");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(0, 1033);
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.977911118307306
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setCount(0, 0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[6] = "*";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 911);
      resultMatrixSignificance0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(0, (String) null);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.720887314357132
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = " ";
      int[] intArray0 = new int[1];
      resultMatrixHTML0.clearSummary();
      intArray0[0] = 1035;
      resultMatrixHTML0.m_RankingWins = intArray0;
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixHTML0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.assign(resultMatrixHTML0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.3449419191941265
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1074;
      intArray0[2] = 1932;
      intArray0[3] = 1932;
      intArray0[5] = 905;
      intArray0[7] = 1069;
      int[] intArray1 = new int[0];
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.clear();
      resultMatrixPlainText0.toStringMatrix();
      assertEquals(40, resultMatrixPlainText0.getRowNameWidth());
      
      boolean boolean0 = resultMatrixSignificance0.getEnumerateRowNames();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.3156536237731378
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      
      resultMatrixPlainText0.setShowStdDev(false);
      int[][] intArray0 = new int[8][6];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 1;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.setColOrder(intArray2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(13, 114);
      String[] stringArray0 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      int int0 = resultMatrixLatex1.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(50, 3);
      resultMatrixHTML1.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex(resultMatrixLatex1);
      assertEquals(1, resultMatrixLatex3.getColCount());
      
      ResultMatrixLatex resultMatrixLatex4 = new ResultMatrixLatex(resultMatrixLatex0);
      int int1 = resultMatrixLatex4.getStdDevWidth();
      assertTrue(int1 == int0);
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixLatex0);
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(5, resultMatrixPlainText1.getCountWidth());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.0720323347263236
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixLatex0.isAverage(2006);
      resultMatrixLatex0.setColNameWidth(2);
      resultMatrixLatex0.setCount(1, 2006);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setShowAverage(true);
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.1509699624985
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toString();
      resultMatrixCSV0.padString("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", 0);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getPrintRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2882, 2882);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2286825048637873
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int int0 = 112;
      resultMatrixGnuPlot0.getColName(112);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setColNameWidth(123);
      resultMatrixGnuPlot0.setPrintColNames(false);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setRowHidden(123, false);
      resultMatrixGnuPlot0.setStdDev(123, 123, (-293.8878478));
      resultMatrixGnuPlot0.getColName(123);
      resultMatrixGnuPlot0.getEnumerateColNames();
      resultMatrixGnuPlot0.isStdDev(96);
      resultMatrixGnuPlot0.getShowAverage();
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance((-2910), 1126);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.415577172152023
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.setEnumerateRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(666, 2);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName(1, "*");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.278804782513053
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.addHeader("", "");
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.toStringHeader();
      resultMatrixCSV0.clear();
      resultMatrixGnuPlot1.m_RowNameWidth = 1;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.2584111430051856
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 1;
      resultMatrixLatex0.m_Mean = null;
      intArray0[2] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(45, 0);
      String[] stringArray1 = resultMatrixHTML0.getOptions();
      assertEquals(18, stringArray1.length);
      
      resultMatrixHTML0.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(0, 2553);
      resultMatrixHTML1.getDefaultRowNameWidth();
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      ResultMatrixLatex resultMatrixLatex3 = new ResultMatrixLatex(resultMatrixLatex1);
      ResultMatrixLatex resultMatrixLatex4 = new ResultMatrixLatex(resultMatrixHTML1);
      int int0 = resultMatrixLatex4.getStdDevWidth();
      assertEquals(0, int0);
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex4);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.394501767476337
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.m_SignificanceWidth = (-1584);
      resultMatrixLatex0.listOptions();
      resultMatrixHTML0.padString("$\bullet$", 3315);
      resultMatrixLatex0.getRevision();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      resultMatrixLatex0.setSignificanceWidth((-1116));
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixLatex0.m_MeanPrec = 2;
      resultMatrixHTML0.setPrintColNames(false);
      resultMatrixHTML0.headerKeys();
      assertEquals((-1584), resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixLatex0.headerKeys();
      resultMatrixGnuPlot0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.217568542112946
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[] stringArray1 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray1.length);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1885, 1);
      resultMatrixGnuPlot0.getRowName(2);
      String[][] stringArray2 = resultMatrixGnuPlot0.toArray();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(3, stringArray2.length);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.8765090940922815
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 2;
      intArray2[8] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 1;
      intArray3[1] = 1;
      intArray3[2] = 617;
      intArray3[3] = 1;
      intArray3[4] = 0;
      intArray3[5] = 0;
      intArray0[2] = intArray3;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.m_PrintColNames = false;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.listOptions();
      resultMatrixGnuPlot0.setStdDevWidth(26);
      assertEquals(26, resultMatrixGnuPlot0.getStdDevWidth());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      resultMatrixLatex0.toStringSummary();
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.4151016299659993
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      String[][] stringArray0 = new String[4][2];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "";
      stringArray1[1] = "'Tx";
      stringArray1[2] = "'Tx";
      stringArray1[3] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray2[1] = "row";
      stringArray2[2] = "'Tx";
      stringArray2[3] = "";
      stringArray2[4] = "Xm";
      stringArray2[5] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[2];
      stringArray3[0] = "row";
      stringArray3[1] = "'Tx";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[5];
      stringArray4[0] = "";
      stringArray4[1] = "row";
      stringArray4[2] = "*";
      stringArray4[3] = "'Tx";
      stringArray4[4] = "";
      stringArray0[3] = stringArray4;
      int int0 = resultMatrixGnuPlot0.getColSize(stringArray0, 1, false, true);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(3, int0);
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }
}
