/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:54:49 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.8674702164098025
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int int0 = 302;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(302, 14);
      resultMatrixHTML0.getSignificance(302, 0);
      resultMatrixLatex0.isAverage(2);
      resultMatrixSignificance0.clearRanking();
      // Undeclared exception!
      resultMatrixHTML0.toString();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.8399493787222077
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setCountWidth(2);
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 2);
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.775350562371747
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.addHeader("", "-count-width");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString(0, (-2567));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.9305158992302127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(14, 1);
      resultMatrixHTML0.m_RemoveFilterName = true;
      resultMatrixHTML0.getSignificance(2, (-1639));
      resultMatrixLatex0.isAverage(97);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth(49);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex2.setCount(13, 49);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex2.getRowNameWidth();
      resultMatrixLatex2.setRowNameWidth(16);
      resultMatrixHTML0.toStringSummary();
      resultMatrixLatex0.setShowAverage(false);
      assertEquals(49, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2857202760693207
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setSize(88, 88);
      int int0 = 12;
      resultMatrixLatex0.setSignificanceWidth(12);
      // Undeclared exception!
      resultMatrixLatex0.setSize(432, 432);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.6431342770035506
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultMatrixLatex0.m_ColHidden = booleanArray0;
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 115);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3930093031259743
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_HeaderValues = null;
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixSignificance0.m_StdDevPrec = (-2271);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.assign(resultMatrixSignificance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.371023122161086
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      int[] intArray0 = new int[1];
      resultMatrixSignificance0.setMeanWidth(2);
      intArray0[0] = 1;
      resultMatrixLatex0.m_RowOrder = intArray0;
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setMeanPrec((-556));
      // Undeclared exception!
      try { 
        resultMatrixLatex1.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.392502760280892
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setRemoveFilterName(false);
      resultMatrixGnuPlot0.setMeanWidth((-2165));
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(1, 1);
      int[][] intArray0 = new int[5][4];
      int[] intArray1 = new int[1];
      intArray1[0] = (-4272);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 1;
      intArray3[1] = (-4272);
      intArray3[2] = 0;
      intArray3[3] = 2;
      intArray3[4] = 1;
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 0;
      intArray4[1] = 1;
      intArray4[2] = 1;
      intArray4[3] = (-4272);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = 2;
      intArray5[1] = 1;
      intArray5[2] = 0;
      intArray0[4] = intArray5;
      resultMatrixLatex0.m_Wins = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.setSize(0, (-4272));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.425651486533954
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(15);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(15);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.setCount(36, 36);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(1180);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex1.setShowAverage(true);
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixHTML0.trimString("r@{hspace{0cm}}c@{hspace{0cm}}r@{hspace{0.1cm}}c", 1043);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 36);
      resultMatrixGnuPlot0.clear();
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.9305158992302127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(2);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(14, 1);
      resultMatrixHTML0.getSignificance(2, (-1639));
      resultMatrixLatex0.isAverage(97);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth(49);
      ResultMatrixLatex resultMatrixLatex2 = new ResultMatrixLatex();
      resultMatrixLatex2.setCount(13, 49);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex2.getRowNameWidth();
      resultMatrixLatex2.setRowNameWidth(16);
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex0.setShowAverage(false);
      assertEquals(49, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4133872990847993
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 97);
      resultMatrixHTML0.setShowStdDev(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName(0, "");
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixGnuPlot0.getDefaultPrintColNames();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.9308218954430165
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setMeanPrec(0);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8079424057820597
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      resultMatrixPlainText0.clearSummary();
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      
      intArray0[1] = 2559;
      String string0 = resultMatrixPlainText0.toStringMatrix();
      assertEquals("Dataset                   (1) col0 \n-----------------------------------\nrow0                       (0)    |\n-----------------------------------\n(v/ /*)                           |\n", string0);
      assertFalse(resultMatrixPlainText0.getRemoveFilterName());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.073074937920201
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixPlainText0);
      resultMatrixLatex0.getDefaultEnumerateColNames();
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertTrue(resultMatrixLatex0.getPrintColNames());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(5, resultMatrixLatex0.getCountWidth());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowAverage());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.8496897539590735
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(true);
      assertFalse(resultMatrixLatex0.getShowAverage());
      
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(2);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.addHeader("(", "");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toArray();
      assertTrue(resultMatrixLatex0.getShowAverage());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.4460437749383543
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringKey();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_ColOrder = null;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "n{xud>_n|)1V";
      stringArray0[1] = ")";
      stringArray0[2] = "";
      stringArray0[3] = " ";
      stringArray0[4] = " ";
      stringArray0[5] = "v";
      stringArray0[6] = "*";
      stringArray0[7] = "v";
      stringArray0[8] = " ";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixHTML0.m_RankingWins = null;
      resultMatrixSignificance0.m_MeanPrec = 1;
      int[][] intArray0 = new int[2][4];
      intArray0[0] = null;
      int[] intArray1 = new int[5];
      intArray1[0] = (-2400);
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray0[1] = intArray1;
      resultMatrixSignificance0.m_Wins = intArray0;
      resultMatrixSignificance0.setCountWidth(95);
      resultMatrixSignificance0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, (-127));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.4916339011093545
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_RankingWins = intArray0;
      resultMatrixSignificance0.getRowName((-661));
      resultMatrixSignificance0.meanWidthTipText();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.476204833696219
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.m_PrintColNames = false;
      resultMatrixSignificance0.printColNamesTipText();
      resultMatrixCSV0.clear();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.getHeader("wc49t{[HN{3+-g;");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(50, 50);
      resultMatrixSignificance0.enumerateRowNamesTipText();
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(50, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(50, resultMatrixSignificance0.getColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getSignificanceWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArrayArray0 = null;
      resultMatrixCSV0.m_ColOrder = null;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.TIE_STRING = "setRowOrder: length does not match (";
      resultMatrixLatex0.getDisplayName();
      int int0 = resultMatrixLatex0.getStdDevPrec();
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(2, int0);
      assertEquals(0, resultMatrixLatex0.getDefaultStdDevWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertFalse(resultMatrixLatex0.getShowStdDev());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.4937255585187503
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(3, 95);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.removeFilterNameTipText();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(1033, 0);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.getEnumerateRowNames();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.clear();
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixLatex1.toStringKey();
      assertEquals(0, resultMatrixLatex1.getDefaultColNameWidth());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.431396653191224
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 32;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setCount(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      int[][] intArray1 = new int[5][4];
      resultMatrixGnuPlot0.clear();
      intArray1[0] = null;
      intArray1[1] = null;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = null;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSummary(intArray1, intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.8198593046929177
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultShowStdDev();
      resultMatrixLatex0.LOSS_STRING = " ";
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toArray();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.868139981576843
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.LOSS_STRING = "";
      resultMatrixLatex0.setColNameWidth(0);
      resultMatrixLatex0.setCount(0, 0.0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.toStringRanking();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.setStdDevWidth(0);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.4667048390742834
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 32;
      intArray0[3] = 1;
      intArray0[4] = 0;
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.setCount(0, 0);
      String[][] stringArray0 = new String[9][6];
      String[] stringArray1 = new String[7];
      stringArray1[0] = " ";
      stringArray1[1] = "*";
      stringArray1[2] = " ";
      stringArray1[3] = " ";
      stringArray1[4] = "v";
      stringArray1[5] = " ";
      stringArray1[6] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray2[1] = "*";
      stringArray2[2] = "";
      stringArray2[3] = "8034";
      stringArray2[4] = " ";
      stringArray2[5] = "v";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray3[1] = " ";
      stringArray3[2] = "8034";
      stringArray3[3] = "";
      stringArray3[4] = "8034";
      stringArray3[5] = "8034";
      stringArray3[6] = "";
      stringArray3[7] = "";
      stringArray3[8] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[9];
      stringArray4[0] = "v";
      stringArray4[1] = "*";
      stringArray4[2] = "*";
      stringArray4[3] = "8034";
      stringArray4[4] = "v";
      stringArray4[5] = " ";
      stringArray4[6] = " ";
      stringArray4[4] = "8034";
      stringArray4[8] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[9];
      stringArray5[0] = "row";
      stringArray5[1] = "v";
      stringArray5[2] = "";
      stringArray5[3] = "8034";
      stringArray5[4] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray5[5] = "v";
      stringArray5[6] = " ";
      stringArray5[7] = "";
      stringArray5[8] = "{Z,tR1)k\"1}}a0L{PeF";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[6];
      stringArray6[0] = "Xm";
      stringArray6[1] = "";
      stringArray6[2] = "";
      stringArray6[3] = "'Tx";
      stringArray6[4] = " ";
      stringArray6[5] = "";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[0];
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[3];
      stringArray8[0] = "";
      stringArray8[1] = "*";
      stringArray8[2] = "Xm";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[4];
      stringArray9[0] = "";
      stringArray9[1] = "*";
      stringArray9[2] = "'Tx";
      stringArray9[3] = "Xm";
      stringArray0[8] = stringArray9;
      int int0 = resultMatrixGnuPlot0.getColSize(stringArray0, 10, true, false);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(0, int0);
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0198268431492625
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      Vector<String> vector0 = new Vector<String>();
      vector0.add(")");
      resultMatrixSignificance0.m_EnumerateColNames = false;
      resultMatrixSignificance0.m_HeaderKeys = vector0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.6095772434218754
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(2);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixLatex0.setColNameWidth(1);
      resultMatrixLatex0.setCount((-1269), 0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixSignificance0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 97);
      resultMatrixLatex1.setRowNameWidth(1);
      resultMatrixLatex1.toStringRanking();
      resultMatrixLatex0.setShowAverage(false);
      assertEquals(1, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.4480441831849356
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 714);
      resultMatrixSignificance0.setMeanWidth(1678);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 1678;
      resultMatrixLatex1.setColOrder(intArray0);
      resultMatrixLatex1.getDisplayName();
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.810970824918608
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixSignificance0.m_RowNameWidth = 1;
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.toStringSummary();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.addHeader("", "-count-width");
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.toArray();
      assertEquals(1, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.176277793895501
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setMeanWidth(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 2853);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.6490688218140894
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toString();
      resultMatrixCSV0.padString("Dataset,[1]\nrow0,''\n'[v/ /*]',''\n", 0);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.getPrintRowNames();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2882, 2882);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.9469977729338015
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = ";@Pr-^L:q{";
      stringArray0[1] = "%vS:U%|i8)k(]+\"#.";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixLatex.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-503), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3284083762151124
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2;
      intArray2[4] = 2;
      intArray2[5] = 2;
      intArray2[6] = 1;
      intArray2[7] = 2;
      intArray2[8] = 2;
      intArray0[1] = intArray2;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      String string0 = resultMatrixCSV0.removeFilterName("v");
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals("v", string0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(5, resultMatrixCSV0.getCountWidth());
      
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      resultMatrixPlainText0.getEnumerateRowNames();
      boolean boolean0 = resultMatrixPlainText0.getEnumerateRowNames();
      boolean boolean1 = resultMatrixPlainText0.getEnumerateColNames();
      assertFalse(boolean1 == boolean0);
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=4.0191993720999015
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?=U3Sp\"[3";
      stringArray0[1] = "b";
      stringArray0[2] = "?=U3Sp\"[3";
      stringArray0[3] = "";
      stringArray0[4] = "}{c}{$circ$, $\bullet$";
      stringArray0[5] = "aDFFf,R6\"?gaPw$U";
      stringArray0[6] = "";
      stringArray0[7] = "";
      ResultMatrixGnuPlot.main(stringArray0);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(3, 3);
      resultMatrixHTML0.removeFilterName("b");
      resultMatrixHTML0.m_ColNames = stringArray0;
      resultMatrixHTML0.getRowName(3);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      resultMatrixHTML0.RIGHT_PARENTHESES = "$#t$BkMJ1YTT\"k";
      resultMatrixHTML0.m_RowHidden = booleanArray0;
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getColOrder();
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=4.01919946291196
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<Object> vector0 = new Vector<Object>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      ResultMatrixGnuPlot.main((String[]) null);
      ResultMatrixPlainText.main((String[]) null);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(3, 1);
      resultMatrixHTML1.removeFilterName("*");
      String string0 = resultMatrixHTML1.getRowName(2);
      assertNull(string0);
      
      resultMatrixHTML0.toStringSummary();
      resultMatrixHTML0.getColOrder();
      resultMatrixHTML0.getColCount();
      assertEquals(0, resultMatrixHTML0.getColNameWidth());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColNameWidth((-1314));
      resultMatrixLatex0.showAverageTipText();
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertEquals(0, resultMatrixLatex0.getDefaultRowNameWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
      assertEquals(1, resultMatrixLatex0.getColCount());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.844213214763624
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.assign(resultMatrixHTML0);
      resultMatrixLatex0.getSummaryTitle(2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      assertTrue(resultMatrixLatex0.getShowStdDev());
      
      resultMatrixHTML0.setShowStdDev(false);
      String string0 = resultMatrixHTML0.getRowName(0);
      assertEquals("row0", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.338205060943012
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.setEnumerateColNames(false);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(2375, 1951);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.4116033803017567
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.LOSS_STRING = "";
      resultMatrixLatex0.setColNameWidth(0);
      resultMatrixLatex0.setCount(0, 0.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      resultMatrixSignificance0.m_NonSigWins = intArray0;
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.setShowAverage(true);
      resultMatrixSignificance0.isAverage(2);
      assertEquals(1, resultMatrixLatex0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.8898130107507063
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.setEnumerateRowNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(666, 2);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName(103, ")");
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 2124);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.8454305010220104
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "?=U3Sp\"[3";
      stringArray0[1] = "b";
      stringArray0[2] = "";
      stringArray0[3] = "";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRowName((-110));
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSignificance((-110), 53);
      resultMatrixLatex0.isAverage((-1015));
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      String string0 = resultMatrixHTML0.toString();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
      
      resultMatrixLatex0.getDefaultShowAverage();
      resultMatrixHTML0.setShowStdDev(true);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      resultMatrixHTML1.setEnumerateRowNames(true);
      assertEquals(2, resultMatrixHTML1.getMeanPrec());
      assertEquals(2, resultMatrixHTML1.getStdDevPrec());
      assertEquals(25, resultMatrixHTML1.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 26);
      String string1 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n(1) col0\n", string1);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 2);
      resultMatrixGnuPlot0.getDisplayName();
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=4.010248725069902
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "   <tr><td><b>(";
      stringArray0[1] = "[";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      stringArray0[4] = "*";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(1, (-251));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.906317677077617
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setEnumerateColNames(true);
      resultMatrixLatex0.setShowAverage(false);
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.getRowName(0);
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.getSignificance(1, 2);
      resultMatrixLatex0.isAverage(2006);
      resultMatrixHTML0.toString();
      resultMatrixLatex0.getDefaultShowAverage();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setColNameWidth(16);
      resultMatrixLatex0.setCount(1, 4.8);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.setPrintColNames(false);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(2006);
      resultMatrixLatex0.toStringRanking();
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      
      resultMatrixLatex1.setShowAverage(false);
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.141583292590702
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertEquals(1, resultMatrixPlainText0.getColCount());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 2559;
      intArray0[2] = 0;
      resultMatrixCSV0.m_RankingWins = intArray0;
      resultMatrixCSV0.getSignificance(787, 0);
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertFalse(resultMatrixCSV0.getDefaultShowStdDev());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.7676549949025553
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 97);
      resultMatrixHTML0.setShowStdDev(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.toStringKey();
      resultMatrixLatex0.setColName(0, "");
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setStdDevWidth(1);
      resultMatrixGnuPlot0.toArray();
      assertFalse(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.3971393000959376
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixHTML0.setSignificanceWidth(2);
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth((-506));
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.setColNameWidth(53);
      resultMatrixLatex0.setCount(1925, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth((-250));
      resultMatrixLatex0.toStringRanking();
      assertEquals(2, resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(0, 1028);
      resultMatrixLatex1.setShowAverage(true);
      assertEquals(1028, resultMatrixLatex1.getVisibleRowCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.21646253559607
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = "$\bullet$";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = " ";
      int[] intArray0 = new int[1];
      int int0 = 1035;
      intArray0[0] = 1035;
      resultMatrixHTML0.m_RankingWins = intArray0;
      resultMatrixHTML0.m_ColNames = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.assign(resultMatrixHTML0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.9118708806795848
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixPlainText0.setShowStdDev(false);
      resultMatrixPlainText0.assign(resultMatrixSignificance0);
      resultMatrixSignificance0.clear();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "   <tr><td><b>(";
      stringArray0[1] = "[";
      stringArray0[2] = "v";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      stringArray0[5] = " ";
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[7];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray0[0] = intArray1;
      resultMatrixPlainText0.setSummary(intArray0, intArray0);
      assertEquals(0, resultMatrixPlainText0.getCountWidth());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText1.getEnumerateRowNames();
      resultMatrixPlainText1.getEnumerateRowNames();
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.3716947669005264
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.LOSS_STRING = "";
      resultMatrixLatex0.setColNameWidth(0);
      resultMatrixLatex0.setCount(0, 0.0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setPrintColNames(true);
      resultMatrixSignificance0.getDisplayName();
      resultMatrixSignificance0.m_PrintColNames = true;
      resultMatrixLatex0.getRowNameWidth();
      resultMatrixLatex0.setRowNameWidth(1);
      resultMatrixLatex0.toStringRanking();
      assertEquals(1, resultMatrixLatex0.getRowNameWidth());
      
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.setShowAverage(true);
      assertEquals(1, resultMatrixLatex1.getRowCount());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.316931370072925
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultShowStdDev();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(1, 97);
      resultMatrixHTML0.setShowStdDev(false);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.toStringKey();
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixLatex0.clear();
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2724834841354014
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setRowNameWidth(2);
      resultMatrixLatex0.LEFT_PARENTHESES = "B\"`\n-";
      resultMatrixLatex0.clear();
      resultMatrixLatex0.setColNameWidth(97);
      resultMatrixLatex0.getDefaultSignificanceWidth();
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.LOSS_STRING = "";
      assertEquals(97, resultMatrixLatex0.getColNameWidth());
      
      resultMatrixLatex0.setColNameWidth(0);
      resultMatrixLatex0.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 1);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML1.getDefaultRowNameWidth();
      resultMatrixLatex0.getStdDevWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixGnuPlot0);
      resultMatrixLatex0.clear();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.7366518586414075
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("cQ-[2t!\"8", "cQ-[2t!\"8");
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String[][] stringArray1 = resultMatrixGnuPlot0.toArray();
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(3, stringArray1.length);
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.89331411902028
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.setShowStdDev(true);
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.m_SignificanceWidth = (-1584);
      resultMatrixLatex0.listOptions();
      resultMatrixHTML0.padString("$\bullet$", 3315);
      resultMatrixLatex0.getRevision();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      resultMatrixLatex0.setSignificanceWidth((-1116));
      resultMatrixHTML0.setColOrder(intArray0);
      resultMatrixLatex0.m_MeanPrec = 2;
      resultMatrixHTML0.setPrintColNames(false);
      resultMatrixHTML0.headerKeys();
      assertEquals((-1584), resultMatrixHTML0.getSignificanceWidth());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDisplayName();
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixLatex0.headerKeys();
      resultMatrixGnuPlot0.toArray();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.toStringKey();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.2411882609962857
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex();
      resultMatrixLatex1.getDisplayName();
      resultMatrixLatex1.getDefaultColNameWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(53, 1);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(53, resultMatrixHTML0.getVisibleColCount());
      
      int int0 = resultMatrixLatex0.getStdDevWidth();
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, int0);
      
      resultMatrixLatex1.clear();
      assertEquals(1, resultMatrixLatex1.getVisibleRowCount());
      assertFalse(resultMatrixLatex1.getDefaultShowStdDev());
      assertEquals(0, resultMatrixLatex1.getDefaultSignificanceWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.729584256456177
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      
      String string0 = resultMatrixSignificance0.toStringMatrix();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals("Dataset (1)\n-----------\nrow0       \n", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.4473367134317914
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setSignificanceWidth((-546));
      resultMatrixGnuPlot0.padString("Get position of flag -f: ", (-546));
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      
      resultMatrixGnuPlot0.m_RemoveFilterName = true;
      resultMatrixGnuPlot0.setColNameWidth((-5442));
      resultMatrixGnuPlot0.m_ShowStdDev = true;
      resultMatrixGnuPlot0.getSignificanceWidth();
      resultMatrixGnuPlot0.getColName(26);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.994174599627573
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "]%-xuwl$q~";
      stringArray0[5] = "";
      stringArray0[6] = "#te";
      stringArray0[7] = "PY2O0niGwN.xZ@D";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.addHeader("", "t(g*>78O,<QlL6_6");
      assertFalse(resultMatrixLatex0.getDefaultEnumerateRowNames());
      assertEquals(0, resultMatrixLatex0.getColNameWidth());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.1751178234220223
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixCSV0.getDefaultColNameWidth();
      resultMatrixCSV0.printColNamesTipText();
      resultMatrixCSV0.listOptions();
      resultMatrixCSV0.m_MeanWidth = 17;
      resultMatrixCSV0.toStringRanking();
      resultMatrixGnuPlot0.setStdDevWidth(26);
      assertEquals(26, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getCount((-273));
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertFalse(resultMatrixPlainText0.getShowStdDev());
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getColNameWidth());
      assertEquals(0, resultMatrixPlainText0.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText0.getSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }
}
