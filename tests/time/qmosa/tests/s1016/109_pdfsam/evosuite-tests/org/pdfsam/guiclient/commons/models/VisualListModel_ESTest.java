/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:57:48 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.image.MultiPixelPackedSampleModel;
import java.awt.image.renderable.ParameterBlock;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JSpinner;
import javax.swing.event.ListDataListener;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0557051606564785
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[11];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[1] = 110;
      intArray1[7] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.2653188729187956
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[11];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 110;
      intArray0[7] = 0;
      intArray0[8] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      System.setCurrentTimeMillis(0L);
      visualListModel0.getElements();
      assertEquals(11, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9323469378605727
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 1219;
      intArray0[1] = 1219;
      intArray0[2] = 1219;
      intArray0[3] = 1219;
      intArray0[4] = (-1798);
      intArray0[5] = 1219;
      intArray0[6] = 1219;
      intArray0[7] = (-3366);
      intArray0[8] = 1219;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 1219;
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1219
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem visualPageListItem1 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(1219, (-514), false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      int[] intArray0 = new int[1];
      intArray0[0] = (-514);
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      VisualPageListItem visualPageListItem2 = null;
      try {
        visualPageListItem2 = new VisualPageListItem(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.379123516937678
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      int int0 = new Integer(1219);
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray1 = new int[9];
      intArray1[0] = 1219;
      intArray1[1] = 1219;
      intArray1[2] = 1219;
      intArray1[3] = 1219;
      intArray1[4] = 1219;
      intArray1[5] = 3426;
      intArray1[6] = 110;
      intArray1[7] = 1219;
      intArray1[8] = 1219;
      visualListModel0.moveUpIndexes(intArray1);
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1220
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.395996400380184
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[11];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 110;
      intArray1[7] = 0;
      intArray1[8] = 0;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.removeElements(intArray1, true);
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 110
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.399092375612382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(1219, 1219, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[11];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 3426;
      intArray1[6] = 110;
      intArray1[7] = 1;
      intArray1[8] = 1;
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3426
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.sort((Comparator<? super VisualPageListItem>) null);
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, collection0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = Integer.getInteger((String) null, integer0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer3;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      integerArray0[5] = integer3;
      integerArray0[6] = integer0;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      integerArray0[7] = integer4;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel2 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel2);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock1.getParameters();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector1);
      visualListModel0.removeElements((int) integerArray0[1], (-1133), true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.773118601486813
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.removeElements(1219, 1219, true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray1[5] = 3426;
      intArray1[6] = 110;
      intArray1[7] = 1;
      intArray1[8] = 1;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer[] integerArray0 = new Integer[23];
      integerArray0[0] = integer0;
      int[] intArray0 = new int[0];
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener((ListDataListener) null);
      int[] intArray0 = new int[1];
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      int int0 = 604;
      intArray0[0] = 604;
      visualListModel0.moveDownIndexes(intArray0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8234757337139063
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[20];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(1);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[9];
      Integer.getInteger("");
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray1 = new int[9];
      intArray1[0] = (int) integerArray0[2];
      intArray1[1] = (int) integerArray0[1];
      intArray1[2] = (int) integerArray0[1];
      Integer.min(200, (int) integerArray0[3]);
      intArray1[3] = (int) integerArray0[2];
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel1.updateElementAt((-1246), (VisualPageListItem) null);
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel0.removeElementAt(1, true);
      assertFalse(visualListModel0.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem visualPageListItem1 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      Integer.getInteger("");
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0608333657846836
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Function<VisualPageListItem, String> function0 = (Function<VisualPageListItem, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super VisualPageListItem, ? extends String>) function0);
      unaryOperator0.apply((VisualPageListItem) null);
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.replaceAll(unaryOperator0);
      stack0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5453929420108388
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt(visualPageListItemArray0[0], 1);
      visualListModel0.subList(2302, 2302, true);
      int int0 = visualListModel0.getSize();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[2] = 999;
      Integer integer0 = new Integer((-2141));
      Integer integer1 = Integer.getInteger("", integer0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer3;
      Integer.remainderUnsigned(999, (int) integerArray0[1]);
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      integerArray0[4] = integer1;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel1);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector0);
      visualListModel0.addListDataListener(jComboBox1);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.prependAllElements(vector1);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((int) integerArray0[4]);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = Integer.getInteger((String) null, integer0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer3;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      integerArray0[5] = integer3;
      integerArray0[6] = integer0;
      AffineTransform affineTransform0 = new AffineTransform(1.0, 936.899467852, (double) integerArray0[0], (-1.0), 1.0, 0.0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.248821541093825
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[7];
      int int0 = 240;
      intArray0[1] = 240;
      intArray0[2] = 828;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 3);
      visualListModel0.getListDataListeners();
      visualListModel0.removeElements(240, (-1400), true);
      visualListModel0.moveDownIndex(1);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6120814568740403
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.listIterator();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[20];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(1);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[9];
      Integer.getInteger("");
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer[] integerArray1 = new Integer[6];
      integerArray1[0] = integer3;
      integerArray1[1] = integer3;
      integerArray1[2] = integer3;
      integerArray1[3] = integer2;
      integerArray1[4] = integer3;
      integerArray1[5] = integer3;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector0);
      visualListModel0.addListDataListener(jComboBox1);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.prependAllElements(vector1);
      visualListModel0.addAllElements((-212), (Collection<VisualPageListItem>) stack0);
      assertEquals("[null, null]", stack0.toString());
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7154779193508705
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[20];
      intArray0[0] = 979;
      intArray0[1] = (-4641);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.clearData();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel1.addElementAt((VisualPageListItem) null, (-4641));
      visualListModel1.getListDataListeners();
      visualListModel1.removeElements(1, (-1680), true);
      visualListModel0.moveDownIndex(0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      assertEquals(0, stack0.size());
      assertTrue(stack0.equals((Object)stack1));
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3847257578340364
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 3426;
      intArray0[6] = 110;
      intArray0[7] = 1;
      intArray0[8] = 1;
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3426
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.407494209446948
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(90);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      stack0.add((VisualPageListItem) null);
      intArray0[0] = 999;
      visualListModel0.moveUpIndex(999);
      intArray0[1] = 90;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 999
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      boolean boolean0 = false;
      visualListModel0.addElement((VisualPageListItem) null);
      int int1 = (-3366);
      visualListModel0.subList((-3366), (-1), false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.574729047527649
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[0], 1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2489;
      intArray0[3] = 2489;
      intArray0[4] = 2489;
      intArray0[5] = 2489;
      visualListModel1.reverseElements(intArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 2489);
      visualListModel1.updateElementAt(2489, (VisualPageListItem) null);
      visualListModel0.getElements();
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      int[] intArray1 = new int[3];
      intArray1[0] = 999;
      visualListModel0.rotateClockwiseElements(intArray1);
      intArray1[1] = (-748);
      intArray1[2] = 980;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      MultiPixelPackedSampleModel multiPixelPackedSampleModel0 = null;
      try {
        multiPixelPackedSampleModel0 = new MultiPixelPackedSampleModel((-748), (-636), 996, 2352, 2383, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-636) and height (996) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((VisualPageListItem) null);
      UnaryOperator<VisualPageListItem> unaryOperator1 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator1);
      stack0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      System.setCurrentTimeMillis(5394L);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.377872234615497
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 604;
      visualListModel0.clearData();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(604);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[8];
      intArray1[0] = 604;
      intArray1[1] = 604;
      intArray1[2] = 604;
      intArray1[3] = 604;
      intArray1[4] = 604;
      intArray1[5] = 604;
      intArray1[6] = 604;
      intArray1[7] = 604;
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.listIterator();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[9];
      Integer.getInteger("");
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer[] integerArray1 = new Integer[6];
      integerArray1[0] = integer3;
      integerArray1[1] = integer3;
      integerArray1[2] = integer3;
      integerArray1[3] = integer2;
      integerArray1[4] = integer3;
      integerArray1[5] = integer3;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector0);
      visualListModel0.addListDataListener(jComboBox1);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.prependAllElements(vector1);
      visualListModel0.addAllElements((-212), (Collection<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(10, (-1782), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(10) > toIndex(-1782)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1674;
      visualListModel0.getElementAt(1674);
      visualListModel0.getListDataListeners();
      int int1 = (-803);
      visualListModel0.moveDownIndex((-803));
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel1.setData(vector0);
      // Undeclared exception!
      try { 
        vector0.remove((-803));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -803
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[2]);
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[5] = integer5;
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(271, (Collection<VisualPageListItem>) null);
      Object object0 = visualListModel0.getElementAt((int) integerArray0[2]);
      assertNull(object0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = Integer.getInteger((String) null, integer0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer3;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      integerArray0[5] = integer3;
      AffineTransform affineTransform0 = new AffineTransform((-1160.82), 581.6784230134, 0.0, (-1160.82), 0.0, (-1830.323882773638));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getValidElements();
      System.setCurrentTimeMillis((long) integerArray0[2]);
      visualListModel0.getElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((VisualPageListItem) null);
      UnaryOperator<VisualPageListItem> unaryOperator1 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator1);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer.toUnsignedString((-3765));
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel1);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      parameterBlock0.getParameters();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Class<DefaultTableModel> class0 = DefaultTableModel.class;
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      stack0.replaceAll(unaryOperator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      stack0.add((VisualPageListItem) null);
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      UnaryOperator.identity();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      jComboBox0.setEditor(basicComboBoxEditor0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[1]);
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.PALETTE_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      integerArray0[6] = integer6;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(integerArray0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      visualListModel0.addAllElements((-911), (Collection<VisualPageListItem>) vector1);
      assertEquals("[]", vector1.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      int int0 = 1;
      intArray0[0] = 1;
      int int1 = 0;
      intArray0[1] = 0;
      boolean boolean0 = true;
      visualListModel0.removeElements(52, 0, true);
      intArray0[2] = 1017;
      int int2 = 90;
      intArray0[3] = 90;
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      AffineTransform.getRotateInstance((-1393.08), 0.0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = null;
      try {
        hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>((-1), 1017);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -1
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0547779606981393
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      int[] intArray0 = new int[3];
      intArray0[0] = (-183);
      intArray0[1] = 2650;
      intArray0[2] = 9999;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(0, 2650, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(11, 1942, false);
      int[] intArray0 = new int[1];
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(65535, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 65535
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = Integer.getInteger((String) null, integer0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedLong(28);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer3;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      integerArray0[5] = integer3;
      integerArray0[6] = integer0;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-615), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -615
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = Integer.getInteger((String) null, integer0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedLong(28);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer3;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      Integer.sum(28, (int) integerArray0[3]);
      integerArray0[4] = integer2;
      integerArray0[5] = integer3;
      integerArray0[6] = integer0;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer.toUnsignedString((int) integerArray0[5]);
      integerArray0[7] = integer4;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel1);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      parameterBlock1.getParameters();
      visualListModel0.getValidElements();
      System.setCurrentTimeMillis(471L);
      visualListModel0.getElements();
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[1];
      intArray0[0] = 604;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {604}, intArray0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[1], 1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.removeElements((-573), 100, true);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(30000, (-1), false);
      System.setCurrentTimeMillis(591L);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.5186153853759072
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.listIterator();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[20];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(1);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[9];
      Integer.getInteger("");
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(11, (-469));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(11) > toIndex(-469)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.3080561808079394
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      stack0.toArray(integerArray0);
      stack0.remove((Object) integer0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.getSize();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.getListDataListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[7];
      intArray1[0] = (-1);
      intArray1[1] = 9;
      intArray1[2] = (-3174);
      intArray1[3] = 1277;
      intArray1[4] = 76;
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1277, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1277) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-324));
      visualListModel1.subList((-212), 2648, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-31);
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte)28;
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray0 = new Integer[6];
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer2;
      integerArray0[1] = integer1;
      integerArray0[2] = integer0;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      integerArray0[5] = integer1;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      JComboBox<Object> jComboBox2 = new JComboBox<Object>(vector0);
      Boolean boolean0 = new Boolean(false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Stack<Integer> stack0 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.removeElements(intArray0, false);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      System.setCurrentTimeMillis(591L);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = Integer.getInteger((String) null, integer0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedLong(28);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer3;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer1;
      integerArray0[4] = integer2;
      integerArray0[5] = integer3;
      integerArray0[6] = integer0;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer.toUnsignedString((int) integerArray0[5]);
      integerArray0[7] = integer4;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel1);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      parameterBlock1.getParameters();
      visualListModel0.getValidElements();
      System.setCurrentTimeMillis(471L);
      visualListModel0.getElements();
      Object object0 = visualListModel0.getElementAt(1357);
      assertNull(object0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<Integer> stack0 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel1.removeElements((int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      int[] intArray0 = new int[8];
      intArray0[0] = (int) integerArray0[1];
      intArray0[1] = (int) integerArray0[0];
      intArray0[2] = (int) integerArray0[0];
      intArray0[3] = (-1);
      intArray0[4] = (int) integerArray0[0];
      intArray0[5] = (int) integerArray0[0];
      intArray0[6] = (int) integerArray0[0];
      intArray0[7] = (int) integerArray0[0];
      visualListModel0.removeElements(intArray0, true);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Boolean boolean0 = new Boolean(true);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6811293135849483
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveDownIndex(0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.sort((Comparator<? super VisualPageListItem>) null);
      visualListModel0.addAllElements(0, collection0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.9593337382266454
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.addAllElements(1, collection0);
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(460);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[5] = integer1;
      integerArray0[6] = integer0;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      defaultComboBoxModel0.removeElement(integerArray0[2]);
      defaultComboBoxModel0.insertElementAt(integerArray0[5], 0);
      Integer.toUnsignedString((int) integerArray0[5]);
      Class<JSpinner.DateEditor> class0 = JSpinner.DateEditor.class;
      defaultComboBoxModel0.getListeners(class0);
      // Undeclared exception!
      try { 
        defaultComboBoxModel0.removeElementAt(1688);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1688 >= 7
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator<ChronoLocalDate> unaryOperator1 = UnaryOperator.identity();
      Function<Object, ChronoLocalDate> function0 = (Function<Object, ChronoLocalDate>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, ChronoLocalDate> function1 = unaryOperator1.compose((Function<? super Object, ? extends ChronoLocalDate>) function0);
      Function<VisualPageListItem, ChronoLocalDate> function2 = unaryOperator0.andThen((Function<? super VisualPageListItem, ? extends ChronoLocalDate>) function1);
      unaryOperator0.andThen((Function<? super VisualPageListItem, ? extends ChronoLocalDate>) function2);
      Function<Object, VisualPageListItem> function3 = (Function<Object, VisualPageListItem>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends VisualPageListItem>) function3);
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      Vector<JSpinner.DateEditor> vector0 = new Vector<JSpinner.DateEditor>();
      stack0.removeAll(vector0);
      stack0.replaceAll(unaryOperator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertTrue(stack0.isEmpty());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.4428352147175594
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.appendAllElements(stack0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = (-3245);
      int int0 = (-1);
      intArray0[1] = (-1);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = (Integer) (-1);
      integerArray0[1] = (Integer) (-3245);
      integerArray0[2] = (Integer) (-3245);
      integerArray0[3] = (Integer) (-1);
      integerArray0[4] = (Integer) (-1);
      integerArray0[5] = (Integer) (-1);
      integerArray0[6] = (Integer) int0;
      integerArray0[7] = (Integer) (-1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      intArray0[2] = 0;
      intArray0[3] = 0;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.subList(1, 6);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-324));
      visualListModel0.subList((-212), 2648, true);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.updateElementAt(703, (VisualPageListItem) null);
      System.setCurrentTimeMillis(872L);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 93;
      visualListModel0.subList(93, 93, true);
      int int1 = 0;
      int int2 = 0;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0, "ZEx`u:vfaMq]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(vector0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.subList((-1), 1);
      int[] intArray1 = new int[4];
      intArray1[0] = (-1);
      intArray1[1] = 1923;
      intArray1[2] = (-1);
      intArray1[3] = (-1);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertFalse(intArray1.equals((Object)intArray0));
  }
}
