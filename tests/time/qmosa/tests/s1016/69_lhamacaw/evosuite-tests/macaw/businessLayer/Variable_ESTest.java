/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:21:42 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.624755536425994
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setQuestionNumber(".1LE2");
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.columnEnd = ".1LE2";
      rawVariable0.clone();
      assertEquals(".1LE2", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1645679268493927
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setIdentifier(907);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("cN\"+@!tWLL0Gc");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.setAvailability("=E6BjCtBIOkZFWUG2Y");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      ontologyTerm1.setIdentifier(907);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getDisplayName();
      derivedVariable0.getOntologyTerms();
      User user0 = new User("?u,&?).(!K:c{Y1J", "");
      user0.setFirstName("-LHA");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getColumnStart();
      rawVariable0.getOntologyTerms();
      assertEquals("907", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.724278976524969
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      User user0 = new User("&@&GUQ1:wT", "6ih28TiM");
      derivedVariable0.setAlias("&@&GUQ1:wT");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "+t(!QR9YvROT@";
      derivedVariable1.setCodeBookNumber("+t(!QR9YvROT@");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("&@&GUQ1:wT", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.8144354648435836
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setCleaningDescription((String) null);
      rawVariable0.removeValueLabel((ValueLabel) null);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      arrayList0.ensureCapacity((-1639));
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.isCoded();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable1.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.7628701703399474
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User("y:A)GBrRt", "y:A)GBrRt");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user1 = new User((String) null, "'{id!9Y?Oi-kIAC:u");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, (Variable) null);
      User user2 = new User("e81Xrv[", "");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getAlias();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      boolean boolean1 = rawVariable0.isCoded();
      assertTrue(boolean1 == boolean0);
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1639));
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(arrayList1.contains(ontologyTerm1));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.738014454030443
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      User user1 = new User("", "jNHm");
      derivedVariable0.setIdentifier(196);
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable1);
      rawVariable0.getLabel();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.setFilePath("f");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("f", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("+t(!QR9YvROT@");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "+t(!QR9YvROT@";
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.455394993624801
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("FM");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("8 1cs%~&`'JP");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.437706361220567
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      user0.setAddressLine2((String) null);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3143719702816234
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("zSrUr%/^");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      System.setCurrentTimeMillis(126L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0246425382992217
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User("jNHm", "");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      user0.setStatus("variable.alias.label");
      User user1 = new User("yG`?Z]77:%l%", "");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.getLabel();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("8 1cs%~&`'JP");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.795898337549952
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      String string0 = "%pv{-dbYrId\"S";
      derivedVariable0.setColumnStart("%pv{-dbYrId\"S");
      rawVariable0.setAvailability("%pv{-dbYrId\"S");
      rawVariable0.setName("%pv{-dbYrId\"S");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      arrayList0.removeAll(linkedList0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.setIsNewRecord(false);
      Variable.validateFields(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      user0.setPassword("rP3Ls2u");
      try { 
        User.checkValidEmail("k|&V{zu|");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"k|&V{zu|\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.setLabel((String) null);
      String string0 = "#T^X~V\\u\\Hn=[(";
      User user0 = new User("&@&GUQ1:wT", string0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument3);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      user1.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setTerm("variable.label.label");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm5);
      assertFalse(boolean0);
      
      rawVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9186165157435298
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("FM");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("8 1cs%~&`'JP");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(arrayList1.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.getYear();
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      boolean boolean1 = rawVariable0.isCoded();
      assertTrue(boolean1 == boolean0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getYear();
      rawVariable0.getAlternativeVariable();
      rawVariable0.getSupportingDocuments();
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", string0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.455394993624801
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("FM");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("8 1cs%~&`'JP");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable0);
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.810091037151746
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("P8h6#h2QIY!t%");
      derivedVariable0.codeBookNumber = "P8h6#h2QIY!t%";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.containsAll(arrayList1);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("P8h6#h2QIY!t%");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable0.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setIdentifier(0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.setFilePath("variable.notes.label");
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("P8h6#h2QIY!t%", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.453980395198351
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = null;
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.7540038650329945
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      User user1 = new User((String) null, (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setPassword("Unknown");
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      User user2 = new User(")h5Zu", ")h5Zu");
      derivedVariable0.setLabel(")h5Zu");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.setYear("");
      ontologyTerm1.setTerm("I6~0V!P&+\u0002,|u");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable0.addOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5035870903352846
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(3196);
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.getIdentifier();
      derivedVariable0.setCodeBookNumber("P8h6#hQIY!t%");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("P8h6#hQIY!t%");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      User user0 = new User("N'0M#qQ.i", "");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.containsAll(arrayList1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getFilePath();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.993957054937278
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName(")h5Zu");
      ontologyTerm0.setTerm("|&~S1&'U{<#s");
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList2.isEmpty());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.getLabel();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      variable0.getNotes();
      String string0 = variable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      variable0.removeOntologyTerm(ontologyTerm1);
      assertSame(variable0, derivedVariable1);
      assertFalse(variable0.isCleaned());
      assertEquals("Unknown", variable0.getCategory());
      assertEquals("Unknown", variable0.getAvailability());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9367155191755026
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCategory("general.error.blankField");
      derivedVariable2.containsOntologyTerm(ontologyTerm1);
      derivedVariable1.removeSourceVariable(derivedVariable2);
      assertEquals("general.error.blankField", derivedVariable2.getCategory());
      
      derivedVariable1.getAlternativeVariable();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4522469794234416
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")42Lh5Zu");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList0.add(ontologyTerm2);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm("Q");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis((-1466L));
      derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.788490352562607
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")42Lh5Zu");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList0.add(ontologyTerm2);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      ontologyTerm0.setTerm("Q");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis((-1466L));
      String string0 = rawVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("supportingDocument.fileName.label");
      rawVariable0.setName((String) null);
      assertEquals("supportingDocument.fileName.label", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = null;
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      arrayList0.add((SupportingDocument) null);
      rawVariable0.codeBookNumber = "zYtyLmMN";
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "ontologyTerm.term.saveChanges";
      rawVariable0.setName((String) null);
      User user0 = new User();
      user0.setEmail("ontologyTerm.term.saveChanges");
      user0.setFirstName("V ");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.455394993624801
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("FM");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("8 1cs%~&`'JP");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.576408258700284
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("FM");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")h5Zu");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("8r.cs%;~`'JP");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getNotes();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "}Ymwx.q{ndBRR63}";
      rawVariable0.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnEnd = "0";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.addAll((Collection<? extends ValueLabel>) arrayList1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getLabel();
      User user0 = new User("variable.label.label", "0");
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      arrayList1.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getNotes();
      rawVariable0.setCategory("}Ymwx.q{ndBRR63}");
      rawVariable0.setColumnEnd("");
      rawVariable0.setCleaningStatus("}Ymwx.q{ndBRR63}");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.setName("");
      derivedVariable0.getCleaningDescription();
      rawVariable0.getCodeBookNumber();
      assertEquals("}Ymwx.q{ndBRR63}", rawVariable0.getCategory());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.518442710343456
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable1.getAlternativeVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("MISSING_DISPLAY_LIST_SELECTOR");
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.setCategory("MISSING_DISPLAY_LIST_SELECTOR");
      assertEquals("MISSING_DISPLAY_LIST_SELECTOR", derivedVariable1.getCategory());
      
      rawVariable0.addSupportingDocument(supportingDocument0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.856773563873258
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      derivedVariable0.setColumnEnd("\u0006W");
      derivedVariable0.setCleaningDescription("DUPLICATE_VARIABLE_ASSOCIATION");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCategory();
      derivedVariable1.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("&q N+c");
      derivedVariable2.containsSupportingDocument(supportingDocument1);
      derivedVariable0.getValueLabels();
      derivedVariable2.getAlternativeVariable();
      supportingDocument1.setTitle("00DY\"a2)/H ");
      derivedVariable0.removeValueLabel((ValueLabel) null);
      derivedVariable2.getSupportingDocuments();
      derivedVariable0.setCategory("Ue%U;t[+dhy\";<g");
      derivedVariable0.addSupportingDocument(supportingDocument1);
      assertEquals("Ue%U;t[+dhy\";<g", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.352641895713288
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setIdentifier(892);
      ontologyTerm0.setTerm("variable.label.label");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.removeSourceVariable(rawVariable0);
      assertEquals("892", rawVariable0.getDisplayItemIdentifier());
      
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertEquals(892, variable0.getIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.973176228217073
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.setCoded(true);
      ontologyTerm1.clone();
      derivedVariable0.setIdentifier((-1543));
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber("NVpJ$@D0");
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Yg\"0n8*EE3C");
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("-1543", derivedVariable0.getDisplayItemIdentifier());
      assertEquals((-1543), int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6195259631210703
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setCodeBookNumber("P8h6#h2QIY!t%");
      derivedVariable0.codeBookNumber = "P8h6#h2QIY!t%";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("P8h6#h2QIY!t%");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getFilePath();
      Variable variable0 = null;
      derivedVariable0.setFilePath("P8h6#h2QIY!t%");
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("DUPLICATE_AVAILABILITY_STATE");
      supportingDocument1.setFilePath("&q N+c");
      SupportingDocument supportingDocument2 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.775506855099772
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setCleaningDescription((String) null);
      rawVariable0.removeValueLabel((ValueLabel) null);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.clone();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.isCoded();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.843793592488668
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setNotes("(WoK6dhj`}dF]P");
      derivedVariable0.setColumnEnd("variable.isCleaned.saveChanges.changedToNotClean");
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable1.getColumnEnd();
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ontologyTerm0.setIdentifier(4712);
      ontologyTerm0.setNameSpace("(WoK6dhj`}dF]P");
      User user1 = new User("e", "7gwvDFQ[Qs[G_qINiHl");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable1);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.setFilePath("z");
      boolean boolean0 = derivedVariable2.hasSameDisplayName(derivedVariable1);
      assertEquals("z", derivedVariable1.getFilePath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5819853473450114
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.questionNumber = null;
      supportingDocument0.setIdentifier(854);
      rawVariable0.setCleaningDescription((String) null);
      supportingDocument0.clone();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.getYear();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6609431845496183
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("P(g053.6[I^];66FOp");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getAlias();
      assertEquals("Unknown", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.7923598007225934
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      User user0 = new User("y:A)GBrRt", "y:A)GBrRt");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.notes = "z";
      user0.setPassword("!t}7j1 gQBxK}S]x$+a");
      rawVariable0.isNewRecord();
      user0.setStatus("+t(!QR9YvROT@");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      ontologyTerm0.setDescription("y:A)GBrRt");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningStatus();
      Variable.validateFields(rawVariable0);
      rawVariable0.setCleaningStatus("z");
      rawVariable0.getOntologyTerms();
      rawVariable0.getYear();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("_&uB\"nl");
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.clone();
      assertEquals("z", rawVariable0.getNotes());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.820779573638428
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "}Ymwx.q{ndBRR63}";
      rawVariable0.getDisplayItemIdentifier();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnEnd = "0";
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel0);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("", rawVariable2.getLabel());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("0", rawVariable2.getColumnEnd());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("", rawVariable2.getName());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getYear());
      assertFalse(rawVariable2.isNewRecord());
      
      rawVariable1.getLabel();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      rawVariable0.setLabel((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.getYear();
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0204142811723194
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("8 1cs%~&`'JP");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getLabel();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.7540939672990667
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("jNHm", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      User user1 = new User("", "");
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.getLabel();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable1.getForm();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.8324187975814343
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, (String) null);
      user0.setUserID((String) null);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setCoded(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("Unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm3);
      derivedVariable1.getFilePath();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.getAlias();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      rawVariable0.getYear();
      rawVariable0.getAlternativeVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.getSupportingDocuments();
      rawVariable0.getCleaningDescription();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.retainAll(arrayList0);
      arrayList1.spliterator();
      ArrayList<RawVariable> arrayList2 = new ArrayList<RawVariable>();
      arrayList1.add((Variable) rawVariable0);
      UnaryOperator<RawVariable> unaryOperator0 = UnaryOperator.identity();
      rawVariable0.setNotes((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("z");
      unaryOperator0.apply(rawVariable1);
      arrayList2.replaceAll(unaryOperator0);
      // Undeclared exception!
      try { 
        arrayList1.addAll((-778), (Collection<? extends Variable>) arrayList2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -778, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.969849579660301
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("variable.alternativeVariable.label");
      supportingDocument0.setFileName((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setForm("g^LF2U/)MI`n.2nso");
      rawVariable0.setCoded(true);
      rawVariable0.setIsNewRecord(true);
      rawVariable0.getForm();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      User user0 = new User();
      user0.setCounty(",jn");
      user0.setAddressLine1("g^LF2U/)MI`n.2nso");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setCodeBookNumber((String) null);
      String string0 = derivedVariable0.getForm();
      assertNotNull(string0);
      
      String string1 = derivedVariable0.getCleaningDescription();
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(string1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setNotes((String) null);
      derivedVariable0.notes = "E(@$n/$sK|,Erkrxgm]";
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User();
      user0.setAffiliation("S0)eA}!%mh'YD`vd4");
      user0.setFirstName("general.error.blankField");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getColumnStart();
      derivedVariable0.setLabel("general.error.blankField");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("E(@$n/$sK|,Erkrxgm]", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.070317405785514
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCategory("z");
      derivedVariable0.setColumnStart("+t(!QR9YvROT@");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.createVariableSummary();
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("+t(!QR9YvROT@", derivedVariable0.getColumnStart());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.0003893532655903
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("aD7/U-U(2|S*W");
      derivedVariable1.createVariableSummary();
      derivedVariable0.setColumnEnd("\u0006W");
      derivedVariable0.setCleaningDescription("\u0006W");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCategory();
      User user0 = new User("\u0006W", "\u0006W");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      user0.setAddressLine2("Unknown");
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.2801336877336102
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode("^XN;?{?yCK");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList0.add(ontologyTerm2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("^XN;?{?yCK");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable2.updateOntologyTerm(ontologyTerm5);
      derivedVariable0.updateOntologyTerm(ontologyTerm6);
      derivedVariable2.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      System.setCurrentTimeMillis((-605L));
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      ValueLabel valueLabel0 = new ValueLabel();
      int int0 = 1;
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7269110076302976
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      user1.setAddressLine1("UNABLE_TO_GET_SUPPORTING_DOCUMENT_IDENTIFIER");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("user.city.label");
      derivedVariable0.setAvailability("");
      derivedVariable0.questionNumber = "user.city.label";
      derivedVariable0.setLabel("Unknown");
      derivedVariable0.createVariableSummary();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("Unknown", derivedVariable0.getLabel());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.754137251721003
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User("jNHm", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      User user1 = new User("", "");
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals(0, arrayList2.size());
      
      rawVariable0.getLabel();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      
      rawVariable0.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd(")Tng%h`$qYs?;QeP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.setCleaningStatus("^%P\"ACl#:=k|");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCleaningDescription("^%P\"ACl#:=k|");
      derivedVariable0.getIdentifier();
      derivedVariable0.setForm(")Tng%h`$qYs?;QeP");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable0.setCleaningDescription("");
      User user0 = new User("", "");
      try { 
        User.checkValidEmail("ontologyTerm.ontologyName.label");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"ontologyTerm.ontologyName.label\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.0245682164857692
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User("", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("jNHm", "INVALID_ADMINISTRATOR");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      rawVariable0.getLabel();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.getQuestionNumber();
      derivedVariable0.getColumnEnd();
      rawVariable0.setAlias("jNHm");
      assertEquals("jNHm", rawVariable0.getAlias());
      
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addValueLabel(valueLabel0);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.687079840507875
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setQuestionNumber(")42Lh5Zu");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName(")42Lh5Zu");
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList0.add(ontologyTerm2);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm("Q");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.425396423821292
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("INVALID_RAW_VARIABLE", "$'Dn+*,Hw<");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnEnd = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setQuestionNumber("G*t\"P/pXD;Q#a[mQc");
      derivedVariable0.getColumnStart();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setIsNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      User user0 = new User();
      user0.setAffiliation("G*t\"P/pXD;Q#a[mQc");
      user0.setAffiliation("G*t\"P/pXD;Q#a[mQc");
      derivedVariable0.setCleaningStatus("*u");
      rawVariable0.isNewRecord();
      rawVariable0.setNotes("");
      derivedVariable0.getColumnEnd();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("G*t\"P/pXD;Q#a[mQc", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setCodeBookNumber("P8h6#h2QIY!t%");
      derivedVariable0.codeBookNumber = "P8h6#h2QIY!t%";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(3081);
      derivedVariable0.setCoded(false);
      ontologyTerm0.clone();
      derivedVariable0.setIdentifier(4265);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.setQuestionNumber("NVpJ$@D0");
      derivedVariable0.getFilePath();
      derivedVariable0.setCodeBookNumber("Unknown");
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("4265", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(4265, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument[] supportingDocumentArray0 = new SupportingDocument[3];
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocumentArray0[0] = supportingDocument0;
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocumentArray0[1] = supportingDocument1;
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocumentArray0[2] = supportingDocument2;
      arrayList0.toArray(supportingDocumentArray0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertNotNull(string0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getYear();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getSourceVariables();
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPostCode(")42Lh5Zu");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList0.add(ontologyTerm2);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm("Q");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable1.getLabel();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      System.setCurrentTimeMillis((-897L));
  }
}
