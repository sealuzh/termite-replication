/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:11:32 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2228255375915524
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(1991);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setGroundColor(1291);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setSkyColor(1291);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.DrawingMode.values();
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 1291, 0.0F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getPhotoWidth();
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(3155);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getWallsAlpha();
      CatalogTexture catalogTexture0 = new CatalogTexture("RATIO_2_1", "RATIO_2_1", (Content) null, (-1896.64F), 990.0F, "RATIO_2_1", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getVideoCameraPath();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      int int0 = 548;
      homeEnvironment0.setSkyColor(8);
      homeEnvironment0.setGroundColor((-2743));
      homeEnvironment0.setCeillingLightColor(8);
      int int1 = 25;
      homeEnvironment1.setVideoFrameRate(25);
      homeEnvironment0.getCeillingLightColor();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      String string0 = "VIDEO_ASPECT_RATIO";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "RATIO_4_3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource RATIO_4_3
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(3155);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("/c>]'m9@!,", propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(8192);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "/c>]'m9@!,", homeEnvironment_Property0);
      propertyChangeEvent0.toString();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor(8192);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment0.setSkyColor((-2192));
      homeEnvironment0.setGroundColor(3155);
      homeEnvironment1.setCeillingLightColor(8192);
      homeEnvironment0.setVideoFrameRate(3155);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(8192, homeEnvironment0.getLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "FG56Bd+5A0~o<Jt[:S");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0886636292274545
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setWallsAlpha(1.0F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getVideoQuality();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getSkyColor();
      homeEnvironment1.setSubpartSizeUnderLight(1.3333334F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      homeEnvironment2.setPhotoAspectRatio(aspectRatio2);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.getVideoWidth();
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio((AspectRatio) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.337046423870716
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(18);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(18);
      homeEnvironment0.setWallsAlpha(1.3333334F);
      homeEnvironment0.setPhotoQuality(12);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoHeight(18);
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(1.3333334F);
      homeEnvironment1.setPhotoHeight(18);
      homeEnvironment0.setVideoFrameRate(16);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getVideoWidth();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.setSkyColor(0);
      homeEnvironment3.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3298980240637897
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(18);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(990);
      homeEnvironment0.setWallsAlpha(18);
      homeEnvironment0.setPhotoQuality(10);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoHeight(4);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(990);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment1.getSkyColor();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.getVideoWidth();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.4382328403367364
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(18);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(18);
      homeEnvironment0.setWallsAlpha(1.3333334F);
      homeEnvironment0.setPhotoQuality(18);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoHeight(4);
      homeEnvironment0.setSubpartSizeUnderLight(1637.2405F);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight(1684.1042F);
      homeEnvironment0.setVideoCameraPath(list0);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getSkyColor();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.clone();
      AspectRatio aspectRatio3 = AspectRatio.RATIO_16_9;
      homeEnvironment1.setVideoAspectRatio(aspectRatio3);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(18, homeEnvironment0.getPhotoQuality());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2394714949802967
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 15.672353F, 0);
      homeEnvironment1.setPhotoWidth((-1979));
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      homeEnvironment2.setSkyColor(0);
      homeEnvironment1.setGroundColor((-1864));
      homeEnvironment1.setCeillingLightColor((-1979));
      homeEnvironment2.setVideoFrameRate((-1864));
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.getVideoWidth();
      System.setCurrentTimeMillis(13684944);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2856927441227812
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(18);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setGroundColor((-2400));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(13684944);
      homeEnvironment1.setPhotoWidth(18);
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-2400), homeEnvironment0.getGroundColor());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0724441304240533
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(3207.6978F, (-2229.0F), 1230.7F, 1.0F, 0, 1.0F, 0, camera_Lens0);
      linkedList0.offerFirst(camera0);
      Camera camera1 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 1.5F, 0);
      linkedList0.add(camera1);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.getSkyColor();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.getVideoWidth();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(3207.6978F, (-2229.0F), 1230.7F, 1.0F, 0, 1.0F, 0, camera_Lens0);
      linkedList0.offerFirst(camera0);
      Camera camera1 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 1.5F, 0);
      linkedList0.add(camera1);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment1.setPhotoQuality((-50));
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setSkyColor(0);
      homeEnvironment0.setGroundColor(0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "6,");
      homeEnvironment1.setCeillingLightColor((-1));
      homeEnvironment0.setVideoFrameRate(1);
      int int0 = homeEnvironment2.getCeillingLightColor();
      assertEquals(1, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 0;
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("OUTLINE", propertyChangeListener0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setSkyColor(11053224);
      int int1 = 2146328330;
      TexturesCategory texturesCategory0 = new TexturesCategory("4sf6Ay:ZFuC'");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(11053224);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 11053224, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.337389477043957
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setLightColor(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoQuality(726);
      homeEnvironment1.setPhotoWidth(0);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_WIDTH", "VIDEO_WIDTH", resourceURLContent0, 726, 1.3333334F, "VIDEO_WIDTH");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 1551.0F);
      homeEnvironment2.setSubpartSizeUnderLight(0);
      homeEnvironment1.getSkyColor();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment2.setLightColor(0);
      homeEnvironment2.getDrawingMode();
      homeEnvironment1.setPhotoQuality(4547);
      assertEquals(4547, homeEnvironment1.getPhotoQuality());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.setCeillingLightColor(2);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("B7])1", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor(1551);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setPhotoWidth(1551);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getDrawingMode();
      assertEquals(1.5F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.3454749304652576
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getSkyTexture();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2146328330, (HomeTexture) null, 13, 1, (-1897));
      homeEnvironment1.setCeillingLightColor(1227133529);
      homeEnvironment0.setVideoFrameRate((-2448));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1520), (HomeTexture) null, (-1520), (HomeTexture) null, (-1520), 2.0F);
      homeEnvironment0.setVideoWidth(3857);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera(3857, 2.0F, 2.0F, 2.0F, 1.5F, (-1201.0F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, (String) null, homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.DrawingMode.values();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(2.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.147694790732772
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-4));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor((-4));
      homeEnvironment0.setWallsAlpha(1.3333334F);
      homeEnvironment0.setPhotoQuality((-4));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoHeight(8);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getVideoWidth();
      AspectRatio aspectRatio2 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      homeEnvironment0.getGroundTexture();
      assertEquals((-4), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.299841890987102
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoWidth(25);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getLightColor();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(25, homeEnvironment0.getPhotoWidth());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9713931362744876
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("7", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(3155);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("/c>]'m9@!,", propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(8192);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "7", "/c>]'m9@!,", homeEnvironment_Property0);
      propertyChangeEvent0.setPropagationId(propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor(8192);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setCeillingLightColor(8192);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getVideoAspectRatio();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.setWallsAlpha((-1790.0F));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setPhotoHeight(8193);
      homeEnvironment1.setVideoFrameRate(8193);
      homeEnvironment2.getLightColor();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.360837820182527
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment1.setVideoFrameRate(3188);
      homeEnvironment1.setVideoFrameRate(8192);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "/c>]'m9@!,", homeEnvironment_Property0);
      propertyChangeEvent0.setPropagationId(homeEnvironment1);
      propertyChangeEvent0.toString();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setLightColor(8192);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment1.setWallsAlpha((-1790.0F));
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("java.beans.PropertyChangeEvent[propertyName=; oldValue=/c>]'m9@!,; newValue=VIDEO_CAMERA_PATH; propagationId=com.eteks.sweethome3d.model.HomeEnvironment@2; source=java.lang.Object@146c9153]", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoWidth(8);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.setSkyColor(1227133529);
      homeEnvironment1.setGroundColor(14);
      homeEnvironment0.setCeillingLightColor(13684944);
      homeEnvironment1.setVideoFrameRate(1227133529);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.0850162128140806
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(3207.6978F, (-2229.0F), 1230.7F, 1.0F, 0, 1.0F, 0, camera_Lens0);
      linkedList0.offerFirst(camera0);
      Camera camera1 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 1.5F, 0);
      linkedList0.add(camera1);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setSkyColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setCeillingLightColor((-1));
      homeEnvironment0.setVideoFrameRate(1);
      int int0 = homeEnvironment2.getCeillingLightColor();
      assertEquals(2550, homeEnvironment0.getLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(33, (HomeTexture) null, 0, 0, 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      boolean boolean0 = NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "FG56Bd+5A0~o<Jt[:S");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-472), (HomeTexture) null, (-472), 0, 1.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-472), homeEnvironment1.getSkyColor());
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals((-472), homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Random.setNextRandom(11);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      Random.setNextRandom(3155);
      homeEnvironment0.isAllLevelsVisible();
      assertEquals(11, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = (-3407);
      homeEnvironment0.setVideoQuality((-3407));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(204);
      int int1 = 0;
      homeEnvironment0.setVideoFrameRate(5);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      String string0 = null;
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.1731248118492754
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2647), (HomeTexture) null, (-2647), (HomeTexture) null, (-2647), (-1979));
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setLightColor((-2339));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment1.setLightColor(320);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment2.setObserverCameraElevationAdjusted(true);
      homeEnvironment2.setPhotoWidth((-1897));
      homeEnvironment2.getPhotoHeight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setSkyColor((-2339));
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setGroundColor(0);
      homeEnvironment2.setCeillingLightColor((-928));
      homeEnvironment1.setVideoFrameRate(14);
      int int0 = homeEnvironment3.getCeillingLightColor();
      assertEquals(0, homeEnvironment3.getGroundColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment0.setPhotoQuality(181);
      int int0 = 1;
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setWallsAlpha(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyColor();
      int int1 = (-1);
      TexturesCategory texturesCategory0 = new TexturesCategory((String) null);
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.3908912020944917
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSubpartSizeUnderLight((-2229.0F));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment2.setVideoCameraPath(list0);
      homeEnvironment0.setCeillingLightColor(3155);
      homeEnvironment1.setPhotoHeight(3155);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.setPhotoWidth(3155);
      homeEnvironment1.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment2.getCeillingLightColor();
      homeEnvironment2.setSkyColor(3155);
      homeEnvironment0.setGroundColor((-1285));
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.setVideoFrameRate(0);
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals((-2229.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, (HomeTexture) null, 13427964, 13, 13427964);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("f", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "SUBPART_SIZE_UNDER_LIGHT", (Object) null, "f");
      Camera camera0 = new Camera(13427964, 13, 0.0F, 13427964, 0.0F, 0.0F);
      propertyChangeEvent0.setPropagationId(camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(13, (HomeTexture) null, 13, 13, 568.7779F);
      homeEnvironment0.setPhotoWidth(13427964);
      assertEquals(13427964, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.027841181869761
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(3155);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("/c>]'m9@!,", propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(8192);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "/c>]'m9@!,", homeEnvironment_Property0);
      propertyChangeEvent0.toString();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor(8192);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment1.setVideoFrameRate((-1161));
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setVideoFrameRate(8192);
      homeEnvironment1.getLightColor();
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment1.getLightColor();
      assertEquals((-1161), homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setPhotoWidth(14);
      homeEnvironment0.setVideoWidth(1);
      homeEnvironment0.setLightColor(5);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(2);
      homeEnvironment1.setSkyColor(5);
      homeEnvironment1.getVideoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "", (Content) null, 14, 456.7997F, (String) null, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(14, homeTexture0, 1403, (-2143434458), 14);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment1.getSkyTexture();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertNull(homeTexture1);
      assertEquals(14.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(14, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(1403, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-2143434458), homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1897));
      homeEnvironment0.setLightColor((-1561));
      homeEnvironment0.setVideoQuality((-1897));
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.clone();
      String string0 = "Unsupported aspect ratio ";
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "Unsupported aspect ratio ", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource Unsupported aspect ratio 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment1.setSubpartSizeUnderLight(1.5F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("B7])1", propertyChangeListener0);
      homeEnvironment1.setPhotoHeight(2565);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor(1551);
      homeEnvironment2.setPhotoQuality(1022);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment2.setLightColor(1551);
      homeEnvironment2.setGroundColor(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment2.setVideoWidth(320);
      homeEnvironment2.getVideoFrameRate();
      homeEnvironment0.setVideoQuality(25);
      homeEnvironment1.setPhotoWidth(0);
      homeEnvironment1.setSubpartSizeUnderLight(1551);
      homeEnvironment1.getSkyColor();
      homeEnvironment2.isAllLevelsVisible();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setVideoWidth(320);
      assertEquals(1551, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float float0 = 1637.24F;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      int int0 = (-1610);
      String string0 = "";
      try { 
        MockURL.URL(",23.[`lU9ybF`");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: ,23.[`lU9ybF`
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(4268);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FDrN+B20&BN;C*\"", propertyChangeListener0);
      Camera camera0 = new Camera(4268, (-897.0F), 0.0F, (-83.9805F), 3719L, 4268);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FDrN+B20&BN;C*\"", camera0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor((-1742));
      homeEnvironment0.getLightColor();
      homeEnvironment0.setSubpartSizeUnderLight((-1214.0581F));
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setLightColor((-1742));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(4268, homeEnvironment0.getGroundColor());
      assertEquals((-1742), int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      homeEnvironment1.getSkyTexture();
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "Oz~2/|^g-[Pcv-b'*", uRLContent0, 1.5F, (-1455), "SQUARE_RATIO", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1455), homeTexture0, 8, 1851, 1851);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1851.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1455), homeEnvironment0.getGroundColor());
      assertNotNull(homeTexture1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(8, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1851, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1520), (HomeTexture) null, (-1520), (HomeTexture) null, (-1520), 2.0F);
      homeEnvironment0.setVideoWidth(3857);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera(3857, 2.0F, 2.0F, 2.0F, 1.5F, (-1201.0F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, (String) null, homeEnvironment_Property0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setLightColor(16);
      assertEquals(16, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(3155);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("/c>]'m9@!,", propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(8192);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "/c>]'m9@!,", homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor(8192);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("^yv}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.^yv}
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4673973094161257
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor((-275));
      homeEnvironment0.setPhotoQuality(181);
      homeEnvironment0.setVideoWidth(1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("wkb:", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "Gy!X=tK_/\"KZq", (Object) null, aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.setVideoQuality(181);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment1.setVideoFrameRate(8193);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(181, homeEnvironment0.getPhotoQuality());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9237738987163575
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 3207.6978F, 0);
      linkedList0.add(camera0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setSkyColor(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getGroundColor();
      homeEnvironment1.setLightColor(0);
      assertEquals(2550, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.2394714949802967
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(3207.6978F, (-2229.0F), 1230.7F, 1.0F, 0, 1.0F, 0, camera_Lens0);
      linkedList0.offerFirst(camera0);
      Camera camera1 = new Camera(3207.6978F, 2550, (-318.87515F), 0.0F, 1.5F, 0);
      linkedList0.add(camera1);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.getCeillingLightColor();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-1979), (HomeTexture) null, 0, 2550, (-2229.0F));
      homeEnvironment2.setSkyColor(0);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment1.setCeillingLightColor((-1));
      homeEnvironment0.setVideoFrameRate(1);
      assertEquals(0, homeEnvironment0.getGroundColor());
      
      int int0 = homeEnvironment2.getCeillingLightColor();
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.172431811156274
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(6);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoWidth(3);
      homeEnvironment0.setCeillingLightColor(3);
      homeEnvironment0.setVideoQuality(3);
      homeEnvironment0.setVideoFrameRate((-160));
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getDrawingMode();
      HomeEnvironment.DrawingMode.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("*Vpf/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.*Vpf/
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-449));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-449), homeEnvironment0.getPhotoHeight());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment0.setPhotoHeight(3388);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getWallsAlpha();
      Random.setNextRandom((-633));
      homeEnvironment0.getDrawingMode();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        MockURL.URL("5Q2MTv^pH-sU*MeZ", "", 3388, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Parts", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-1979), (HomeTexture) null, 0, (-1979));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setLightColor(2550);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "#M_xgkR0qXT;");
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("r>[m@PK_o~>[vFG3", "r>[m@PK_o~>[vFG3", temporaryURLContent0, 0.0F, 1.0F, "r>[m@PK_o~>[vFG3");
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 1010, 1.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("Z{b2B$_", (Content) null, 1.0F, 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-444), homeTexture0, (-444), (-444), 1.0F);
      CatalogTexture catalogTexture1 = new CatalogTexture("SKY_TEXTURE", (Content) null, 1.0F, 3233.1157F);
      TexturesCategory texturesCategory0 = new TexturesCategory(",:G}-ec\"]4,WUH6|2");
      catalogTexture1.setCategory(texturesCategory0);
      catalogTexture0.compareTo(catalogTexture1);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-444), homeEnvironment0.getGroundColor());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-444), homeEnvironment0.getSkyColor());
      assertEquals(300, int0);
      assertEquals((-444), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(3155);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("FILL", propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(8192);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", "FILL", homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setLightColor(8192);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      propertyChangeListenerProxy2.propertyChange((PropertyChangeEvent) null);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy2);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment0.setSubpartSizeUnderLight(8192);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy2);
      homeEnvironment0.setPhotoHeight(1532);
      homeEnvironment1.setVideoFrameRate(13);
      assertEquals(8192, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(13684944, int0);
      
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "ogZ*+5{~Di");
      Camera camera0 = new Camera(0.0F, 0.0F, 1.3333334F, 1.3333334F, 1147.802F, (-1519.421F), 0L, camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.offerFirst(camera0);
      Camera camera1 = new Camera(1.3333334F, 1.0F, 0.0F, 0L, 0L, 1637.24F);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setGroundColor(13684944);
      CatalogTexture catalogTexture0 = new CatalogTexture("ogZ*+5{~Di", "", (Content) null, 351.0F, (-505.243F), "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "6,");
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoFrameRate((-1));
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(18);
      homeEnvironment0.setWallsAlpha(1.3333334F);
      homeEnvironment0.setPhotoQuality(18);
      homeEnvironment0.getVideoQuality();
      AspectRatio aspectRatio2 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio2);
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio3 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoAspectRatio(aspectRatio3);
      assertEquals(1.3333334F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0.0F, 0.0F, 1.3333334F, 155.1905F, 1147.802F, (-1519.421F), 0L, camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.offerFirst(camera0);
      Camera camera1 = new Camera(1.3333334F, 1.0F, 155.1905F, 0L, 0L, 1637.24F);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath(linkedList1);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setGroundColor(13684944);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "6,");
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoFrameRate((-1));
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(13684944, homeEnvironment0.getGroundColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoHeight(1160);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.getVideoWidth();
      AspectRatio aspectRatio1 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.setSkyColor((-1771));
      homeEnvironment0.setGroundColor((-1353));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setCeillingLightColor(4);
      homeEnvironment0.setVideoFrameRate(548);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-1353), homeEnvironment0.getGroundColor());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoHeight(1160);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio1 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1898);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FDrN+B20&BN;C*\"", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.5F, (-897.0F), (-1133.0F), (-1758), 0.0F, (-83.9805F), 3719L, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "FDrN+B20&BN;C*\"", camera0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor((-1758));
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setLightColor((-1758));
      assertEquals(1898, homeEnvironment0.getGroundColor());
  }
}
