/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:36:00 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.1950745878335938
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player(1722, "state.Party", "state.Party", 1722, 1722);
      player0.setZ(1722);
      player0.id = 1722;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.getStrength();
      Player player1 = new Player();
      player1.add(player0);
      player0.id = 1722;
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      player2.setY((-1.0F));
      player2.setDead((long) (short)4919, false);
      player2.getSubparty();
      player0.isJoinOK(player2, false);
      player2.getY();
      player0.isConnected();
      player2.getY();
      player0.getZ();
      assertEquals(1722.0F, player0.getZ(), 0.01F);
      
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      Party party0 = new Party();
      Object object0 = new Object();
      Locale locale0 = new Locale("_eJK.@oBf^NxHg>'&", "", "_eJK.@oBf^NxHg>'&");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) party0;
      player0.add(party0);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-81);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player1 = new Player();
      player1.setY(10.0F);
      player1.getSubparty();
      player1.isJoinOK(player0, true);
      player1.getY();
      Player player2 = new Player((-57), "", 63);
      player2.isConnected();
      player0.type();
      player0.getY();
      player0.getZ();
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertEquals(10.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      Party party0 = new Party();
      Object object0 = new Object();
      player0.add(party0);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.565928028166322
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Party party0 = new Party();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player0 = new Player(1471, "CC?Cz';X.@s", "", (byte) (-81));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      
      player0.getX();
      Player player1 = new Player((-3668), "Gt4+zhv", "Gt4+zhv", 128);
      player1.getX();
      byteArrayInputStream0.skip((short)4919);
      Player player2 = new Player(18, "", (String) null, 930, 1899);
      player0.isJoinOK(player2, false);
      player2.isJoinOK(player1, false);
      player2.getName();
      player1.unpack(dataInputStream1);
      player0.getName();
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((byte) (-81));
      Party party0 = new Party();
      Player player1 = new Player(4663, (String) null, (String) null, 2);
      Player player2 = new Player();
      assertEquals(0, player2.getPictureId());
      assertEquals("Player-1", player2.getName());
      assertEquals("0.0.0.0", player2.getIP());
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b-#6o3&IX<");
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player1.getIP();
      assertTrue(player1.isConnected());
      assertEquals(2, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-1528), "\"P/pXD;Q", "h'+sa+i:`%oQ8K<5C+", 3);
      Party party0 = new Party();
      party0.add(player0);
      party0.id = 2381;
      player0.remove(party0);
      player0.reset(false);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      Party party1 = new Party(108);
      player0.next = party1;
      byteArray0[2] = (byte) (-128);
      player0.unpack(byteArray0);
      byte[] byteArray1 = player0.pack();
      Player player1 = new Player(3);
      player1.unpack(byteArray1);
      assertEquals("h'+sa+i:`%oQ8K<5C+", player1.toString());
      
      player0.getTimeOfDeath();
      assertEquals(3, player0.getPictureId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(185, "M\r>h$", "0.0.0.0", (-912));
      player0.setConnected(false);
      MockFile mockFile0 = new MockFile("0.0.0.0", "VF[GqK)D3HB");
      player0.setMoney((-1498));
      player0.setConnected(false);
      player0.setDead((long) (-1498));
      player0.getTimeOfDeath();
      player0.toString();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)18;
      player0.getMoney();
      Player player1 = new Player(385, "0.0.0.0", "0.0.0.0", 10, (byte)18);
      Player player2 = new Player((byte)18, "0.0.0.0", ".*[.]class$", (-2450));
      player1.isJoinOK(player2, false);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-1498.0F), player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player1 = new Player(5, "", (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      float float0 = Player.MOVE_DISTANCE;
      Player player2 = new Player((-21158), "g~aD<;eKUm\"R", "", (-2883), (byte) (-81));
      boolean boolean0 = player1.isJoinOK(player0, false);
      player0.pack();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      player2.toString();
      assertEquals((-81), player2.getStrength());
      
      boolean boolean1 = player1.unpack(dataInputStream0);
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(4919, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertTrue(boolean1 == boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(185, "M\r>h$", "0.0.0.0", (-912));
      player0.setConnected(false);
      MockFile mockFile0 = new MockFile("0.0.0.0", "VF[GqK)D3HB");
      player0.setMoney((-1498));
      player0.setConnected(false);
      player0.setDead((long) (-1498));
      player0.getTimeOfDeath();
      player0.toString();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.getTimeOfDeath();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3234094224875887
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-32640), "", "~Rm^#TDSm>Xd{*h5", (-6400));
      Player player1 = new Player();
      Player player2 = new Player();
      player1.setJoinOK(player2, false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte) (-62);
      byteArray0[5] = (byte) (-128);
      byteArray0[6] = (byte)60;
      byteArray0[7] = (byte)54;
      player0.unpack(byteArray0);
      player1.getSubparty();
      player0.remove(player1);
      player0.setMoney((-1.0F));
      player0.isConnected();
      player1.isConnected();
      player0.getName();
      player1.getX();
      player0.toString();
      player2.type();
      player2.type();
      player1.isJoinOK(player0, true);
      player1.setMoney(1.0F);
      player0.getTimeOfDeath();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.toString();
      player0.type();
      float float0 = player1.getMoney();
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1392409296320L);
      Player player0 = new Player();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)74;
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)38);
      Player player0 = new Player();
      player0.unpack(dataInputStream0);
      float float0 = Player.MOVE_DISTANCE;
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.174834213558677
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(185, "M\r>h$", "0.0.0.0", (-912));
      player0.setConnected(false);
      Player player1 = new Player((-1495), "VFQGqr))3HB", 0);
      player0.isJoinOK(player1, false);
      MockFile mockFile0 = new MockFile("M\r>h$");
      player1.gangStrength();
      player1.isDead();
      player0.getIP();
      Player player2 = new Player();
      player2.getName();
      Party party0 = player0.boss;
      Player player3 = new Player((short)4919, "VFQGqr))3HB", "M\r>h$", (short)4919, 1);
      player1.reset(false);
      player0.setConnected(false);
      player2.getZ();
      assertTrue(player2.isConnected());
      
      player0.setMoney(0.0F);
      int int0 = player0.getPictureId();
      assertFalse(player0.isConnected());
      assertEquals((-912), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(10, "", "", 0, (-233));
      Party party1 = new Party();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-81);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.unpack(byteArray0);
      player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-233), player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.100479061876036
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(2, "", "FT", 0);
      player0.gangStrength();
      player0.setZ(2);
      player0.prev = null;
      player0.getX();
      player0.setDead((long) 1);
      player0.setConnected(true);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.getIP();
      player0.isConnected();
      player0.toString();
      player0.isDead();
      player0.setDead((long) 0);
      player0.setY((-10.053585F));
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.100479061876036
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(2, "", "FT", 0);
      player0.gangStrength();
      player0.setZ(2);
      player0.prev = null;
      player0.getX();
      player0.setDead((-512L));
      player0.setConnected(true);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.getIP();
      player0.isConnected();
      player0.toString();
      player0.isDead();
      player0.setDead((long) 0);
      player0.setY((-10.053585F));
      assertEquals(2.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0);
      boolean boolean0 = player0.isDead();
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals("Player0", player0.toString());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 4919, 4919);
      player0.getSubparty();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.470571912590729
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-1));
      player0.setX((-1));
      player0.setConnected(true);
      player0.setMoney(1.0F);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.reset(true);
      player0.setZ(893.348F);
      player0.gangStrength();
      player0.type();
      player0.setDead();
      player0.setDead((-1L));
      player0.add((Party) null);
      player0.reset(true);
      player0.setX(0.0F);
      player0.getIP();
      player0.pack();
      player0.prev = null;
      player0.setY(0.0F);
      player1.setZ(1830.892F);
      player0.getTimeOfDeath();
      player0.getX();
      player0.setMoney((-4401.1753F));
      player0.gangStrength();
      player0.setConnected(true);
      player1.setJoinOK(player0, true);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      Party party0 = new Party();
      Object object0 = new Object();
      player0.add(party0);
      InputStream inputStream0 = null;
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      int int0 = 2449;
      Player player1 = new Player(2449, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-81);
      Party party1 = new Party();
      Player player1 = new Player();
      player0.setDead();
      player0.add(player1);
      player0.setJoinOK(player1, true);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0, "Player.unpack(): *** WARNING *** data is not of proper type!", "Player.unpack(): *** WARNING *** data is not of proper type!", 0, 0);
      player0.gangStrength();
      player0.setY(0);
      player0.getMoney();
      System.setCurrentTimeMillis(0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("k");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player0 = new Player(175, (String) null, (String) null, (-480));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1279);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.add((Party) null);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertEquals(1, player1.getStrength());
      assertEquals("Player4919", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      Object object0 = new Object();
      player0.add(player0);
      Player player1 = new Player(2672, "module.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 21217, 21217);
      player0.setJoinOK(player1, false);
      System.setCurrentTimeMillis((-3354L));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0);
      String string0 = player0.toString();
      assertEquals("Player0", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis(2032L);
      Player player0 = new Player((-269), (String) null, (String) null, (-269));
      player0.toString();
      assertTrue(player0.isConnected());
      assertEquals((-269), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1569877743224173
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      Party party0 = new Party();
      Player player2 = new Player();
      player0.add(player2);
      player0.setJoinOK(player2, false);
      player2.setJoinOK(player1, false);
      int int0 = player2.gangStrength();
      assertEquals(2, int0);
      
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      boolean boolean0 = player0.isJoinOK(player2, false);
      assertEquals(0, player2.getPictureId());
      assertTrue(player2.isConnected());
      assertFalse(player2.isDead());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals("Player-1", player2.getName());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player2.getIP());
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(4352, "jN:Z9j~?P", "jN:Z9j~?P", 4352, 4919);
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4352, player0.getPictureId());
      assertEquals(4919, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte) (-120);
      Player player0 = new Player((byte) (-1), ":`vlZzSE ;GqI", "+>UjO3q<)q9S6=", (-2236), (byte)54);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      Player player1 = new Player((byte) (-120), (String) null, "0.0.0.0", 321);
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      Party party0 = player0.next;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-81);
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark((byte) (-81));
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      player0.unpack(dataInputStream1);
      float float0 = Player.MOVE_DISTANCE;
      player0.setMoney((-1.0F));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(byteArray0, 194, (int) (byte)0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(163, (String) null, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 163, (-1));
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals((-1), int0);
      assertEquals(163, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(4919, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 4, 4);
      player0.setDead(655L);
      player0.getTimeOfDeath();
      player0.toString();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)18;
      byteArray0[7] = (byte) (-1);
      player0.unpack(byteArray0);
      player0.getTimeOfDeath();
      player0.getName();
      assertEquals(655L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1279);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(1279, ",mGRu", (short)4919);
      player0.head = (Party) player1;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(5);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      float float0 = player0.getMoney();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals("Player5", player0.toString());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-1890), "x", "state.Player$JoinInfo", (-1890));
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      player2.getSubparty();
      assertEquals("Player-1", player2.toString());
      assertEquals(0, player2.getPictureId());
      
      Player player3 = new Player((short)4919, "`[YHX", 2430);
      boolean boolean0 = player0.isJoinOK(player3, false);
      assertEquals(2430, player3.getPictureId());
      assertEquals("x", player0.getIP());
      assertEquals("0.0.0.0", player3.getIP());
      assertFalse(player3.isDead());
      assertEquals(10.0F, player3.getX(), 0.01F);
      assertEquals(0L, player3.getTimeOfDeath());
      assertFalse(boolean0);
      assertTrue(player3.isConnected());
      assertEquals(0.0F, player3.getY(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(3564, "'-Ok?-<tZ##7{^K7&", 3564);
      player0.gangStrength();
      player0.setZ(1.0F);
      player0.getPictureId();
      player0.toString();
      player0.getStrength();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte) (-128);
      player0.unpack(byteArray0);
      player0.setConnected(true);
      float float0 = player0.getY();
      assertEquals(1.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.1724318111562746
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ(0.0F);
      Party party0 = new Party(635);
      player0.gangStrength();
      player0.next = party0;
      player0.getStrength();
      Player player1 = new Player(635, ".*[.]class$", "module.ModuleBrowserDialog$ModuleFilter", 4);
      player0.getSubparty();
      player1.boss = (Party) player0;
      player1.gangStrength();
      player1.id = 2243;
      party0.next = (Party) player0;
      party0.next.id = 1;
      party0.next = (Party) player1;
      player0.isJoinOK(player1, false);
      player0.getIP();
      player1.getName();
      player0.getStrength();
      Player player2 = (Player)player1.boss;
      Player player3 = (Player)player1.boss;
      party0.next = (Party) player3;
      party0.prev = (Party) player2;
      player0.reset(false);
      player0.setConnected(false);
      player0.getZ();
      player0.setMoney((-842.95F));
      int int0 = player0.getPictureId();
      assertFalse(player0.isConnected());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-718), "state.Party", "state.Party", (-718), (-718));
      player0.setZ((-718));
      player0.id = (-718);
      player0.getStrength();
      Player player1 = new Player();
      player1.add(player0);
      player0.id = (-718);
      Player player2 = new Player();
      player2.setY((-1.0F));
      player2.getSubparty();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player2.getY();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      player2.remove(player1);
      player0.isJoinOK(player0, false);
      player2.getY();
      player0.getZ();
      assertEquals((-718.0F), player0.getZ(), 0.01F);
      
      System.setCurrentTimeMillis(1392409296320L);
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-720), "state.Party", "state.Party", (-720), (-720));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(objectOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(5, "dM!4bb", "f=fh4||", 243);
      Party party0 = new Party();
      Party party1 = new Party();
      party0.add(party1);
      player0.remove(party0);
      player0.reset(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dM!4bb");
      Party party2 = new Party((byte)0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte)0;
      player0.setZ((-913.4707F));
      player0.unpack(byteArray0);
      player0.pack();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte) (-81);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Player player0 = new Player((byte)17, "y", (-20682));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      float float0 = Player.MOVE_DISTANCE;
      Player player1 = new Player((short)4919, "CC?Cz';X.@s", "g~aD<;eKUm\"R", (-82), 1);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&`eX~W!");
      Player player2 = new Player(1280, "", (short)4919);
      player2.isConnected();
      player0.getY();
      player0.getZ();
      System.setCurrentTimeMillis(3108L);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player(5, "", "", 5, 5);
      player0.setConnected(false);
      player0.setY((-3716.18F));
      player0.getX();
      player0.isConnected();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-23808), "", " ", 38);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(38, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player((byte) (-81));
      player0.reset(true);
      Player player1 = new Player((byte)0, "`", "SRy({[ix", 2244);
      Party party0 = new Party();
      party0.add(player1);
      party0.add(player0);
      Party party1 = new Party();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "QVB'Q++.ge[K*");
      assertFalse(boolean0);
  }
}
