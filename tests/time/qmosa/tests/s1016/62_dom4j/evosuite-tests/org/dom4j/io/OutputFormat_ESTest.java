/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:35:52 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9276246697762716
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat("-lineSeparat", true, "-xhtmlf;1N;ys");
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtmlf;1N;ys";
      stringArray0[1] = "-xhtmlf;1N;ys";
      stringArray0[2] = " ";
      outputFormat0.setLineSeparator(")");
      stringArray0[5] = " ";
      stringArray0[4] = "-xhtmlf;1N;ys";
      stringArray0[5] = "/";
      stringArray0[6] = "_EvKR ";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat0.setLineSeparator("-xhtmlf;1N;ys");
      outputFormat1.setIndentSize(2);
      outputFormat1.setLineSeparator("-omitEncoding");
      outputFormat1.setIndent("/");
      assertEquals("/", outputFormat1.getIndent());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7575827984108483
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isExpandEmptyElements();
      OutputFormat.createPrettyPrint();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals(1, outputFormat0.getNewLineAfterNTags());
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2247111441283223
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat1.setNewlines(true);
      outputFormat1.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat2 = new OutputFormat("3H~%i!%E*@T[N=");
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getLineSeparator();
      outputFormat2.setAttributeQuoteCharacter('\"');
      outputFormat1.setLineSeparator("Invalid attribute quote character (");
      outputFormat2.setIndent("");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertTrue(outputFormat0.isTrimText());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.451723535866717
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "t&(LBz.M4Z)3T<";
      stringArray0[2] = "t&(LBz.M4Z)3T<";
      stringArray0[3] = "t&(LBz.M4Z)3T<";
      stringArray0[4] = "t&(LBz.M4Z)3T<";
      stringArray0[5] = "t&(LBz.M4Z)3T<";
      stringArray0[6] = "f;1N;ys";
      stringArray0[7] = "f;1N;ys";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"t&(LBz.M4Z)3T<\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ti8x2<%9$'SEXC";
      outputFormat0.setEncoding("ti8x2<%9$'SEXC");
      outputFormat0.setEncoding((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4653105010756184
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ti8x2<%9$'SEXC";
      stringArray0[1] = "-encoding";
      outputFormat0.setIndentSize(1);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("/");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.833728899675367
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "A}8\"?Asv)!'z9&=rr";
      stringArray0[1] = "-xhtmlf;1N;ys";
      stringArray0[2] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setLineSeparator("/");
      outputFormat0.setIndentSize(2);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("/");
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-858));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -858
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0621142865151283
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.174317417693044
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = new OutputFormat("CsRsB*$>", true, "UTF-8");
      outputFormat1.setNewlines(false);
      outputFormat0.setIndentSize(7);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("-encoding");
      OutputFormat outputFormat2 = new OutputFormat("CsRsB*$>", false);
      outputFormat2.getAttributeQuoteCharacter();
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.setAttributeQuoteCharacter('\'');
      OutputFormat outputFormat4 = new OutputFormat();
      outputFormat4.getLineSeparator();
      outputFormat2.setLineSeparator(")");
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      outputFormat5.setIndent((String) null);
      outputFormat1.setLineSeparator("\n");
      outputFormat0.getIndent();
      assertEquals("-encoding", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.470571912590729
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[3] = "OmZz-<.\":\"bzc";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "OmZz-<.\":\"bzc";
      outputFormat0.parseOptions(stringArray0, 1594);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags(3098);
      outputFormat0.setNewLineAfterNTags(39);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setXHTML(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(1594);
      outputFormat0.setIndentSize(39);
      outputFormat1.setNewLineAfterNTags(3098);
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.getIndent();
      outputFormat1.setOmitEncoding(false);
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(3098, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".8W( 9RD7%uK=e";
      outputFormat0.setAttributeQuoteCharacter('\"');
      stringArray0[1] = "n?";
      stringArray0[2] = "-xhtml";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "n?";
      stringArray0[5] = "-xhtml";
      stringArray0[6] = "-xhtml";
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("-xhtml", outputFormat0.getIndent());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.545501457645771
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = new OutputFormat("t", true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "UTK|)>c440B#yBzWY";
      stringArray0[1] = "-expandEmpty\"BnDr4W<7!";
      outputFormat1.parseOptions(stringArray0, 1);
      assertTrue(outputFormat1.isExpandEmptyElements());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray0, 1368);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8763203963773605
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[2];
      outputFormat1.setTrimText(true);
      stringArray0[0] = "ody27";
      stringArray0[1] = "";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(true);
      outputFormat1.setTrimText(true);
      outputFormat0.setNewlines(true);
      outputFormat1.setIndentSize(0);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setXHTML(true);
      outputFormat3.setXHTML(true);
      assertTrue(outputFormat3.isXHTML());
      
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setIndentSize(0);
      boolean boolean0 = outputFormat1.isNewlines();
      assertTrue(outputFormat1.isOmitEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.732340976816887
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("ysXr7]]?");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{tL*pJ!";
      stringArray0[1] = "org.dom4j.io.OutputFormat";
      String[] stringArray1 = new String[1];
      outputFormat0.setIndent("X(");
      stringArray1[0] = "X(";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setTrimText(false);
      outputFormat0.getIndent();
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(false);
      assertEquals("X(", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("l;@\" :dJ", true);
      outputFormat1.setNewLineAfterDeclaration(true);
      boolean boolean0 = outputFormat1.isNewlines();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.102117063514037
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 2);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize((-1884279101));
      outputFormat0.isXHTML();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isPadText();
      outputFormat0.isPadText();
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", true);
      outputFormat1.isPadText();
      outputFormat1.setLineSeparator("-suppressDeclaration");
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndentSize((-1));
      outputFormat0.getIndent();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 1726);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(true);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.470571912590729
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = "OmZz-<.\":\"bzc";
      stringArray0[5] = null;
      stringArray0[6] = null;
      outputFormat0.parseOptions(stringArray0, 1594);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags(3098);
      outputFormat0.setNewLineAfterNTags(39);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setXHTML(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize(39);
      outputFormat1.setNewLineAfterNTags((-1));
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.getIndent();
      outputFormat1.setOmitEncoding(false);
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8577542127179325
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setNewLineAfterNTags((-373));
      outputFormat1.setTrimText(true);
      outputFormat0.isTrimText();
      outputFormat0.getEncoding();
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setNewlines(true);
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9440256153973703
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-47));
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setEncoding("K");
      outputFormat0.setSuppressDeclaration(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals((-47), outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("?QW+Eo?/");
      assertEquals("?QW+Eo?/", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-expandEmptyUTK|)>c440B#yBzWY", false);
      outputFormat1.setIndent(false);
      OutputFormat outputFormat2 = new OutputFormat("-expandEmptyUTK|)>c440B#yBzWY", false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "UTK|)>c440B#yBzWY";
      outputFormat2.setIndent("25R");
      outputFormat2.setIndent("K7sw>o*?||88x3DA");
      assertEquals("K7sw>o*?||88x3DA", outputFormat2.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.470571912590729
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = "OmZz-<.\":\"bzc";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      outputFormat0.parseOptions(stringArray0, 1594);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags(3098);
      outputFormat0.setNewLineAfterNTags(39);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setXHTML(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize(39);
      outputFormat1.setNewLineAfterNTags((-1));
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.getIndent();
      outputFormat1.setOmitEncoding(false);
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7366162102910074
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      outputFormat0.setLineSeparator("UTF-8");
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(34);
      outputFormat0.isXHTML();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isPadText();
      outputFormat0.isPadText();
      outputFormat0.getIndent();
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator("UTF-8");
      assertEquals("UTF-8", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.676734157148338
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "NFYf>");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "NFYf>";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "-lineSeparator";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setLineSeparator("NFYf>");
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator("{x");
      outputFormat0.setIndentSize(2);
      OutputFormat outputFormat2 = new OutputFormat("NFYf>", true, "-lineSeparator");
      outputFormat2.isXHTML();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isPadText();
      outputFormat0.isPadText();
      outputFormat0.getIndent();
      outputFormat2.isPadText();
      outputFormat1.setLineSeparator("-expandEmpty-lineSeparator");
      assertEquals("-expandEmpty-lineSeparator", outputFormat1.getLineSeparator());
      
      boolean boolean0 = outputFormat2.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.102810064207038
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("'|XC");
      outputFormat0.setEncoding("'|XC");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("p7s J){/`lm^K0.a");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags((-942));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("'|XC");
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(false);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator("p7s J){/`lm^K0.a");
      assertEquals("p7s J){/`lm^K0.a", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7437009261328056
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("?QW+Eo?/");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "?QW+Eo?/";
      stringArray0[1] = "";
      outputFormat0.setLineSeparator("3gNQ=&L|II=F/");
      outputFormat0.setIndentSize(1503);
      outputFormat0.setLineSeparator("");
      outputFormat0.setIndent("");
      assertEquals("", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6241026221599713
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("-omitEncoding");
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setLineSeparator((String) null);
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.getIndent();
      assertFalse(outputFormat1.isExpandEmptyElements());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9377087726541156
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "";
      OutputFormat outputFormat1 = new OutputFormat("-indent", false, "");
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isXHTML());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isPadText());
      assertEquals("-indent", outputFormat1.getIndent());
      assertFalse(outputFormat1.isNewlines());
      assertEquals("", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isSuppressDeclaration());
      
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "ti8x2<%9$'SEXC";
      stringArray0[1] = "/";
      stringArray0[2] = "/";
      stringArray0[3] = "D6SBDHnT5)DPh]K|(at";
      stringArray0[4] = "/";
      stringArray0[5] = "";
      stringArray0[6] = "-encoding";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(1, int0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1746703358172643
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("U~b?bSRH^&W", true, ">s,[$&7GHw3TD");
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "U~b?bSRH^&W";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "U~b?bSRH^&W";
      stringArray0[4] = "k]Bhe<8lhM XA";
      stringArray0[5] = ">s,[$&7GHw3TD";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat outputFormat1 = new OutputFormat("", true, "");
      outputFormat1.setLineSeparator("U~b?bSRH^&W");
      assertEquals("U~b?bSRH^&W", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding");
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.getLineSeparator();
      outputFormat1.setLineSeparator("MI8Y2&KcLCVX646g-k");
      assertEquals("MI8Y2&KcLCVX646g-k", outputFormat1.getLineSeparator());
      
      outputFormat1.setLineSeparator((String) null);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ">,[$&GH3TD";
      stringArray0[3] = ">,[$&GH3TD";
      stringArray0[2] = ">,[$&GH3TD";
      stringArray0[3] = ">,[$&GH3TD";
      stringArray0[4] = ">,[$&GH3TD";
      stringArray0[5] = ">,[$&GH3TD";
      stringArray0[6] = ">,[$&GH3TD";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8863990313046046
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator", true, "");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setEncoding("");
      outputFormat1.setIndent(false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "";
      stringArray0[3] = "-lineSeparator";
      stringArray0[5] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 134);
      outputFormat0.setIndent("");
      outputFormat1.setIndent("l@TrXUJMSczUOGqHL,");
      outputFormat0.setLineSeparator("w61e\"oZV>Q=(");
      assertEquals("w61e\"oZV>Q=(", outputFormat0.getLineSeparator());
      
      outputFormat1.getEncoding();
      boolean boolean0 = outputFormat1.isOmitEncoding();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "ti8x2<%9$'SEXC";
      stringArray0[1] = "-nelines";
      stringArray0[2] = "-nelines";
      stringArray0[3] = "";
      stringArray0[4] = "/";
      stringArray0[5] = "-F;:=*C3X";
      stringArray0[6] = "ob#?K\"&)A\"?fbW";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1486015132));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1486015132
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Hx,.=}-~Vm1P?\"d6A");
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("Hx,.=}-~Vm1P?\"d6A", outputFormat0.getIndent());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("?QW+Eo?/");
      outputFormat0.setIndent("He`zLjEpWF%_ !B");
      assertEquals("He`zLjEpWF%_ !B", outputFormat0.getIndent());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = new OutputFormat("/", false, "-xhtmlf;1N;ys");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('m');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (m)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "8W( 9-%uK=e";
      stringArray0[1] = "n?";
      stringArray0[4] = "W6&7z[K";
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat("t&(LBz.M4Z)3T<", false);
      outputFormat0.setEncoding("0p~G\"uF-o");
      assertEquals("0p~G\"uF-o", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9687382224998142
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-lineSeparat", true, " ");
      outputFormat1.setLineSeparator("-omitEncoding");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "GR@i";
      stringArray0[1] = "-lineSeparat";
      stringArray0[2] = "GR@i";
      stringArray0[3] = "-xhtmlf;1N;ys";
      stringArray0[2] = "-xhtmlf;1N;ys";
      stringArray0[5] = "/";
      stringArray0[6] = "GR@i";
      stringArray0[7] = "-xhtmlf;1N;ys";
      stringArray0[8] = "-xhtmlf;1N;ys";
      outputFormat0.setTrimText(true);
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat1.setLineSeparator("iji5U4)h)?HX4#=Y");
      outputFormat1.setPadText(false);
      outputFormat0.setIndentSize((-483));
      outputFormat1.setIndentSize(68);
      assertEquals("                                                                    ", outputFormat1.getIndent());
      
      outputFormat1.setIndent("-xhtmlf;1N;ys");
      assertFalse(outputFormat1.isExpandEmptyElements());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setIndentSize((-2516));
      outputFormat0.setIndent("");
      outputFormat0.setIndent("; i*:'28 *V&.[|");
      outputFormat0.setIndent("?QW+Eo?/");
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("[E/c3IyZ5!H5h;+6");
      assertEquals("[E/c3IyZ5!H5h;+6", outputFormat0.getIndent());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "ti8x2<%9$'SEXC";
      stringArray0[1] = "/";
      stringArray0[2] = "/";
      stringArray0[3] = "D6SBDHnT5)DPh]K|(at";
      stringArray0[4] = "/";
      stringArray0[5] = "";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterNTags((-1674995832));
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ">s,[$&7GHw3TD";
      stringArray0[1] = ">s,[$&7GHw3TD";
      stringArray0[2] = ">s,[$&7GHw3TD";
      stringArray0[3] = ">s,[$&7GHw3TD";
      stringArray0[4] = ">s,[$&7GHw3TD";
      stringArray0[5] = ">s,[$&7GHw3TD";
      stringArray0[6] = ">s,[$&7GHw3TD";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&@O", false);
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(outputFormat0.isTrimText());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ti8x2<%9$'SEXC";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "";
      stringArray0[5] = "/";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("", outputFormat0.getEncoding());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[1] = ">s,[6&7GHw3TD";
      stringArray0[3] = ">s,[6&7GHw3TD";
      stringArray0[4] = ">s,[6&7GHw3TD";
      stringArray0[5] = ">s,[6&7GHw3TD";
      stringArray0[6] = ">s,[6&7GHw3TD";
      OutputFormat outputFormat0 = new OutputFormat("h*YlBrK$Sd}V", true, ">s,[6&7GHw3TD");
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isXHTML());
      assertEquals(">s,[6&7GHw3TD", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("h*YlBrK$Sd}V", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
  }
}
