/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:58:00 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7879192390089866
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X=2o");
      xPathLexer0.isIdentifierStartChar('[');
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.operatorName();
      xPathLexer0.leftParen();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.div();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8628359887281796
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.and();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.currentPosition();
      xPathLexer0.setXPath("*~8R>)TLeW$LR");
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("*", token5.getTokenText());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("~", token6.getTokenText());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals("8R", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(">", token8.getTokenText());
      assertEquals(9, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.791997112176308
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.setXPath("=vZ]8-Y ?4I");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer0.nextToken();
      xPathLexer1.or();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer1.leftParen();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1165866578805512
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.number();
      xPathLexer0.consume((-924));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7278130620977428
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer1.colon();
      xPathLexer1.rightBracket();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.nextToken();
      xPathLexer2.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9390521001531549
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.plus();
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("N", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("f", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("*W", token5.getTokenText());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.leftParen();
      assertEquals("2", token6.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.minus();
      assertEquals("E", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0262782413390097
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume(0);
      Token token1 = xPathLexer0.number();
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals("c", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.dots();
      Token token5 = xPathLexer1.at();
      assertEquals("$", token5.getTokenText());
      
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("?", token7.getTokenText());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("A", token8.getTokenText());
      
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.number();
      Token token10 = xPathLexer1.notEquals();
      assertEquals("t.", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("7?c`$qAt.E!ZTY#~=");
      Token token11 = xPathLexer2.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer4.and();
      Token token12 = xPathLexer1.doubleColon();
      assertEquals("E!", token12.getTokenText());
      
      Token token13 = xPathLexer4.comma();
      assertEquals("7", token13.getTokenText());
      assertEquals(32, token13.getTokenType());
      
      xPathLexer3.getXPath();
      Token token14 = xPathLexer4.dots();
      assertEquals("?", token14.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.04836545757441
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      xPathLexer0.consume(10);
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("ath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      xPathLexer0.slashes();
      Token token4 = xPathLexer1.doubleColon();
      assertEquals("co", token4.getTokenText());
      
      xPathLexer1.operatorName();
      Token token5 = xPathLexer1.leftParen();
      assertEquals("m", token5.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer2.slashes();
      assertEquals("c", token6.getTokenText());
      
      xPathLexer1.and();
      xPathLexer1.operatorName();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7862378810029056
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      xPathLexer0.consume(10);
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.nextToken();
      xPathLexer1.or();
      xPathLexer0.doubleColon();
      xPathLexer1.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.568506300758769
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer0.div();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.plus();
      xPathLexer0.setXPath("-je>e%o8aNfEYX6");
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("-je", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("e", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      Token token6 = xPathLexer0.dots();
      assertEquals("o", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.getPreviousToken();
      xPathLexer1.mod();
      Token token7 = xPathLexer1.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer1.div();
      Token token8 = xPathLexer0.notEquals();
      assertEquals("8a", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9214401815694082
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      xPathLexer1.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.div();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4165547954886817
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X=2o");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("=2", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('[');
      assertFalse(boolean0);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(1);
      assertEquals('o', char0);
      
      Token token2 = xPathLexer0.not();
      assertEquals("o", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1415885685618994
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.setXPath("=vZ]8-Y ?4I");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9488773674189335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.consume((-594));
      xPathLexer0.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0894980055311674
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("Hm<$ct3_1:.rWA");
      xPathLexer0.consume((-2282));
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.4514355084427906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer0.setXPath("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.hasMoreChars();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.currentPosition();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      xPathLexer0.div();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7237062830191627
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-1548));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.999879562478792
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) ()", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.consume(0);
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token2 = xPathLexer0.pipe();
      assertEquals(" ", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      xPathLexer0.at();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals(" ", token9.getTokenText());
      
      xPathLexer2.and();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6861527439451915
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X=2o");
      xPathLexer0.minus();
      xPathLexer0.isIdentifierStartChar('[');
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.operatorName();
      xPathLexer0.leftParen();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.div();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-644);
      xPathLexer0.consume((-644));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4249218594295987
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("");
      xPathLexer0.consume((-364));
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.690623567401897
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8W( 9RD7%uK=e6~yE");
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-795));
      token0.toString();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.418792718727697
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(")");
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.setXPath("!X=tK_/\"K");
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.colon();
      assertEquals("=", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("t", token5.getTokenText());
      
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.literal();
      assertEquals(27, token6.getTokenType());
      assertEquals("_/\"", token6.getTokenText());
      assertNotNull(token6);
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.hasMoreChars();
      xPathLexer0.setXPath("!X=tK_/\"K");
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token8);
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals("!", token9.getTokenText());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("X", token10.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.hasMoreChars();
      xPathLexer0.setXPath("p7s J){/`lm^K0.a");
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      xPathLexer0.consume(9);
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer0.consume(9);
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('o');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.3066869913705514
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~'w_<Qs0~s`Md");
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifier();
      assertEquals("s", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("~'w_<Qs0~s`Md");
      Token token2 = xPathLexer0.rightParen();
      assertEquals("~", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("'", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("w_", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("<", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("Q", token6.getTokenText());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("0", token9.getTokenText());
      
      xPathLexer0.and();
      Token token10 = xPathLexer0.minus();
      assertEquals("~", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      xPathLexer0.literal();
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.not();
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer0.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.859622651046698
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X=2o");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      token0.toString();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("[ (1) (X)");
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-50));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.0325736172538162
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.425904643151232
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.getXPath();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("com.weken.saxath.XPathLexer");
      xPathLexer1.getPreviousToken();
      xPathLexer0.operatorName();
      xPathLexer1.or();
      xPathLexer1.operatorName();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.671143943400525
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.and();
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1651939658440176
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Xu&");
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.currentPosition();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9656573532885475
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.equals();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
      
      char char0 = xPathLexer0.LA(1357);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(11, int0);
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.consume(2667);
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNull(token10);
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer0.endPosition();
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.744606646636121
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.and();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6934325121998517
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('7');
      assertTrue(boolean0);
      
      xPathLexer0.setXPath("|");
      Token token7 = xPathLexer0.pipe();
      assertEquals("|", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.mod();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.whitespace();
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.literal();
      assertNull(token12);
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.156997308251746
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token4);
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.isIdentifierChar('!');
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      char char0 = xPathLexer0.LA(2711);
      assertEquals('\uFFFF', char0);
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.dollar();
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.consume(2711);
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.911428887342473
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dots();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      char char0 = xPathLexer0.LA(287);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0258751576826954
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(".", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.862599504243895
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.getPreviousToken();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.endPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.at();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5743786569862759
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("lNH", token0.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("f", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("*", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      xPathLexer1.getXPath();
      xPathLexer0.or();
      Token token4 = xPathLexer1.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("NH", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("W", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
      
      xPathLexer0.and();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("*", token7.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8161545798376153
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.consume(10);
      xPathLexer0.colon();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.or();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer1.operatorName();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("h", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".XPathLexer", token6.getTokenText());
      
      xPathLexer0.div();
      xPathLexer1.relationalOperator();
      int int0 = xPathLexer0.endPosition();
      assertEquals(29, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3867746355940067
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-n!^HhqVan$d:HClS,");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("!^", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("H", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.equals();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (-)", string0);
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token4 = xPathLexer0.rightParen();
      assertEquals("V", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("a", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("n", token6.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.consume();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals(":", token7.getTokenText());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("H", token8.getTokenText());
      
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4605195519681793
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9383655575093839
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("lNH", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer1.at();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("l", token6.getTokenText());
      
      Token token7 = xPathLexer2.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      XPathLexer xPathLexer5 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token8 = xPathLexer5.notEquals();
      assertEquals("lN", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token9 = xPathLexer5.slashes();
      assertEquals("H", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      xPathLexer2.and();
      Token token10 = xPathLexer5.doubleColon();
      assertEquals("*0", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer6.comma();
      assertEquals("l", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.966106895739518
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.consume(10);
      Token token1 = xPathLexer0.colon();
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("x", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.slashes();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("e:vF|Uea");
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("e:", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(")");
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      xPathLexer0.and();
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("vF", token9.getTokenText());
      
      Token token10 = xPathLexer1.comma();
      assertEquals("|", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.916880945018956
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=vZ]8-Y ?4I");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("v", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.setXPath("=vZ]8-Y ?4I");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.not();
      assertEquals("=", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("]", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("-Y", token8.getTokenText());
      
      xPathLexer0.operatorName();
      Token token9 = xPathLexer0.leftParen();
      assertEquals(" ", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("=vZ]8-Y ?4I");
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token10);
      assertEquals(15, token10.getTokenType());
      
      xPathLexer0.div();
      Token token11 = xPathLexer1.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("=", token11.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.107938269335243
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.761228465300936
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("f", token1.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer1.minus();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      Token token5 = xPathLexer3.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer3.doubleColon();
      assertEquals("NH", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      xPathLexer2.operatorName();
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("*", token7.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.dollar();
      xPathLexer2.dollar();
      Token token8 = xPathLexer0.dollar();
      assertEquals("W", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.012183379537251
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.pipe();
      assertEquals("o", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer1.number();
      Token token6 = xPathLexer0.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer2.notEquals();
      assertEquals("co", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals("m", token8.getTokenText());
      
      xPathLexer2.and();
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7573551104085516
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer1.operatorName();
      xPathLexer0.leftParen();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.leftBracket();
      xPathLexer1.and();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6220130295170871
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4l}9");
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("t{");
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      String string0 = null;
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X=2o");
      xPathLexer0.minus();
      xPathLexer0.consume((-2818));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.0651006210315064
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.pipe();
      assertEquals("o", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("w", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("DN2{|\"");
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      xPathLexer2.and();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("er", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8116466062634076
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0697303452479376
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.208884662112391
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Fw{r;J$yOCUTP/W&");
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer1.minus();
      xPathLexer0.number();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.slashes();
      xPathLexer2.and();
      xPathLexer0.doubleColon();
      xPathLexer2.pipe();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.053971662753929
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.and();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0940154418255936
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.div();
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.9498367534118977
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7328485588850784
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.relationalOperator();
      xPathLexer1.rightBracket();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.minus();
      xPathLexer2.number();
      xPathLexer0.number();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5732626281805184
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.star();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      xPathLexer0.slashes();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.operatorName();
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.976912239507502
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("lNH*0f*W2Ep-#ysk}`");
      xPathLexer1.colon();
      xPathLexer1.rightBracket();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer1.minus();
      xPathLexer0.rightBracket();
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }
}
