/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:47:07 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.controller.MapModuleManager;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseController;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.schememode.SchemeMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.event.ComponentEvent;
import javax.swing.JColorChooser;
import javax.swing.JTabbedPane;
import javax.swing.JTree;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeNode;
import org.apache.xml.serializer.EmptySerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SchemeMode schemeMode0 = new SchemeMode();
      BrowseMode browseMode0 = new BrowseMode();
      SchemeMode schemeMode1 = new SchemeMode();
      schemeMode1.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SchemeMode schemeMode0 = new SchemeMode();
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(schemeMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BrowseMode browseMode0 = new BrowseMode();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      defaultMutableTreeNode0.isNodeSibling((TreeNode) null);
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode1 = new DefaultMutableTreeNode();
      defaultMutableTreeNode1.isNodeSibling((TreeNode) null);
      JTree jTree0 = new JTree(defaultMutableTreeNode1);
      JTree jTree1 = new JTree(defaultMutableTreeNode0, false);
      jTree0.getPathForLocation(61449, 2051);
      EmptySerializer emptySerializer0 = new EmptySerializer();
      FileUtil.getDefaultInstance();
      FileUtil fileUtil0 = FileUtil.getDefaultInstance();
      fileUtil0.canonicalFile("");
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden((ComponentEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BrowseMode browseMode0 = new BrowseMode();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      defaultMutableTreeNode0.isNodeSibling((TreeNode) null);
      MetalTreeUI metalTreeUI1 = new MetalTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode1 = new DefaultMutableTreeNode();
      defaultMutableTreeNode1.isNodeSibling((TreeNode) null);
      JTree jTree0 = new JTree(defaultMutableTreeNode1);
      JTree jTree1 = new JTree(defaultMutableTreeNode0, false);
      jTree0.getPathForLocation(61449, 2051);
      EmptySerializer emptySerializer0 = new EmptySerializer();
      FileUtil.getDefaultInstance();
      FileUtil.getDefaultInstance();
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden((ComponentEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SchemeMode schemeMode0 = new SchemeMode();
      System.setCurrentTimeMillis(986L);
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertTrue(jColorChooser0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      SystemColor systemColor0 = SystemColor.textHighlightText;
      try { 
        Controller.showCommonJColorChooserDialog((Component) null, "Mac format is not yet implemented", systemColor0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      BrowseMode browseMode0 = new BrowseMode();
      MapModuleManager.MapTitleChangeListener mapModuleManager_MapTitleChangeListener0 = mock(MapModuleManager.MapTitleChangeListener.class, new ViolatedAssumptionAnswer());
      MapModuleManager.MapTitleChangeListener mapModuleManager_MapTitleChangeListener1 = mock(MapModuleManager.MapTitleChangeListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "u");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }
}
