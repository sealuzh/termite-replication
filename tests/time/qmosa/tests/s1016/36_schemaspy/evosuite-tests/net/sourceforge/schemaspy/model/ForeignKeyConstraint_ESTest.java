/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:57:24 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-387), (-387));
      foreignKeyConstraint0.getChildColumns();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7c10/69)");
      foreignKeyConstraint1.getDeleteRuleAlias();
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ",8I7T!5=!7 5cV%{";
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.removeParent(tableColumn0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",8I7T!5=!7 5cV%{");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", 0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7c10/69)");
      System.setCurrentTimeMillis(1098L);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",8I7T!5=!7 5cV%{");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", 0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",8I7T!5=!7 5cV%{");
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6861333959862006
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "o#`Q}G]", (-383), (-383));
      Config config0 = new Config();
      Config config1 = Config.getInstance();
      config1.setDbType("UTF-8");
      config1.getSchema();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      config1.setRenderer("");
      config0.isSchemaDisabled();
      foreignKeyConstraint0.getDeleteRuleName();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      boolean boolean1 = foreignKeyConstraint0.isReal();
      boolean boolean2 = foreignKeyConstraint0.isImplied();
      assertTrue(boolean2 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleDescription();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean3 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean3 == boolean1);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-383), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-383), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      TableColumn tableColumn0 = null;
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.147514311455309
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "o#`Q}G]");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 0);
      foreignKeyConstraint0.getParentColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+S.m08");
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string1);
      
      System.setCurrentTimeMillis(504L);
      String string2 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string2);
      
      foreignKeyConstraint0.getName();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "net.sourceforge.schemaspy.model.TableColumn");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Cascade on delete:\n Deletion of parent deletes child");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", (byte) (-127), 100);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WHENEVER");
      foreignKeyConstraint0.isRestrictDelete();
      System.setCurrentTimeMillis((byte)2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7935868607173573
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",8I7T!5=!7 5cV%{");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", 0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7c10/69)");
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string1);
      
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Table table0 = null;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-383), (-383));
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("ora.properties");
      foreignKeyConstraint0.getDeleteRule();
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-8), (-383));
      foreignKeyConstraint1.getParentColumns();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9740566129674715
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", 3709, 175);
      foreignKeyConstraint0.getParentColumns();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleDescription();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "2pn\u0007Y7GngBXhWpO#Z";
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(3709, foreignKeyConstraint0.getUpdateRule());
      assertEquals(175, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ",8I7T!5=!7 5cV%{";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",8I7T!5=!7 5cV%{");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", (-383), (-383));
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("ora.properties");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", 2, (-383));
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint1.getUpdateRule();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3146241973600232
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "o#`Q}G]", (-383), 2);
      Config config0 = Config.getInstance();
      config0.setDbType((String) null);
      config0.getSchema();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isRestrictDelete();
      config0.getPassword();
      config0.setRenderer((String) null);
      Config config1 = Config.getInstance();
      config1.setServer((String) null);
      config1.setUser("7VKa");
      config1.setDb((String) null);
      config1.isSchemaDisabled();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isCascadeOnDelete();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C");
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.isRestrictDelete();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "IP6I");
      System.setCurrentTimeMillis(3631L);
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis(3631L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1553115824104747
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 0, 3);
      Config config1 = Config.getInstance();
      Config config2 = new Config();
      config2.setDbType("");
      config0.getSchema();
      Config config3 = Config.getInstance();
      config0.isSingleSignOn();
      config2.setFont("");
      foreignKeyConstraint0.isRestrictDelete();
      config3.getPassword();
      Config.getInstance();
      config1.setPassword("Null on delete:\n Foreign key to parent set to NULL when parent deleted");
      Config config4 = new Config();
      config4.setUser("Rvjs5i");
      config0.setDb("");
      config1.isSchemaDisabled();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleAlias();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0);
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis((-857L));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-383), (-383));
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      assertEquals(0, int0);
      
      foreignKeyConstraint0.getChildColumns();
      assertEquals((-383), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-383), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.611494517648293
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "o#`Q}G]", (-383), 2);
      Config.getInstance();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      
      boolean boolean0 = foreignKeyConstraint0.isReal();
      boolean boolean1 = foreignKeyConstraint0.isImplied();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, " > }9F^uW~\"g:km", (-4), (-412));
      foreignKeyConstraint1.addChildColumn((TableColumn) null);
      ForeignKeyConstraint.toString(list0);
      boolean boolean2 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean2 == boolean1);
      
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string1);
      
      boolean boolean3 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean3 == boolean0);
      assertTrue(foreignKeyConstraint0.isNullOnDelete());
      
      foreignKeyConstraint1.isRestrictDelete();
      boolean boolean4 = foreignKeyConstraint1.isRestrictDelete();
      assertEquals((-4), foreignKeyConstraint1.getUpdateRule());
      assertFalse(boolean4);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte)41;
      byteArray0[6] = (byte) (-113);
      byteArray0[7] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ",8I7T!5=!7 5cV%{");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", 0, 0);
      foreignKeyConstraint0.getParentColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7c10/69)");
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      System.setCurrentTimeMillis(1550L);
      foreignKeyConstraint0.getParentTable();
      assertEquals(0, foreignKeyConstraint0.getDeleteRule());
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",8I7T!5=!7 5cV%{");
      int int0 = 0;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", 0, 0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "!slXyqO&Gv= sOA");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "!slXyqO&Gv= sOA", 0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7c10/69)");
      System.setCurrentTimeMillis(1098L);
      System.setCurrentTimeMillis(0L);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Z$`[Vg3Ozn71D9wV", 0, 219);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.509458094643633
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", (-75), (-2161));
      Config config0 = Config.getInstance();
      config0.setEvaluateAllEnabled(false);
      Config config1 = Config.getInstance();
      config0.isSingleSignOn();
      config1.setDbType("QNGf|Ci93Nf?R^G'");
      Config config2 = new Config();
      config2.getCatalog();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      config2.setDbSpecificOptions(hashMap0);
      config1.getSchema();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      Config config3 = Config.getInstance();
      config1.getDescription();
      config1.setRenderer("REFERENCES");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "UTF-8";
      Config.getInstance();
      Config config4 = new Config(stringArray0);
      config4.isSchemaDisabled();
      foreignKeyConstraint0.getDeleteRuleName();
      config1.getDbSpecificOptions();
      config3.getSchemaSpec();
      Config config5 = new Config(stringArray0);
      config3.setDriverPath("UTF-8");
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertTrue(boolean1);
      
      System.setCurrentTimeMillis((-1308L));
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean2 == boolean0);
      
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getName();
      assertEquals((-2161), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-75), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.515911247030394
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", (-383), (-383));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ora.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ">T&9e8Ot;LGApLQJ", (-383), 2);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("ora.properties");
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "3NF.", 2848, (-383));
      foreignKeyConstraint1.compareTo(foreignKeyConstraint2);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "0!s`'Q~.8&6^m;l6", 61, (-83));
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint2);
      assertEquals((-7), int0);
      assertEquals((-383), foreignKeyConstraint2.getDeleteRule());
      assertEquals(2848, foreignKeyConstraint2.getUpdateRule());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "n=", (-383), (-383));
      foreignKeyConstraint0.getChildTable();
      assertEquals((-383), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-383), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3806382145562086
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "o#`Q}G]", (-383), 2);
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config1.setDbType("UTF-8");
      config1.getSchema();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      config1.getPassword();
      config1.setRenderer("");
      config0.isSchemaDisabled();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isReal();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis(0L);
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      foreignKeyConstraint0.getChildColumns();
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string2);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-383), int0);
      
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.967719690298976
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ",8I7T!5=!7 5cV%{", (-75), (-2161));
      Config config0 = Config.getInstance();
      config0.setEvaluateAllEnabled(false);
      Config config1 = Config.getInstance();
      config0.isSingleSignOn();
      config1.setDbType("QNGf|Ci93Nf?R^G'");
      Config config2 = new Config();
      config2.getIndirectColumnExclusions();
      config2.getCatalog();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      config2.setDbSpecificOptions(hashMap0);
      config1.getSchema();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      Config config3 = Config.getInstance();
      config1.getDescription();
      config1.setRenderer("REFEEN");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "UTF-8";
      Config.getInstance();
      Config config4 = new Config(stringArray0);
      config4.isSchemaDisabled();
      foreignKeyConstraint0.getDeleteRuleName();
      config1.getDbSpecificOptions();
      Config config5 = new Config(stringArray0);
      config3.setDriverPath("C");
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis((-1318L));
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-2161), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-75), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumn tableColumn0 = null;
      TableColumn tableColumn1 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, 315, 315);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }
}
