/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 01:46:48 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.SynchronousQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBLongVarCharField;
import org.firebirdsql.jdbc.field.TypeConversionException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[1];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      Integer integer1 = new Integer(13);
      linkedBlockingQueue1.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      databaseParameterBufferImp0.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.getDbHandle();
      org.firebirdsql.gds.impl.wire.isc_tr_handle_impl isc_tr_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_tr_handle_impl();
      isc_tr_handle_impl1.getDbHandle();
      fBCachedFetcher0.isLast();
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5608978041934893
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)125;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)33;
      byteArray2[4] = (byte) (-51);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue1.add(integer0);
      Integer integer1 = new Integer((-3168));
      Integer.sum((byte)125, (byte) (-44));
      linkedBlockingQueue1.add(integer1);
      Integer integer2 = new Integer(13);
      linkedBlockingQueue1.add(integer2);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.offer((byte[][]) null);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.329762467869229
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      byte[][] byteArray0 = new byte[9][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[3] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)125;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)33;
      byteArray2[4] = (byte) (-51);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue1.add(integer0);
      Integer integer1 = new Integer(13);
      linkedBlockingQueue1.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.363132203143378
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[10][0];
      linkedList0.pollLast();
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte) (-4);
      byteArray1[1] = (byte)26;
      byteArray1[3] = (byte)49;
      Integer integer0 = new Integer((byte)0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      assertFalse(fBCachedFetcher0.isFirst());
      
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.isLast();
      byte[][] byteArray2 = new byte[7][8];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray2[6] = byteArray1;
      fBCachedFetcher0.updateRow(byteArray2);
      assertEquals(0, fBResultSet0.getRow());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.296693743028769
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      byte[][] byteArray0 = new byte[9][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[3] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)125;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)33;
      byteArray2[4] = (byte) (-51);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue1.add(integer0);
      linkedBlockingQueue1.add(integer0);
      linkedBlockingQueue1.add(integer0);
      Integer integer1 = new Integer(13);
      linkedBlockingQueue1.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertTrue(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2429;
      xSQLDA0.ioLength = intArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 2429, (-1409), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.504490492560509
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[10][0];
      linkedList0.pollLast();
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte) (-4);
      byteArray1[1] = (byte)26;
      byteArray1[3] = (byte)49;
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue0.toString();
      Integer integer0 = new Integer((byte)0);
      Integer.compare((byte) (-9), (byte) (-9));
      linkedBlockingQueue0.add(integer0);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow(byteArray0);
      assertTrue(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.containsAll(synchronousQueue0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[3];
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVARArray0[1] = xSQLVAR0;
      xSQLVARArray0[2] = xSQLVAR0;
      FBResultSet fBResultSet0 = null;
      try {
        fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
        fail("Expecting exception: TypeConversionException");
      
      } catch(Throwable e) {
         //
         // SQL type for this field is not yet supported.
         //
         verifyException("org.firebirdsql.jdbc.field.FBField", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.398152141601651
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[5];
      byteArray1[1] = (byte) (-4);
      byteArray1[2] = (byte)26;
      byteArray1[3] = (byte)49;
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer((byte) (-9));
      linkedBlockingQueue0.add(integer0);
      Integer integer1 = new Integer((byte)26);
      linkedBlockingQueue0.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.151379232208468
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)16;
      byteArray0[2] = (byte)26;
      linkedList0.add((byte[][]) null);
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute((byte)16);
      fBCachedFetcher0.isBeforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[1];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      Integer integer1 = new Integer(13);
      linkedBlockingQueue1.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.relative(1004);
      assertEquals(2, fBCachedFetcher1.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5695734242452968
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][5];
      fBCachedFetcher0.close();
      byte[] byteArray1 = new byte[4];
      byteArray1[2] = (byte)28;
      byte byte0 = (byte)86;
      byteArray1[1] = (byte)86;
      byteArray1[1] = (byte) (-1);
      linkedList0.add(byteArray0);
      byteArray1[3] = (byte) (-45);
      byteArray0[0] = byteArray1;
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.257502855270077
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)26;
      linkedList0.add((byte[][]) null);
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer((byte)26);
      linkedBlockingQueue0.add(integer0);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute((byte) (-9));
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.absolute((byte) (-9));
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      XSQLDA xSQLDA0 = new XSQLDA();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2429;
      xSQLDA0.ioLength = intArray0;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][1];
      xSQLDA0.ioLength = intArray0;
      byteArray0[0] = null;
      byteArray0[1] = null;
      byteArray0[2] = null;
      byteArray0[3] = null;
      byteArray0[4] = null;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4359838465843624
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)28;
      byte[][] byteArray1 = new byte[0][9];
      linkedList0.add(byteArray1);
      linkedList0.add(byteArray1);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)125;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)33;
      byteArray2[4] = (byte) (-51);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue1.add(integer0);
      Integer integer1 = new Integer((-3168));
      linkedBlockingQueue1.add(integer1);
      Integer integer2 = new Integer(13);
      linkedBlockingQueue1.add(integer2);
      linkedList0.containsAll(linkedBlockingQueue0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((byte) (-51));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl1.removeRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5764215864583835
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte) (-4);
      byteArray1[2] = (byte)26;
      byteArray1[3] = (byte)49;
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer((byte)26);
      linkedBlockingQueue0.add(integer0);
      linkedBlockingQueue0.add(integer0);
      linkedList0.containsAll(linkedBlockingQueue0);
      byteArray1[4] = (byte)16;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byte[][] byteArray3 = new byte[2][4];
      byteArray3[0] = byteArray2;
      byteArray3[1] = byteArray2;
      linkedList0.add(byteArray3);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      isc_stmt_handle_impl1.setOutSqlda(xSQLDA0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][6];
      byteArray0[0] = null;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[1];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      linkedList0.clone();
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      fBLongVarCharFieldArray0[8] = fBLongVarCharFieldArray0[7];
      byte[][] byteArray0 = new byte[4][3];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)54;
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte)54;
      byteArray1[3] = (byte)54;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)54;
      byteArray2[1] = (byte)54;
      byteArray2[2] = (byte)54;
      byteArray2[3] = (byte)54;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte)54;
      linkedList0.offerLast(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((byte)54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3636478159859378
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(13);
      linkedBlockingQueue0.add(integer1);
      byte[][] byteArray0 = new byte[9][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[3] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)125;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)33;
      byteArray2[4] = (byte) (-51);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue1.offer(integer1);
      linkedBlockingQueue1.add(integer0);
      linkedBlockingQueue1.add(integer0);
      Integer integer2 = new Integer(13);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      fBCachedFetcher0.isEmpty();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      XSQLDA xSQLDA0 = new XSQLDA();
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][9];
      byteArray0[0] = null;
      byteArray0[1] = null;
      byteArray0[2] = null;
      byteArray0[3] = null;
      byteArray0[4] = null;
      byteArray0[5] = null;
      byteArray0[6] = null;
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7824268046877836
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[1];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      Integer integer1 = new Integer(13);
      linkedBlockingQueue1.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(0, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7824268046877836
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setInsertCount((-479));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl1.removeRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      databaseParameterBufferImp1.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9896217341979852
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte) (-4);
      byteArray1[2] = (byte)26;
      byteArray1[3] = (byte)49;
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer((byte)26);
      linkedBlockingQueue0.add(integer0);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
      
      fBCachedFetcher0.insertRow(byteArray0);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-45);
      byteArray1[2] = (byte) (-45);
      byteArray1[3] = (byte)86;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[1] = (byte) (-44);
      byteArray2[2] = (byte) (-1);
      byteArray0[1] = byteArray2;
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      linkedList0.retainAll(synchronousQueue0);
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[0];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.previous();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, 2429, 2429, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      isc_stmt_handle_impl1.setOutSqlda(xSQLDA0);
      xSQLDA0.sqln = 1;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)24;
      xSQLDA0.blr = byteArray0;
      byte[][] byteArray1 = new byte[1][6];
      xSQLDA0.blr = xSQLDA0.blr;
      byteArray1[0] = xSQLDA0.blr;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.523448480499437
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      linkedList0.retainAll(synchronousQueue0);
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[0];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute((-1767));
      fBCachedFetcher0.relative((-1767));
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.previous();
      GDSHelper gDSHelper0 = null;
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[4];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVARArray0[0] = xSQLVAR1;
      XSQLVAR xSQLVAR2 = xSQLVAR0.deepCopy();
      xSQLVARArray0[1] = xSQLVAR2;
      int int0 = (-3009);
      int int1 = (-45);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl1.removeRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      databaseParameterBufferImp1.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      databaseParameterBufferImp2.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.offerLast((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher1.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5211216510400676
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.parallelStream();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((-1788));
      fBCachedFetcher0.close();
      fBCachedFetcher0.first();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6437285350856263
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.getRowNum();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)49;
      Object object0 = new Object();
      linkedList0.removeFirstOccurrence(object0);
      fBCachedFetcher0.setFetchSize((byte)26);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.isBeforeFirst();
      fBCachedFetcher1.isBeforeFirst();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.setFetchSize((byte)26);
      assertEquals(26, fBCachedFetcher0.getFetchSize());
      
      fBCachedFetcher1.next();
      fBCachedFetcher1.next();
      boolean boolean0 = fBCachedFetcher1.absolute(2004);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.475855659123725
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      byte[][] byteArray0 = new byte[9][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[3] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)125;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)33;
      byteArray2[4] = (byte) (-51);
      byteArray0[1] = byteArray1;
      linkedList0.add(byteArray0);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue1.add(integer0);
      linkedBlockingQueue1.add(integer0);
      Integer integer1 = new Integer(13);
      linkedBlockingQueue1.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.close(true);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1123229474816387
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.containsAll(synchronousQueue0);
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-105);
      byteArray1[2] = (byte)38;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte)116;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)116;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.offer(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1123229474816387
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.containsAll(synchronousQueue0);
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-105);
      byteArray1[2] = (byte)38;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte)116;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)116;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Integer integer0 = new Integer(13);
      byte[][] byteArray0 = new byte[9][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[3] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)125;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)33;
      byteArray2[4] = (byte) (-51);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedBlockingQueue<Integer> linkedBlockingQueue1 = new LinkedBlockingQueue<Integer>();
      linkedBlockingQueue1.add(integer0);
      linkedBlockingQueue1.add(integer0);
      Integer integer1 = new Integer(13);
      linkedList0.pop();
      linkedBlockingQueue1.add(integer1);
      linkedList0.containsAll(linkedBlockingQueue0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(0, fBResultSet0.getRow());
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 2429;
      xSQLDA0.ioLength = intArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[2][6];
      byteArray0[0] = null;
      byteArray0[1] = null;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      linkedList0.clone();
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      fBLongVarCharFieldArray0[7] = fBLongVarCharFieldArray0[6];
      fBLongVarCharFieldArray0[8] = fBLongVarCharFieldArray0[7];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)102;
      byte[][] byteArray1 = new byte[1][4];
      byteArray1[0] = byteArray0;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[30];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[1] = fBLongVarCharFieldArray0[0];
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[0];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      linkedList0.offerLast((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-2876));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6796742326465708
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SynchronousQueue<Object> synchronousQueue0 = new SynchronousQueue<Object>();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_stmt_handle_impl1.removeRows();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      linkedList0.offerLast((byte[][]) null);
      fBCachedFetcher0.absolute(2);
      boolean boolean0 = fBCachedFetcher0.absolute(45);
      assertEquals(0, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }
}
