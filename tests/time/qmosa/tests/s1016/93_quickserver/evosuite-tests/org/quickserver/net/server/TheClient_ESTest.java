/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 02:05:55 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Socket;
import java.nio.channels.SocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.BlockingClientHandler;
import org.quickserver.net.server.impl.DefaultClientEventHandler;
import org.quickserver.net.server.impl.NonBlockingClientHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.241462535298864
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      theClient0.setMaxAuthTry(0);
      theClient0.setTrusted(false);
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.setKeepAlive(true);
      theClient0.setSocket(mockSocket0);
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler();
      commandHandler0.closingConnection(blockingClientHandler0);
      assertEquals("<ClientHandler-Pool#-1-ID:1>", blockingClientHandler0.getName());
      
      theClient0.setClientCommandHandler(commandHandler0);
      ClientEvent clientEvent0 = ClientEvent.CLOSE_CON;
      theClient0.setClientEvent(clientEvent0);
      theClient0.setMaxConnectionMsg((String) null);
      theClient0.getSocketChannel();
      theClient0.getAuthenticator();
      System.setCurrentTimeMillis(2441L);
      theClient0.getServer();
      theClient0.getClientWriteHandler();
      theClient0.getServer();
      theClient0.getSocket();
      theClient0.getClientExtendedEventHandler();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientObjectHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.toString();
      theClient0.getServer();
      theClient0.getClientBinaryHandler();
      assertEquals(0, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3210182221049966
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("<W<ZTrNI1F8u)DO");
      theClient0.setTimeoutMsg("<W<ZTrNI1F8u)DO");
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setMaxAuthTry(0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      TheClient theClient1 = new TheClient();
      theClient1.getSocketChannel();
      theClient1.toString();
      theClient1.setTrusted(true);
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler(0);
      blockingClientHandler0.getServer();
      //  // Unstable assertion: assertEquals("<ClientHandler-Pool#0-ID:20>", blockingClientHandler0.getName());
      
      theClient0.setServer((QuickServer) null);
      theClient1.getClientEvent();
      theClient1.setTimeoutMsg("&tr/JPF>^<IWV99pb");
      theClient0.getClientAuthenticationHandler();
      //  // Unstable assertion: assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.260960815263037
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg((String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      theClient0.setMaxAuthTryMsg((String) null);
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getSendBufferSize();
      theClient0.setSocket(mockSocket0);
      theClient0.setTimeout(0);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.setTimeout((-2462));
      theClient0.getAuthenticator();
      theClient0.setMaxAuthTry(0);
      theClient0.getClientObjectHandler();
      theClient0.getClientAuthenticationHandler();
      theClient0.getServer();
      theClient0.getClientAuthenticationHandler();
      theClient0.getSocketChannel();
      theClient0.getClientObjectHandler();
      theClient0.getSocket();
      System.setCurrentTimeMillis(131072);
      theClient0.getClientBinaryHandler();
      theClient0.getClientObjectHandler();
      theClient0.getClientWriteHandler();
      theClient0.getSocket();
      theClient0.getClientExtendedEventHandler();
      assertEquals((-2462), theClient0.getTimeout());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1296233673511074
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "setClientHandlerObjectPoolConfig");
      TheClient theClient0 = new TheClient();
      Data data0 = new Data();
      data0.setUsername("setClientHandlerObjectPoolConfig");
      theClient0.toString();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      data0.setLastAsked("setClientHandlerObjectPoolConfig");
      QuickServer quickServer0 = new QuickServer();
      theClient0.setServer(quickServer0);
      theClient0.toString();
      theClient0.setClientData(data0);
      theClient0.getSocket();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "J$s8JOYb9?");
      theClient0.setTrusted(true);
      theClient0.setCommunicationLogging(false);
      theClient0.getClientExtendedEventHandler();
      theClient0.toString();
      theClient0.getClientData();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientData();
      theClient0.getSocketChannel();
      theClient0.getClientBinaryHandler();
      theClient0.getClientWriteHandler();
      theClient0.getServer();
      theClient0.toString();
      theClient0.getServer();
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      theClient0.getSocketChannel();
      theClient0.getServer();
      theClient0.getSocket();
      theClient0.getServer();
      assertTrue(theClient0.getTrusted());
      assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.260960815263037
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-30L));
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      TheClient theClient1 = new TheClient();
      theClient1.getAuthenticator();
      theClient1.setAuthenticator((Authenticator) null);
      theClient0.setMaxAuthTry(4280);
      theClient1.toString();
      theClient0.getClientWriteHandler();
      theClient1.getClientExtendedEventHandler();
      theClient1.getClientEventHandler();
      theClient1.setMaxAuthTry((-688));
      theClient1.getClientData();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.getClientData();
      theClient1.setClientData((ClientData) null);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      TheClient theClient2 = new TheClient();
      theClient2.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      assertEquals((-688), theClient1.getMaxAuthTry());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      FileSystemHandling.shouldAllThrowIOExceptions();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      QuickServer quickServer0 = new QuickServer(", Event: ", 1);
      theClient0.setServer(quickServer0);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.setTrusted(false);
      theClient0.getClientEvent();
      theClient0.setTimeoutMsg("no socket");
      theClient0.getServer();
      theClient0.getSocket();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.321585437079472
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("<W<ZTrNI1F8u)DO");
      theClient0.setTimeoutMsg("<W<ZTrNI1F8u)DO");
      theClient0.setTrusted(false);
      theClient0.getClientEventHandler();
      theClient0.getCommunicationLogging();
      theClient0.getTrusted();
      theClient0.getAuthenticator();
      theClient0.getSocketChannel();
      theClient0.getMaxConnectionMsg();
      TheClient theClient1 = new TheClient();
      theClient1.setTrusted(true);
      theClient0.setTimeout(0);
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient1.setClientEvent((ClientEvent) null);
      TheClient theClient2 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.setMaxAuthTry(58);
      theClient0.getSocketChannel();
      int int0 = theClient1.getMaxAuthTry();
      assertEquals(58, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg(" to handle.");
      theClient0.setTimeout(2964);
      theClient0.getSocket();
      int int0 = theClient0.getTimeout();
      assertEquals(2964, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getServer();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      QuickServer.getVersionNo();
      theClient0.setServer((QuickServer) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.setClientEvent((ClientEvent) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientObjectHandler();
      theClient0.getClientCommandHandler();
      theClient0.getServer();
      theClient0.getClientCommandHandler();
      theClient0.getClientObjectHandler();
      theClient0.getClientWriteHandler();
      theClient0.getTimeout();
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      
      theClient0.getClientBinaryHandler();
      theClient0.getClientEvent();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.260960815263037
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("<W<ZTrNI1F8u)DO");
      theClient0.setTimeoutMsg("<W<ZTrNI1F8u)DO");
      theClient0.setCommunicationLogging(true);
      theClient0.setMaxAuthTry(0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setCommunicationLogging(false);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setMaxAuthTry((-44));
      theClient0.toString();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientEventHandler();
      BlockingClientHandler blockingClientHandler0 = new BlockingClientHandler(0);
      blockingClientHandler0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.getClientEvent();
      theClient0.setTimeoutMsg("<H(fSqq,$XQKG");
      TheClient theClient1 = new TheClient();
      theClient1.getClientExtendedEventHandler();
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3818971816249785
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      FileSystemHandling.shouldAllThrowIOExceptions();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      TheClient theClient1 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient1.toString();
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientObjectHandler();
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      TheClient theClient2 = new TheClient();
      theClient2.setMaxAuthTry((-604));
      theClient1.getClientData();
      theClient2.getClientWriteHandler();
      theClient2.setClientWriteHandler((ClientWriteHandler) null);
      theClient1.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient2.getClientData();
      theClient1.setClientData((ClientData) null);
      TheClient theClient3 = new TheClient();
      theClient3.getMaxAuthTryMsg();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      TheClient theClient4 = new TheClient();
      theClient4.getClientObjectHandler();
      theClient4.setClientObjectHandler((ClientObjectHandler) null);
      theClient2.getTrusted();
      theClient3.getMaxAuthTry();
      int int0 = theClient2.getMaxAuthTry();
      assertEquals((-604), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.4859283519853634
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTrusted(false);
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setTrusted(true);
      theClient0.setTimeout((-1622));
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getServer();
      TheClient theClient1 = new TheClient();
      theClient1.setServer((QuickServer) null);
      theClient0.setMaxAuthTry((-652));
      theClient0.getMaxAuthTryMsg();
      TheClient theClient2 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getTimeout();
      theClient2.getClientData();
      theClient1.setClientData((ClientData) null);
      theClient2.toString();
      theClient2.setTrusted(false);
      theClient1.getClientBinaryHandler();
      theClient0.getClientWriteHandler();
      assertEquals((-652), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.48462116244288
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      QuickServer quickServer0 = new QuickServer();
      quickServer0.run();
      theClient0.setServer(quickServer0);
      theClient0.getSocket();
      theClient0.getSocketChannel();
      theClient0.getTimeout();
      theClient0.getServer();
      try { 
        QuickServer.load("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not init server from xml file
         //
         verifyException("org.quickserver.net.server.QuickServer", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.4872576972828044
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      TheClient theClient1 = new TheClient();
      theClient1.setMaxAuthTryMsg("");
      theClient1.setTimeoutMsg((String) null);
      theClient0.getSocket();
      theClient1.setSocket((Socket) null);
      theClient0.setCommunicationLogging(true);
      theClient1.setMaxAuthTry(0);
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient1.getCommunicationLogging();
      boolean boolean0 = theClient1.getTrusted();
      assertFalse(boolean0);
      
      theClient1.getAuthenticator();
      theClient0.getSocketChannel();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient1.getClientData();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient1.getClientData();
      theClient1.setClientData((ClientData) null);
      theClient1.getMaxAuthTryMsg();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient1.getClientObjectHandler();
      assertEquals(0, theClient1.getMaxAuthTry());
      
      TheClient theClient2 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      TheClient theClient3 = new TheClient();
      theClient3.getSocketChannel();
      theClient2.getClientObjectHandler();
      boolean boolean1 = theClient0.getCommunicationLogging();
      assertTrue(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.581951544267405
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("<W<ZTrNI1F8u)DO");
      theClient0.setTimeoutMsg("<W<ZTrNI1F8u)DO");
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setMaxAuthTry(0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.setMaxAuthTry(4280);
      theClient0.toString();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientEventHandler();
      theClient0.setMaxAuthTry(4280);
      theClient0.getClientData();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setMaxConnectionMsg("");
      theClient0.getClientBinaryHandler();
      theClient0.getMaxConnectionMsg();
      assertEquals(4280, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setMaxAuthTryMsg("Sending [{0}] : {1}; RAW: {2}{3}");
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.setMaxConnectionMsg(", Event: ");
      assertTrue(theClient0.getCommunicationLogging());
      
      theClient0.setCommunicationLogging(false);
      theClient0.toString();
      theClient0.getMaxConnectionMsg();
      assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.setTrusted(true);
      theClient0.setTimeout((-1622));
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getTrusted();
      theClient0.getTrusted();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte) (-107);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.toString();
      theClient0.getClientCommandHandler();
      theClient0.getClientEvent();
      assertEquals((-1622), theClient0.getTimeout());
      
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.432811072189696
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setMaxAuthTryMsg("");
      theClient0.setTimeoutMsg("");
      theClient0.getClientAuthenticationHandler();
      theClient0.getAuthenticator();
      theClient0.getClientEvent();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.setMaxAuthTry(65536);
      theClient0.getTimeoutMsg();
      theClient0.setTimeoutMsg("");
      theClient0.setTimeout((-2833));
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      assertEquals((-2833), theClient0.getTimeout());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.052754235510318
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      FileSystemHandling.shouldAllThrowIOExceptions();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      TheClient theClient1 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient1.getClientObjectHandler();
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      TheClient theClient2 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      String string0 = theClient1.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient1.getClientCommandHandler();
      theClient1.getClientEvent();
      System.setCurrentTimeMillis(0L);
      theClient2.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      boolean boolean0 = theClient1.getTrusted();
      assertFalse(boolean0);
      
      theClient2.getClientWriteHandler();
      theClient0.getClientBinaryHandler();
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.6695792540767598
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxAuthTryMsg("<W<ZTrNI1F8u)DO");
      theClient0.setTimeoutMsg("<W<ZTrNI1F8u)DO");
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setMaxAuthTry(0);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.setCommunicationLogging(true);
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getServer();
      theClient0.setServer((QuickServer) null);
      theClient0.setMaxAuthTry(4280);
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientEventHandler();
      theClient0.setMaxAuthTry(4280);
      theClient0.getClientData();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      assertEquals(4280, theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      DefaultClientEventHandler defaultClientEventHandler0 = new DefaultClientEventHandler();
      theClient0.setClientEventHandler(defaultClientEventHandler0);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getServer();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      ClientEventHandler clientEventHandler0 = theClient0.getClientEventHandler();
      theClient0.setClientEventHandler(clientEventHandler0);
      theClient0.setTimeoutMsg("org.quickserver.net.server.TheClient");
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      
      theClient0.getClientCommandHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("no socket");
      Data data0 = new Data();
      theClient0.setClientData(data0);
      theClient0.getClientWriteHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setTimeoutMsg("no socket");
      theClient0.getClientWriteHandler();
      theClient0.setTimeout(2352);
      theClient0.setTrusted(false);
      theClient0.setTrusted(false);
      theClient0.getClientWriteHandler();
      theClient0.getTimeoutMsg();
      QuickServer quickServer0 = new QuickServer();
      quickServer0.setClientAuthenticationHandler("no socket");
      theClient0.setServer(quickServer0);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      assertEquals(2352, theClient0.getTimeout());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout(0);
      theClient0.getClientEventHandler();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientObjectHandler();
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      TheClient theClient1 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientCommandHandler();
      theClient0.getClientEvent();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      System.setCurrentTimeMillis(1000L);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertEquals(0, theClient0.getTimeout());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QuickServer quickServer0 = new QuickServer(".hm{");
      System.setCurrentTimeMillis(0L);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-100);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-42);
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)125;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Nhs\"0,T0w]GDg{xq");
      TheClient theClient0 = new TheClient();
      theClient0.getTimeoutMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getSocket();
      theClient0.setSocket((Socket) null);
      NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler(125);
      nonBlockingClientHandler0.getSocketChannel();
      assertEquals("<ClientHandler-Pool#125-ID:1>", nonBlockingClientHandler0.getName());
      
      theClient0.setSocketChannel((SocketChannel) null);
      theClient0.getSocketChannel();
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      FileSystemHandling.shouldAllThrowIOExceptions();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientObjectHandler();
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      theClient0.getClientCommandHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      System.setCurrentTimeMillis(0L);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9720861369674885
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.toString();
      theClient0.getClientObjectHandler();
      TheClient theClient1 = new TheClient();
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientObjectHandler();
      ClientEvent clientEvent0 = ClientEvent.LOST_CON;
      theClient1.getClientCommandHandler();
      TheClient theClient2 = new TheClient();
      theClient1.getAuthenticator();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient2.getClientCommandHandler();
      theClient2.getClientAuthenticationHandler();
      int int0 = theClient1.getMaxAuthTry();
      assertFalse(theClient1.getTrusted());
      assertTrue(theClient1.getCommunicationLogging());
      assertEquals(0, int0);
  }
}
