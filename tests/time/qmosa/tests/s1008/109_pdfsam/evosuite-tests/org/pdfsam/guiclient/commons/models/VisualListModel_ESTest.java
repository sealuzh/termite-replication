/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:09:51 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Dialog;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.InputMethodListener;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.renderable.ParameterBlock;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionOp;
import javax.swing.JComboBox;
import javax.swing.event.ListDataListener;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.218743692541794
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.getElements();
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      int[] intArray0 = new int[5];
      intArray0[0] = 817;
      intArray0[1] = (-789);
      intArray0[2] = 9;
      intArray0[3] = 9;
      intArray0[4] = 9;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 817
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.786185686569691
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      visualListModel1.moveDownIndex(0);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0557051606564785
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[25];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1095));
      EvoSuiteURL evoSuiteURL0 = null;
      int[] intArray0 = new int[4];
      intArray0[0] = (-16);
      intArray0[1] = (-1095);
      intArray0[2] = 9;
      intArray0[3] = (-940);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -939
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2519175163260234
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      stack0.replaceAll(unaryOperator0);
      stack0.clear();
      stack0.add((VisualPageListItem) null);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      stack0.containsAll(vector0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Could not instantiate configurator [");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualListModel0.addAllElements(21, (Collection<VisualPageListItem>) stack0);
      visualListModel1.getSize();
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.009653988412479
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[25];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1095));
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Q91Bi'\ts6{");
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.133538701882329
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[25];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      visualListModel0.moveDownIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Q91Bi'\ts6{");
      visualListModel0.addElementAt(visualPageListItemArray0[4], 9);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4428352147175594
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt(visualPageListItemArray0[0], (-864));
      int[] intArray0 = new int[6];
      intArray0[0] = 13;
      intArray0[1] = (-16);
      intArray0[2] = (-864);
      intArray0[3] = (-864);
      intArray0[4] = (-864);
      intArray0[5] = 13;
      visualListModel0.moveDownIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualListModel0.updateElementAt((-864), (VisualPageListItem) null);
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.384725757834036
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = 9;
      intArray0[1] = (-16);
      intArray0[2] = (-16);
      intArray0[3] = (-16);
      intArray0[4] = (-16);
      intArray0[5] = (-16);
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.4651935718829296
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-3194);
      visualListModel1.moveUpIndexes(intArray0);
      intArray0[0] = (-3194);
      intArray0[3] = (-3194);
      visualListModel1.elementsChanged();
      intArray0[4] = 0;
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.removeElements(intArray1, true);
      try { 
        Integer.valueOf("org.pdfsam.guiclient.commons.models.VisualListModel");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"org.pdfsam.guiclient.commons.models.VisualListModel\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.325046084487479
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[25];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[9] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      visualListModel0.moveDownIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Q91Bi'\ts6{");
      visualListModel0.addElementAt(visualPageListItemArray0[4], 9);
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.203504340906237
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = 9;
      visualListModel0.addElementAt(visualPageListItemArray0[1], 9);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addListDataListener((ListDataListener) null);
      int[] intArray0 = new int[7];
      intArray0[0] = (-16);
      intArray0[1] = 9;
      intArray0[2] = (-16);
      intArray0[3] = 9;
      intArray0[4] = (-16);
      intArray0[5] = (-16);
      intArray0[6] = 9;
      visualListModel1.moveDownIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualListModel1.addElementAt(visualPageListItemArray0[4], (-13));
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -16
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4902259998997436
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.getElements();
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.updateElementAt(3717, visualPageListItemArray1[2]);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9007452539070404
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-3194);
      intArray0[0] = (-3194);
      intArray0[3] = (-3194);
      intArray0[4] = 0;
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.2781416159837393
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[25];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[9] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = 9;
      intArray1[1] = 9;
      intArray1[2] = 9;
      intArray1[3] = 9;
      intArray1[4] = 9;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.updateElementAt(1302, visualPageListItemArray0[1]);
      visualListModel0.updateElementAt(9, visualPageListItemArray0[4]);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5231920444148086
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      vector0.add((VisualPageListItem) null);
      intArray0[0] = (-388);
      intArray0[1] = (-3194);
      intArray0[2] = (-3194);
      intArray0[3] = (-3194);
      intArray0[4] = (-388);
      visualListModel1.moveUpIndexes(intArray0);
      intArray0[1] = (-388);
      int[] intArray1 = new int[1];
      intArray1[0] = (-388);
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.setData(vector0);
      visualListModel1.elementChanged((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(275, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.214822123914343
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-13));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = visualPageListItemArray0[2];
      EvoSuiteURL evoSuiteURL0 = null;
      String string0 = "";
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2921673735386805
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[5] = 2;
      intArray0[1] = (-3194);
      intArray0[0] = (-3194);
      intArray0[3] = (-3194);
      intArray0[4] = 2;
      intArray0[5] = 2;
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1506719848487332
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[25];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1095));
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "4F65z<M$A1$M");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.updateElementAt((-1095), visualPageListItemArray0[4]);
      visualListModel2.updateElementAt((-2553), visualPageListItemArray0[4]);
      assertFalse(visualListModel2.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9374751429887778
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      vector0.add((VisualPageListItem) null);
      intArray0[0] = 0;
      intArray0[1] = 8;
      intArray0[3] = 8;
      intArray0[4] = 0;
      visualListModel1.moveUpIndexes(intArray0);
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 8;
      visualListModel1.rotateClockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 7
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4013116669812944
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      vector0.add((VisualPageListItem) null);
      intArray0[0] = 0;
      intArray0[1] = (-3194);
      intArray0[3] = (-3194);
      intArray0[4] = 0;
      visualListModel1.moveUpIndexes(intArray0);
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel1.rotateClockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.setData(vector0);
      visualListModel1.elementChanged((VisualPageListItem) null);
      int int0 = 275;
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(275, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.493805893852347
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-3194);
      visualListModel1.moveUpIndexes(intArray0);
      intArray0[0] = (-3194);
      intArray0[3] = (-3194);
      intArray0[4] = 0;
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.undeleteElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      visualListModel1.undeleteElements(intArray1);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) (-3194), 1.0, (double) 0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (-3194));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -3194
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.080026147728218
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "'q=[{UW}{p4c(%]<");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      stack0.replaceAll(unaryOperator0);
      stack0.clear();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.apache.log4j.helpers.FileWatchdog");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Could not instantiate configurator [");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Integer integer0 = new Integer(1900);
      visualListModel0.moveDownIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2519175163260234
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator.identity();
      boolean boolean0 = new Boolean("");
      VisualPageListItem visualPageListItem0 = null;
      stack0.clear();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.getSources();
      boolean boolean1 = new Boolean(true);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Could not instantiate configurator [");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements(stack0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualListModel0.addAllElements(21, (Collection<VisualPageListItem>) stack0);
      visualListModel1.getSize();
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4960054686834225
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[20];
      vector0.add((VisualPageListItem) null);
      intArray0[0] = 0;
      intArray0[1] = 8;
      intArray0[3] = 8;
      intArray0[4] = 0;
      visualListModel1.moveUpIndexes(intArray0);
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 8;
      visualListModel1.rotateClockwiseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.setData(vector0);
      visualListModel1.elementChanged((VisualPageListItem) null);
      int int0 = 275;
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem(275, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((VisualPageListItem) null);
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1313;
      intArray0[1] = 46;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      UnaryOperator.identity();
      VisualPageListItem visualPageListItem0 = null;
      int int0 = (-16);
      visualListModel0.addAllElements((-16), (Collection<VisualPageListItem>) vector0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      String string0 = "";
      int int1 = (-815);
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem((-815), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2217515590724055
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "'1uL");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      int[] intArray0 = new int[3];
      intArray0[0] = 76;
      intArray0[1] = 76;
      intArray0[2] = 76;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(76);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel2.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2344281389559963
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1766);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1766;
      visualListModel1.reverseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1671));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8624848373103666
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      stack0.replaceAll(unaryOperator0);
      stack0.clear();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Could not instantiate configurator [");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      Integer integer0 = new Integer(1900);
      visualListModel2.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = null;
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      jComboBox0.requestFocus();
      jComboBox0.getFocusListeners();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      jComboBox0.getComponentPopupMenu();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      jComboBox0.removeInputMethodListener((InputMethodListener) null);
      stack0.remove((Object) visualListModel0);
      visualListModel0.addListDataListener(jComboBox0);
      int int1 = 102;
      visualListModel0.moveUpIndex(102);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveDownIndex(4699);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.removeElements((-531), 5, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.491427275179773
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "ZCUg");
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel2.reverseElements(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = (-3194);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray1);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualListModel0.reverseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel1.undeleteElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel2.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = 108;
      visualListModel1.getElementAt(108);
      int int1 = 0;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel1.data = vector0;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1232), "V8~3gob88[qU/", "V8~3gob88[qU/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5036859602348813
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      stack0.replaceAll(unaryOperator0);
      stack0.clear();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Could not instantiate configurator [");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      Integer integer0 = new Integer(1900);
      Integer integer1 = new Integer((-714));
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.getValidElements();
      VisualListModel visualListModel4 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1900;
      intArray0[5] = (-714);
      intArray0[6] = 0;
      visualListModel4.removeElements(intArray0, false);
      visualListModel3.getValidElements();
      visualListModel3.updateElementAt(603, (VisualPageListItem) null);
      visualListModel3.removeElements(1900, 0, false);
      assertFalse(visualListModel3.equals((Object)visualListModel4));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6070971728259638
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-3194);
      visualListModel1.moveUpIndexes(intArray0);
      intArray0[3] = (-3194);
      intArray0[4] = 0;
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.getListDataListeners();
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.undeleteElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(46, 1554, false);
      visualListModel0.getElementAt(11);
      visualListModel0.moveDownIndex((-990));
      int int0 = 606;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(606, 180, (-20));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -20
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.subList((-16), (-16), true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex((-16));
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      visualListModel0.setData(visualPageListItemArray1);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(1955, (Collection<VisualPageListItem>) null);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-2757), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) priorityQueue0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0, (-1.0), (-2109.9882523668007));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)22;
      int int0 = 1000;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((byte)0, 537, byteArray0, (-1776), false, 170);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.786668725404531
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-3194);
      intArray0[2] = (-3194);
      intArray0[3] = (-3194);
      intArray0[4] = 0;
      intArray0[5] = 0;
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel1.getElements();
      visualListModel1.addElementAt((VisualPageListItem) null, 0);
      visualListModel1.getValidElements();
      visualListModel1.subList(0, 0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel1.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.moveUpIndex(451);
      visualListModel0.addElementAt((VisualPageListItem) null, (-602));
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "l52,3;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.apache.log4j.helpers.LogLog");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.setData(visualPageListItemArray0);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      visualListModel0.getValidElements();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      // Undeclared exception!
      try { 
        Dialog.ModalityType.valueOf("l52,3;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant java.awt.Dialog.ModalityType.l52,3;
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.getElements();
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Hashtable<RenderingHints.Key, Object> hashtable1 = new Hashtable<RenderingHints.Key, Object>();
      hashtable1.put(sunHints_Key0, "Parsing appender named \"");
      visualListModel2.prependAllElements(vector0);
      hashtable0.put(sunHints_Key0, visualListModel0);
      RenderingHints renderingHints0 = new RenderingHints(hashtable1);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(3336, (-3194), 3336, (-532));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (fffff386
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2305, 46, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8063294488351005
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(1);
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      jComboBox0.requestFocus();
      jComboBox0.getFocusListeners();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      jComboBox0.removeInputMethodListener((InputMethodListener) null);
      stack0.remove((Object) null);
      visualListModel0.addListDataListener((ListDataListener) null);
      Integer integer0 = new Integer((-749));
      visualListModel0.moveDownIndex(1900);
      VisualListModel visualListModel1 = new VisualListModel();
      List<VisualPageListItem> list0 = visualListModel1.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-1), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(49, (-1), true);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1776), (-2502), (byte[]) null, (-1), false, (-2502));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      visualListModel0.moveDownIndex((-1246));
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int int0 = 0;
      visualListModel0.prependAllElements(vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      EvoSuiteURL evoSuiteURL0 = null;
      String string0 = "";
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      // Undeclared exception!
      try { 
        visualListModel1.subList(13, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(13) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0, true);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.74594813888896
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.subList(Integer.MAX_VALUE, 1);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "ZCUg");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "bj(s");
      int[] intArray0 = new int[1];
      intArray0[0] = 76;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(76);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[0];
      visualListModel1.undeleteElements(intArray1);
      visualListModel1.moveUpIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray2 = new int[1];
      intArray2[0] = 76;
      visualListModel2.rotateClockwiseElements(intArray2);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.rotateAnticlockwiseElements(intArray0);
      visualListModel3.reverseElements(intArray2);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel3.undeleteElements(intArray0);
      visualListModel2.reverseElements(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1554, "<=rKX@:^wD*", "bj(s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0, false);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1, (-616), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1) > toIndex(-616)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.parallelStream();
      vector0.ensureCapacity(3516);
      visualListModel0.subList(3516, 3516);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[8];
      URL uRL0 = MockURL.getHttpExample();
      try { 
        MockURL.openStream(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2786339548781145
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator.identity();
      visualListModel0.moveUpIndex((-16));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[25];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.addElementAt((VisualPageListItem) null, 9);
      VisualPageListItem[] visualPageListItemArray1 = new VisualPageListItem[3];
      visualPageListItemArray1[0] = null;
      visualPageListItemArray1[1] = null;
      visualPageListItemArray1[2] = null;
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      visualListModel0.moveDownIndexes(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Q91Bi'\ts6{");
      visualListModel0.moveDownIndex((-1));
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-16), "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.getElements();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElementAt(0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultTableModel0);
      CollectionOp collectionOp0 = new CollectionOp("$:fWj[1Q", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"$:fWj[1Q\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      VisualPageListItem visualPageListItem0 = null;
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1313;
      intArray0[1] = 46;
      int int0 = (-602);
      intArray0[2] = 1313;
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      UnaryOperator.identity();
      int[] intArray0 = new int[4];
      intArray0[0] = 1313;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      visualListModel0.getSize();
      intArray0[1] = 46;
      visualListModel0.getValidElements();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementsChanged();
      Integer integer0 = new Integer((-2193));
      visualListModel1.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel1.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Stack<Dialog.ModalityType> stack0 = new Stack<Dialog.ModalityType>();
      JComboBox<Dialog.ModalityType> jComboBox0 = new JComboBox<Dialog.ModalityType>(stack0);
      jComboBox0.requestFocus();
      jComboBox0.getFocusListeners();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener3, inputMethodListener3);
      AWTEventMulticaster.remove(inputMethodListener3, inputMethodListener3);
      jComboBox0.removeInputMethodListener((InputMethodListener) null);
      stack0.remove((Object) inputMethodListener2);
      int int0 = 102;
      int int1 = 0;
      int int2 = 8;
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayList0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(102);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, defaultTableModel0);
      CollectionOp collectionOp0 = new CollectionOp("$:fWj[1Q", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"$:fWj[1Q\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = 0;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0, (-1.0), (-2109.010681));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int int1 = 0;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)22;
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, (-1776), byteArray0, 1000, false, 537);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(11, (-1.0), (-233.72));
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      renderingHints0.entrySet();
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      RenderingHints renderingHints1 = new RenderingHints(hashtable0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      assertTrue(linkedHashSet0.isEmpty());
  }
}
