/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:15:05 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.controller.MapModuleManager;
import freemind.main.FreeMindApplet;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.FocusListener;
import java.awt.event.MouseEvent;
import java.awt.event.PaintEvent;
import java.util.Hashtable;
import java.util.Locale;
import javax.help.GlossaryView;
import javax.help.HelpSet;
import javax.help.JHelp;
import javax.help.JHelpNavigator;
import javax.help.plaf.basic.BasicHelpUI;
import javax.swing.JMenu;
import javax.swing.JTabbedPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import plugins.collaboration.socket.MindMapMaster;
import plugins.collaboration.socket.SocketConnectionHook;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicHelpUI basicHelpUI0 = new BasicHelpUI((JHelp) null);
      MapModuleManager.MapTitleChangeListener mapModuleManager_MapTitleChangeListener0 = mock(MapModuleManager.MapTitleChangeListener.class, new ViolatedAssumptionAnswer());
      Controller.removePropertyChangeListener((FreemindPropertyListener) null);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = (-24);
      String string0 = "owz5";
      BrowseMode browseMode0 = new BrowseMode();
      Controller.getCommonJColorChooser();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      browseMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JMenu jMenu0 = new JMenu("", false);
      Color color0 = Color.RED;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      menuElementArray0[2] = (MenuElement) jMenu0;
      menuElementArray0[1] = (MenuElement) jMenu0;
      menuElementArray0[2] = (MenuElement) jMenu0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MouseEvent mouseEvent0 = new MouseEvent(jMenu0, 2348, 2348, (-2813), 0, (-2813), 0, true, 0);
      menuSelectionManager0.processMouseEvent(mouseEvent0);
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jMenu0, (-2813), 64L, (-2813), (-2813), (-2813), 0, (-1496), 0, false, menuElementArray0, menuSelectionManager0);
      Point point0 = new Point((-1496), (-1496));
      Color.getColor("", (-17));
      try { 
        Controller.showCommonJColorChooserDialog(jMenu0, "", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HelpSet helpSet0 = new HelpSet(classLoader0);
      Hashtable<JTabbedPane, SocketConnectionHook> hashtable0 = new Hashtable<JTabbedPane, SocketConnectionHook>();
      GlossaryView glossaryView0 = new GlossaryView(helpSet0, "T#", ", branch:", (Locale) null, hashtable0);
      JHelpNavigator jHelpNavigator0 = new JHelpNavigator(glossaryView0);
      Point point0 = new Point();
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      PaintEvent paintEvent0 = new PaintEvent(jHelpNavigator0, 0, rectangle0);
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(paintEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.help.JHelpNavigator cannot be cast to java.awt.Window
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      AWTEventMulticaster.remove((FocusListener) metalComboBoxEditor0, (FocusListener) metalComboBoxEditor0);
      MindMapMaster mindMapMaster0 = new MindMapMaster();
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }
}
