/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:46:57 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.965715917798203
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      resultMatrixGnuPlot0.setColNameWidth(2);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixPlainText0.globalInfo();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(2653);
      resultMatrixCSV0.setShowAverage(true);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 2653;
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.m_EnumerateColNames = false;
      resultMatrixCSV0.toStringKey();
      resultMatrixPlainText0.meanPrecTipText();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.toStringMatrix();
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.isStdDev(0);
      resultMatrixGnuPlot0.colNameWidthTipText();
      resultMatrixGnuPlot0.getCount(1);
      resultMatrixCSV0.getVisibleColCount();
      resultMatrixPlainText0.getMeanPrec();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.8611577153769288
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      int[] intArray0 = new int[0];
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setColOrder(intArray0);
      resultMatrixSignificance0.toStringMatrix();
      resultMatrixSignificance0.getAverage(1235);
      resultMatrixSignificance0.getRowName(0);
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixSignificance0.getStdDev(0, 1);
      resultMatrixSignificance0.enumerateColNamesTipText();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=4.058107960177644
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.getSummaryTitle(0);
      vector0.add(".1/ *");
      vector0.clone();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.setMeanPrec(0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.setRemoveFilterName(true);
      resultMatrixHTML0.m_ShowStdDev = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getRevision();
      resultMatrixLatex0.getEnumerateRowNames();
      int[][] intArray0 = new int[1][6];
      int[] intArray1 = new int[6];
      intArray1[0] = 2;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      int[][] intArray2 = new int[5][2];
      intArray2[0] = intArray1;
      intArray2[1] = intArray1;
      intArray2[2] = intArray1;
      intArray2[3] = intArray1;
      intArray2[4] = intArray1;
      resultMatrixHTML0.setSummary(intArray0, intArray2);
      resultMatrixLatex0.toStringMatrix();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "DM,$xG";
      stringArray0[2] = "a";
      stringArray0[3] = "v";
      ResultMatrixHTML.main(stringArray0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.040733053989653
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.globalInfo();
      Vector<String> vector0 = new Vector<String>();
      vector0.clone();
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.getRowName((-2323));
      resultMatrixHTML1.setMeanPrec(485);
      resultMatrixHTML1.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getRevision();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixHTML.main((String[]) null);
      resultMatrixLatex0.getMean(1, 3);
      resultMatrixPlainText1.getSignificanceWidth();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.5744065618122414
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.TIE_STRING = " ";
      resultMatrixCSV0.m_RowNameWidth = 45;
      resultMatrixPlainText0.padString("A7'@51RZ", 45);
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.LEFT_PARENTHESES = "";
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.setMeanWidth(2);
      resultMatrixHTML0.getRemoveFilterName();
      int int0 = 0;
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex0.setMeanWidth(45);
      resultMatrixLatex0.m_ShowAverage = true;
      resultMatrixHTML0.listOptions();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.stdDevPrecTipText();
      resultMatrixPlainText0.m_MeanPrec = 2961;
      resultMatrixLatex0.setSize(0, 1);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.m_EnumerateColNames = true;
      resultMatrixCSV0.clearRanking();
      int[][] intArray0 = new int[0][9];
      resultMatrixHTML0.setRanking(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      resultMatrixSignificance0.TIE_STRING = "Whether to display the standard deviation column.";
      resultMatrixSignificance0.getDefaultShowStdDev();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringRanking();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrixHTML", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=4.035478827325293
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[";
      stringArray0[1] = "[";
      stringArray0[2] = " ";
      stringArray0[3] = "Aa\"0D`rYl.+b6)c";
      stringArray0[4] = "]";
      stringArray0[5] = "8034";
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(2, 0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      assertFalse(resultMatrixPlainText1.getEnumerateRowNames());
      assertEquals(0, resultMatrixPlainText1.getSignificanceWidth());
      assertEquals(25, resultMatrixPlainText1.getRowNameWidth());
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 0);
      resultMatrixSignificance0.setSignificanceWidth((-257));
      ResultMatrixHTML.main(stringArray0);
      resultMatrixCSV0.getDefaultPrintRowNames();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      resultMatrixPlainText0.getVisibleRowCount();
      assertEquals(2, resultMatrixPlainText0.getMeanPrec());
      assertFalse(resultMatrixPlainText0.getEnumerateRowNames());
      assertTrue(resultMatrixPlainText0.getPrintRowNames());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9095948500455817
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      Vector<String> vector0 = new Vector<String>();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getSummaryTitle(1);
      vector0.add(")");
      vector0.clone();
      resultMatrixHTML0.setMeanPrec(2022);
      resultMatrixHTML0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixLatex0);
      resultMatrixPlainText0.getRevision();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.colNameWidthTipText();
      resultMatrixGnuPlot0.getCount((-1366));
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot1.getSignificance(1, 416);
      resultMatrixGnuPlot0.setStdDevWidth(1);
      boolean boolean0 = resultMatrixHTML0.isStdDev((-3155));
      assertEquals(2022, resultMatrixHTML0.getMeanPrec());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.8211816698330785
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(97);
      resultMatrixPlainText0.m_ColNameWidth = 97;
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColNameWidth((-4324));
      resultMatrixPlainText0.isRowName((-4324));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.setPrintColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(2001);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.36230077749981
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1235);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.toStringRanking();
      String string0 = resultMatrixGnuPlot0.colNameWidthTipText();
      assertEquals("The maximum width of the column names (0 = optimal).", string0);
      
      resultMatrixGnuPlot0.getCount(0);
      resultMatrixSignificance0.clearSummary();
      int int0 = resultMatrixGnuPlot0.getSignificance(0, 2);
      assertEquals(0, int0);
      
      resultMatrixGnuPlot0.setStdDevWidth(0);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      
      resultMatrixSignificance0.getDefaultShowAverage();
      assertEquals(1235, resultMatrixSignificance0.getRowCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=4.0603280387611385
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      String[] stringArray0 = new String[0];
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixPlainText0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance(resultMatrixPlainText0);
      int[] intArray0 = new int[0];
      resultMatrixSignificance1.m_ColOrder = intArray0;
      resultMatrixSignificance0.setSignificanceWidth(19);
      ResultMatrixHTML.main(stringArray0);
      resultMatrixPlainText0.globalInfo();
      resultMatrixSignificance1.countWidthTipText();
      String string0 = resultMatrixPlainText0.removeFilterName((String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.4122061864540174
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(97);
      resultMatrixPlainText0.m_ColNameWidth = 97;
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColNameWidth((-4324));
      resultMatrixPlainText0.isRowName((-4324));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.m_MeanWidth = (-4324);
      resultMatrixGnuPlot0.padString("(", 158, false);
      resultMatrixPlainText0.clear();
      resultMatrixPlainText0.setEnumerateRowNames(false);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8902188623256824
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.getSummaryTitle(0);
      vector0.add(".1/ *");
      vector0.clone();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.setMeanPrec(0);
      resultMatrixHTML0.toStringKey();
      assertFalse(resultMatrixHTML0.getShowStdDev());
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
      
      resultMatrixLatex0.toStringMatrix();
      resultMatrixHTML0.m_ShowStdDev = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getRevision();
      resultMatrixLatex0.getEnumerateRowNames();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.colNameWidthTipText();
      resultMatrixGnuPlot0.getCount(127);
      resultMatrixGnuPlot0.getSignificance(0, 5322);
      resultMatrixGnuPlot0.setStdDevWidth(26);
      assertEquals(26, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2846082542313866
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.setPrintColNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixPlainText0);
      resultMatrixSignificance0.assign(resultMatrixPlainText0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(858, 0);
      resultMatrixGnuPlot0.getCount((-625));
      resultMatrixGnuPlot0.getSignificance(0, 1227);
      resultMatrixGnuPlot0.setStdDevWidth(2);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=4.00770016865816
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1235);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.toStringRanking();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 1235;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = 1;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "(";
      resultMatrixSignificance0.removeFilterName("*");
      stringArray0[3] = "-ranking data not set-";
      stringArray0[4] = " ";
      stringArray0[5] = ")";
      stringArray0[6] = "*";
      stringArray0[7] = " ";
      ResultMatrixHTML.main(stringArray0);
      String[][] stringArray1 = new String[3][2];
      stringArray1[0] = stringArray0;
      stringArray1[1] = stringArray0;
      String[] stringArray2 = new String[9];
      stringArray2[0] = " ";
      stringArray2[1] = "*";
      stringArray2[2] = "v";
      stringArray2[3] = ")";
      stringArray2[4] = "";
      stringArray2[5] = "-ranking data not set-";
      stringArray2[6] = "*";
      stringArray2[7] = ")";
      stringArray2[8] = "v";
      stringArray1[2] = stringArray2;
      resultMatrixGnuPlot0.getColSize(stringArray1, 97, true, false);
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.8727374336168032
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.getSummaryTitle(0);
      vector0.add(".1/ *");
      vector0.clone();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.setMeanPrec(0);
      resultMatrixHTML0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixHTML0.m_ShowStdDev = true;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText0.getRevision();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.stdDevPrecTipText();
      resultMatrixLatex0.setSize(1, 2);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.clearRanking();
      assertEquals(2, resultMatrixLatex0.getVisibleRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(13, 8);
      resultMatrixGnuPlot0.toString();
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixLatex0.isStdDev(0);
      resultMatrixLatex0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.padString(" ", 2);
      resultMatrixCSV0.clearRanking();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.1898585964877135
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setShowStdDev(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")";
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.159776182455298
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][0];
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 682;
      intArray1[4] = 682;
      intArray1[5] = 0;
      intArray1[6] = 2;
      intArray1[7] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setColOrder(intArray0[0]);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize((String[][]) null, 92, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.7205854754439884
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      resultMatrixSignificance0.getStdDev((-1), 125);
      assertEquals(0, resultMatrixSignificance0.getColNameWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      assertEquals(25, resultMatrixSignificance0.getRowNameWidth());
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=4.036579744204093
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.setEnumerateColNames(true);
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"(1) col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      assertEquals(5, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixPlainText0.globalInfo();
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      Vector<String> vector0 = new Vector<String>();
      vector0.clone();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setMeanPrec((-1504));
      resultMatrixHTML0.toStringKey();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.toStringSummary();
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixHTML0);
      resultMatrixPlainText1.getRevision();
      assertEquals(2, resultMatrixPlainText1.getMeanPrec());
      assertTrue(resultMatrixPlainText1.getDefaultEnumerateColNames());
      assertEquals(0, resultMatrixPlainText1.getStdDevWidth());
      assertEquals(0, resultMatrixPlainText1.getMeanWidth());
      
      resultMatrixLatex0.getEnumerateRowNames();
      String string1 = resultMatrixLatex0.toStringMatrix();
      assertEquals("\\begin{table}[thb]\n\\caption{\\label{labelname}Table Caption}\n\\footnotesize\n{\\centering \\begin{tabular}{lr}\n\\\\\n\\hline\nDataset & (1)\\\\\n\\hline\nrow0 &    \\\\\n\\hline\n\\multicolumn{2}{c}{$\\circ$, $\\bullet$ statistically significant improvement or degradation}\\\\\n\\end{tabular} \\footnotesize \\par}\n\\end{table}\n", string1);
      
      ResultMatrixHTML.main((String[]) null);
      double double0 = resultMatrixLatex0.getMean(2, 1);
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.3420067400179367
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.getSummaryTitle(0);
      vector0.add(".1/ *");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth((-2477));
      resultMatrixCSV0.setShowAverage(true);
      ResultMatrixHTML resultMatrixHTML1 = null;
      try {
        resultMatrixHTML1 = new ResultMatrixHTML((-2477), 2653);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.788559412067364
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.TIE_STRING = " ";
      resultMatrixCSV0.m_RowNameWidth = 2;
      resultMatrixPlainText0.padString("A7'@51RZ", 45);
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.LEFT_PARENTHESES = "";
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.setMeanWidth(2);
      resultMatrixHTML0.getRemoveFilterName();
      int int0 = 0;
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex0.setMeanWidth(45);
      resultMatrixLatex0.m_ShowAverage = true;
      resultMatrixHTML0.listOptions();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.stdDevPrecTipText();
      resultMatrixLatex0.setSize(0, 1);
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.m_EnumerateColNames = true;
      resultMatrixCSV0.clearRanking();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2842228217416776
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setEnumerateColNames(false);
      resultMatrixHTML0.getDisplayName();
      int int0 = resultMatrixHTML0.getStdDevWidth();
      assertFalse(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7763077559205254
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(9);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      assertEquals(9, resultMatrixGnuPlot0.getCountWidth());
      
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.setColName(1, "5Yrf63sFB");
      assertFalse(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.159776182455298
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[2][0];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 682;
      intArray2[4] = 682;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 2;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setColOrder(intArray1);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getColSize((String[][]) null, 92, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.5705709170102407
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setCountWidth(2653);
      resultMatrixCSV0.m_EnumerateColNames = false;
      resultMatrixCSV0.toStringKey();
      resultMatrixCSV0.getColOrder();
      resultMatrixCSV0.removeFilterName("Revision: ");
      resultMatrixCSV0.isStdDev(0);
      int int0 = resultMatrixCSV0.getVisibleColCount();
      assertEquals(2653, resultMatrixCSV0.getCountWidth());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.7465115965185696
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      assertTrue(resultMatrixPlainText0.getEnumerateColNames());
      
      resultMatrixPlainText0.m_EnumerateColNames = false;
      resultMatrixPlainText0.rowNameWidthTipText();
      resultMatrixPlainText0.toArray();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixPlainText0);
      resultMatrixPlainText0.setShowAverage(false);
      resultMatrixHTML0.getDisplayName();
      resultMatrixHTML0.m_StdDevPrec = 0;
      resultMatrixHTML0.getPrintRowNames();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getVisibleColCount();
      assertEquals(25, resultMatrixPlainText0.getRowNameWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.7571660101183104
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      
      resultMatrixGnuPlot0.toStringMatrix();
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      assertEquals("\n##################\n# file: plot.dat #\n##################\n# generated by WEKA 3.7.7\n# contains the data for the plot\n\n# key for the x-axis\n# 1 - row0\n\n# data for the plot\n1 ''\n#######\n# end #\n#######\n\n##################\n# file: plot.scr #\n##################\n# generated by WEKA 3.7.7\n# script to plot the data\n\n# display it in a window:\nset terminal x11\nset output\n\n# to display all data rows:\nset xrange [0:2]\n\n# axis labels, e.g.:\n#set xlabel \"Datasets\"\n#set ylabel \"Accuracy in %\"\n\n# the plot commands\nplot \"plot.dat\" using 1:2 with lines title \"col0\"\n\n# generate ps:\n#set terminal postscript\n#set output \"plot.ps\"\n#replot\n\n# generate png:\n#set terminal png size 800,600\n#set output \"plot.png\"\n#replot\n\n# wait for user to hit <Return>\npause -1\n#######\n# end #\n#######\n", string0);
      
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      String string1 = resultMatrixCSV0.toStringMatrix();
      assertEquals("Dataset,'[1] col0'\nrow0,''\n'[v/ /*]',''\n", string1);
      
      resultMatrixCSV0.toStringRanking();
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setColName(156, "-ranking data not set-");
      resultMatrixCSV1.getDefaultMeanPrec();
      resultMatrixHTML0.globalInfo();
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.7571282441134555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.setColName(1, "5Yrf63sFB");
      assertTrue(resultMatrixCSV0.getPrintColNames());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.917031310028781
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowNameWidth(97);
      resultMatrixPlainText0.m_ColNameWidth = 97;
      resultMatrixPlainText0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.setColNameWidth((-4324));
      resultMatrixPlainText0.isRowName((-4324));
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setPrintColNames(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(2001);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.toStringRanking();
      resultMatrixGnuPlot0.padString("oiVp]6=v?X", (-313), true);
      resultMatrixHTML0.m_Counts = null;
      resultMatrixCSV0.setColName(1984, "Eg+.CL");
      resultMatrixHTML0.showAverageTipText();
      resultMatrixPlainText0.getRowOrder();
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.getHeader("Q%xIt>");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.176663269186535
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(26, 12);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 12;
      doubleArray1[3] = (double) 1;
      resultMatrixLatex0.m_NonSigWins = null;
      doubleArray1[4] = (double) 1;
      doubleArray0[0] = doubleArray1;
      resultMatrixLatex0.m_Mean = doubleArray0;
      resultMatrixLatex0.getColName((-1250));
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getRevision();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 26;
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.setSize(26, (-2472));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.399263366901253
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RowNameWidth = 17;
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      assertTrue(resultMatrixCSV0.getPrintColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getRowName((-4470));
      resultMatrixSignificance0.getVisibleRowCount();
      resultMatrixSignificance0.getStdDev(27, 0);
      assertEquals(50, resultMatrixSignificance0.getRowNameWidth());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.441113612617862
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 1225;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 0;
      resultMatrixSignificance0.m_RankingLosses = intArray0;
      resultMatrixSignificance0.getDefaultStdDevPrec();
      resultMatrixSignificance0.setEnumerateRowNames(false);
      resultMatrixSignificance0.getDefaultEnumerateColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      int int0 = resultMatrixGnuPlot0.getSignificanceWidth();
      assertEquals(0, int0);
      assertFalse(resultMatrixGnuPlot0.getRemoveFilterName());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
      
      boolean boolean0 = resultMatrixSignificance0.getRemoveFilterName();
      assertFalse(boolean0);
      assertEquals(1, resultMatrixSignificance0.getColCount());
      assertTrue(resultMatrixSignificance0.getPrintRowNames());
      assertEquals(1, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
      assertFalse(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.590740051172627
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.setPrintColNames(false);
      resultMatrixCSV0.TIE_STRING = " ";
      resultMatrixCSV0.m_RowNameWidth = 2;
      resultMatrixPlainText0.padString("A7'@51RZ", 45);
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.LEFT_PARENTHESES = "";
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.setMeanWidth(2);
      resultMatrixHTML0.getRemoveFilterName();
      resultMatrixPlainText0.getRowName(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex0.setMeanWidth(45);
      resultMatrixLatex0.m_ShowAverage = false;
      resultMatrixHTML0.listOptions();
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(32, 2478);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.618000852214169
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1520, 1);
      resultMatrixPlainText0.getDefaultRowNameWidth();
      resultMatrixPlainText0.m_StdDevPrec = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 0);
      int[] intArray0 = new int[2];
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixGnuPlot0.setStdDevWidth(1);
      intArray0[0] = (-1838);
      intArray0[1] = 1;
      resultMatrixGnuPlot0.m_RowOrder = intArray0;
      resultMatrixPlainText0.m_CountWidth = (-1694);
      resultMatrixPlainText0.m_PrintRowNames = false;
      resultMatrixPlainText0.doubleToString(0, 2);
      resultMatrixGnuPlot0.padString("y4xX8ht1Pp;", (-1694), false);
      resultMatrixGnuPlot0.setPrintRowNames(true);
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      resultMatrixPlainText0.meanWidthTipText();
      resultMatrixGnuPlot0.m_ColOrder = intArray0;
      resultMatrixGnuPlot0.getRowCount();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.5748751487476067
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.TIE_STRING = " ";
      resultMatrixCSV0.m_RowNameWidth = 2;
      resultMatrixPlainText0.meanWidthTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.LEFT_PARENTHESES = "";
      resultMatrixHTML0.getDefaultEnumerateColNames();
      resultMatrixCSV0.globalInfo();
      resultMatrixPlainText0.showStdDevTipText();
      resultMatrixPlainText0.setMeanWidth(2);
      assertEquals(2, resultMatrixPlainText0.getMeanWidth());
      
      resultMatrixHTML0.getRemoveFilterName();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2, 0);
      resultMatrixLatex0.setMeanWidth(45);
      resultMatrixLatex0.m_ShowAverage = true;
      resultMatrixHTML0.listOptions();
      resultMatrixLatex0.globalInfo();
      resultMatrixLatex0.stdDevPrecTipText();
      resultMatrixLatex0.setSize(0, 1);
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      
      resultMatrixCSV0.toStringRanking();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.isStdDev(1);
      int int0 = resultMatrixCSV0.getVisibleColCount();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.911100475176671
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2769, 0);
      resultMatrixCSV0.getDefaultRemoveFilterName();
      resultMatrixCSV0.setColNameWidth(2769);
      // Undeclared exception!
      resultMatrixCSV0.toStringMatrix();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.92647607626911
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2236, 0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      // Undeclared exception!
      resultMatrixGnuPlot0.toString();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.420587521966158
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      resultMatrixSignificance0.setColOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.7615489823679984
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.padString((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.8252173234947597
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixHTML0.padString("[", 0);
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.setEnumerateRowNames(true);
      resultMatrixCSV0.toStringMatrix();
      resultMatrixCSV0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixCSV1.setColName(1252, "*");
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixHTML0);
      resultMatrixLatex0.clear();
      assertTrue(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.569196451668828
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(50, 50);
      resultMatrixLatex0.m_ShowAverage = false;
      resultMatrixLatex0.m_ShowStdDev = true;
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      resultMatrixLatex0.m_StdDevWidth = (-3085);
      booleanArray0[2] = true;
      resultMatrixLatex0.setPrintColNames(true);
      booleanArray0[3] = true;
      resultMatrixLatex0.setStdDevWidth((-1));
      booleanArray0[4] = true;
      resultMatrixLatex0.m_RowHidden = booleanArray0;
      resultMatrixLatex0.getDefaultEnumerateColNames();
      resultMatrixLatex0.colNameWidthTipText();
      resultMatrixLatex0.setPrintRowNames(false);
      resultMatrixLatex0.removeFilterName("");
      resultMatrixLatex0.padString("", 0, false);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.238681309904622
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.clearRanking();
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      resultMatrixGnuPlot0.m_RowHidden = booleanArray0;
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "#set terminal postscript\n";
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.setEnumerateRowNames(false);
      resultMatrixGnuPlot0.getDefaultRowNameWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setShowAverage(true);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixGnuPlot0.getRevision();
      String string0 = resultMatrixCSV0.padString("*", 0, true);
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals("*", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.getPrintColNames();
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixLatex0.getRowNameWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.799487498628429
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.getRevision();
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setCountWidth(0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.TIE_STRING = "v";
      resultMatrixHTML0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.toStringMatrix();
      resultMatrixGnuPlot0.colNameWidthTipText();
      resultMatrixGnuPlot0.getCount(1);
      resultMatrixGnuPlot0.getSignificance(95, 2);
      resultMatrixGnuPlot0.setStdDevWidth(2);
      assertEquals(2, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.337588728123289
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      resultMatrixHTML0.setPrintRowNames(true);
      resultMatrixHTML0.RIGHT_PARENTHESES = resultMatrixHTML0.RIGHT_PARENTHESES;
      resultMatrixHTML0.setShowAverage(true);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      try { 
        resultMatrixHTML0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.125588090209857
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.assign(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getHeader(" ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.705254999729674
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixCSV0.toString();
      resultMatrixCSV0.setStdDevWidth(3);
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixCSV0.getRowNameWidth();
      resultMatrixCSV0.toString();
      resultMatrixCSV0.clearRanking();
      resultMatrixCSV0.getShowStdDev();
      resultMatrixCSV0.setEnumerateRowNames(false);
      resultMatrixCSV0.getColOrder();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot((-429), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.460708440260675
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      int[] intArray0 = new int[0];
      resultMatrixCSV0.setRowOrder(intArray0);
      int int0 = 3;
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2328151975148
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.m_SignificanceWidth = 0;
      resultMatrixCSV0.m_MeanPrec = 0;
      resultMatrixCSV0.clear();
      resultMatrixCSV0.m_RemoveFilterName = false;
      resultMatrixCSV0.setPrintColNames(true);
      resultMatrixCSV0.RIGHT_PARENTHESES = "#set terminal png size 800,600\n";
      resultMatrixCSV0.getDefaultColNameWidth();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-1), (-746));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.281605848690576
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColNameWidth(166);
      resultMatrixGnuPlot0.getRevision();
      resultMatrixGnuPlot0.m_ShowStdDev = false;
      resultMatrixGnuPlot0.doubleToString(0.0, 166);
      resultMatrixGnuPlot0.addHeader("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n", "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td colspan=\"2\"><b>Key</b></td></tr>\n");
      assertEquals(166, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.954655059417237
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      resultMatrixSignificance0.setStdDevPrec(0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixSignificance0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")";
      stringArray0[1] = ")";
      stringArray0[2] = ")";
      stringArray0[3] = ")";
      stringArray0[4] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
      int int0 = (-1884);
      intArray0[1] = (-1884);
      intArray0[2] = 3;
      intArray0[3] = 1;
      resultMatrixLatex0.setRowOrder(intArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.4422783950776084
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.addHeader("", "<k#5LC43q@c8YCq0X");
      resultMatrixGnuPlot0.TIE_STRING = "mI?uy1`Odra,r|^-J:";
      resultMatrixGnuPlot0.clear();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getRevision();
      resultMatrixGnuPlot0.setStdDevPrec(1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getHeader("v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.2106051585483524
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 2);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixLatex0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[6];
      intArray1[0] = 3;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 1;
      intArray1[4] = (-451);
      intArray1[5] = 3;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 2;
      intArray2[6] = 2;
      intArray2[7] = 467;
      intArray2[8] = (-3828);
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.708057073616533
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String[] stringArray0 = new String[1];
      resultMatrixHTML0.setPrintRowNames(false);
      stringArray0[0] = ")";
      resultMatrixHTML0.setShowAverage(false);
      Vector<String> vector0 = new Vector<String>();
      resultMatrixHTML0.m_HeaderKeys = vector0;
      resultMatrixHTML0.setOptions(stringArray0);
      resultMatrixHTML0.toStringRanking();
      assertFalse(resultMatrixHTML0.getPrintRowNames());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0949180933653193
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.m_PrintRowNames = true;
      int[][] intArray0 = new int[6][8];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[2] = 0;
      intArray1[3] = 2;
      intArray1[4] = 2;
      intArray1[5] = 1;
      intArray1[6] = 2;
      intArray1[7] = 0;
      intArray1[8] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = (-1);
      intArray2[3] = 1;
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 2;
      intArray3[1] = 1;
      intArray3[2] = 1196;
      intArray3[3] = 2;
      intArray3[4] = (-1);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 1196;
      intArray5[2] = 97;
      intArray5[3] = 0;
      intArray5[4] = (-1);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 2;
      intArray6[1] = 0;
      intArray6[2] = 1196;
      intArray6[3] = 97;
      intArray6[4] = (-1017);
      intArray6[5] = 0;
      intArray6[6] = 1;
      intArray6[7] = 1;
      intArray0[5] = intArray6;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3337897062262227
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.m_CountWidth = (-5045);
      boolean boolean0 = resultMatrixPlainText0.isSignificance(26);
      assertEquals(1, resultMatrixPlainText0.getRowCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixPlainText0.getColCount());
      assertEquals(0, resultMatrixPlainText0.getDefaultSignificanceWidth());
      assertEquals(2, resultMatrixPlainText0.getDefaultStdDevPrec());
      assertFalse(boolean0);
      assertEquals(2, resultMatrixPlainText0.getDefaultMeanPrec());
  }
}
