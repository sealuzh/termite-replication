/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:38:41 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.StringReader;
import java.text.DecimalFormat;
import java.text.FieldPosition;
import java.text.Format;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(7, 7);
      weka.core.matrix.Matrix matrix1 = new weka.core.matrix.Matrix(7, 7, (-1114.34224486811));
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      StringBuffer stringBuffer1 = decimalFormat0.format((-58L), stringBuffer0, fieldPosition0);
      StringBuffer stringBuffer2 = decimalFormat0.format((double) 7, stringBuffer1, fieldPosition0);
      mockPrintWriter0.append((CharSequence) stringBuffer2);
      mockPrintWriter0.print('s');
      mockPrintWriter0.print('M');
      mockPrintWriter0.println((Object) "&UplKlHI,zQ");
      mockPrintWriter0.print((float) 756);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter2.println(4.5);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(mockPrintWriter2, false);
      mockPrintWriter3.print("L~ohm/KwzJ");
      mockPrintWriter3.print(false);
      double[] doubleArray0 = new double[0];
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[4] = false;
      booleanArray0[7] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertArrayEquals(new double[] {}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(7, 7);
      weka.core.matrix.Matrix matrix1 = new weka.core.matrix.Matrix(7, 7, (-1114.34224486811));
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      mockPrintWriter0.print('s');
      mockPrintWriter0.write(756);
      mockPrintWriter0.print('M');
      mockPrintWriter0.println((Object) "&UplKlHI,zQ");
      mockPrintWriter0.print((float) 756);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter0);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(mockPrintWriter2, false);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter(mockPrintWriter2, true);
      mockPrintWriter4.print("&UplKlHI,zQ");
      mockPrintWriter0.print(true);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1114.34224486811);
      doubleArray0[1] = (double) 7;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY, Double.NaN}, doubleArray1, 0.01);
      assertArrayEquals(new double[] {(-1114.34224486811), 7.0}, doubleArray0, 0.01);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(7, 7, (-1114.34224486811));
      double[] doubleArray0 = new double[6];
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      Object object0 = new Object();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = Locale.CHINA;
      matrix0.norm2();
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[1] = true;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      booleanArray0[2] = true;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = 1.0000038146972656;
      boolean boolean0 = true;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1.0000038146972656;
      doubleArray0[1] = 1.0000038146972656;
      doubleArray0[2] = 1.0000038146972656;
      double double1 = 3052.344090688992;
      doubleArray0[3] = 3052.344090688992;
      doubleArray0[4] = 1.0000038146972656;
      boolean[] booleanArray0 = null;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3187125051805406
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.size();
      StringReader stringReader0 = new StringReader("|EZ}*H){");
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      stringReader0.markSupported();
      stringReader0.read(charArray0, 0, 0);
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      stringReader0.mark(3);
      bufferedReader0.markSupported();
      bufferedReader0.skip(1);
      stringReader0.skip(756L);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0, 195);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(200, 5);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 195;
      boolean[] booleanArray0 = new boolean[17];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      Random.setNextRandom(0);
      optimization_DynamicIntArray0.addElement((-28));
      optimization_DynamicIntArray0.addElement((-74));
      assertEquals(3, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5688032438074955
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(503);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(0);
      assertEquals(1, optimization_DynamicIntArray0.size());
      
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.size();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.elementAt(0);
      optimization_DynamicIntArray0.removeAllElements();
      assertEquals(0, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|EZ}*H){");
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      stringReader0.skip(756L);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0, 195);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(200, 5);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 195;
      boolean[] booleanArray0 = new boolean[17];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      Random.setNextRandom(0);
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray0);
      assertArrayEquals(new double[] {195.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(756, 7, 7);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      Object object0 = new Object();
      Locale locale0 = Locale.US;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      Locale locale1 = Locale.CHINA;
      locale0.getDisplayName(locale1);
      locale0.getDisplayVariant();
      locale0.getDisplayScript();
      locale0.getDisplayName(locale1);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      doubleArray0[1] = (double) 25;
      doubleArray0[2] = (double) 7;
      doubleArray0[3] = (double) 756;
      doubleArray0[4] = (double) 7;
      doubleArray0[5] = (double) 756;
      doubleArray0[6] = (double) 7;
      doubleArray0[7] = (double) 25;
      doubleArray0[8] = (double) 756;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|EZ}*H){");
      stringReader0.reset();
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      bufferedReader0.ready();
      bufferedReader0.lines();
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0, 195);
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(200, 5);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 200;
      doubleArray0[1] = (double) 5;
      doubleArray0[2] = 0.0;
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertArrayEquals(new double[] {Double.POSITIVE_INFINITY, 8.333333333333334, 0.0}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(0, 372);
      double[] doubleArray0 = new double[0];
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      double[] doubleArray1 = new double[6];
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = 1.0000038146972656;
      doubleArray1[4] = (double) 372;
      doubleArray1[5] = (double) 372;
      Random.setNextRandom(372);
      Random.setNextRandom(372);
      Random.setNextRandom(848);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2795643472768354
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(14);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(821);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(14);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(821);
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.addElement(14);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(821);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2801315622513108
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(14);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(821);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(14);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(821);
      optimization_DynamicIntArray0.removeElementAt(0);
      optimization_DynamicIntArray0.addElement(14);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.addElement(821);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt(14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
