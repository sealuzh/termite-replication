/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:09:59 GMT 2019
 */

package weka.core.stemmers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.TechnicalInformation;
import weka.core.stemmers.LovinsStemmer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LovinsStemmer_ESTest extends LovinsStemmer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6607228581010416
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("%C(c>Pqy");
      String string0 = lovinsStemmer0.stemString("The authors affiliation.");
      assertEquals("th author affili.", string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "The authors affiliation.";
      stringArray0[1] = "th author affili.";
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      stringArray0[2] = "Hu%~!";
      stringArray0[3] = "The authors affiliation.";
      stringArray0[4] = "th author affili.";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("th author affili.");
      lovinsStemmer0.stem("LAl(m)W4X2");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("Hu%~!");
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stem("CROSSREF");
      lovinsStemmer0.stemString(")Kk&-O R/#4^4I7XYl");
      lovinsStemmer0.getRevision();
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      String string3 = lovinsStemmer0.stemString("yt");
      assertEquals("yt", string3);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5671120859299945
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("zn2ruset");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      String string0 = lovinsStemmer2.getRevision();
      assertEquals("8034", string0);
      
      String string1 = lovinsStemmer2.stemString("B4,%hlkQshMBTr");
      assertEquals("b4,%hlkqshmbtr", string1);
      
      String string2 = lovinsStemmer2.stemString("zn2ruses");
      assertEquals("zn2rus", string2);
      
      String string3 = lovinsStemmer2.stemString("zn2ruset");
      assertEquals("zn2ruses", string3);
      
      String string4 = lovinsStemmer2.stem("zn2rus");
      assertEquals("zn2rus", string4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.533680002599954
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("$RevTision: 8034 $");
      lovinsStemmer0.toString();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string0 = lovinsStemmer1.stem("icide");
      assertEquals("ic", string0);
      
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer0.stemString("ijUbBAUF!n");
      String string1 = lovinsStemmer0.stemString("6deJ,y");
      assertEquals("6dej,y", string1);
      
      String string2 = lovinsStemmer1.stemString("yearond");
      assertEquals("yearons", string2);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.659813104339423
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("A report published by a school or other institution, usually numbered within a series.");
      lovinsStemmer0.toString();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.toString();
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer1.stem("ert");
      lovinsStemmer1.stemString("rus");
      lovinsStemmer1.stemString("F&~v1d0e5Kh}");
      LovinsStemmer.main((String[]) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "rus";
      stringArray0[2] = "a report published by a school or other institution, usually numbered within a series.";
      stringArray0[3] = "A report published by a school or other institution, usually numbered within a series.";
      LovinsStemmer.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6126298275403177
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("dicet");
      lovinsStemmer0.stem("dices");
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      String string0 = lovinsStemmer0.stemString("C4.5: Programs for Machine Learning");
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.getRevision();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.574731678238135
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getTechnicalInformation();
      String string0 = lovinsStemmer1.stem("ix");
      assertEquals("ix", string0);
      
      String string1 = lovinsStemmer1.stemString("yly=r>mzll/ond");
      assertEquals("yly=r>mzl/ons", string1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5802607134229154
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.getTechnicalInformation();
      String string0 = lovinsStemmer1.stemString("ix");
      assertEquals("ix", string0);
      
      String string1 = lovinsStemmer1.stemString("e{Ltkon");
      assertEquals("e{ltkon", string1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6503782188744747
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("agtdex");
      lovinsStemmer0.stem("T$X6Ep_8");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.getRevision();
      lovinsStemmer0.stemString("T$X6Ep_8");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer1.stemString("T$X6Ep_8");
      String[] stringArray0 = new String[0];
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("ical");
      String string0 = lovinsStemmer0.stemString("t$x6ep_8");
      assertEquals("t$x6ep_8", string0);
      
      String string1 = lovinsStemmer1.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string1);
      
      String string2 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7859126300928216
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("agtdex");
      lovinsStemmer0.stem("T$X6Ep_8");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string0 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer1.getRevision();
      lovinsStemmer0.stemString("T$X6Ep_8");
      lovinsStemmer0.getRevision();
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      String string2 = lovinsStemmer1.stemString("T$X6Ep_8");
      assertEquals("t$x6ep_8", string2);
      
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer1.stemString("t$x6ep_8");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "8034";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer3 = new LovinsStemmer();
      lovinsStemmer3.stemString("cid");
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer4 = new LovinsStemmer();
      lovinsStemmer3.stemString("t$x6ep_8");
      lovinsStemmer1.toString();
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer0.stemString("booklet");
      String string3 = lovinsStemmer0.stemString("as0yz");
      assertEquals("as0ys", string3);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.657714860325028
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("$RevTision: 8034 $");
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("izational");
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("]");
      lovinsStemmer0.stemString("]");
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[2] = "$revtision: 8034 $";
      stringArray0[3] = "]";
      stringArray0[4] = "]";
      stringArray0[5] = "$RevTision: 8034 $";
      stringArray0[6] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[7] = "$revtision: 8034 $";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("8ik iu");
      lovinsStemmer0.getRevision();
      String string0 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("lxmfekuad");
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.toString();
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6570305336075843
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("agtdex");
      lovinsStemmer0.stem("T$X6Ep_8");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("MANUAL");
      lovinsStemmer0.toString();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("ns");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer0.stemString("tTe$gAsfbzcPd,^aN");
      lovinsStemmer1.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("onsrud");
      lovinsStemmer1.stemString("elity");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.stemString("mit");
      LovinsStemmer.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7744353282744778
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("uad");
      lovinsStemmer0.globalInfo();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "uad";
      stringArray0[1] = "^k>w *;;)-GQlxZN";
      stringArray0[2] = "uad";
      stringArray0[3] = "uas";
      stringArray0[4] = "uad";
      stringArray0[5] = "^k>w *;;)-GQlxZN";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("^k>w *;;)-GQlxZN");
      String string0 = lovinsStemmer0.toString();
      assertEquals("weka.core.stemmers.LovinsStemmer", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6121662281349207
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("dicet");
      String string0 = lovinsStemmer0.stem("dices");
      assertEquals("dic", string0);
      
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "dices";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "dic";
      stringArray0[5] = "uNe";
      stringArray0[6] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[7] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("8034");
      lovinsStemmer0.stem("ZqE:P4hKg{dIox");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      String string1 = lovinsStemmer0.stemString("yearyt");
      assertEquals("yearys", string1);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      lovinsStemmer1.stem("8034");
      String string3 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string3);
      
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.stem("yearvad");
      String string4 = lovinsStemmer1.stem("\tUses lowercase strings.");
      assertEquals("\tuses lowercase strings.", string4);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7357618138816757
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("$RevTision: 8034 $");
      lovinsStemmer0.stem("$RevTision: 8034 $");
      lovinsStemmer0.stemString("erid");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.toString();
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer2.stemString("a45gp4ax");
      assertEquals("a45gp4ac", string0);
      
      LovinsStemmer.main((String[]) null);
      String string1 = lovinsStemmer0.getRevision();
      assertEquals("8034", string1);
      
      lovinsStemmer2.toString();
      String string2 = lovinsStemmer2.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7172857093898455
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[6];
      lovinsStemmer0.stemString("ylYY=r>MZlul/");
      lovinsStemmer0.globalInfo();
      stringArray0[0] = "8034";
      stringArray0[1] = "j";
      stringArray0[2] = "8034";
      stringArray0[3] = "ylYY=r>MZlul/";
      stringArray0[4] = "8034";
      stringArray0[5] = "8034";
      lovinsStemmer0.stemString("8034");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("ylYY=r>MZlul/");
      lovinsStemmer0.stemString("`r{g#'wW@1g[KRGW");
      lovinsStemmer0.stem("y&d~gqh(wlqerid");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stem("yly=r>mzll/");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("5.70001 >= 5.7 ? ");
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("a^>'4zN)J/");
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("ylYY=r>MZlul/");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      assertEquals(6, stringArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7151851983824857
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.stem("end");
      assertEquals("ens", string1);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string2 = lovinsStemmer1.stemString("ex");
      assertEquals("ex", string2);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.680791992860332
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("9h9#$:GKqq], F");
      assertEquals("9h9#$:gkqq], f", string0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      String string1 = lovinsStemmer1.stemString("acies");
      assertEquals("aci", string1);
      
      lovinsStemmer1.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.globalInfo();
      lovinsStemmer1.getTechnicalInformation();
      LovinsStemmer.main(stringArray0);
      String string2 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6797888294302357
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      String string0 = lovinsStemmer0.stemString("9u6vad");
      assertEquals("9u6vas", string0);
      
      lovinsStemmer0.stem(",");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer0.getRevision();
      String string2 = lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      assertEquals("wek.cor.stemmer.lovinsstemmer", string2);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("/nD_BIT1,");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.stemString("wjY.O}`");
      String string3 = lovinsStemmer0.stemString("9u6vas");
      assertEquals("9u6v", string3);
      
      LovinsStemmer.main(stringArray0);
      String string4 = lovinsStemmer0.stem("y&d~gQh(wlQ");
      assertEquals("y&d~gqh(wlq", string4);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6899935094664653
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stemString("Can't add object to itself!");
      String string0 = null;
      lovinsStemmer0.stem("[;B");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "can't ad object to itself!";
      stringArray0[1] = null;
      stringArray0[2] = "[;B";
      stringArray0[3] = "[;b";
      stringArray0[4] = "R@uQ";
      stringArray0[5] = "Can't add object to itself!";
      stringArray0[6] = "nesses";
      stringArray0[7] = "[;B";
      stringArray0[8] = "[;B";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("R@uQ");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5445861680015962
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      String[] stringArray0 = new String[2];
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("rud");
      lovinsStemmer1.stemString("invalid CVS revision - not dots!");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7467568584611666
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[1] = "]";
      stringArray0[2] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[5] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[6] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[7] = "==c#[e:UsX54";
      stringArray0[8] = "-`!m{-&;W";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("==c#[e:UsX54");
      lovinsStemmer0.stemString("]");
      lovinsStemmer0.globalInfo();
      String string0 = lovinsStemmer0.stemString("]");
      assertEquals("]", string0);
      
      String string1 = lovinsStemmer0.stemString("lux");
      assertEquals("luc", string1);
      
      String string2 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6273765391886825
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("endlux");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      LovinsStemmer.main((String[]) null);
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.stem("[~lBiY23}k1{");
      String string0 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string0);
      
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      String string2 = lovinsStemmer0.stemString("entiality");
      assertEquals("ent", string2);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.762365006277371
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("agtdex");
      lovinsStemmer0.stem("T$X6Ep_8");
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("]}G6fyA0");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("yz");
      lovinsStemmer0.stemString("lingubex");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stemString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.6220491300881492
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      LovinsStemmer.main((String[]) null);
      lovinsStemmer0.stemString("tex");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("e,#$\"MCgP");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      String string0 = lovinsStemmer2.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer2.getRevision();
      String string1 = lovinsStemmer0.stemString("Induction of decision trees");
      assertEquals("induc of decis tree", string1);
      
      lovinsStemmer1.getRevision();
      lovinsStemmer1.getRevision();
      lovinsStemmer1.getRevision();
      lovinsStemmer2.getRevision();
      lovinsStemmer1.stemString("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer.main((String[]) null);
      LovinsStemmer lovinsStemmer3 = new LovinsStemmer();
      LovinsStemmer lovinsStemmer4 = new LovinsStemmer();
      lovinsStemmer4.stemString("induc of decis tree");
      lovinsStemmer1.stemString("oELxA,gDgW");
      lovinsStemmer0.stemString("8034");
      lovinsStemmer3.getTechnicalInformation();
      String string2 = lovinsStemmer1.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string2);
      
      String string3 = lovinsStemmer4.stemString("TXsjPal`<9\"_UvW");
      assertEquals("txsjp`<9\"_uvw", string3);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7106003184468754
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[4] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("9u6vad");
      lovinsStemmer0.stem(",");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("9u6lid");
      String string0 = lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer0.stemString("wek.cor.stemmer.lovinsstemmer");
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.stemString("Can't construct a path to file relative to user dir.");
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("wek.cor.stemmer.lovinsstemmer");
      lovinsStemmer0.stemString("O#q;ZbX-^4");
      lovinsStemmer0.getRevision();
      String string1 = lovinsStemmer2.getRevision();
      assertTrue(string1.equals((Object)string0));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6250520686361196
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      lovinsStemmer0.getRevision();
      String[] stringArray0 = new String[6];
      lovinsStemmer0.stemString("ylYY=r>MZlul/");
      lovinsStemmer0.globalInfo();
      stringArray0[0] = "8034";
      stringArray0[1] = "j";
      stringArray0[2] = "8034";
      stringArray0[3] = "ylYY=r>MZlul/";
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.stem("ex");
      assertEquals("ex", string1);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string2 = lovinsStemmer1.stemString("8034ex");
      assertEquals("8034ec", string2);
      
      String string3 = lovinsStemmer1.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string3);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6039033443129518
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("$Revision: 8034 $");
      lovinsStemmer0.stem("iz)tTonal");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("iz)tton");
      lovinsStemmer0.stemString("iz)tton");
      lovinsStemmer0.toString();
      lovinsStemmer0.stem("Kj[ft,7`K]W");
      lovinsStemmer0.stem("dicvad");
      lovinsStemmer0.stem("dicvas");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("iz)tton");
      lovinsStemmer0.globalInfo();
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.stem("Kj[ft,7`K]W");
      lovinsStemmer1.stemString("publisher");
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("iz)tTonal");
      lovinsStemmer1.stemString("Q]C");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "iz)tton";
      stringArray0[1] = "dicvad";
      stringArray0[2] = "kj[ft,7`k]w";
      stringArray0[3] = "Info (ints): ";
      stringArray0[4] = "dicvad";
      stringArray0[5] = "$Revision: 8034 $";
      stringArray0[6] = "q]c";
      stringArray0[7] = "dicv";
      stringArray0[8] = "kj[ft,7`k]w";
      LovinsStemmer.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6073243742367713
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "$RevTision: 8034 $";
      stringArray0[1] = "lT-WR[/t";
      stringArray0[2] = "$RevTision: 8034 $";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("$RevTision: 8034 $");
      String string0 = lovinsStemmer0.stemString("izational");
      assertEquals("izat", string0);
      
      lovinsStemmer0.stemString("$revtision: 8034 $");
      lovinsStemmer0.stem("$revtis: 8034 $");
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      lovinsStemmer0.stem("$RevTision: 8034 $");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string2 = lovinsStemmer1.stemString("weka.core.stemmers.lovinsstemmeruaspand");
      assertEquals("wek.cor.stemmer.lovinsstemmeruaspans", string2);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5978884850989963
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.stemString("A report published by a school or other institution, usually numbered within a series.");
      assertEquals("a report publ by a school or other institut, usu number within a ser.", string0);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("eduq8mux/fax");
      lovinsStemmer0.stemString("eduq8mux/fax");
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      String string2 = lovinsStemmer0.stemString("ann5qulud");
      assertEquals("ann5qulus", string2);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.621716621974827
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("$Revision: 8034 $");
      lovinsStemmer0.stem("iz)tTonal");
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("iz)tton");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.globalInfo();
      lovinsStemmer1.stem("iz)tton");
      lovinsStemmer1.toString();
      lovinsStemmer0.stemString("`,B0JCW8J(q^h@q6");
      lovinsStemmer0.stem("`,B0JCW8J(q^h@q6");
      lovinsStemmer1.stem("weka.core.stemmers.LovinsStemmer");
      LovinsStemmer lovinsStemmer2 = new LovinsStemmer();
      lovinsStemmer2.toString();
      lovinsStemmer1.globalInfo();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "[F\"!s>[/=R";
      stringArray0[2] = "`,b0jcw8j(q^h@q6";
      stringArray0[3] = "iz)tton";
      stringArray0[4] = "`,B0JCW8J(q^h@q6";
      stringArray0[5] = "iz)tTonal";
      stringArray0[6] = "weka.core.stemmers.lovinsstemmer";
      stringArray0[7] = "^@t[Vx~";
      LovinsStemmer.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3956393563060885
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("YEAR");
      String string0 = lovinsStemmer0.stem("yoGc");
      assertEquals("yogc", string0);
      
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6144295112008764
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[2] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.stem("end");
      assertEquals("ens", string1);
      
      String string2 = lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      assertEquals("wek.cor.stemmer.lovinsstemmer", string2);
      
      String string3 = lovinsStemmer0.stemString("Checking for remaining options... ");
      assertEquals("check for remain opt... ", string3);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6883386073140856
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("agtdex");
      lovinsStemmer0.stem("T$X6Ep_8");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("cid");
      lovinsStemmer0.stem("rt7");
      lovinsStemmer0.stem("T$X6Ep_8");
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray1);
      assertEquals(1, stringArray1.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.564814380226971
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("$Revision: 8034 $");
      String string0 = lovinsStemmer0.stem("iz)tTonal");
      assertEquals("iz)tton", string0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "iz)tTonal";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      String string1 = lovinsStemmer0.stem("}M|>BFOIbGg");
      String string2 = lovinsStemmer0.stemString("pex");
      assertEquals("pic", string2);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string3 = lovinsStemmer1.stemString("}m|>bfoibg");
      assertTrue(string3.equals((Object)string1));
      
      String string4 = lovinsStemmer1.stem("!Ove?N>4Eyh3URDZ");
      assertEquals("!ove?n>4eyh3urdz", string4);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8460057897534596
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.stemString("Q=/+QE&&*");
      String string1 = lovinsStemmer0.stemString("Q=/+QE&&*");
      assertEquals("q=/+qe&&*", string1);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "q=/+qe&&*";
      stringArray0[1] = "q=/+qe&&*";
      stringArray0[2] = "9h9#$:GKqq], F";
      stringArray0[3] = "Q=/+QE&&*";
      stringArray0[7] = "Q=/+QE&&*";
      stringArray0[5] = "ttonvad";
      stringArray0[6] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[7] = "Q=/+QE&&*";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer0.getRevision();
      String string2 = lovinsStemmer1.stemString("ttonpex");
      assertEquals("ttonpic", string2);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5703165851378196
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stem("'.0VfV'Q+#/(8n");
      lovinsStemmer0.globalInfo();
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("weka.core.stemmers.LovinsStemmer");
      lovinsStemmer0.stemString("6cg");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "'.0vfv'q+#/(8n";
      lovinsStemmer0.stemString("rud");
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      TechnicalInformation technicalInformation1 = lovinsStemmer0.getTechnicalInformation();
      assertNotSame(technicalInformation1, technicalInformation0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6274103423864652
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      LovinsStemmer.main(stringArray0);
      stringArray0[1] = "==c#[e:UsX54";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stem("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.stemString("eduq8mux/fax");
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      String string1 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5934360529961291
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = "phdthesis";
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stem("mit");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      String string1 = null;
      lovinsStemmer0.stemString("mis");
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stem("EDuQ8mUx/f");
      // Undeclared exception!
      try { 
        lovinsStemmer0.stem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8141298007447253
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "!0c ";
      stringArray0[1] = "5.5 rounded: ";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("!0c ");
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("!0c ");
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("QSMp");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.stemString("FO]lW=>M_3'Nc/");
      lovinsStemmer0.stem("5.5 rounded: ");
      lovinsStemmer0.globalInfo();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray1[1] = "dex";
      stringArray1[2] = "qsmp";
      stringArray1[3] = "QSMp";
      stringArray1[4] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray1[5] = "fo]lw=>m_3'nc/";
      LovinsStemmer.main(stringArray1);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      TechnicalInformation technicalInformation1 = lovinsStemmer0.getTechnicalInformation();
      assertNotSame(technicalInformation1, technicalInformation0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.6266571933219667
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.stemString("Q=/+QE&&*");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[1] = "Q=/+QE&&*";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[3] = "weka.core.stemmers.LovinsStemmer";
      lovinsStemmer0.stem("aM");
      LovinsStemmer.main(stringArray0);
      String string1 = lovinsStemmer0.stemString("Array-Dimensions of 'new String[3][4][]': ");
      assertEquals("arra-dimens of 'new string[3][4][]': ", string1);
      
      String string2 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string2);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.497934108481423
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("zn2ruset");
      String string0 = lovinsStemmer0.stemString("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6556353107626036
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.stem("$RevTision: 8034 $");
      lovinsStemmer0.toString();
      String string0 = lovinsStemmer0.stem("izational");
      assertEquals("izat", string0);
      
      lovinsStemmer0.toString();
      String string1 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string1);
      
      String string2 = lovinsStemmer0.getRevision();
      assertEquals("8034", string2);
      
      String string3 = lovinsStemmer0.stemString("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.");
      assertEquals("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.", string3);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      lovinsStemmer1.stemString("a stemmer bas on th lovin stemmer, describ hes:\n\njuli beth lovin (1968). developm of a stem algorithm. mechan transl and comput lingu. 11:22-31.");
      lovinsStemmer1.stemString("4Msif");
      lovinsStemmer0.stemString("tTe$gAsfbzcPd,^aN");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "tTe$gAsfbzcPd,^aN";
      stringArray0[1] = "ns";
      stringArray0[2] = "1KoN13~}&.Q";
      stringArray0[3] = "8034";
      stringArray0[4] = "ns";
      stringArray0[5] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      LovinsStemmer.main(stringArray0);
      String string4 = lovinsStemmer0.stemString("Y0");
      assertEquals("y0", string4);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5180259107187726
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String string0 = lovinsStemmer0.stemString("A report published by a school or other institution, usually numbered within a series.");
      assertEquals("a report publ by a school or other institut, usu number within a ser.", string0);
      
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("A report published by a school or other institution, usually numbered within a series.");
      String string1 = lovinsStemmer0.stemString("arized");
      assertEquals("ariz", string1);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5547303431265782
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[3];
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.stemString("The month in which the work was published or, for an unpublished work, in which it was written. You should use the standard three-letter abbreviation, as described in Appendix B.1.3 of the LaTeX book.");
      lovinsStemmer0.getTechnicalInformation();
      // Undeclared exception!
      try { 
        lovinsStemmer0.stem(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.551026431743537
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string1 = lovinsStemmer1.stemString("izational");
      assertEquals("izat", string1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.547744763838606
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "5.7 <= 5.70001 ? ";
      stringArray0[1] = "dic";
      stringArray0[2] = "ity";
      stringArray0[3] = "TZ!0&Ir7o^`4/3";
      stringArray0[4] = "}@N-5. N\"?3";
      lovinsStemmer0.getTechnicalInformation();
      stringArray0[5] = "dexbex";
      stringArray0[6] = "\";v+) ajiAZ";
      stringArray0[7] = "@Af7ua{}?";
      stringArray0[8] = "Ko.9L10M'/t7jt-^(";
      LovinsStemmer.main(stringArray0);
      LovinsStemmer lovinsStemmer1 = new LovinsStemmer();
      String string0 = lovinsStemmer1.stem("dicert");
      assertEquals("dicers", string0);
      
      String string1 = lovinsStemmer0.stem("et");
      assertEquals("et", string1);
      
      LovinsStemmer.main(stringArray0);
      lovinsStemmer1.getTechnicalInformation();
      lovinsStemmer0.stem("7_ZvmdJIVkftXj[");
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.globalInfo();
      String string2 = lovinsStemmer1.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string2);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7653808571296454
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("");
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stemString("ariser");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "weka.core.stemmers.LovinsStemmer";
      stringArray0[1] = "weka.core.stemmers.LovinsStemmer";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.toString();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("(cvL=");
      lovinsStemmer0.globalInfo();
      LovinsStemmer.main((String[]) null);
      TechnicalInformation technicalInformation0 = lovinsStemmer0.getTechnicalInformation();
      assertEquals(TechnicalInformation.Type.ARTICLE, technicalInformation0.getType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.626803352602449
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LovinsStemmer lovinsStemmer0 = new LovinsStemmer();
      lovinsStemmer0.globalInfo();
      lovinsStemmer0.toString();
      lovinsStemmer0.stemString("phdthesis");
      lovinsStemmer0.stemString("phdthesis");
      String string0 = lovinsStemmer0.globalInfo();
      assertEquals("A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.", string0);
      
      lovinsStemmer0.stemString("weka.core.stemmers.LovinsStemmer");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "phdthes";
      stringArray0[1] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      stringArray0[2] = "phdthes";
      stringArray0[3] = "phdthesis";
      stringArray0[4] = "ions";
      stringArray0[5] = "phdthesis";
      stringArray0[6] = "";
      stringArray0[7] = "A stemmer based on the Lovins stemmer, described here:\n\nJulie Beth Lovins (1968). Development of a stemming algorithm. Mechanical Translation and Computational Linguistics. 11:22-31.";
      LovinsStemmer.main(stringArray0);
      lovinsStemmer0.getTechnicalInformation();
      lovinsStemmer0.stem("");
      String string1 = lovinsStemmer0.stemString("phdthes");
      assertEquals("phdth", string1);
      
      String string2 = lovinsStemmer0.stemString("weka.core.stemmers.lovinsstemmerond");
      assertEquals("wek.cor.stemmer.lovinsstemmerons", string2);
  }
}
