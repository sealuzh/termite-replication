/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:05:26 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      classWriter0.thisName = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "O6pc2_4vh[JLE");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "UF/29>G{d[^b", "{", "UF/29>G{d[^b", "O6pc2_4vh[JLE");
      ByteVector byteVector0 = classWriter0.pool;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UF/29>G{d[^b";
      stringArray0[1] = "";
      stringArray0[2] = "{";
      classWriter0.visit(4096, (-841), "UF/29>G{d[^b", "", "org.apache.commons.io.filefilter.OrFileFilter", stringArray0);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5691246280675637
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1870));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, "");
      fieldWriter0.getSize();
      classWriter0.visitField(4, "6ys_AJGB|A2 e", "6ys_AJGB|A2 e", "Signature", "6ys_AJGB|A2 e");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 523, "`BID3D", "O6pc2_4vh[JLE", "BG6h|t(/", "O&|edxY@hoi$,");
      Attribute attribute0 = new Attribute("");
      fieldWriter1.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1870));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1851));
      ClassWriter classWriter1 = new ClassWriter(166);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-1974), "", "", "$\"MCgP6l5b&", "");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(4096);
      ByteVector byteVector1 = byteVector0.put11(2, 4096);
      byteVector1.putShort(49);
      byteVector1.putUTF8("");
      ByteVector byteVector2 = byteVector0.putByte(1803);
      ByteVector byteVector3 = byteVector2.putUTF8("");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)91;
      byteArray0[5] = (byte) (-36);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)4;
      byteVector3.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.addUninitializedType("", 4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-231), "", "^Pu(i]DA-MTy M", "n,8ZSmwV/h:0", (Object) null);
      ByteVector byteVector0 = new ByteVector(892);
      ByteVector byteVector1 = byteVector0.put11((-1010), 4096);
      byteVector1.putByte((-231));
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("^ 8,0+4kd");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      classWriter0.addUninitializedType("", 0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      Attribute attribute0 = new Attribute("RuntimeVisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.497571944739397
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1870));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, "");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(224);
      ByteVector byteVector1 = byteVector0.put11((-1870), 2);
      byteVector1.putInt(2);
      ByteVector byteVector2 = byteVector1.putShort(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector2);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5771663861388312
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("", 0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 65535, "", "", (String) null, "");
      fieldWriter1.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector(16777225);
      ByteVector byteVector1 = byteVector0.putShort(1);
      byteVector0.putUTF8("org.apache.commons.io.IOCase");
      fieldWriter1.getSize();
      ClassWriter classWriter1 = new ClassWriter(65535);
      fieldWriter1.put(byteVector0);
      fieldWriter0.put(byteVector1);
      fieldWriter1.getSize();
      fieldWriter1.visitAnnotation("org.apache.commons.io.IOCase", false);
      AnnotationVisitor annotationVisitor0 = fieldWriter1.visitAnnotation("B96", true);
      fieldWriter0.visitAnnotation("dr&UK", true);
      AnnotationVisitor annotationVisitor1 = fieldWriter1.visitAnnotation("", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("", 0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)0);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "", "*M8v<[=8:W:Yd*mJV4N", "", (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter1.visitAttribute(attribute0);
      Attribute attribute1 = new Attribute("*M8v<[=8:W:Yd*mJV4N");
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.057313896906394
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("", 0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "", (String) null, "");
      ByteVector byteVector0 = new ByteVector(16777225);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      ByteVector byteVector1 = byteVector0.put11(16777225, 1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ConstantValue");
      ByteVector byteVector2 = byteVector0.putByteArray((byte[]) null, 65535, 16777225);
      fieldWriter0.put(byteVector2);
      byteVector1.putLong(0L);
      fieldWriter0.put(byteVector2);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2885387096069334
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("", 0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte) (-56);
      fieldWriter0.visitEnd();
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 4096);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1146);
      Item[] itemArray0 = new Item[3];
      Item item0 = classWriter0.newFieldItem("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "8EDTV$eRuv+.IA,", "8EDTV$eRuv+.IA,");
      itemArray0[0] = item0;
      Item item1 = classWriter0.newMethodItem("", "", "The array of prefixes must not be null", true);
      itemArray0[1] = item1;
      Item item2 = new Item();
      itemArray0[2] = item2;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, "", (String) null, "ConstantValue", classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      int int1 = (-4754);
      ClassWriter classWriter0 = new ClassWriter((-4754));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "J;`2g'#Z*)#Yv%CA $~", "J;`2g'#Z*)#Yv%CA $~", "J;`2g'#Z*)#Yv%CA $~", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4754));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "U(/m9>G{d[^b", "wheel.asm.Handler", "U(/m9>G{d[^b", "U(/m9>G{d[^b");
      fieldWriter0.getSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        sequenceInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }
}
