/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:17:48 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSTerm_ESTest extends JSTerm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2383497075834473
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      String string0 = "\\a[";
      StringReader stringReader1 = new StringReader("a[");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.isEval();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm1.sort(comparator0);
      jSTerm0.isEval();
      stringReader0.skip((-1L));
      jSTerm0.makeFunction();
      jSTerm1.setSize(44);
      // Undeclared exception!
      try { 
        jSTerm1.applySubstitutionT((JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8369654740372514
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isGround();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      JSTerm jSTerm2 = (JSTerm)jSTerm0.clone();
      JSTerm jSTerm3 = (JSTerm)jSTerm1.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "?g>=0ctFji/HA%wu");
      jSTerm0.cloneT();
      jSTerm0.remove((Object) "?g>=0ctFji/HA%wu");
      jSSubstitution0.addElement(jSTerm3);
      JSTerm jSTerm4 = jSTerm2.cloneT();
      jSTerm2.standardizerTerm();
      jSTerm4.toStr();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm4.parseList(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.553361982208021
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isGround();
      jSTerm0.equals(jSTerm0);
      jSTerm0.clone();
      Object object0 = jSTerm0.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "?g>=0ctFji/HA%wu");
      JSTerm jSTerm1 = jSTerm0.cloneT();
      jSTerm0.remove((Object) "?g>=0ctFji/HA%wu");
      jSSubstitution0.addElement(object0);
      // Undeclared exception!
      try { 
        jSTerm1.matches(jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6287023406029197
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isGround();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      JSTerm jSTerm2 = (JSTerm)jSTerm0.clone();
      JSTerm jSTerm3 = (JSTerm)jSTerm1.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "?g>=0ctFji/HA%wu");
      JSTerm jSTerm4 = jSTerm0.cloneT();
      jSTerm0.remove((Object) "?g>=0ctFji/HA%wu");
      jSSubstitution0.addElement(jSTerm3);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm4.matches(jSTerm0, jSSubstitution1);
      jSTerm4.makeEval(true);
      JSTerm jSTerm5 = new JSTerm();
      JSTerm jSTerm6 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm2.matches(jSTerm1, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7691760812616506
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fs@h;e@FSway()5mV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("fs@h;e@FSway()5mV");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.isEval();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm1.sort(comparator0);
      jSTerm0.isEval();
      stringReader0.skip((-2527L));
      jSTerm1.makeFunction();
      jSTerm0.setSize(279);
      JSTerm jSTerm2 = jSTerm1.applySubstitutionT((JSSubstitution) null);
      jSTerm1.retainAll(jSTerm2);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm3 = jSTerm1.cloneT();
      JSTerm jSTerm4 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm3.matches(jSTerm1, (JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4374150479491563
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isGround();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      streamTokenizer0.wordChars(60, (-785));
      StringReader stringReader1 = new StringReader("jR^^:$dni+[X>?O");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.addElement(jSTerm1);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm1.matches(jSTerm0, jSSubstitution0);
      jSTerm0.makeEval(false);
      streamTokenizer0.eolIsSignificant(false);
      JSTerm jSTerm2 = new JSTerm();
      JSTerm jSTerm3 = null;
      try {
        jSTerm3 = new JSTerm(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.964532803443662
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemInUtil.addInputLine(" 4hO)Q6DI;BQ6.P8");
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isConstant();
      JSTerm jSTerm1 = jSTerm0.standardizerTerm();
      assertFalse(jSTerm1.isEval());
      assertTrue(jSTerm1.isConstant());
      assertNotSame(jSTerm1, jSTerm0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5980703247927406
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      jSTerm0.remove((Object) ",!dqzwM;t~");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = jSTerm2.lastElement();
      jSSubstitution0.addElement(object0);
      jSTerm2.matches(jSTerm1, jSSubstitution0);
      JSTerm jSTerm3 = new JSTerm();
      jSTerm3.makeEval(false);
      // Undeclared exception!
      try { 
        jSTerm3.standardizerTerm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7744832203570513
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      JSTerm jSTerm3 = jSTerm1.standardizerTerm();
      assertFalse(jSTerm3.isEval());
      
      jSTerm2.stream();
      StringBuffer stringBuffer0 = jSTerm2.toStr();
      assertEquals(19, stringBuffer0.length());
      
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      boolean boolean0 = jSTerm1.isGround();
      jSTerm1.toStr();
      boolean boolean1 = jSTerm2.isFunction();
      assertNotSame(jSTerm2, jSTerm1);
      assertTrue(jSTerm1.equals((Object)jSTerm3));
      assertTrue(boolean1 == boolean0);
      assertNotSame(jSTerm1, jSTerm3);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.218743692541794
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.skip(0L);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.slashSlashComments(false);
      JSTerm jSTerm1 = jSTerm0.call();
      jSTerm1.ensureCapacity(42);
      JSTerm jSTerm2 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm2.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8022429317297024
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isGround();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      jSTerm0.clone();
      JSTerm jSTerm2 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "?g>=0ctFji/HA%wu");
      JSTerm jSTerm3 = jSTerm0.cloneT();
      jSTerm0.remove((Object) "?g>=0ctFji/HA%wu");
      jSSubstitution0.addElement(jSTerm2);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm3.matches(jSTerm0, jSSubstitution1);
      // Undeclared exception!
      try { 
        jSTerm2.call();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5800755581508863
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer1);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      assertTrue(jSTerm2.isFunction());
      
      JSTerm jSTerm3 = jSTerm1.standardizerTerm();
      boolean boolean0 = jSTerm1.equals(jSTerm3);
      assertFalse(jSTerm3.isEval());
      
      boolean boolean1 = jSTerm0.equals(jSTerm1);
      assertFalse(boolean1 == boolean0);
      assertTrue(jSTerm1.equals((Object)jSTerm2));
      assertNotSame(jSTerm1, jSTerm2);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.makeEval(true);
      JSJshopVars.semicolon = 469;
      StringReader stringReader0 = new StringReader("(EQ&<G0}R-z");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      jSTerm0.isEval();
      stringReader0.skip(574L);
      jSTerm0.makeFunction();
      // Undeclared exception!
      try { 
        jSTerm0.setSize((-2140));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2140
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5664329266250583
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(60);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      jSTerm1.makeEval(true);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      jSTerm2.matches(jSTerm1);
      assertEquals(41, streamTokenizer0.ttype);
      assertNotSame(jSTerm1, jSTerm2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.968774534303352
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fs@h;e@FSway()5mV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("fs@h;e@FSway()5mV");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.isEval();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm1.sort(comparator0);
      jSTerm0.isEval();
      stringReader0.skip((-2527L));
      jSTerm1.makeFunction();
      jSTerm0.setSize(279);
      JSTerm jSTerm2 = jSTerm1.applySubstitutionT((JSSubstitution) null);
      jSTerm1.retainAll(jSTerm2);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm3 = jSTerm0.parseList(streamTokenizer0);
      jSTerm1.cloneT();
      JSTerm jSTerm4 = jSTerm2.standardizerTerm();
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm2.sort(comparator1);
      jSTerm4.isGround();
      jSTerm2.print();
      jSTerm3.standardizerTerm();
      jSTerm1.call();
      assertTrue(jSTerm1.isFunction());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5863924005338266
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fs@h;e@FSway()5mV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("fs@h;e@FSway()5mV");
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm2.forEach(consumer0);
      jSSubstitution0.add((Object) "fs@h;e@FSway()5mV");
      Object object0 = jSTerm0.clone();
      jSTerm2.clone();
      jSSubstitution0.add(object0);
      JSTerm jSTerm3 = new JSTerm();
      jSTerm0.remove((Object) null);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.addElement(streamTokenizer0);
      jSTerm1.matches(jSTerm3, jSSubstitution1);
      jSTerm3.makeEval(true);
      JSTerm jSTerm4 = new JSTerm();
      jSTerm3.matches(jSTerm1, jSSubstitution0);
      JSTerm jSTerm5 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm3.call();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.1382482349490624
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSTerm0.setSize(2594);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      JSTerm jSTerm3 = jSTerm1.cloneT();
      jSTerm3.print();
      JSTerm jSTerm4 = jSTerm3.applySubstitutionT((JSSubstitution) null);
      JSTerm jSTerm5 = new JSTerm();
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSTerm3, (JSSubstitution) null);
      assertNotNull(jSSubstitution0);
      
      JSTerm jSTerm6 = new JSTerm();
      JSTerm jSTerm7 = jSTerm3.call();
      assertEquals(10, jSTerm7.capacity());
      
      JSTerm jSTerm8 = new JSTerm();
      jSTerm5.equals(jSTerm3);
      JSTerm jSTerm9 = jSTerm3.standardizerTerm();
      assertTrue(jSTerm3.isFunction());
      assertNotSame(jSTerm3, jSTerm7);
      assertTrue(jSTerm9.equals((Object)jSTerm4));
      assertFalse(jSTerm0.isConstant());
      assertEquals("[., [4.0], [., [hO], [nil]]]", jSTerm3.toString());
      assertTrue(jSTerm3.equals((Object)jSTerm7));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v.1hmFM!<W");
      stringReader0.ready();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      charArray0[1] = '-';
      charArray0[2] = 'g';
      stringReader0.read(charArray0);
      stringReader0.reset();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(74);
      StringReader stringReader0 = new StringReader("");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(1359);
      // Undeclared exception!
      try { 
        jSTerm0.isGround();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(">=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.792588053570179
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      JSTerm jSTerm3 = jSTerm1.standardizerTerm();
      jSTerm3.matches((JSPredicateForm) jSTerm2);
      JSTerm jSTerm4 = jSTerm3.cloneT();
      jSTerm2.matches(jSTerm4);
      System.setCurrentTimeMillis(0L);
      JSTerm jSTerm5 = new JSTerm();
      boolean boolean0 = jSTerm5.equals(jSTerm3);
      assertEquals(41, streamTokenizer0.ttype);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.885150328612323
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?g>=0ctFji/HA%wu");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isVariable();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      StringReader stringReader1 = new StringReader("jR^^:$dni+[X>?O");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "jR^^:$dni+[X>?O", (-183), 826);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.513554620934558
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm2 = jSTerm1.standardizerTerm();
      jSTerm2.stream();
      jSTerm1.call();
      // Undeclared exception!
      try { 
        jSTerm2.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4919654102646622
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      jSTerm1.standardizerTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5884621467107727
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fs@h;e@FSway()5mV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("fs@h;e@FSway()5mV");
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "fs@h;e@FSway()5mV");
      jSTerm0.clone();
      jSTerm2.clone();
      JSTerm jSTerm3 = new JSTerm();
      jSSubstitution0.add((Object) jSTerm3);
      JSTerm jSTerm4 = jSTerm1.cloneT();
      jSTerm0.remove((Object) null);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.addElement(streamTokenizer0);
      jSTerm3.matches(jSTerm4, jSSubstitution1);
      jSTerm4.makeEval(true);
      JSTerm jSTerm5 = new JSTerm();
      jSTerm4.matches(jSTerm1, jSSubstitution0);
      JSTerm jSTerm6 = new JSTerm();
      JSTerm jSTerm7 = jSTerm4.call();
      JSTerm jSTerm8 = new JSTerm();
      jSTerm0.equals(jSTerm4);
      jSTerm7.standardizerTerm();
      assertFalse(jSTerm1.isEval());
      assertTrue(jSTerm4.isEval());
      assertNotSame(jSTerm1, jSTerm4);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.60870760606391
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      jSTerm0.remove((Object) ",!dqzwM;t~");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = jSTerm2.lastElement();
      jSSubstitution0.addElement(object0);
      jSTerm2.remove((Object) stringReader0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution2.addElement(stringReader0);
      jSTerm2.standardizerTerm();
      jSTerm2.toStr();
      // Undeclared exception!
      try { 
        jSTerm0.parseList((StreamTokenizer) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.442470333070849
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fs@h;e@FSway()5mV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("fs@h;e@FSway()5mV");
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      Predicate<String> predicate0 = Predicate.isEqual((Object) jSTerm0);
      Predicate<String> predicate1 = predicate0.negate();
      predicate1.test("(!RC@h");
      predicate0.negate();
      Predicate<JSSubstitution> predicate2 = Predicate.isEqual((Object) stringReader0);
      predicate0.or(predicate1);
      jSTerm0.removeIf(predicate2);
      JSTerm jSTerm1 = new JSTerm();
      JSTerm jSTerm2 = new JSTerm();
      boolean boolean0 = jSTerm0.equals(jSTerm2);
      StringReader stringReader2 = new StringReader("os/d=+</M1*)");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm3 = new JSTerm(streamTokenizer1);
      jSTerm3.print();
      CharBuffer charBuffer0 = CharBuffer.allocate(41);
      CharBuffer.wrap((CharSequence) charBuffer0, 41, 41);
      stringReader1.read(charBuffer0);
      streamTokenizer0.whitespaceChars(41, 94);
      JSTerm jSTerm4 = jSTerm0.parseList(streamTokenizer0);
      assertEquals("[nil]", jSTerm4.toString());
      assertFalse(jSTerm4.isVariable());
      assertTrue(jSTerm4.isConstant());
      
      jSTerm0.call();
      boolean boolean1 = jSTerm0.isGround();
      assertFalse(boolean1 == boolean0);
      
      jSTerm0.equals(jSTerm0);
      assertFalse(jSTerm0.isEval());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.708598476867711
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine(" 4hO)Q6DI;BQ6.P8");
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      jSTerm1.cloneT();
      JSTerm jSTerm2 = jSTerm1.standardizerTerm();
      jSTerm2.stream();
      jSTerm1.equals(jSTerm2);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6409602221979944
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      jSTerm0.remove((Object) ",!dqzwM;t~");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm3 = (JSTerm)jSTerm2.lastElement();
      jSSubstitution0.addElement(jSTerm3);
      jSTerm2.remove((Object) stringReader0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSSubstitution2.addElement(stringReader0);
      jSTerm1.matches(jSTerm3, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.standardizerTerm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      String string0 = "(";
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = null;
      try {
        jSTerm1 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%%%");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.quoteChar(0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9012735713814104
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("1%.t-&w9-");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.skip((-1707L));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.slashSlashComments(true);
      JSTerm jSTerm2 = jSTerm1.call();
      JSJshopVars.leftBrac = (-2);
      jSTerm2.ensureCapacity((-2));
      // Undeclared exception!
      try { 
        jSTerm1.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.968454372071113
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(74);
      // Undeclared exception!
      try { 
        jSTerm0.call();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7057254081203976
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SystemInUtil.addInputLine("]");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      jSTerm0.setSize(2594);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer1);
      JSTerm jSTerm3 = jSTerm1.cloneT();
      jSTerm3.print();
      jSTerm3.applySubstitutionT((JSSubstitution) null);
      JSTerm jSTerm4 = null;
      try {
        jSTerm4 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSJshopVars.interrogation = 63;
      StringReader stringReader0 = new StringReader("ZxIsmO");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0617178219575902
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("1%.t-&w9-");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.makeConstant();
      streamTokenizer0.slashSlashComments(true);
      JSTerm jSTerm2 = jSTerm1.call();
      jSTerm2.ensureCapacity((-4));
      // Undeclared exception!
      try { 
        jSTerm1.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5350813079469845
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("1%.t-&w9-");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.skip((-1707L));
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.slashSlashComments(true);
      JSTerm jSTerm2 = jSTerm1.call();
      JSJshopVars.leftBrac = (-2);
      jSTerm2.ensureCapacity((-2));
      // Undeclared exception!
      try { 
        jSTerm0.parseList((StreamTokenizer) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      Predicate<String> predicate0 = Predicate.isEqual((Object) jSTerm0);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<String> predicate2 = predicate0.and(predicate1);
      Predicate<String> predicate3 = predicate0.or(predicate2);
      predicate3.test("(!RC@h");
      Predicate<String> predicate4 = predicate3.negate();
      Predicate.isEqual((Object) predicate2);
      predicate4.or(predicate0);
      jSTerm0.removeIf(predicate4);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      String string0 = "&a>d";
      StringReader stringReader0 = new StringReader("&a>d");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      int int0 = 639;
      // Undeclared exception!
      try { 
        jSTerm1.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1411461439556105
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.isConstant();
      jSTerm0.isVariable();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.makeConstant();
      assertFalse(jSTerm1.isFunction());
      
      boolean boolean0 = jSTerm0.equals(jSTerm1);
      assertFalse(jSTerm1.isVariable());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      int int0 = 41;
      jSTerm0.setSize(41);
      JSSubstitution jSSubstitution0 = null;
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT((JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.295789001088607
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(60);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      jSTerm1.cloneT();
      JSTerm jSTerm2 = jSTerm1.standardizerTerm();
      jSTerm2.isGround();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6936251765413357
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer0);
      JSTerm jSTerm2 = jSTerm1.cloneT();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm2.matches(jSTerm0, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.standardizerTerm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" expected");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.isFunction();
      assertFalse(jSTerm0.isEval());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.495100515745279
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      stringReader0.ready();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer2);
      boolean boolean0 = jSTerm2.equals(jSTerm0);
      assertFalse(boolean0);
      assertFalse(jSTerm2.isEval());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0446324302033596
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A7f$CF667d&Gi");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = jSTerm0.matches(jSTerm1);
      assertTrue(jSSubstitution0.fail());
      assertFalse(jSTerm0.isEval());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7521115177809587
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fs@h;e@FSway()5mV");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("fs@h;e@FSway()5mV");
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm2 = new JSTerm();
      jSTerm0.equals(jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) "fs@h;e@FSway()5mV");
      Object object0 = jSTerm0.clone();
      jSTerm2.clone();
      jSSubstitution0.add(object0);
      JSTerm jSTerm3 = jSTerm1.cloneT();
      jSTerm0.remove((Object) null);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.addElement(streamTokenizer0);
      JSSubstitution jSSubstitution2 = jSTerm1.matches(jSTerm3, jSSubstitution1);
      jSTerm3.makeEval(true);
      JSTerm jSTerm4 = new JSTerm();
      jSTerm3.matches(jSTerm1, jSSubstitution0);
      JSTerm jSTerm5 = new JSTerm();
      jSTerm3.call();
      JSTerm jSTerm6 = new JSTerm();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      jSTerm6.replaceAll(unaryOperator0);
      jSTerm0.equals(jSTerm3);
      JSTerm jSTerm7 = jSTerm1.call();
      jSTerm7.applySubstitutionT(jSSubstitution2);
      assertTrue(jSTerm3.isEval());
      
      jSTerm7.standardizerTerm();
      assertFalse(jSTerm7.isEval());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(Dy=K/");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.37468911715399
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SystemInUtil.addInputLine(" 4hO)Q6DI;BQ6.P8");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution0.addElement(jSSubstitution1);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSSubstitution0.addElement(" 4hO)Q6DI;BQ6.P8");
      StringReader stringReader0 = new StringReader("aUSHB5");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standardizerTerm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.isGround();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5754958472190381
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader("<");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer1.commentChar((-3177));
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.rightPar = 124;
      jSTerm0.makeConstant();
      // Undeclared exception!
      try { 
        jSTerm0.standardizerTerm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.180066384203239
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChars(0, 0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.spliterator();
      jSTerm0.makeVariable();
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = '?';
      charArray0[2] = 'k';
      charArray0[3] = 'e';
      stringReader0.read(charArray0);
      jSTerm0.makeVariable();
      jSTerm0.print();
      assertTrue(jSTerm0.isVariable());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.740606387204608
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6F[4E");
      stringReader0.mark(0);
      StringReader stringReader1 = new StringReader("equal");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeVariable();
      // Undeclared exception!
      try { 
        jSTerm0.parseList(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      stringReader0.ready();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.cloneT();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "fs@h;e@FSway()5mV";
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.5578791274542176
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StringReader stringReader1 = new StringReader(") ");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm1 = jSTerm0.parseList(streamTokenizer1);
      jSTerm1.cloneT();
      jSTerm1.standardizerTerm();
      jSTerm1.toStr();
      JSTerm jSTerm2 = jSTerm0.parseList(streamTokenizer0);
      assertEquals(41, streamTokenizer0.ttype);
      
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.applySubstitutionT(jSSubstitution0);
      assertFalse(jSTerm1.equals((Object)jSTerm2));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.setSize(47);
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.commentChar(60);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.cloneT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader(" 4hO)Q6DI;BQ6.P8");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = '8';
      charArray0[1] = 'J';
      charArray0[2] = 't';
      charArray0[3] = '9';
      charArray0[4] = '(';
      charArray0[5] = 't';
      charArray0[6] = 'F';
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.print();
      assertEquals((-2), streamTokenizer0.ttype);
      assertEquals("Token[n=4.0], line 1", streamTokenizer0.toString());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Undefined function to be evaluated  in Call statement");
      char[] charArray0 = new char[5];
      charArray0[0] = 't';
      charArray0[1] = 'b';
      charArray0[2] = 'y';
      charArray0[3] = '6';
      charArray0[4] = '>';
      stringReader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.isVariable();
      assertEquals(32, streamTokenizer0.ttype);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?hjNYWZg`SJgp");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      charArray0[1] = 'p';
      charArray0[2] = 'E';
      charArray0[3] = '*';
      charArray0[4] = '0';
      charArray0[5] = ']';
      charArray0[6] = 'f';
      charArray0[7] = 'H';
      charArray0[8] = 'H';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      streamTokenizer0.lowerCaseMode(false);
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StreamTokenizer streamTokenizer0 = null;
      JSTerm jSTerm0 = null;
      try {
        jSTerm0 = new JSTerm((StreamTokenizer) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionT(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }
}
