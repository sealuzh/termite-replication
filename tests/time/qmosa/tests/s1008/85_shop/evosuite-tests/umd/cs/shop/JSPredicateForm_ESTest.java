/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:14:22 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.toStr();
      StringReader stringReader0 = new StringReader("U0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      stringReader0.reset();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0168805991642629
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      long long0 = 0L;
      stringReader0.skip(0L);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.sval = "call";
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.slashSlashComments(true);
      jSTerm0.trimToSize();
      jSPredicateForm0.setSize(32);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      jSPredicateForm0.ensureCapacity((-324));
      jSTerm0.trimToSize();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      StringReader stringReader0 = new StringReader("(");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = (-1);
      jSPredicateForm0.toStr();
      jSPredicateForm0.spliterator();
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.964532478280498
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".@#^*(p1<\":d9:K");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[2] = 'x';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      jSTerm0.print();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ine");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.nextToken();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.add((Object) streamTokenizer0);
      stringReader0.close();
      JSJshopVars.astherisk = (-1);
      Consumer<JSTerm> consumer0 = (Consumer<JSTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSJshopVars.lessT = (-1);
      JSJshopVars.equalT = (-1);
      jSPredicateForm0.remove((Object) null);
      // Undeclared exception!
      try { 
        jSPredicateForm1.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5063874375065844
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      stringReader0.skip(0L);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.read();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSTerm0.trimToSize();
      jSPredicateForm0.setSize(32);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      streamTokenizer0.nextToken();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      jSPredicateForm1.equals((JSPredicateForm) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm1.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7824268046877836
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      stringReader0.skip(0L);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      stringReader0.skip(32);
      streamTokenizer0.slashSlashComments(true);
      jSTerm0.trimToSize();
      streamTokenizer0.eolIsSignificant(true);
      jSPredicateForm0.setSize(32);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      streamTokenizer0.wordChars(32, 32);
      jSTerm0.clonePF();
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      stringReader0.skip((-4311L));
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.sval = "call";
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      streamTokenizer0.slashSlashComments(true);
      jSTerm0.trimToSize();
      jSPredicateForm0.setSize(32);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      streamTokenizer0.wordChars(1, 32);
      jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8133224558281074
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OLmsB(J");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm0.addAll((Collection) jSTerm0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) jSTerm0;
      Object object0 = jSPredicateForm0.clone();
      objectArray0[1] = object0;
      jSPredicateForm0.firstElement();
      objectArray0[2] = (Object) "%%%";
      objectArray0[3] = (Object) streamTokenizer0;
      objectArray0[4] = (Object) jSTerm0;
      objectArray0[5] = (Object) stringReader0;
      jSPredicateForm0.toArray(objectArray0);
      jSTerm0.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      char char0 = '^';
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-1), 12);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7945725536756378
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OLmsB(J");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.wordChars((-366172151), (-366172151));
      streamTokenizer0.slashStarComments(true);
      jSTerm0.toStr();
      jSPredicateForm0.addAll((Collection) jSTerm0);
      JSJshopVars.rightBrac = 0;
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      streamTokenizer0.resetSyntax();
      stringReader0.reset();
      jSTerm0.remove((Object) "GUk#%?V@o\"RW");
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.print();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.spliterator();
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0277013333517635
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      stringReader0.skip(0L);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.sval = "call";
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.slashSlashComments(true);
      jSTerm0.trimToSize();
      jSPredicateForm0.setSize(32);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      streamTokenizer0.wordChars(1, 32);
      jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7991492127145396
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm0.setSize(32);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      JSPredicateForm jSPredicateForm1 = jSTerm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      jSPredicateForm2.ensureCapacity(581);
      jSTerm0.applySubstitutionPF((JSSubstitution) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9457994740963103
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.read();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = null;
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm1.iterator();
      jSTerm0.equals(jSPredicateForm0);
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) jSTerm0, (JSSubstitution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1626338407788146
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OLmsB(J");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm0.toStr();
      jSPredicateForm0.addAll((Collection) jSTerm0);
      streamTokenizer0.slashSlashComments(true);
      jSTerm0.ensureCapacity((-366172153));
      JSSubstitution jSSubstitution0 = null;
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      jSPredicateForm1.clonePF();
      jSTerm0.equals(jSPredicateForm1);
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OLmsB(J");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm0.addAll((Collection) jSTerm0);
      JSJshopVars.rightBrac = 0;
      streamTokenizer0.resetSyntax();
      stringReader0.reset();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1509404696629533
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      streamTokenizer0.slashSlashComments(true);
      jSPredicateForm0.ensureCapacity(985);
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      jSPredicateForm0.equals(jSPredicateForm1);
      jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm2.toStr();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.applySubstitutionPF((JSSubstitution) null);
      jSTerm0.listIterator();
      System.setCurrentTimeMillis(0L);
      jSTerm0.standarizerPredicateForm();
      jSPredicateForm4.addAll((Collection) jSPredicateForm3);
      int int0 = (-1614);
      int int1 = (-1083026940);
      jSPredicateForm2.ensureCapacity((-1083026940));
      jSPredicateForm2.removeAllElements();
      jSPredicateForm4.trimToSize();
      jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm4.setSize(1434);
      // Undeclared exception!
      try { 
        jSPredicateForm4.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.908000885088709
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      jSSubstitution0.add((Object) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSJshopVars.leftBrac = 40;
      jSTerm0.print();
      jSSubstitution1.trimToSize();
      jSSubstitution0.retainAll(jSTerm1);
      JSTerm jSTerm2 = new JSTerm();
      jSPredicateForm0.spliterator();
      jSPredicateForm0.print();
      jSPredicateForm0.applySubstitutionPF(jSSubstitution1);
      // Undeclared exception!
      try { 
        jSTerm2.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2773942553141935
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lne ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      stringReader0.skip(32);
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      jSPredicateForm1.equals((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.standarizerPredicateForm();
      jSTerm0.toStr();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm4.applySubstitutionPF((JSSubstitution) null);
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm5 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.addAll((Collection) jSPredicateForm0);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm1.forEach(consumer0);
      jSPredicateForm5.ensureCapacity(3646);
      jSPredicateForm1.removeAllElements();
      jSPredicateForm3.trimToSize();
      JSPredicateForm jSPredicateForm6 = new JSPredicateForm();
      jSPredicateForm2.matches(jSPredicateForm4);
      jSPredicateForm2.ensureCapacity(124);
      // Undeclared exception!
      try { 
        jSPredicateForm1.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      int int0 = 0;
      streamTokenizer0.resetSyntax();
      stringReader0.reset();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.matches((JSPredicateForm) jSTerm0);
      System.setCurrentTimeMillis((-246L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".@#^*(p1<\":d9:K");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader1 = new StringReader(".@#^*(p1<\":d9:K");
      stringReader1.read(charBuffer0);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.960841804955975
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OLmsB(J");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      jSTerm0.addAll((Collection) jSPredicateForm0);
      streamTokenizer0.resetSyntax();
      stringReader0.reset();
      jSTerm0.matches(jSPredicateForm0);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "B4yE%+=e`b";
      StringReader stringReader0 = new StringReader("B4yE%+=e`b");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.add((Object) jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSPredicateForm cannot be cast to umd.cs.shop.JSPairVarTerm
         //
         verifyException("umd.cs.shop.JSSubstitution", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8133224558281074
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      stringReader0.skip(0L);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.read();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) jSPredicateForm0;
      objectArray0[1] = (Object) "Line ";
      objectArray0[2] = (Object) stringReader0;
      objectArray0[3] = (Object) jSTerm0;
      objectArray0[4] = (Object) "Line ";
      jSTerm0.add(objectArray0[2]);
      jSPredicateForm0.toArray(objectArray0);
      jSPredicateForm0.clonePF();
      jSTerm0.equals(jSPredicateForm0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'W';
      charArray0[1] = 'M';
      charArray0[2] = 'M';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-1104529595), 76);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OLmsB(J");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.addAll((Collection) jSTerm0);
      int int0 = 0;
      JSJshopVars.rightBrac = 0;
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      stringReader0.reset();
      stringReader0.reset();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm1.equals(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.963434529376907
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B4yE%+=e`b");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSPredicateForm0.isEmpty();
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      jSTerm0.add((Object) jSSubstitution1);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSSubstitution cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.956416985517258
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B4y&E%+=e`b");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.isEmpty();
      jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      jSTerm0.isEmpty();
      jSTerm0.clonePF();
      jSTerm0.toStr();
      jSTerm0.addAll((Collection) jSTerm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      streamTokenizer0.resetSyntax();
      stringReader0.reset();
      jSTerm0.remove((Object) jSTerm0);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4659497192528061
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      stringReader0.skip(0L);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.read();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      jSTerm0.add((Object) streamTokenizer0);
      StringReader stringReader1 = new StringReader("Line ");
      stringReader1.reset();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.StreamTokenizer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7875550098159887
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      stringReader0.skip(32);
      streamTokenizer0.slashSlashComments(true);
      jSTerm0.trimToSize();
      streamTokenizer0.eolIsSignificant(true);
      jSPredicateForm0.setSize(32);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.sort(comparator0);
      streamTokenizer0.wordChars(32, 32);
      jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.clear();
      jSPredicateForm0.setSize(58);
      JSJshopVars.minus = 82;
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OLmsB(J");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution1);
      assertTrue(jSSubstitution2.fail());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".@#^*(p1<\":d9:K");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      char[] charArray0 = new char[1];
      charArray0[0] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader1 = new StringReader(".@#^*(p1<\":d9:K");
      stringReader1.read(charBuffer0);
      jSTerm0.print();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Line ");
      stringReader0.skip(0L);
      stringReader0.ready();
      stringReader0.read();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      JSTerm jSTerm0 = new JSTerm();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7842068034002125
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LmsB(J");
      StringReader stringReader1 = new StringReader("Q0!5[iqv$o");
      StringReader stringReader2 = new StringReader("nr*k#/l5FODSa");
      StringReader stringReader3 = new StringReader("");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader2);
      streamTokenizer0.whitespaceChars((-326114468), (-750));
      streamTokenizer0.slashSlashComments(false);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8002495841488755
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSTerm jSTerm1 = new JSTerm();
      jSSubstitution0.add((Object) jSTerm1);
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      streamTokenizer0.eolIsSignificant(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("/kw(u:7");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
