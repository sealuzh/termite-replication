/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:49:44 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.util.Collection;
import java.util.Comparator;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.535043918223923
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = "ry8X%yJ";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[1] = "ej+QT[P";
      stringArray0[2] = "ry8X%yJ";
      stringArray0[3] = "ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      improvedFile0.toURI();
      improvedFile0.createTempDir();
      archiveScanner0.scandir(improvedFile0, "poNjDS", true);
      Integer integer0 = new Integer(0);
      Object object0 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.892246898188396
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "32ok:");
      Vector<String> vector0 = new Vector<String>();
      improvedFile0.getAbsolutePath();
      String[] stringArray0 = new String[1];
      improvedFile0.mkdir();
      stringArray0[0] = "32ok:";
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "");
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile0, "32ok:");
      improvedFile1.setLastModified(0L);
      ImprovedFile.buildName("32ok:", 0L, "32ok:", improvedFile3);
      improvedFile1.deleteDirectory();
      improvedFile2.tempRename();
      improvedFile3.toURI();
      ImprovedFile.createTempImprovedFile("|0'.jar", ".jar", improvedFile2);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.myTempdir = improvedFile2;
      archiveScanner0.dirsIncluded = vector1;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("9yzX%yJ");
      improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      improvedFile0.getAbsoluteFile();
      File file0 = ImprovedFile.createTempFileName("# ", "# ", improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.processFile("");
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      DirectoryScanner.matchPath("9yzX%yJ", "");
      archiveScanner0.processArchive(improvedFile0, "!");
      ImprovedFile improvedFile1 = new ImprovedFile(file0);
      ImprovedFile improvedFile2 = ImprovedFile.createTempImprovedFile("BO(V*", "", improvedFile1);
      improvedFile0.mkdir();
      archiveScanner0.couldHoldIncluded("# ");
      archiveScanner0.processFile("tlBczZ^j");
      improvedFile2.createNewFile();
      // Undeclared exception!
      try { 
        archiveScanner0.getExcludedFiles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ");
      improvedFile0.getCanonicalPath();
      Vector<String> vector0 = new Vector<String>();
      improvedFile0.createNewFile();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile("");
      MockFile mockFile0 = new MockFile("U};");
      mockFile0.setLastModified(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ry8X%yJ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "?g\u0002PM.&'3k@;txr");
      archiveScanner0.excludes = stringArray0;
      ImprovedFile improvedFile2 = new ImprovedFile(mockFile0, "Q]C.jar");
      mockFile0.getAbsolutePath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)117;
      mockFile0.toURI();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.dirsNotIncluded = vector1;
      vector1.addAll((Collection<? extends String>) vector0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ");
      improvedFile0.getCanonicalPath();
      Vector<String> vector0 = new Vector<String>();
      DirectoryScanner.matchPath("/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ", "/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile("");
      MockFile mockFile0 = new MockFile("U};");
      mockFile0.setLastModified(0);
      archiveScanner0.excludes = stringArray0;
      ImprovedFile improvedFile2 = new ImprovedFile(mockFile0, "Q]C.jar");
      mockFile0.getAbsolutePath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)117;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.toURI();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.filesIncluded = vector1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      archiveScanner0.isArchive(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.892246898188396
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "");
      Vector<String> vector0 = new Vector<String>();
      String string0 = "";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "");
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile0, "");
      ImprovedFile.buildName("", 0L, "", improvedFile3);
      improvedFile1.deleteDirectory();
      improvedFile2.tempRename();
      ImprovedFile.createTempImprovedFile("|0'.jar", ".jar", improvedFile2);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector1;
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "");
      Vector<String> vector0 = new Vector<String>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("tempdir0");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile0, "");
      MockFile mockFile0 = new MockFile("");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      improvedFile1.deleteDirectory();
      improvedFile2.tempRename();
      ImprovedFile.createTempImprovedFile("|0'.jar", ".jr", improvedFile2);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile1, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ");
      improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      String string0 = "Quit Application";
      MockFile mockFile0 = new MockFile("ry8X%yJ");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "ry8X%yJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("$ryy");
      improvedFile0.getCanonicalPath();
      String string0 = "Ph14=";
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Ph14=";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/$ryy";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Ph14=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".war/Error creating temp directory for 0.war");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Error creating temp directory for ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile(".war");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(".war/Error creating temp directory for 0.war");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("Error creating temp directory for ", ".war", mockFile0);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      mockFile0.deleteOnExit();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      FileSystemHandling.createFolder(evoSuiteFile1);
      ImprovedFile.createTempFileName(".war", "Error creating temp directory for ", mockFile0);
      Vector<Object> vector0 = new Vector<Object>();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "ViJP", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9140273284145395
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile((String) null, "");
      String string0 = "";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "");
      ImprovedFile improvedFile3 = new ImprovedFile(improvedFile0, "");
      ImprovedFile.buildName("", 0L, "", improvedFile3);
      improvedFile1.deleteDirectory();
      improvedFile2.tempRename();
      ImprovedFile.createTempImprovedFile("|0'.jar", "", improvedFile2);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8yJ");
      String string0 = "Ph14=";
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Ph14=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", could not delete temp file to make way for directory.", ", could not delete temp file to make way for directory.");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, ", could not delete temp file to make way for directory.", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/, could not delete temp file to make way for directory./, could not delete temp file to make way for directory.
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      Vector<String> vector1 = new Vector<String>();
      vector0.add("");
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      vector0.iterator();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      vector2.add(object3);
      Object object4 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      InputStream[] inputStreamArray0 = new InputStream[2];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      inputStreamArray0[0] = (InputStream) pipedInputStream0;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStreamArray0[0]);
      inputStreamArray0[1] = (InputStream) pushbackInputStream0;
      vector3.toArray(inputStreamArray0);
      vector3.sort(comparator0);
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector3.sort(comparator1);
      Object object5 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector2.sort(comparator2);
      Object object6 = new Object();
      Vector<Object> vector5 = new Vector<Object>(vector0);
      Object object7 = new Object();
      Vector<Object> vector6 = new Vector<Object>();
      Vector<String> vector7 = new Vector<String>();
      Object object8 = new Object();
      Object object9 = new Object();
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5296847785508279
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = "ry8X%yJ";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[1] = "ej+QT[P";
      stringArray0[2] = "ry8X%yJ";
      stringArray0[3] = "ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      improvedFile0.toURI();
      improvedFile0.createTempDir();
      archiveScanner0.scandir(improvedFile0, "poNjDS", false);
      Integer integer0 = new Integer(0);
      Object object0 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      Vector<String> vector1 = new Vector<String>();
      vector1.add("");
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      Object object1 = new Object();
      vector2.add(object0);
      vector2.add((Object) vector1);
      Object object2 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector3.sort(comparator0);
      Object object3 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      Object object4 = new Object();
      Vector<Object> vector5 = new Vector<Object>();
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector3.sort(comparator1);
      Object object5 = new Object();
      Vector<Object> vector6 = new Vector<Object>(vector5);
      vector6.add(object2);
      Vector<Object> vector7 = new Vector<Object>();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Vector<Object> vector8 = new Vector<Object>();
      vector7.add(object6);
      Vector<Object> vector9 = new Vector<Object>();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      improvedFile0.toURL();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".war/Error creating temp directory for 0.war");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile(".war");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(".war/Error creating temp directory for 0.war");
      mockFile0.setWritable(true, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("U};0Error creating temp directory for .jar", ".war", mockFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      mockFile0.toURI();
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile0.setWritable(true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "U};0Error creating temp directory for .jar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      File file0 = ImprovedFile.createTempFileName(".war", "U};0Error creating temp directory for .jar", mockFile0);
      file0.setReadable(false, false);
      file0.setReadable(false);
      file0.setReadable(false, false);
      file0.deleteOnExit();
      archiveScanner0.toFileType(file0);
      System.setCurrentTimeMillis((-492L));
      Vector<Object> vector0 = new Vector<Object>();
      assertEquals(0, vector0.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ");
      improvedFile0.getCanonicalPath();
      Vector<String> vector0 = new Vector<String>();
      improvedFile0.createNewFile();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ";
      stringArray0[1] = "/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile("");
      MockFile mockFile0 = new MockFile("U};");
      mockFile0.setLastModified(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ry8X%yJ");
      mockFile0.setExecutable(true, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "?g\u0002PM.&'3k@;txr");
      archiveScanner0.excludes = stringArray0;
      mockFile0.deleteOnExit();
      ImprovedFile improvedFile2 = new ImprovedFile(mockFile0, "Q]C.jar");
      mockFile0.getAbsolutePath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)117;
      mockFile0.toURI();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      Vector<String> vector1 = new Vector<String>();
      vector0.add("");
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      Object object1 = new Object();
      vector2.add((Object) vector0);
      vector2.add(object0);
      Object object2 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      vector2.sort(comparator0);
      Object object3 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      Object object4 = new Object();
      Vector<Object> vector5 = new Vector<Object>();
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector4.sort(comparator1);
      Object object5 = new Object();
      Vector<Object> vector6 = new Vector<Object>(vector4);
      vector6.add(object4);
      Vector<Object> vector7 = new Vector<Object>();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Vector<Object> vector8 = new Vector<Object>();
      Vector<Object> vector9 = new Vector<Object>();
      Object object10 = new Object();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis((-1160L));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      Vector<String> vector1 = new Vector<String>();
      vector0.add("");
      vector0.listIterator();
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      Object object1 = new Object();
      vector2.add((Object) vector0);
      vector2.add(object0);
      Object object2 = new Object();
      Object object3 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector3.sort(comparator0);
      Object object4 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      Object object5 = new Object();
      Vector<Object> vector5 = new Vector<Object>();
      Object object6 = new Object();
      Vector<Object> vector6 = new Vector<Object>(vector1);
      vector4.add((Object) null);
      Vector<Object> vector7 = new Vector<Object>();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Vector<Object> vector8 = new Vector<Object>();
      Vector<Object> vector9 = new Vector<Object>();
      Object object11 = new Object();
      vector9.add((Object) vector2);
      Vector<Object> vector10 = new Vector<Object>();
      vector10.add(object10);
      Vector<Object> vector11 = new Vector<Object>();
      ImprovedFile improvedFile0 = new ImprovedFile("", ".kr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".war/Error creating temp directory for 0.war");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile(".war");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(".war/Error creating temp directory for 0.war");
      mockFile0.setWritable(true, false);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile0 = ImprovedFile.createTempImprovedFile("U};0Error creating temp directory for .jar", ".war", mockFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      mockFile0.toURI();
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile0.setWritable(true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "U};0Error creating temp directory for .jar");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      File file0 = ImprovedFile.createTempFileName(".war", "U};0Error creating temp directory for .jar", mockFile0);
      file0.setReadable(true, false);
      FileSystemHandling.createFolder(evoSuiteFile0);
      file0.setReadable(false, false);
      file0.deleteOnExit();
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4486869174985209
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ", "ry8X%yJ");
      improvedFile0.getCanonicalPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ/ry8X%yJ";
      stringArray0[1] = "ry8X%yJ";
      stringArray0[2] = "/home/ubuntu/termite/projects/78_caloriecount/ry8X%yJ/ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.toFileType(improvedFile0);
      improvedFile0.createTempDir();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector1 = new Vector<Object>();
      Object object1 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, (-1562));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("3=V");
      Vector<String> vector1 = new Vector<String>();
      vector0.add("3=V");
      vector0.listIterator();
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      vector2.add(object2);
      vector2.add((Object) vector0);
      vector2.add(object0);
      Object object3 = new Object();
      Object object4 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector3.sort(comparator0);
      Object object5 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      Object object6 = new Object();
      Vector<Object> vector5 = new Vector<Object>();
      Object object7 = new Object();
      Vector<Object> vector6 = new Vector<Object>(vector3);
      Object object8 = new Object();
      Object object9 = new Object();
      vector3.add(object9);
      Object object10 = new Object();
      vector6.add((Object) null);
      Vector<Object> vector7 = new Vector<Object>();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Vector<Object> vector8 = new Vector<Object>();
      Object object15 = new Object();
      ImprovedFile improvedFile0 = new ImprovedFile("3=V");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive(improvedFile0, "1neA.jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      Vector<String> vector1 = new Vector<String>();
      vector0.add("");
      vector0.listIterator();
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      Object object1 = new Object();
      Object object2 = new Object();
      vector2.add(object2);
      vector2.add((Object) vector0);
      vector2.add(object0);
      Object object3 = new Object();
      Object object4 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector3.sort(comparator0);
      Object object5 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      Object object6 = new Object();
      Vector<Object> vector5 = new Vector<Object>();
      Object object7 = new Object();
      Vector<Object> vector6 = new Vector<Object>(vector3);
      Object object8 = new Object();
      Object object9 = new Object();
      vector3.add(object9);
      Object object10 = new Object();
      vector6.add((Object) null);
      Vector<Object> vector7 = new Vector<Object>();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Vector<Object> vector8 = new Vector<Object>();
      Object object15 = new Object();
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "1neA.jar");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ry8X%yJ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ry8X%yJ";
      stringArray0[1] = "ej+QT[P";
      stringArray0[2] = "ry8X%yJ";
      stringArray0[3] = "ry8X%yJ";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile.copyFromToDir(improvedFile0, improvedFile0);
      improvedFile0.createTempDir();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "poNjDS", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }
}
