/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 29 20:58:16 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.SyncFailedException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3373496508692947
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader0.reset();
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[2] = '4';
      charArray0[3] = '^';
      charArray0[4] = 'S';
      JavaCharStream.hexval('4');
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ywN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 117);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1109, 1109, 117);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      char[] charArray0 = new char[8];
      charArray0[0] = 't';
      charArray0[1] = 'T';
      charArray0[2] = 'O';
      charArray0[3] = 'I';
      charArray0[4] = '';
      charArray0[5] = '$';
      charArray0[6] = '1';
      charArray0[7] = '_';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)115;
      int int0 = 92;
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9104956296178259
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8;E)= #NKap");
      stringReader0.mark(2739);
      StringReader stringReader1 = new StringReader("ZR~Ms4N?J4&}+hm['%");
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = 'b';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, (-1904), 1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-2030), (-2030));
      javaCharStream1.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0253262207700677
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[1] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      charArray0[8] = '.';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 73);
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JavaCharStream.hexval('E');
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      StringReader stringReader0 = new StringReader("column");
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      stringReader0.read(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('7');
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9697764683159095
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(1);
      assertEquals(1, javaCharStream0.getBeginLine());
      
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.39274289626694653
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2rTzgO");
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 74, 147, (-1264));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String string0 = "Dd8HE)= #NKap";
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("");
      stringReader2.read(charArray0);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9104956296178259
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("I1K P[;OYa3N`Qd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1302, (-313));
      char[] charArray0 = new char[6];
      charArray0[0] = 'z';
      charArray0[1] = 'e';
      charArray0[2] = 'F';
      charArray0[3] = 'b';
      charArray0[4] = 'u';
      charArray0[5] = 'B';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-313), 6, 1302);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 98, 6);
      javaCharStream2.BeginToken();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4195);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('2');
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 47, 63);
      javaCharStream1.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix(3506);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7562764023249788
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(62);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 62;
      javaCharStream0.adjustBeginLineColumn(62, 13);
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-3161));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = 'j';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('8', char0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.08418915289513
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JavaCharStream.hexval('E');
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      StringReader stringReader0 = new StringReader("column");
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-220), (-4221), 77);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream(696);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream.hexval('E');
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getBeginColumn();
      StringReader stringReader1 = new StringReader("");
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(77, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      stringReader0.mark(2739);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      String string0 = "\" T,f{C(0b2";
      StringReader stringReader2 = new StringReader("\" T,f{C(0b2");
      stringReader2.ready();
      char[] charArray0 = new char[3];
      charArray0[0] = '/';
      charArray0[1] = 'M';
      charArray0[2] = 'e';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("I1K P[;OYa3N`Qd");
      stringReader0.reset();
      char[] charArray0 = new char[8];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = 'e';
      charArray0[3] = 'e';
      charArray0[4] = 'e';
      charArray0[5] = 'o';
      charArray0[6] = 'e';
      charArray0[7] = 'e';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3422178025713507
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-78), 71);
      StringReader stringReader1 = new StringReader("Ex<3:F!M");
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = 124;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.adjustBeginLineColumn((-2570), (-537));
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.ExpandBuff(false);
      JavaCharStream.hexval('E');
      StringReader stringReader2 = new StringReader("Ex<3:F!M");
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.228642123317007
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      stringReader0.reset();
      charArray0[0] = '#';
      charArray0[1] = 'j';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3048), (-3048));
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getBeginColumn();
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('D');
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.010761683258147
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = "Ex<3:F!M";
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-78), 71);
      StringReader stringReader1 = new StringReader("Ex<3:F!M");
      char char0 = 'Y';
      stringReader0.read();
      char[] charArray0 = new char[1];
      charArray0[0] = 'Y';
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.adjustBeginLineColumn((-2570), (-537));
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = 'j';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = 'j';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "";
      char[] charArray0 = new char[4];
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = "Dd8HE)= #NKap";
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      stringReader0.reset();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      stringReader0.ready();
      char[] charArray1 = new char[0];
      stringReader0.read(charArray1);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@d6+n?Qnybwb_TZoU");
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.skip((-1));
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(89);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      stringReader0.reset();
      charArray0[0] = '#';
      charArray0[1] = 'j';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.4689732714597972
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      int int0 = 9;
      pushbackInputStream0.unread(9);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.ReadByte();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(71);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaCharStream.hexval('E');
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      int int0 = (-4221);
      StringReader stringReader0 = new StringReader("column");
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      int int1 = (-2123);
      int int2 = 463;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 463, (-4221));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream.hexval('7');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader1 = new StringReader("");
      assertFalse(stringReader1.equals((Object)stringReader0));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5430396622282272
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "O";
      StringReader stringReader0 = new StringReader("O");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1216, 1216);
      StringReader stringReader1 = new StringReader("O");
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      stringReader1.markSupported();
      charArray0[1] = '^';
      charArray0[2] = 'Z';
      charArray0[3] = '.';
      stringReader1.read(charArray0);
      int int0 = 117;
      javaCharStream0.ReInit((Reader) stringReader0, 2051, 117);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 1, 117);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[3];
      stringReader0.reset();
      charArray0[2] = '^';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('d');
      StringReader stringReader1 = new StringReader(">-X4__6y@0!NC2F&6b");
      assertFalse(stringReader1.equals((Object)stringReader0));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z|jW17%Qt");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1780, (-928), 71);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream(3632);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
      
      int int1 = JavaCharStream.hexval('b');
      assertEquals(11, int1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      int int0 = 1216;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1216, 1216);
      StringReader stringReader1 = new StringReader("O");
      stringReader0.markSupported();
      javaCharStream0.readChar();
      stringReader0.markSupported();
      int int1 = 2943;
      int int2 = (-1);
      javaCharStream0.getBeginLine();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2943);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      char[] charArray0 = new char[6];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[2] = 'G';
      charArray0[3] = 'e';
      charArray0[4] = 'G';
      charArray0[5] = 'o';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 1867);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 1867, 582);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4470103662830442
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte) (-23);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      pushbackInputStream0.unread((int) (byte)70);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.adjustBeginLineColumn((-1504), (byte)70);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getBeginColumn();
      StringReader stringReader1 = new StringReader(" column ");
      stringReader1.skip((byte) (-47));
      javaCharStream0.ReInit((Reader) stringReader1);
      JavaCharStream.hexval('F');
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('?');
      javaCharStream0.getEndLine();
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.8334791719574777
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaCharStream.hexval('E');
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      StringReader stringReader0 = new StringReader("column");
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'E';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-220), (-4221), 85);
      javaCharStream0.BeginToken();
      assertEquals((-220), javaCharStream0.getBeginLine());
      
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.8867895172690288
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'S';
      charArray0[1] = '\u001D';
      charArray0[2] = 'S';
      stringReader0.read(charArray0);
      int int0 = 117;
      int int1 = 73;
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 117, 117);
      javaCharStream0.ReInit((Reader) stringReader0, (-2123), 463);
      JavaCharStream.hexval('C');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 117, (-135));
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[4];
      charArray0[0] = '^';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = '^';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 73, (-368));
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      StringReader stringReader2 = new StringReader("fFW(L^9]");
      stringReader1.read();
      StringReader stringReader3 = new StringReader("Xb,7 |Eu(U3");
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-368), int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4689732714597972
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-4);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = 'f';
      charArray0[2] = 'k';
      charArray0[3] = '\\';
      charArray0[4] = 'j';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.ReInit((Reader) stringReader1, (int) (byte) (-4), 83);
      JavaCharStream.hexval('f');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-313), 2738);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix((-313));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.39274289626694653
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0018';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2048, 2048);
      javaCharStream0.ReadByte();
      stringReader0.ready();
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5065950881316383
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 0, (-2749), 0);
      char char0 = '8';
      int int0 = (-2153);
      StringReader stringReader0 = new StringReader("m#cPVEkA-qzT");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 92, 0);
      javaCharStream1.adjustBeginLineColumn((-2749), 13);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write((-1));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("p");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4221), (-3294), 0);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-603));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.2293362159076602
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "Ex<3:F!M";
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1302, (-4221));
      int int0 = 117;
      javaCharStream0.adjustBeginLineColumn(4, 117);
      javaCharStream0.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("I1K P[;OYa3N`Qd");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1302, (-325));
      char[] charArray0 = new char[9];
      char char0 = 'z';
      charArray0[0] = 'z';
      charArray0[6] = 'e';
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("I1K P[;OYa3N`Qd");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1302, (-313));
      char[] charArray0 = new char[6];
      charArray0[0] = 'z';
      charArray0[1] = 'e';
      charArray0[2] = 'F';
      charArray0[3] = 'b';
      charArray0[4] = 'e';
      charArray0[5] = 'B';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-313), 6, 1302);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 98, 6);
      javaCharStream2.BeginToken();
      javaCharStream2.buffer = charArray0;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4195);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream2.getBeginColumn();
      StringReader stringReader1 = new StringReader("I1K P[;OYa3N`Qd");
      javaCharStream2.GetImage();
      assertEquals(98, javaCharStream2.getBeginLine());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.3324449190613974
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 13);
      javaCharStream0.readChar();
      javaCharStream0.inBuf = 259;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getBeginColumn();
      StringReader stringReader0 = new StringReader(" column ");
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-4334), (-4334), 998);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, (-1), 656, (-3030));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.16924965202722864
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      charArray0[5] = '^';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      charArray0[8] = '.';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 73);
      JavaCharStream.hexval('1');
      StringReader stringReader1 = new StringReader("-A\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, (-1));
      javaCharStream1.maxNextCharInd = 306;
      StringReader stringReader2 = new StringReader("W?C/VR)q*");
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.39274289626694653
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = '^';
      charArray0[1] = '.';
      charArray0[1] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      sequenceInputStream0.mark(3845);
      charArray0[5] = '^';
      charArray0[6] = 'S';
      charArray0[7] = 'S';
      charArray0[8] = '.';
      stringReader0.read(charArray0);
      int int0 = 117;
      int int1 = 73;
      sequenceInputStream0.mark(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 73);
      javaCharStream0.ReInit((Reader) stringReader0, (-135), (-1));
      try { 
        JavaCharStream.hexval('i');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7147431158325053
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread((-19));
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = (-19);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 7, (-851));
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, (-1), (-19), (-19));
      javaCharStream2.ExpandBuff(false);
      javaCharStream1.getBeginColumn();
      javaCharStream1.ReInit((Reader) stringReader0, (-19), 2074);
      // Undeclared exception!
      try { 
        javaCharStream2.UpdateLineColumn('X');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.7670091910745693
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      int int0 = 13;
      javaCharStream0.adjustBeginLineColumn(0, 13);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char char0 = '5';
      JavaCharStream.hexval('5');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.2804809771382422
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 998, 998);
      pipedOutputStream0.write(117);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, (-4334), (-4334), 998);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.ReInit((InputStream) pipedInputStream0, (-4334), (-1), (-4334));
      JavaCharStream.hexval('8');
      JavaCharStream javaCharStream2 = new JavaCharStream((Reader) null, 998, (-2153));
      javaCharStream2.adjustBeginLineColumn((-4334), (-2243));
      pipedOutputStream0.write((-3523));
      javaCharStream0.ReInit((Reader) null, 2778, 998);
      JavaCharStream.hexval('8');
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) null, 2778, (-1), 1137);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      stringReader0.mark(2739);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      MockFile mockFile0 = new MockFile((String) null, "Bh");
      File file0 = MockFile.createTempFile("^k>w *;;)GQlxZN", "Sd", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      StringReader stringReader2 = new StringReader("'kFdE=sA");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader3 = new StringReader("^k>w *;;)GQlxZN");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      int int0 = 1216;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1216, 1216);
      StringReader stringReader1 = new StringReader("O");
      stringReader0.markSupported();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      int int1 = 2943;
      int int2 = 73;
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, (-90), 73, 94);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = '^';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      charArray0[2] = 'S';
      charArray0[3] = '!';
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      int int0 = 13;
      sequenceInputStream0.mark(0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 0, 98, 13);
      pushbackInputStream0.read();
      javaCharStream0.adjustBeginLineColumn(3110, 1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = '^';
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.2789217400779584
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-78), 71);
      StringReader stringReader1 = new StringReader("Ex<3:F!M");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1Y8\"qXrg8vgZwX");
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      javaCharStream0.AdjustBuffSize();
      stringReader0.ready();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.adjustBeginLineColumn((-2570), (-537));
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getBeginColumn();
      StringReader stringReader2 = new StringReader("Ex<3:F!M");
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.bufline = null;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.075360096334817
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      pushbackInputStream0.mark(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 13);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("BJK$MZ_WEX");
      javaCharStream0.available = 13;
      sequenceInputStream0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 13, 0, (-488));
      assertEquals(13, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      int int0 = 13;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.39274289626694653
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-78), 71);
      StringReader stringReader1 = new StringReader("Ex<3:F!M");
      char[] charArray0 = new char[1];
      charArray0[0] = '^';
      stringReader1.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader1, 100, 71);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "";
      File file0 = MockFile.createTempFile("Q3&3K!6ki0^y", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 3376, 3376, 1873);
      javaCharStream0.Done();
      mockFileInputStream0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.9792045174343245
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("U2apP6BB0Mss>M)$");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("");
      String string0 = "";
      StringReader stringReader2 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = '#';
      charArray0[1] = '#';
      charArray0[2] = '#';
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = '#';
      charArray0[6] = '#';
      charArray0[7] = 'q';
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-1), (-1));
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1216, 1216);
      StringReader stringReader1 = new StringReader("O");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 73);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 1216, 60, 1216);
      javaCharStream1.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6|");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 909, 909);
      MockFile mockFile0 = new MockFile("6|");
      File file0 = MockFile.createTempFile("XZf|DFssi(E]3xAtc", "6|", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.release();
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, (-1662), (-1662), 909);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7326587201992076
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread((-20));
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = (-20);
      javaCharStream0.adjustBeginLineColumn((-20), 13);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -19
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      stringReader0.mark(2739);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2738);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0, 1617);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 2738, 229, 98);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1), 670);
      char[] charArray0 = new char[2];
      javaCharStream0.column = 11;
      charArray0[0] = 'm';
      pipedInputStream0.skip((-1));
      charArray0[1] = 'l';
      javaCharStream0.nextCharBuf = charArray0;
      StringReader stringReader0 = new StringReader("");
      int[] intArray0 = new int[2];
      intArray0[0] = (int) 'l';
      intArray0[1] = 670;
      javaCharStream0.bufline = intArray0;
      pipedInputStream0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 3547, 0, 0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 670, 1767, 670);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 670);
      assertEquals(0, javaCharStream0.getBeginLine());
      
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, 0);
      javaCharStream0.backup((-1304));
      assertEquals(1303, javaCharStream0.bufpos);
      
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 241);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8943120247335319
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 13);
      pushbackInputStream0.close();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[6];
      charArray0[0] = ',';
      charArray0[1] = '=';
      charArray0[2] = '~';
      charArray0[3] = '@';
      charArray0[4] = '0';
      charArray0[5] = 'X';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("I1K P[;OYa3N`Qd");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1302, (-313));
      char[] charArray0 = new char[6];
      charArray0[0] = 'z';
      charArray0[1] = 'e';
      charArray0[2] = 'F';
      charArray0[3] = 'b';
      charArray0[4] = 'e';
      charArray0[5] = 'B';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-313), 6, 1302);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 98, 6);
      javaCharStream2.BeginToken();
      javaCharStream2.buffer = charArray0;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4195);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream2.getBeginColumn();
      assertEquals(6, javaCharStream2.getBeginColumn());
      
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 998, 998);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('{');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7562764023249788
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 13);
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.UpdateLineColumn('p');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-3161));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.2047854169135204
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 179, 179);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      int int0 = 574;
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-5635), 574, (-5635));
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1275347898191255
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rN(A5D*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.FillBuff();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Z');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 6194;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6194, (-3351), 6194);
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = '7';
      charArray0[2] = '\'';
      charArray0[3] = '@';
      charArray0[4] = '5';
      charArray0[5] = '1';
      charArray0[6] = 'R';
      charArray0[7] = 'Z';
      stringReader0.read(charArray0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z");
      char[] charArray0 = new char[4];
      charArray0[0] = '@';
      charArray0[1] = 'e';
      charArray0[3] = '~';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 4069, 4069, (-394));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9yeEkUd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.backup(324);
      assertEquals(3771, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ex<3:F!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4221), (-235), 0);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream(696);
      StringReader stringReader1 = new StringReader("E}?:%m?~M}UD*S_<h");
      assertFalse(stringReader1.equals((Object)stringReader0));
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "S");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 77);
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.nextCharBuf;
      assertEquals(4096, charArray0.length);
      
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      String string0 = "^k>w *;;)GQlxZN";
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2005, (-1507), 10);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 117, 117, 117);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte) (-50);
      byteArray0[4] = (byte)96;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)125;
      byteArray0[7] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1539, 117, 1499);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 77);
      pipedInputStream0.mark(77);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-3506), (-3506), 77);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 9, 3125);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.buffer = null;
      sequenceInputStream0.close();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 2095, 2095, 2095);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.2501247721783552
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      stringReader0.mark(2739);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      String string0 = null;
      MockFile mockFile0 = new MockFile((String) null, "Bh");
      File file0 = MockFile.createTempFile("^k>w *;;)GQlxZN", "Sd", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('9');
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      charArray0[1] = '9';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, 1);
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[1] = 'x';
      charArray0[2] = 'k';
      charArray0[3] = '>';
      charArray0[4] = '6';
      charArray0[5] = 'b';
      charArray0[6] = 'U';
      charArray0[7] = '>';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.bufline = null;
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2215), 0);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      StringReader stringReader2 = new StringReader("");
      stringReader2.read();
      StringReader stringReader3 = new StringReader("");
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getBeginColumn();
      char char0 = javaCharStream0.readChar();
      assertEquals(4097, javaCharStream0.bufpos);
      assertEquals('H', char0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1379), (-2900));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-98), 0, (byte)74);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dd8HE)= #NKap");
      stringReader0.mark(2739);
      StringReader stringReader1 = new StringReader("Dd8HE)= #NKap");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char[] charArray0 = javaCharStream0.nextCharBuf;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      int int0 = 998;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 998, 998);
      javaCharStream0.adjustBeginLineColumn(998, (-690));
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      try { 
        stringReader0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-2364), 1398, 83);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int[] intArray0 = new int[7];
      intArray0[1] = 998;
      intArray0[3] = 998;
      intArray0[4] = 998;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 998, 998, 998);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 998);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 157, 92);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader0 = new StringReader("!B1x/lh-*M,)6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 117, 117);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 117, (-2), (-777));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.4978661367769952
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream0.unread(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 13);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, (-1));
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.7007479891081367
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      sequenceInputStream0.mark(67);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0);
      pushbackInputStream1.unread(2997);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1);
      javaCharStream0.adjustBeginLineColumn(13, 584);
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 2997);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
}
