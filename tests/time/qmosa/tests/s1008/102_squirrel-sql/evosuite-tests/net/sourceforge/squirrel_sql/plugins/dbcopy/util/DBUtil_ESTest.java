/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:57:33 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Properties;
import java.util.Stack;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.SpinnerListModel;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoUpdateListener;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.PrimaryKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ISession iSession0 = null;
      String string0 = "Dz%(!X=I";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 1000000;
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("", (String) null);
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("r)Mxl", "d7w$MyL?jjbHc($T\"");
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      connectionWrapper0.close();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier1);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      driverPropertyInfoArray0[1] = driverPropertyInfo0;
      driverPropertyInfoArray0[2] = driverPropertyInfo0;
      driverPropertyInfoArray0[3] = driverPropertyInfo1;
      driverPropertyInfoArray0[4] = driverPropertyInfo0;
      driverPropertyInfoArray0[5] = driverPropertyInfo1;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.equals(driverPropertyInfo0);
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver0);
      try { 
        DBUtil.executeUpdate(sQLConnection0, (String) null, false);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Methods cannot be invoked on a closed connection
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      schemaInfo0.removeSchemaInfoUpdateListener(schemaInfoUpdateListener0);
      DBUtil.getLastStatementValues();
      String string0 = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "wvU%$ZEO/vRU>'XH", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, "wvU%$ZEO/vRU>'XH", 0, 0, 0, 2, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, 1, (String) null);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "wvU%$ZEO/vRU>'XH", "*.4}ThS6*v%p?TpJ\"\"", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.setCopyMenuEnabled(false);
      dBCopyPlugin0.setCopyMenuEnabled(false);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPasteToTableInfo((ISQLConnection) null, "Session.commit", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin2, "Ce", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-10);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-5);
      byteArray0[5] = (byte)78;
      byteArray0[6] = (byte)113;
      byteArray0[7] = (byte)63;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("8SBtEPx#[j?&\"?[k@;v", (String) null, "constraint (");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, ",3<hL", "constraint (", "Session.reconnError", (byte) (-10));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("sun java system high availability", "sun java system high availability");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("eW4hH;@4n", "sun java system high availability");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("eW4hH;@4n", "sun java system high availability");
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("eW4hH;@4n", "sun java system high availability");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("DBUtil.error.tablenotfound", "o3gC<UN{");
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("r2G$.Dv7Ve ay@Aw6z", "sun java system high availability");
      driverPropertyInfo3.description = null;
      driverPropertyInfoArray0[5] = driverPropertyInfo5;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.equals(driverPropertyInfo2);
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName(sQLConnection0, (ITableInfo) null, 2005);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("", (String) null);
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("r)Mxl", "d7w$MyL?jjbHc($T\"");
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier1);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      driverPropertyInfoArray0[1] = driverPropertyInfo0;
      driverPropertyInfoArray0[2] = driverPropertyInfo0;
      driverPropertyInfoArray0[3] = driverPropertyInfo1;
      driverPropertyInfoArray0[4] = driverPropertyInfo0;
      driverPropertyInfoArray0[5] = driverPropertyInfo1;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.equals(driverPropertyInfo0);
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      TableColumnInfo tableColumnInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 7;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 7, 7, 7, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setClientName("select RDB$GENERATOR_NAME from RDB$GENERATORS");
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      DBCopyPreferenceBean dBCopyPreferenceBean2 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean2.setAppendRecordsToExisting(true);
      String string0 = "6s";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%zW'r1Sb!fI^2", "", "tI7:=1tUWp^Ju]NTV`>", "%zW'r1Sb!fI^2", (-1868), "tI7:=1tUWp^Ju]NTV`>", (-1868), 632, (-2192), (-2192), "6s", "select RDB$GENERATOR_NAME from RDB$GENERATORS", (-284), (-1868), "tI7:=1tUWp^Ju]NTV`>");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceDistinctDataType(6, tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent(3895, (-3082));
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setClientName("getCatSep: Unexpected Exception - ");
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean1.setAppendRecordsToExisting(true);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      dBCopyPlugin3.getPluginUserSettingsFolder();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, ">p\"m5SDQ5,\"W\"3y4~r", ">p\"m5SDQ5,\"W\"3y4~r");
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      arrayList1.spliterator();
      ArrayList<ITableInfo> arrayList2 = new ArrayList<ITableInfo>();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[1] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[3] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[4] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[5] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[6] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[7] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[8] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1007, "S", 2002, 2006, 2006, 2002, ";i'EuI>)Af", "!L", 2006, 243, "+");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "?", "]}WJFbAJ");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "{^)-L00C_<LI'~+P", (String) null, "nA.s0E[8l[mG9]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-48);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.typesAreEquivalent(2340, 772);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("", "");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("eW4hH;@4n", "");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("eW4hH;@4n", "");
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("eW4hH;@4n", "");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "nJ. |~y>", "eW4hH;@4n", "", 3556, "-Ce})k`*", 2005, (-2089), 3556, 91, "--", " cannot be null", 44, 3556, ":{@[`(pFq-'K=");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "", "nJ. |~y>", "jn1UuA)9E", 91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-10);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-5);
      byteArray0[5] = (byte)78;
      byteArray0[6] = (byte)113;
      byteArray0[7] = (byte)63;
      byteArray0[8] = (byte)107;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "select ", (String) null, 2340, "8SBtEPx#[j?&\"?[k@;v", 2004, 0, (-25), (-26), "Q`4QH)5+K5t\"7\"nm-", "constraint (", 2004, 2137, "constraint (");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(16, tableColumnInfo0, (ISession) null);
      DBUtil.typesAreEquivalent(16, 37);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, ")ee!;diKV@", "F.:zg{EPg|CRB");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2004);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      DBCopyPreferenceBean dBCopyPreferenceBean2 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean2.setAppendRecordsToExisting(true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "uex|dc\"\"VvEW5v", ",3<hL");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      linkedList0.add((ITableInfo) null);
      DBUtil.convertTableToObjectList(linkedList0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "%S", 2022, (String) null, 2022, 2022, 1237, 92, (String) null, "e@X 8", (-3), 2022, "%S");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("%S", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      SpinnerListModel spinnerListModel0 = new SpinnerListModel();
      JSpinner jSpinner0 = new JSpinner(spinnerListModel0);
      JSpinner.DateEditor jSpinner_DateEditor0 = null;
      try {
        jSpinner_DateEditor0 = new JSpinner.DateEditor(jSpinner0, "e@X 8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'e'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      arrayList0.add((IDatabaseObjectInfo) null);
      DBUtil.convertObjectToTableList(arrayList0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = " tableName=";
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(" tableName=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(arrayList0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2342);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      assertNull(sQLDriver0.getName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyData(false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      dBCopyPreferenceBean0.setClientName("]}WJFbAJ");
      dBCopyPreferenceBean0.setClientName("select RDB$GENERATOR_NAME from RDB$GENERATORS");
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      DBCopyPreferenceBean dBCopyPreferenceBean2 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean2.setAppendRecordsToExisting(true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%zW'r1Sb!fI^2", "", "tI7:=1tUWp^Ju]NTV`>", "%zW'r1Sb!fI^2", (-1868), "tI7:=1tUWp^Ju]NTV`>", (-1868), 632, (-2192), (-2192), "6s", "select RDB$GENERATOR_NAME from RDB$GENERATORS", (-284), (-1868), "tI7:=1tUWp^Ju]NTV`>");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      stack0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "key");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DatabaseObjectType.other", "CREA#TE TABLE ", " and able_schema = ? ", "*Yu'\"*^??}N5w|HTB/", (-2270), "!JvPHku1:gSJnB", 237, (-2085), 2002, (-1324), ")F-qmk&j", "nv.l2", (-579), 0, "VHkW&8ZE*c");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      DatabaseObjectType.createNewDatabaseObjectType("!JvPHku1:gSJnB");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean1 = DBUtil.typesAreEquivalent((-2), (-1913));
      assertFalse(boolean1);
      
      boolean boolean2 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dsm", "g]yn+&", "A", "]}WJFbAJ", (-3), ",3<hL", 2002, (-3), (-1324), (-1968526675), "y&Qy~>", "y&Qy~>", 92, 2002, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("catalog", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.isBinaryType(tableColumnInfo0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setClientName("getCatSep: Unexpected Exception - ");
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean1.setAppendRecordsToExisting(true);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      ISQLConnection iSQLConnection0 = null;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "org.springframework.scheduling.concurrent.CustomizableThreadFactory", "k;{5+#_iak1SS");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 1000000;
      int int1 = 2994;
      String string0 = "u^#dPK&8o_b!";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("=?*/L+)QEb14/C#.", "", "sun java system high availability", ";+*;\"Z3XK'BO`6QM", 1000000, "sun java system high availability", 1000000, 1000000, 772, 2994, ";+*;\"Z3XK'BO`6QM", "Max function is null for dialect=", 0, 1000000, "u^#dPK&8o_b!");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "=?*/L+)QEb14/C#.", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("op@^X5-gek*baO", " NOT NULL", "R2pBH+XuXV", "op@^X5-gek*baO", 1607, (String) null, 7, 307, 2664, 40, "R2pBH+XuXV", "o5`bCT\"w5V^OLOW", 1391, 2664, "8${");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("org.jfree.data.xy.MatrixSeriey");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(87, tableColumnInfo0, (ISession) null);
      assertEquals(87, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("TRUNCATE TABLE ", "TRUNCATE TABLE ", "hsJ8t/>LAREv[/$J[7", "]}WJFbAJ", (-3728), "Hg6", 107, 307, 307, 307, "8${", "TRUNCATE TABLE ", 307, 307, "Hg6");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(3163, tableColumnInfo0, (ISession) null);
      assertEquals(3163, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "");
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.unload();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)91;
      byteArray0[3] = (byte) (-51);
      byteArray0[4] = (byte)96;
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "";
      String string1 = "v|";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "yiA@GQB)@", "w%Tq1nQ$LE#@*k7", "qb'", (-346), "v|", (-346), 2001, (-346), 2006, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "yiA@GQB)@", (-346), 1007, "DBUtil.error.unknowntype");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      JRadioButton jRadioButton0 = new JRadioButton("DELETE FROM ");
      basicCheckBoxUI0.getMaximumSize(jRadioButton0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("v|", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[7];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      ISQLConnection iSQLConnection0 = null;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "w%Tq1nQ$LE#@*k7", "DBUtil.error.unknowntype");
      String string2 = "-7ea.\"";
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginJarFilePath();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "On~zxq/#)e", (String) null, (-2), (String) null, 927, 5, 927, 1003, (String) null, "kUdz@>-=6JQ%t&fx,", 754, 109, " ) values ( ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("g%i`\"{pV'L~", ":)Vvx");
      imageIcon0.getDescription();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":)Vvx");
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, (String) null, (String) null, "fixCase: unexpected exception: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("hsJ8t/>LAREv[/$J[7", "TRUNCATE TABLE ", " {^x*}$", " tableName = ", 2000, "8${", 107, 2000, 307, 1532, "op@^X5-gek*baO", " {^x*}$", 2000, 1391, "8${");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[6];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ";i'EuI>)!Af", "TRUNCATE TABLE ", "DBUtil.info.bindbloblength", 63, "vTg>^mW4(JF68cAF", 5, 1391, 116, 1036, "vTg>^mW4(JF68cAF", ";i'EuI>)Af", 2000, (-2658), " {^x*}$");
      tableColumnInfoArray0[2] = tableColumnInfo1;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      ISQLConnection iSQLConnection0 = null;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " tableName = ", " ");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, ";i'EuI>)Af", "-7ea.\"", " tableName = ,  tableName = , DBUtil.info.bindbloblength,  tableName = ,  tableName = ,  tableName = ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setClientName("select RDB$GENERATOR_NAME from RDB$GENERATORS");
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      DBCopyPreferenceBean dBCopyPreferenceBean2 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean2.setAppendRecordsToExisting(true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("%zW'r1Sb!fI^2", "", "tI7:=1tUWp^Ju]NTV`>", "%zW'r1Sb!fI^2", (-1868), "tI7:=1tUWp^Ju]NTV`>", (-1868), 632, (-2192), (-2192), "6s", "select RDB$GENERATOR_NAME from RDB$GENERATORS", (-284), (-1868), "tI7:=1tUWp^Ju]NTV`>");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      schemaInfo0.removeSchemaInfoUpdateListener(schemaInfoUpdateListener0);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, 1309, 676, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, 0, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2009, 2009, 2009, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyPrimaryKeys(true);
      dBCopyPreferenceBean0.setCopyData(true);
      dBCopyPreferenceBean0.setClientName("2j|-\"oA  sjEW|");
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      dBCopyPreferenceBean0.setAppendRecordsToExisting(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = ".";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "N-#4i`S(F+0-", "ojrkA?qB9", "menu.", 3, (String) null, 3, 3, 3, 16777215, ".", "menu.", 3, 16777215, "2j|-\"oA  sjEW|");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getPluginUserSettingsFolder();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("2j|-\"oA  sjEW|", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "{", "2j|-\"oA  sjEW|", 1000, "{", (-108), (-108), 1482, 1482, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 93, 3973, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo1, "!U72", "{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "w%Tq1nQ$LE#@*k7";
      String string1 = "";
      String string2 = "v|";
      String string3 = "DBUtil.error.unknowntype";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "yiA@GQB)@", "w%Tq1nQ$LE#@*k7", "qb'", (-346), "v|", (-346), 2001, (-346), 2006, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "yiA@GQB)@", (-346), 1007, "DBUtil.error.unknowntype");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("v|", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[7];
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DBUtil.setLastStatementValues("/C2N@f");
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPasteToTableInfo((ISQLConnection) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "org.jfree.data.xy.IntervalXYDelegate", (ITableInfo) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, " ) where rownum <= ?", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("", "x0oY(n38iySg,DT9", "x0oY(n38iySg,DT9", (ISession) null, false, 243);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DBUtil.setLastStatement("xBkxc{c?B!zdoE ");
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCommitAfterTableDefs(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      PrimaryKeyInfo primaryKeyInfo0 = null;
      try {
        primaryKeyInfo0 = new PrimaryKeyInfo("xBkxc{c?B!zdoE ", "The key (", ") - table ", "", (short) (-2882), (String) null, (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, ",3<hL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("next_day", "");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "w1Bo[tjKc5gdP#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      databaseObjectType0.getIdentifier();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "gRJg-fHf@1cb#", "");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "xGI0;Z=";
      dBCopyPlugin0.setPasteToTableName("xGI0;Z=");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("-6WY#^yInu)m", "4%:o&.(o^p~q3g]<", "select ", "4%:o&.(o^p~q3g]<", (-5), "", 1499, (-5), 2340, 893, "Q`4QH)5+K5t\"7\"nm-", "-6WY#^yInu)m", 0, 1499, "DBUtil.info.executequery");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyData(false);
      dBCopyPreferenceBean0.setClientName("");
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      dBCopyPreferenceBean0.setAppendRecordsToExisting(false);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1028), "%4&VHbh%&87evo", 1391, 1804, 1391, (-1028), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, (-1028), 2302, "DBUtil.info.bindbloblength");
      DBCopyPlugin dBCopyPlugin4 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin4.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType((-1303), tableColumnInfo0, (ISession) null);
      assertEquals((-1303), int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = DBUtil.typesAreEquivalent((-2701), 3);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-2701));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBUtil.typesAreEquivalent((-6), (-6));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("");
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      assertEquals("", sQLDriver0.toString());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zvx^#LU-z5jc(@1");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.typesAreEquivalent(2002, 2002);
      System.setCurrentTimeMillis(2002);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(114, 676);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "S}{1sbY'2FS.>", "S}{1sbY'2FS.>", (-771));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBUtil.convertTableToObjectList(linkedList0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 21;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(">CPpqwwVY 6`b7S3VB:", 21, 21, (-237));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "exV2vR&w*?-tNm");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "exV2vR&w*?-tNm");
      String string0 = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "SELECT data_type FROM informationschema.columns whe<e column_name =? ", "%:|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = 12;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "JgO6TK*_-t");
      int int1 = (-1941);
      DBUtil.getLastStatement();
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "Qa:%", (String) null, "Qa:%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("g%i`\"{pV'L~", ":)Vvx");
      imageIcon0.getDescription();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIcon0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.unload();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("g%i`\"{pV'L~", "*", "3p*!", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "org.apache.log4j.helpers.FormattingInfo";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "org.apache.log4j.helpers.FormattingInfo", "DELETE FROM ");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      int int0 = 736;
      int int1 = (-5035);
      DBUtil.typesAreEquivalent(736, (-5035));
      dBCopyPlugin0.getDestSession();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ")~Xo#$m'A-");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo(")~Xo#$m'A-", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("F_<!pF$", (String) null);
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("org.apache.log4j.helpers.FormattingInfo", (String) null);
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("DELETE FROM ", "F_<!pF$");
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[7];
      driverPropertyInfoArray0[0] = driverPropertyInfo2;
      driverPropertyInfoArray0[1] = driverPropertyInfo2;
      driverPropertyInfoArray0[2] = driverPropertyInfo1;
      driverPropertyInfoArray0[3] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("F_<!pF$", "org.apache.log4j.helpers.FormattingInfo");
      driverPropertyInfoArray0[4] = driverPropertyInfo5;
      driverPropertyInfoArray0[5] = driverPropertyInfo3;
      driverPropertyInfoArray0[6] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(". Using 'max'", "vZ\"u2UE[}\":Redy^", "vZ\"u2UE[}\":Redy^", "vZ\"u2UE[}\":Redy^", 0, (String) null, 0, 0, 0, 4039, (String) null, ". Using 'max'", 0, 4039, "kUdz@>-=6JQ%t&fx,");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("", (String) null);
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("r)Mxl", "d7w$MyL?jjbHc($T\"");
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier1);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[6];
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      driverPropertyInfoArray0[1] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyTo((Properties) null);
      driverPropertyInfoArray0[2] = driverPropertyInfo0;
      driverPropertyInfoArray0[3] = driverPropertyInfo1;
      driverPropertyInfoArray0[4] = driverPropertyInfo0;
      driverPropertyInfoArray0[5] = driverPropertyInfo1;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      driverPropertyInfo0.choices = null;
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.equals(driverPropertyInfo0);
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver0);
      //  // Unstable assertion: assertEquals("-40ef8857:16ecd536ec6:-7f3c", uidIdentifier1.toString());
      
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "0", (-5), ",\n", (-103), (-5), (-5), 2290, (String) null, "r)Mxl", (-5), 93, ",\n");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      //  // Unstable assertion: assertEquals((-5), int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "S", 2002, (String) null, 2002, 2002, 2749, 92, (String) null, "e@X 8", (-3), 2002, "S");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("S", (Icon) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "S");
      DBUtil.isBinaryType(tableColumnInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      assertEquals(0, sQLDriverPropertyCollection0.size());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
