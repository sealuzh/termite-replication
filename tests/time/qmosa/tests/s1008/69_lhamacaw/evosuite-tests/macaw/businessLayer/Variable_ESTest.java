/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:06:18 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "macaw.system.MacawErrorType";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("macaw.system.MacawErrorType", "macaw.system.MacawErrorType");
      user0.setEmail("macaw.system.MacawErrorType");
      user0.setAddressLine2("variable.isCleaned.saveChanges.changedToNotClean");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      supportingDocument0.setDescription("macaw.system.MacawErrorType");
      supportingDocument0.setIdentifier((-994));
      supportingDocument0.setDocumentCode("macaw.system.MacawErrorType");
      derivedVariable0.columnStart = "";
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user1 = new User("", "macaw.system.MacawErrorType");
      try { 
        User.validateFields(user1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("C}BHtr<){ZJhM=Bq{ui");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "T@P|/";
      rawVariable0.setOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", variableSummary0.getLabel());
      
      String string0 = rawVariable0.getAlias();
      assertEquals("", string0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean1 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(boolean1 == boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "variable.questionNumber.label";
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.getOntologyTerms();
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3628872608485545
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.059615150468091
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User((String) null, "7Yj\"");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User((String) null, "7Yj\"");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3691591637540217
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ontologyTerm1.setDescription("");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable2.addOntologyTerms(arrayList2);
      assertFalse(rawVariable2.isCleaned());
      assertFalse(rawVariable2.isCoded());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.07051354190398
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("[^b=");
      User user0 = new User("^C0AWW$k5B66?,u1u", "");
      user0.setAddressLine1("[^b=");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setFilePath("DELETE");
      derivedVariable0.setIdentifier((-1134));
      derivedVariable0.codeBookNumber = "ib89onpA@0]L('o<c;C";
      derivedVariable0.getValueLabels();
      User user1 = new User("variable.isCoded.label", "variable.isCoded.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      rawVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeValueLabel(valueLabel0);
      derivedVariable0.getFilePath();
      assertEquals("DELETE", derivedVariable0.getFilePath());
      
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.183112748422716
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setCoded(true);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add((SupportingDocument) null);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList1.containsAll(linkedList0);
      arrayList1.add((SupportingDocument) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setNotes("variable.saveChanges.valueChanged");
      User user0 = new User();
      user0.setAffiliation("variable.alias.label");
      user0.setAddressLine1("73}");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable1);
      rawVariable1.setForm("variable.saveChanges.valueChanged");
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.setAlias("73}");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable1.getValueLabels();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable0.setCodeBookNumber("SUPPORTING_DOCUMENT");
      derivedVariable1.getCodeBookNumber();
      derivedVariable1.addSourceVariables(arrayList0);
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getNotes());
      assertEquals("SUPPORTING_DOCUMENT", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8051063440149733
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("[^b=");
      User user0 = new User("^C0AWW$k5B66?,u1u", "");
      user0.setAddressLine1("[^b=");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setFilePath("DELETE");
      int int0 = (-1134);
      derivedVariable0.setIdentifier((-1134));
      derivedVariable0.codeBookNumber = "ib89onpA@0]L('o<c;C";
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.spliterator();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      int int1 = (-1879048189);
      // Undeclared exception!
      try { 
        arrayList1.add((-1879048189), valueLabel1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1879048189, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.retainAll(linkedList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      supportingDocument0.setTitle("user.postCode.label");
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList2);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      rawVariable1.getAlias();
      assertFalse(rawVariable1.isCleaned());
      
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      RawVariable rawVariable1 = new RawVariable();
      arrayList2.remove((Object) rawVariable1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.retainAll(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addSupportingDocuments(arrayList1);
      User user0 = new User("L3v}Q,T@Wl.", "Unknown");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setCleaned(false);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setAlias("Unknown");
      rawVariable4.createVariableSummary();
      rawVariable4.getAlias();
      assertEquals("Unknown", rawVariable4.getAlias());
      
      rawVariable3.containsSupportingDocument(supportingDocument0);
      rawVariable1.getOntologyTerms();
      derivedVariable0.removeSourceVariable(rawVariable3);
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.060062326038476
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User((String) null, "7Yj\"");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setAlias(")/nrm,t]j^]6G1ZhROc");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList2);
      rawVariable0.getDisplayName();
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertEquals(")/nrm,t]j^]6G1ZhROc", rawVariable0.getAlias());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8872385926133708
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.5823406802186453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      supportingDocument0.setTitle("user.postCode.label");
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.addValueLabel(valueLabel0);
      rawVariable0.cloneAttributes(rawVariable1);
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals(0, rawVariable2.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.252524158198647
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("Mh");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setIsNewRecord(true);
      User user0 = new User("ir]B2oD]Dx&@", "");
      user0.setCity("");
      user0.setAddressLine2("Unknown");
      user0.setAddressLine2(" 4]6{^");
      rawVariable0.createVariableSummary();
      user0.setCity("@Q::d>}x:@<xb");
      rawVariable0.setNotes("p^$Z9pj4vT5/S<Fl");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      rawVariable0.getSupportingDocuments();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable2.getSourceVariables();
      rawVariable0.isCoded();
      rawVariable0.getAlternativeVariable();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      derivedVariable1.containsSourceVariable(variable0);
      assertEquals("Mh", rawVariable0.getColumnEnd());
      
      derivedVariable2.getSupportingDocuments();
      derivedVariable2.addSourceVariable(derivedVariable1);
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4297811167972485
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      arrayList0.add((OntologyTerm) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getDisplayName();
      rawVariable2.getDisplayName();
      rawVariable0.getColumnEnd();
      rawVariable2.getOntologyTerms();
      RawVariable rawVariable3 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable3.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8049576008943427
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User("f+,\"@^Z$$R-L.*Sy", "g}.D3~\"Bv.Z*%P!To");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setCleaningDescription("f+,\"@^Z$$R-L.*Sy");
      derivedVariable0.questionNumber = "f+,\"@^Z$$R-L.*Sy";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getFilePath();
      assertEquals("f+,\"@^Z$$R-L.*Sy", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = true;
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.getDisplayName();
      supportingDocument0.setDescription("8)/Pqp");
      supportingDocument0.setFilePath("8)/Pqp");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setName("8)/Pqp");
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.049968136131682
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setQuestionNumber("+m@{F");
      rawVariable0.setQuestionNumber("Mh");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setMissingValue(true);
      rawVariable0.setAvailability("+m@{F");
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.isCoded();
      rawVariable0.getLabel();
      rawVariable0.setForm("+m@{F");
      rawVariable0.getCategory();
      rawVariable0.setFilePath("+m@{F");
      rawVariable0.setCleaned(false);
      User user0 = new User("52I(CyjKU\"6.", "user.phone.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("+m@{F", rawVariable0.getAvailability());
      assertEquals("Mh", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7772835572272934
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "user.addressLine2.saveChanges";
      User user0 = new User();
      rawVariable0.setColumnStart("gBTJCSM#8:SeAj ");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getName();
      Variable.validateFields(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0218012775525764
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("[^b=");
      User user0 = new User("^C0AWW$k5B66?,u1u", "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("DELETE");
      rawVariable0.getCleaningStatus();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      rawVariable0.setAvailability("^C0AWW$k5B66?,u1u");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.isCoded();
      rawVariable0.getLabel();
      rawVariable0.setForm("^C0AWW$k5B66?,u1u");
      rawVariable0.getCategory();
      rawVariable0.setFilePath("Unknown");
      rawVariable0.setCleaned(false);
      User user1 = new User("52I(CyjKU\"6.", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertEquals("^C0AWW$k5B66?,u1u", rawVariable0.getForm());
      assertEquals("[^b=", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.450507848988659
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.columnEnd.label");
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.removeAll(linkedList0);
      arrayList0.retainAll(linkedList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      supportingDocument0.setTitle("user.postCode.label");
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList2);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList3.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList3);
      ArrayList<OntologyTerm> arrayList4 = rawVariable1.getOntologyTerms();
      rawVariable1.addOntologyTerms(arrayList4);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.clone();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.setFilePath("");
      derivedVariable0.setCleaned(true);
      derivedVariable0.isCleaned();
      // Undeclared exception!
      try { 
        RawVariable.validateFields((RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.columnEnd.label");
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable2.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.967135007724005
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.getName();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.getQuestionNumber();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.addOntologyTerms(arrayList1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.209305317245487
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnEnd();
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.setNotes("general.fieldValue.unknown");
      User user0 = new User();
      user0.setEmail("general.fieldValue.unknown");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setStatus((String) null);
      derivedVariable1.addSourceVariable(derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.setColumnEnd("supportingDocument.description.saveChanges");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.stream();
      derivedVariable1.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("general.fieldValue.unknown");
      derivedVariable0.getFilePath();
      derivedVariable1.setCleaningStatus("AxCFO");
      derivedVariable1.getSourceVariables();
      derivedVariable1.setColumnStart((String) null);
      derivedVariable0.setCoded(true);
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setCleaningDescription((String) null);
      assertEquals("general.fieldValue.unknown", derivedVariable0.getColumnEnd());
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.970593458317693
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.setNotes("variable.saveChanges.valueChanged");
      derivedVariable0.setCoded(true);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add((SupportingDocument) null);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList1.containsAll(linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      arrayList1.add((SupportingDocument) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("variable.alias.label");
      arrayList1.add(supportingDocument1);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setNotes("variable.saveChanges.valueChanged");
      User user0 = new User();
      user0.setAffiliation("variable.alias.label");
      String string0 = "73}";
      user0.setAddressLine1("73}");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable1);
      rawVariable1.setForm("variable.saveChanges.valueChanged");
      derivedVariable0.removeSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCleaned();
      String string0 = "`LVl_C[*VC)";
      rawVariable0.setCleaningStatus("`LVl_C[*VC)");
      ArrayList<SupportingDocument> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm2);
      arrayList1.removeIf(predicate0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setCleaningStatus("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getNotes();
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.953573817191339
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("z.R9/ik#^G/TST");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ontologyTerm0.clone();
      ontologyTerm0.setNameSpace("1hj");
      ontologyTerm0.setDescription("general.fieldValue.blank");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnEnd();
      derivedVariable0.isCoded();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getForm();
      derivedVariable0.getDisplayName();
      derivedVariable0.getCategory();
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("F3XDa@9.x+:Y a#");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setQuestionNumber(")rqkZ:P8qL");
      rawVariable0.setColumnEnd("");
      derivedVariable0.clone();
      rawVariable0.getNotes();
      rawVariable0.getAlternativeVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      assertEquals(")rqkZ:P8qL", rawVariable0.getQuestionNumber());
      
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.723325084176482
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      rawVariable0.setQuestionNumber("+mT#{F");
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      arrayList3.remove((Object) arrayList0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("+mT#{F", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.8905648248197275
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2833);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable1.setColumnEnd("");
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      
      rawVariable1.setIsNewRecord(true);
      User user0 = new User("ir]B2oD]Dx&@", "ir]B2oD]Dx&@");
      rawVariable1.questionNumber = "";
      user0.setCity("valueLabel.value.saveChanges");
      user0.setAddressLine2("ir]B2oD]Dx&@");
      user0.setAddressLine2("ir]B2oD]Dx&@");
      rawVariable1.createVariableSummary();
      user0.setCity("ir]B2oD]Dx&@");
      rawVariable1.setNotes("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      rawVariable1.getSupportingDocuments();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      rawVariable0.isCoded();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.getAlternativeVariable();
      rawVariable2.cloneAttributes(variable0);
      derivedVariable0.containsSourceVariable(rawVariable2);
      rawVariable0.isCoded();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable1.setValueLabels(arrayList1);
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.addOntologyTerms(arrayList0);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.9592838806230652
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningDescription("general.error.promotesSecurityRisk");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User("3L", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.getName();
      derivedVariable0.getForm();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getAvailability();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.clone();
      assertEquals("general.error.promotesSecurityRisk", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.62622595065014
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "IoxUAAO&~U#";
      derivedVariable0.questionNumber = "IoxUAAO&~U#";
      derivedVariable0.createVariableSummary();
      derivedVariable0.addSourceVariable((Variable) null);
      derivedVariable0.setFilePath("IoxUAAO&~U#");
      int int0 = 4;
      derivedVariable0.setIdentifier(4);
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.columnStart = null;
      derivedVariable0.clone();
      derivedVariable0.setNotes((String) null);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        arrayList0.toArray((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.706324721045389
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("DUPLICATE_CLEANING_STATE");
      ontologyTerm0.setOntologyName("variable.columnEnd.label");
      ontologyTerm1.setIdentifier(3125);
      derivedVariable0.setNotes("variable.columnEnd.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      assertEquals("variable.columnEnd.label", derivedVariable0.getNotes());
      
      arrayList0.add(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.9740420290828737
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setQuestionNumber("+m@{F");
      rawVariable0.setQuestionNumber("Mh");
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      arrayList3.remove((Object) rawVariable1);
      arrayList0.retainAll(arrayList3);
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList4);
      valueLabel0.setLabel("nWZ`K");
      User user0 = new User("\f10t<4yFZK7B", "+m@{F");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.createVariableSummary();
      assertEquals("Mh", rawVariable0.getQuestionNumber());
      
      rawVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.removeValueLabel(valueLabel2);
      derivedVariable0.getFilePath();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.retainAll(linkedList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add((SupportingDocument) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      supportingDocument0.setTitle("user.postCode.label");
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      rawVariable0.createVariableSummary();
      rawVariable0.getAlias();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6852661909001596
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setUserID("variable.form.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("(");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.createVariableSummary();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("(", rawVariable0.getYear());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("*98Bl\"*{Ak?F", "bTzEDuQ8mUx/");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      rawVariable0.notes = ",u.|OiY";
      rawVariable0.setCleaned(false);
      rawVariable0.createVariableSummary();
      rawVariable0.getAlias();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("I,p2aesd*PP[q7o");
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("I,p2aesd*PP[q7o", rawVariable0.getLabel());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      
      derivedVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      ontologyTerm0.setNewRecord(true);
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      user0.clone();
      user0.setFirstName("^C0AWW$k5B66?,u1u");
      ontologyTerm0.setDescription("general.fieldValue.blank");
      User.detectFieldChanges(user0, user0, user0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      ontologyTerm0.setDescription("general.fieldValue.blank");
      ontologyTerm0.setOntologyName("general.fieldValue.blank");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getValueLabels();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.8852698214215886
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setQuestionNumber("+m@{F");
      rawVariable0.setQuestionNumber("Mh");
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.removeOntologyTerms(arrayList0);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals("Mh", rawVariable0.getQuestionNumber());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable3.updateOntologyTerm(ontologyTerm2);
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6319411188991
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      User user0 = new User((String) null, "7Yj\"");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.questionNumber = "}V5QJuo";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("}V5QJuo", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.6603009226249488
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.0672877847391904
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      User user0 = new User("==jCA%8?x", "7Yj\"");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setUserID("==jCA%8?x");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.910428127654087
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.questionNumber = "+~8+6ogw";
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getDisplayName();
      User user0 = new User("", "-LHA");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("+~8+6ogw", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getForm());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.8412563153591823
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setUserID("7Yj\"");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("yYQ+gp'vFdf'&");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("yYQ+gp'vFdf'&", rawVariable1.getCodeBookNumber());
      
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.6243585370180207
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      user1.setCounty("\"1VQ`oDtK_kV)(c");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      User.detectFieldChanges(user1, user0, user1);
      rawVariable0.createVariableSummary();
      rawVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.525950491234776
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      arrayList3.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList2.add(ontologyTerm2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList2);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList2);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("general.fieldValue.unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      ontologyTerm1.setDescription("Mh");
      ontologyTerm1.setIdentifier(0);
      rawVariable1.getDisplayName();
      rawVariable0.getColumnEnd();
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setYear("general.fieldValue.unknown");
      boolean boolean0 = rawVariable2.containsOntologyTerm(ontologyTerm1);
      assertEquals("general.fieldValue.unknown", rawVariable2.getYear());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5810346049146524
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.retainAll(linkedList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      supportingDocument0.setTitle("user.postCode.label");
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList2);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(false);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm3);
      arrayList2.removeIf(predicate0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList2);
      derivedVariable0.setCleaningStatus("UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      assertEquals("UNABLE_TO_GET_ALTERNATIVE_VARIABLE", derivedVariable0.getCleaningStatus());
      
      rawVariable0.getDisplayItemIdentifier();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.6715783101550863
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("");
      rawVariable0.clone();
      rawVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("Unknown");
      assertEquals("Unknown", derivedVariable1.getName());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addValueLabel((ValueLabel) null);
      rawVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.1155003155007623
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("variable.columnEnd.label");
      ontologyTerm1.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable1.getSourceVariables();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      assertEquals(2, arrayList0.size());
      
      rawVariable0.getDisplayName();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getForm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.9267295637409885
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm[] ontologyTermArray0 = new OntologyTerm[0];
      arrayList0.toArray(ontologyTermArray0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("variable.notes.label");
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setForm("variable.notes.label");
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setCoded(true);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList2);
      assertEquals("variable.notes.label", rawVariable0.getForm());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getDisplayName();
      rawVariable1.getDisplayName();
      rawVariable1.getColumnEnd();
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5782737395252497
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) rawVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      arrayList0.removeIf(predicate2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      rawVariable0.codeBookNumber = "nH#jEa}HF6Sr2Id~tz:";
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setCleaningStatus("nH#jEa}HF6Sr2Id~tz:");
      rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getColumnStart();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.798538993041908
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("");
      derivedVariable0.setColumnStart("");
      derivedVariable0.clone();
      derivedVariable0.getColumnStart();
      derivedVariable0.setCoded(true);
      derivedVariable0.setAlias("+G[/UQFc");
      derivedVariable0.setName("<WSG<|a4#rGD0l3");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.setCleaningStatus("");
      assertEquals("+G[/UQFc", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.7830118120033047
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      rawVariable0.setCodeBookNumber("E");
      rawVariable0.clone();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("E", rawVariable0.getCodeBookNumber());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.7531038520392848
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("C}BHtr<){ZJhM=Bq{ui");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "T@P|/";
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("T@P|/", "?,}k#r6!bP?*");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.createVariableSummary();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("T@P|/", rawVariable0.getForm());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.860510159629383
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("DUPLICATE_CLEANING_STATE");
      ontologyTerm0.setOntologyName("variable.columnEnd.label");
      ontologyTerm1.setIdentifier(3125);
      derivedVariable0.setNotes("variable.columnEnd.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList2);
      rawVariable0.getDisplayName();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.clone();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      assertEquals("variable.columnEnd.label", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("k4?UN29s");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("k4?UN29s", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.5341821845922365
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "U02k4'";
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("U02k4'", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("^C0AWW$k5B66?,u1u");
      rawVariable0.questionNumber = ",";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<OntologyTerm, Integer> function1 = unaryOperator1.compose((Function<? super OntologyTerm, ? extends Integer>) function0);
      unaryOperator0.andThen((Function<? super OntologyTerm, ?>) function1);
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.add((OntologyTerm) null);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setColumnStart("lha.mrc.ac.uk:LHA");
      rawVariable0.getCategory();
      rawVariable0.getAvailability();
      rawVariable0.isNewRecord();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.9122728103597133
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "[^b=";
      rawVariable0.setCodeBookNumber("q-B<T ");
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setNameSpace("+m@{F");
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getDisplayName();
      rawVariable0.getColumnEnd();
      rawVariable0.getOntologyTerms();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("q-B<T ", rawVariable0.getCodeBookNumber());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.4959144560641855
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.questionNumber = "+~8+6ogw";
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.form = "UNABLE_TO_CREATE_CONNECTION";
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      String string0 = rawVariable0.getDisplayName();
      assertEquals("", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.7868233692556106
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      User user0 = new User((String) null, "7Yj\"");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setUserID((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "`3";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("`3", rawVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.9721987111105235
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm[] ontologyTermArray0 = new OntologyTerm[0];
      arrayList0.toArray(ontologyTermArray0);
      derivedVariable0.columnStart = "(";
      derivedVariable0.setName("(");
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.spliterator();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayName();
      derivedVariable0.setForm("jLdvkB`GQh570Mp");
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertEquals("(", derivedVariable0.getName());
      
      boolean boolean0 = derivedVariable1.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.699935030233796
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.cloneAttributes(rawVariable2);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(2833);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      assertTrue(rawVariable0.isCleaned());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1113));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaned(false);
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.5786000152695845
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setIdentifier(0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList1);
      assertFalse(arrayList1.contains(ontologyTerm3));
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.062711125700289
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability((String) null);
      User user0 = new User();
      User user1 = new User();
      user1.setCounty("\"1VQ`oDtK_kV)(c");
      RawVariable rawVariable1 = new RawVariable();
      User.detectFieldChanges(user1, user0, user1);
      User user2 = new User("r3", "r3");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      rawVariable1.getName();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm[] ontologyTermArray0 = new OntologyTerm[8];
      ontologyTermArray0[0] = ontologyTerm0;
      ontologyTermArray0[1] = ontologyTerm0;
      ontologyTermArray0[2] = ontologyTerm0;
      ontologyTermArray0[3] = ontologyTerm0;
      ontologyTermArray0[4] = ontologyTerm0;
      ontologyTermArray0[5] = ontologyTerm0;
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTermArray0[6] = ontologyTerm1;
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTermArray0[7] = ontologyTerm2;
      arrayList1.toArray(ontologyTermArray0);
      derivedVariable0.setName("");
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.spliterator();
      derivedVariable0.addSourceVariables(arrayList2);
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      derivedVariable0.setForm("jLdvkB`GQh570Mp");
      derivedVariable1.getSourceVariables();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable2);
      assertEquals("jLdvkB`GQh570Mp", derivedVariable0.getForm());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.6655473636879665
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("C}BHtr<){ZJhM=Bq{ui");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "T@P|/";
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.removeOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerms(arrayList0);
      rawVariable1.setName("T@P|/");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getLabel();
      assertEquals("T@P|/", rawVariable1.getName());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.4619631381239797
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable1.removeOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      rawVariable0.getYear();
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.927501764513189
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("?");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm1);
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getDisplayName();
      rawVariable1.getDisplayName();
      rawVariable0.getColumnEnd();
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList4.contains(ontologyTerm1));
      
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      rawVariable1.getFilePath();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.4980758620581636
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setNameSpace("+m@{F");
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerms(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addOntologyTerms(arrayList1);
      assertFalse(arrayList1.contains(ontologyTerm0));
      
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.527062838287056
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.addOntologyTerms(arrayList2);
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList3);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setNameSpace("+m@{F");
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
}
