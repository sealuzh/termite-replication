/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:06:10 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.967045056611174
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.setXPath("#dl*vv!`v");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("#d", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.currentPosition();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("vv!`v", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("<");
      xPathLexer2.div();
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer1.mod();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("v", token5.getTokenText());
      
      int int0 = xPathLexer2.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7314100255237883
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.LA(416);
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierChar('\uFFFF');
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("8]]t\"ap?S0");
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.748239243515874
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.currentPosition();
      xPathLexer0.operatorName();
      char char0 = xPathLexer0.LA(54);
      assertEquals('\uFFFF', char0);
      
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.slashes();
      assertEquals("d", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("l", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("*", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9374887985144587
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.and();
      Token token0 = xPathLexer0.star();
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Lq9", token2.getTokenText());
      
      xPathLexer1.setXPath("!q)a:<N90M]p|ss7,T");
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("!q)a:<N90M]p|ss7,T");
      Token token4 = xPathLexer2.rightParen();
      assertEquals("!", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer3.setXPath("iJyLnY");
      XPathLexer xPathLexer4 = new XPathLexer("|.T");
      Token token5 = xPathLexer3.equals();
      assertEquals("i", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer4.div();
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.15405024272487
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      xPathLexer0.leftParen();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("puGw{");
      xPathLexer1.plus();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer1.literal();
      xPathLexer1.not();
      xPathLexer0.number();
      xPathLexer1.rightBracket();
      xPathLexer1.not();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("y$uM-!D6[)sQBCA");
      XPathLexer xPathLexer5 = new XPathLexer("puGw{");
      xPathLexer4.equals();
      xPathLexer5.nextToken();
      xPathLexer5.div();
      xPathLexer5.number();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.mod();
      xPathLexer0.rightParen();
      xPathLexer6.currentPosition();
      xPathLexer1.colon();
      Token token0 = xPathLexer5.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9279107973842193
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("");
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Pk", token0.getTokenText());
      
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer1.and();
      xPathLexer1.whitespace();
      xPathLexer1.or();
      xPathLexer0.whitespace();
      xPathLexer1.getXPath();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("F", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.comma();
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token4 = xPathLexer4.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer5.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      char char0 = xPathLexer1.LA(10);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9229446571626114
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W&l6X)LC(");
      Token token0 = xPathLexer0.not();
      assertEquals("W", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("W&l6X)LC(");
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("W", token1.getTokenText());
      
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("&l", token2.getTokenText());
      
      xPathLexer0.setXPath("W&l6X)LC(");
      Token token3 = xPathLexer1.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("6", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("W", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      assertEquals("&l6X)LC(", token5.getTokenText());
      
      xPathLexer1.mod();
      Token token6 = xPathLexer1.rightParen();
      assertEquals("X", token6.getTokenText());
      
      xPathLexer1.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.setXPath("W&l6X)LC(");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer2.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer1.mod();
      Token token8 = xPathLexer2.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer1.currentPosition();
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3687490772900879
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W&l6X)LC(");
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("W&l6X)LC(");
      Token token0 = xPathLexer1.comma();
      assertEquals("W", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer1.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("&l", token1.getTokenText());
      
      xPathLexer0.setXPath("W&l6X)LC(");
      xPathLexer1.leftParen();
      xPathLexer0.star();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("&l6X)LC(", token2.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer1.rightParen();
      xPathLexer1.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.setXPath("W&l6X)LC(");
      Token token3 = xPathLexer0.colon();
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("&", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("W&l6X)LC(");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer2.star();
      assertEquals("W", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer1.mod();
      Token token9 = xPathLexer1.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("L", token9.getTokenText());
      
      xPathLexer2.currentPosition();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7645246424994243
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.and();
      Token token0 = xPathLexer0.star();
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("!q)a:<N90M]p|ss7,T");
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer1.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("q9", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.mod();
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
      
      xPathLexer2.currentPosition();
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("q)", token7.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.5130058618894076
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.and();
      Token token0 = xPathLexer0.star();
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      assertEquals("Pk%FS7F_H", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("!q)a:<N90M]p|ss7,T");
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.rightBracket();
      assertEquals("!", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      Token token5 = xPathLexer2.leftParen();
      assertEquals("x", token5.getTokenText());
      
      xPathLexer2.colon();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("P", token7.getTokenText());
      
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("k", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.mod();
      Token token9 = xPathLexer2.rightParen();
      assertEquals("%", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(14, int0);
      
      Token token10 = xPathLexer2.not();
      assertEquals("F", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0029452905140377
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.comma();
      Token token2 = xPathLexer0.rightParen();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("we", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      String string0 = token2.toString();
      assertEquals("[ (2) (m)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (32) (o)", string1);
      
      xPathLexer0.isIdentifierChar('K');
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("e", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("saxpath.Token", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7763072553432975
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer2.setXPath("");
      Token token3 = xPathLexer1.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer2.mod();
      xPathLexer0.mod();
      Token token5 = xPathLexer0.rightParen();
      assertEquals("o", token5.getTokenText());
      
      xPathLexer2.currentPosition();
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.setXPath("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer("K");
      Token token6 = xPathLexer2.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer3.div();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.number();
      Token token8 = xPathLexer0.minus();
      assertEquals("m", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      boolean boolean0 = xPathLexer4.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.936387411680183
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("'K yUnn/8V4;}F");
      XPathLexer xPathLexer3 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer3.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer3.dollar();
      xPathLexer3.relationalOperator();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.notEquals();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer4.hasMoreChars();
      xPathLexer2.leftParen();
      xPathLexer5.operatorName();
      xPathLexer2.dollar();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.rightParen();
      xPathLexer5.identifierOrOperatorName();
      xPathLexer6.mod();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6884004471281129
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.or();
      Token token0 = xPathLexer0.star();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("n", token1.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.isIdentifierChar('|');
      xPathLexer0.setPreviousToken(token0);
      assertEquals(20, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
      
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("3F )HuSsbJ;g{");
      Token token2 = xPathLexer2.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("V", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      int int0 = xPathLexer2.endPosition();
      assertEquals(13, int0);
      
      Token token4 = xPathLexer2.plus();
      assertEquals("F", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("4", token7.getTokenText());
      
      xPathLexer1.mod();
      Token token8 = xPathLexer2.rightParen();
      assertEquals(" ", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      int int1 = xPathLexer0.currentPosition();
      assertEquals(11, int1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9823394756885526
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      Token token0 = xPathLexer0.not();
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.at();
      assertEquals(" ", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.star();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("n", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("8V4", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals(";", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals("}", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals("F", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token11 = xPathLexer2.star();
      assertEquals(20, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      Token token13 = xPathLexer3.rightParen();
      assertEquals(2, token13.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer4.currentPosition();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token14 = xPathLexer5.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.299402340696452
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("IoxUAAO&~U#");
      Token token0 = xPathLexer1.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals("oxUAAO", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("&", token3.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer1.comma();
      assertEquals("~", token5.getTokenText());
      
      xPathLexer0.comma();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer1.leftParen();
      Token token9 = xPathLexer1.colon();
      assertEquals("#", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer2.dots();
      assertEquals(13, token11.getTokenType());
      
      xPathLexer2.and();
      xPathLexer1.whitespace();
      xPathLexer2.or();
      Token token12 = xPathLexer1.whitespace();
      assertEquals((-2), token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.getXPath();
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer1.comma();
      assertEquals(32, token14.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token15 = xPathLexer4.number();
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8303205463585113
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.getXPath();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.hasMoreChars();
      xPathLexer0.leftParen();
      xPathLexer1.operatorName();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.rightParen();
      xPathLexer0.not();
      xPathLexer2.getPreviousToken();
      xPathLexer0.consume(27);
      xPathLexer1.setXPath("com.werken.saxpath.Token");
      xPathLexer2.leftParen();
      Token token1 = xPathLexer2.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.069130404605748
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("V<c");
      Token token0 = xPathLexer1.comma();
      assertEquals("V", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer1.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("<c", token1.getTokenText());
      
      xPathLexer0.setXPath("V<c");
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.star();
      assertEquals("<", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("c", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.mod();
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer1.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.setXPath("V<c");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("V<c", token8.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8235284003164256
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.setXPath("#dl*vv!`v");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("#d", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("*", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("v", token3.getTokenText());
      
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('`');
      assertFalse(boolean0);
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("v", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("#dl*vv!`v");
      Token token5 = xPathLexer2.nextToken();
      assertEquals("#dl*vv!`v", token5.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.210765277778168
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.number();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer1.not();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.relationalOperator();
      xPathLexer1.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer2.star();
      // Undeclared exception!
      try { 
        xPathLexer2.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1134761339920076
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("V<c");
      xPathLexer1.plus();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.dots();
      xPathLexer2.comma();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("V<c");
      xPathLexer3.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.rightBracket();
      xPathLexer1.leftParen();
      xPathLexer3.colon();
      xPathLexer2.star();
      xPathLexer3.nextToken();
      xPathLexer3.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.number();
      Token token1 = xPathLexer4.minus();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9504920469229101
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      xPathLexer0.star();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.star();
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("m.werken.saxpath.Token", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("puGw{");
      xPathLexer1.mod();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer1.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.356137826603565
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Af#.CdO~");
      Token token0 = xPathLexer0.dots();
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("A", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer1.getXPath();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer1.currentPosition();
      xPathLexer1.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer1.or();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("2Af#.CdO~");
      XPathLexer xPathLexer3 = new XPathLexer("2Af#.CdO~");
      xPathLexer3.getXPath();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer3.number();
      assertEquals("2", token13.getTokenText());
      assertEquals(30, token13.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8969147365351025
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.plus();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Pk", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (2) (x)", string0);
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('K');
      assertTrue(boolean0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("S", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("F", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.944644844233824
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("IoxUAAO&~U#");
      Token token1 = xPathLexer1.rightParen();
      assertEquals("I", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("oxUAAO", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer1.dollar();
      assertEquals("&", token3.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals("~", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("U#", token6.getTokenText());
      
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertNotNull(token7);
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer1.leftParen();
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer1.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer1.getPreviousToken();
      xPathLexer0.consume(0);
      xPathLexer1.setXPath("a\"Xvn|B4%{ssKRq%4Ry");
      Token token11 = xPathLexer0.leftParen();
      assertEquals(1, token11.getTokenType());
      
      xPathLexer1.operatorName();
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3530377967915954
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1828375641103013
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`#`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.920393780636455
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.comma();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.getXPath();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(28, int0);
      
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer0.and();
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals("c", token11.getTokenText());
      
      xPathLexer0.or();
      Token token12 = xPathLexer0.whitespace();
      assertEquals((-2), token12.getTokenType());
      assertEquals("", token12.getTokenText());
      
      xPathLexer0.getXPath();
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer0.number();
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8322348595068183
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.getXPath();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer0.colon();
      xPathLexer1.leftParen();
      xPathLexer1.dots();
      xPathLexer0.and();
      xPathLexer1.whitespace();
      xPathLexer0.or();
      xPathLexer0.whitespace();
      xPathLexer0.getXPath();
      xPathLexer0.leftBracket();
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.0226282337038852
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1632));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6781745736835103
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Af#.CdO~");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("Af", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(14, token4.getTokenType());
      assertEquals("#.", token4.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.138996139747585
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("IoxUAAO&~U#");
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.consume((-1554));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.2834402932990505
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-623));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8842802123171847
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-3176));
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8818665405241588
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer0.not();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("K", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(" ", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.star();
      assertEquals("/", token3.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("4", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals("}", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("F", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer0.mod();
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals("'", token9.getTokenText());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer1.endPosition();
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.916877694934471
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#dl*vv!`v");
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNotNull(token2);
      assertEquals("!`", token2.getTokenText());
      assertEquals(27, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer2.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("co", token3.getTokenText());
      
      Token token4 = xPathLexer2.dots();
      assertEquals(14, token4.getTokenType());
      assertEquals("m.", token4.getTokenText());
      
      Token token5 = xPathLexer2.identifierOrOperatorName();
      assertEquals("werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer2.and();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9189492187103885
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.getXPath();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.and();
      assertNull(token1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.524085083425504
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.literal();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.and();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.6286484080931345
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1632));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.145365771107904
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.plus();
      assertEquals("o", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.or();
      Token token2 = xPathLexer0.dots();
      assertEquals("m.", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      xPathLexer0.comma();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("r", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      assertEquals("ken.saxpath.XPathLexer", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer1.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.4303848520306084
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer1.comma();
      xPathLexer1.comma();
      xPathLexer1.not();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer1.colon();
      xPathLexer0.leftParen();
      xPathLexer1.dots();
      xPathLexer1.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.whitespace();
      xPathLexer1.or();
      xPathLexer2.whitespace();
      xPathLexer1.getXPath();
      xPathLexer1.leftBracket();
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer1.whitespace();
      xPathLexer1.number();
      xPathLexer4.minus();
      xPathLexer2.identifier();
      boolean boolean0 = xPathLexer1.isIdentifierChar('?');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9632004210785925
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Af#.CdO~");
      xPathLexer0.dots();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("2Af#.CdO~");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.comma();
      xPathLexer1.doubleColon();
      xPathLexer0.setXPath("");
      xPathLexer0.identifier();
      xPathLexer1.relationalOperator();
      xPathLexer2.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer("Bf7FN^ x&");
      xPathLexer5.currentPosition();
      xPathLexer4.mod();
      xPathLexer5.setXPath("Bf7FN^ x&");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer2.equals();
      xPathLexer5.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer7 = new XPathLexer("2Af#.CdO~");
      xPathLexer7.number();
      xPathLexer0.minus();
      xPathLexer0.hasMoreChars();
      Token token0 = xPathLexer1.leftParen();
      assertEquals(1, token0.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4047904842556407
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.setXPath("<I:;ib8");
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-2964));
      xPathLexer0.plus();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.6314000276474214
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.not();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.currentPosition();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.consume(276);
      xPathLexer0.setXPath("a\"Xvn|B4%{ssKRq%4Ry");
      Token token10 = xPathLexer0.leftParen();
      assertEquals("a", token10.getTokenText());
      assertEquals(1, token10.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer0.star();
      assertEquals("\"", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.895898729899856
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      xPathLexer0.star();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("puGw{");
      Token token2 = xPathLexer1.star();
      assertEquals("p", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("uGw", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer2.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer2.currentPosition();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0750439236135936
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("p", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("u", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("puGw{");
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.star();
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      xPathLexer1.not();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer1.rightBracket();
      Token token5 = xPathLexer0.not();
      assertEquals("w", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("y$uM-!D6[)sQBCA");
      Token token7 = xPathLexer4.colon();
      assertEquals("y", token7.getTokenText());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer("y$uM-!D6[)sQBCA");
      Token token8 = xPathLexer5.dots();
      assertEquals("y", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer4.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("$", token10.getTokenText());
      
      Token token11 = xPathLexer4.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("uM-", token11.getTokenText());
      
      xPathLexer1.mod();
      Token token12 = xPathLexer1.rightParen();
      assertEquals(2, token12.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.1207923009684713
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.8961769277205742
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(31, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2780430681101365
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.isIdentifierChar('K');
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer1.slashes();
      Token token1 = xPathLexer2.and();
      assertNull(token1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('\'');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0409823165078893
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("IoxUAAO&~U#");
      Token token0 = xPathLexer1.rightParen();
      assertEquals("I", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer1.dollar();
      assertEquals("&", token1.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals("~", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("U#", token4.getTokenText());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer1.hasMoreChars();
      xPathLexer1.leftParen();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer1.getPreviousToken();
      xPathLexer0.consume(0);
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.2317518951417634
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      char char0 = xPathLexer0.LA(2682);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('F');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.834192353208151
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7132951101219205
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer0.literal();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.377867146218723
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      xPathLexer0.not();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.at();
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.star();
      assertEquals("U", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("n", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.not();
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.not();
      assertEquals("8", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals("V4", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      assertNotNull(token6);
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(";", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals("}", token8.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      
      xPathLexer1.mod();
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      xPathLexer0.currentPosition();
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer0.not();
      assertEquals(23, token14.getTokenType());
      
      Token token15 = xPathLexer0.leftParen();
      assertEquals(1, token15.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9576776949353554
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.setXPath("");
      xPathLexer0.slashes();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.setXPath("_H`Hir\"L@6cL@Tm?SqO");
      xPathLexer0.setXPath("");
      xPathLexer0.setXPath("");
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
      
      char char0 = xPathLexer0.LA(3);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2608315430402937
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Af#.CdO~");
      xPathLexer0.dots();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = new XPathLexer(";KV3w^");
      xPathLexer2.mod();
      xPathLexer1.colon();
      xPathLexer2.identifier();
      xPathLexer1.dots();
      xPathLexer1.dollar();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8834862262258327
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals(".0eqlF", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.4656929730444808
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^C0AWW$k5B66?,u1u");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.rightParen();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.40332752094816
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x}Pk%FS7F_H}Lq9");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("Pk", token2.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (2) (x)", string0);
      
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("F", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      assertEquals("S7F_H", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("}", token5.getTokenText());
      
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("q", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals("9", token7.getTokenText());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer1.number();
      assertEquals(30, token13.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.70219378279006
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2Af#.CdO~");
      xPathLexer0.dots();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer1.getXPath();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      xPathLexer1.plus();
      xPathLexer1.currentPosition();
      xPathLexer1.or();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.comma();
      xPathLexer1.not();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer1.colon();
      xPathLexer1.notEquals();
      xPathLexer1.dots();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      char char0 = xPathLexer0.LA(8);
      assertEquals('k', char0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.3313185417918687
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V<c");
      Token token0 = xPathLexer0.at();
      assertEquals("V", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.97547268752385
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.not();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.285812512586972
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("puGw{");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("p", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("u", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("puGw{");
      Token token2 = xPathLexer1.plus();
      assertEquals("p", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      xPathLexer1.not();
      xPathLexer0.number();
      xPathLexer1.rightBracket();
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("y$uM-!D6[)sQBCA");
      Token token8 = xPathLexer4.colon();
      assertEquals("y", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer("y$uM-!D6[)sQBCA");
      Token token9 = xPathLexer5.dots();
      assertEquals("y", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("aTBOcI)w06w");
      Token token10 = xPathLexer2.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer2.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer6.minus();
      assertEquals("a", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.3904408664500014
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'K yUnn/8V4;}F");
      Token token0 = xPathLexer0.not();
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("y", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.not();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals(";", token8.getTokenText());
      
      Token token9 = xPathLexer0.leftParen();
      assertEquals("}", token9.getTokenText());
      
      Token token10 = xPathLexer0.colon();
      assertEquals("F", token10.getTokenText());
      
      xPathLexer0.leftParen();
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      
      xPathLexer0.and();
      Token token14 = xPathLexer1.equals();
      assertEquals(21, token14.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.8602912106037675
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{.0eqlF");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.colon();
      assertEquals("{", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(".0", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.440755903172946
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.not();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.leftParen();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token11);
      assertEquals(15, token11.getTokenType());
      
      xPathLexer0.mod();
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer0.minus();
      assertEquals(6, token14.getTokenType());
  }
}
