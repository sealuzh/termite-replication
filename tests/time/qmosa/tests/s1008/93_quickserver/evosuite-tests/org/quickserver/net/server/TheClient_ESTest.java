/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:14:30 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketAddress;
import java.nio.channels.SocketChannel;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.qsadmin.CommandHandler;
import org.quickserver.net.qsadmin.Data;
import org.quickserver.net.server.Authenticator;
import org.quickserver.net.server.ClientAuthenticationHandler;
import org.quickserver.net.server.ClientBinaryHandler;
import org.quickserver.net.server.ClientCommandHandler;
import org.quickserver.net.server.ClientData;
import org.quickserver.net.server.ClientEvent;
import org.quickserver.net.server.ClientEventHandler;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.ClientWriteHandler;
import org.quickserver.net.server.QuickServer;
import org.quickserver.net.server.TheClient;
import org.quickserver.net.server.impl.NonBlockingClientHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)0;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "j\"Yk$BCYm$eskE");
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte) (-2);
      byteArray0[6] = (byte)32;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[7] = (byte)125;
      byteArray0[8] = (byte)113;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      theClient0.getSocketChannel();
      theClient0.setMaxAuthTryMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.toString();
      theClient0.setMaxAuthTryMsg("");
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getClientExtendedEventHandler();
      theClient0.getSocketChannel();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getMaxAuthTryMsg();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuickServer quickServer0 = new QuickServer("3eWn+57z");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)5;
      TheClient theClient0 = new TheClient();
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.getClientEvent();
      TheClient theClient1 = new TheClient();
      NonBlockingClientHandler nonBlockingClientHandler0 = new NonBlockingClientHandler(0);
      nonBlockingClientHandler0.getSocketChannel();
      assertEquals("<ClientHandler-Pool#0-ID:1>", nonBlockingClientHandler0.getName());
      
      theClient1.getClientObjectHandler();
      theClient1.getClientBinaryHandler();
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.26381679241522
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      theClient0.setTimeoutMsg("]mDZdf");
      theClient0.toString();
      theClient0.setTimeoutMsg("]mDZdf");
      theClient0.setMaxAuthTry((-2426));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      theClient0.getClientEvent();
      theClient0.setMaxConnectionMsg("]mDZdf");
      theClient0.getClientEvent();
      theClient0.getAuthenticator();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientEventHandler();
      theClient0.toString();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient0.getClientEvent();
      theClient0.toString();
      theClient0.getMaxAuthTryMsg();
      theClient0.getSocketChannel();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.getSocket();
      theClient0.getClientObjectHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getAuthenticator();
      theClient0.getClientBinaryHandler();
      theClient0.getSocket();
      theClient0.toString();
      assertEquals((-2426), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("");
      theClient0.setTrusted(true);
      theClient0.getClientEvent();
      TheClient theClient1 = new TheClient();
      theClient1.getClientExtendedEventHandler();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getMaxConnectionMsg();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      theClient1.setMaxConnectionMsg("org.quickserver.net.server.TheClient");
      theClient1.setTrusted(false);
      theClient0.toString();
      assertTrue(theClient0.getTrusted());
      
      theClient1.getClientWriteHandler();
      theClient1.getClientEventHandler();
      assertFalse(theClient1.getTrusted());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuickServer quickServer0 = new QuickServer("3eWn+57z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)5;
      quickServer0.getQSAdminServerAuthenticator();
      byteArray0[3] = (byte)68;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TheClient theClient0 = new TheClient();
      theClient0.setServer(quickServer0);
      theClient0.getServer();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      ClientEvent clientEvent0 = ClientEvent.ACCEPT;
      theClient0.setClientEvent(clientEvent0);
      theClient0.setMaxAuthTry((-716));
      theClient0.toString();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getMaxConnectionMsg();
      theClient0.getMaxAuthTry();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      theClient0.getServer();
      theClient0.getClientObjectHandler();
      theClient0.getClientWriteHandler();
      theClient0.getClientBinaryHandler();
      assertEquals((-716), theClient0.getMaxAuthTry());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      boolean boolean0 = theClient0.getTrusted();
      assertFalse(boolean0);
      
      MockSocket mockSocket0 = new MockSocket();
      theClient0.setSocket(mockSocket0);
      theClient0.getClientEventHandler();
      theClient0.setTimeoutMsg("jgAf<j/>H-Oi");
      theClient0.toString();
      theClient0.getClientObjectHandler();
      TheClient theClient1 = new TheClient();
      theClient0.getClientObjectHandler();
      theClient1.setClientObjectHandler((ClientObjectHandler) null);
      theClient1.getSocketChannel();
      TheClient theClient2 = new TheClient();
      theClient0.getClientExtendedEventHandler();
      theClient1.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      ClientEvent clientEvent0 = ClientEvent.WRITE;
      TheClient theClient3 = new TheClient();
      ClientEvent clientEvent1 = ClientEvent.ACCEPT;
      theClient2.setClientEvent(clientEvent0);
      theClient3.getClientEvent();
      theClient1.setTrusted(true);
      assertTrue(theClient1.getTrusted());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeout((-1));
      Data data0 = new Data();
      byte[] byteArray0 = new byte[0];
      data0.setPassword(byteArray0);
      theClient0.getTimeout();
      theClient0.setClientData(data0);
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientAuthenticationHandler();
      ClientEvent clientEvent0 = ClientEvent.READ;
      theClient0.setClientEvent(clientEvent0);
      assertEquals((-1), theClient0.getTimeout());
      
      TheClient theClient1 = new TheClient();
      theClient1.getClientEvent();
      theClient1.setTrusted(false);
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientBinaryHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      int int0 = theClient0.getTimeout();
      assertEquals(0, int0);
      
      theClient0.getClientCommandHandler();
      assertTrue(theClient0.getCommunicationLogging());
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuickServer quickServer0 = new QuickServer("3eWn+57z");
      quickServer0.setClientExtendedEventHandler("eoF");
      quickServer0.suspendService();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TheClient theClient0 = new TheClient();
      assertTrue(theClient0.getCommunicationLogging());
      
      theClient0.setCommunicationLogging(false);
      theClient0.getClientEventHandler();
      theClient0.setClientEventHandler((ClientEventHandler) null);
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getCommunicationLogging();
      theClient0.getClientBinaryHandler();
      assertFalse(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.toString();
      theClient0.getClientAuthenticationHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      TheClient theClient1 = new TheClient();
      theClient1.toString();
      theClient1.getClientEventHandler();
      TheClient theClient2 = new TheClient();
      theClient2.setClientEventHandler((ClientEventHandler) null);
      theClient2.getClientAuthenticationHandler();
      theClient2.setMaxAuthTry(1);
      theClient1.setMaxConnectionMsg("{TheClient no socket, Event: (ClientEvent-Run Blocking)}");
      theClient1.getMaxConnectionMsg();
      theClient2.getClientEvent();
      assertEquals(1, theClient2.getMaxAuthTry());
      
      theClient1.getClientWriteHandler();
      assertTrue(theClient1.getCommunicationLogging());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.2590752087262675
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientData();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getMaxAuthTryMsg();
      theClient0.setMaxAuthTry(4674);
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getTrusted();
      theClient0.getClientEventHandler();
      theClient0.setTimeoutMsg((String) null);
      theClient0.toString();
      theClient0.getTimeoutMsg();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.getTimeout();
      theClient0.getClientAuthenticationHandler();
      theClient0.toString();
      int int0 = theClient0.getMaxAuthTry();
      assertEquals(4674, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.435964402895254
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.toString();
      theClient0.setTimeoutMsg("ekf775'-_fixHJ");
      theClient0.getTimeout();
      theClient0.getClientBinaryHandler();
      theClient0.setClientEvent((ClientEvent) null);
      theClient0.getClientObjectHandler();
      theClient0.setTrusted(false);
      theClient0.setTimeout(2206);
      theClient0.getMaxConnectionMsg();
      theClient0.getSocket();
      theClient0.getTimeout();
      theClient0.getClientWriteHandler();
      theClient0.toString();
      theClient0.getMaxAuthTry();
      theClient0.getClientWriteHandler();
      theClient0.getMaxAuthTry();
      theClient0.toString();
      theClient0.getMaxAuthTry();
      theClient0.getSocket();
      theClient0.getClientWriteHandler();
      theClient0.getClientEventHandler();
      theClient0.getAuthenticator();
      theClient0.getClientExtendedEventHandler();
      theClient0.getMaxAuthTryMsg();
      assertEquals(2206, theClient0.getTimeout());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientAuthenticationHandler();
      CommandHandler commandHandler0 = new CommandHandler();
      theClient0.setClientEventHandler(commandHandler0);
      theClient0.getSocket();
      assertFalse(theClient0.getTrusted());
      
      theClient0.setTrusted(true);
      theClient0.setTrusted(true);
      assertTrue(theClient0.getTrusted());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      Data data0 = new Data();
      theClient0.setClientData(data0);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.setMaxConnectionMsg("t0F");
      theClient0.setTimeoutMsg("t0F");
      Data data1 = (Data)theClient0.getClientData();
      CommandHandler commandHandler0 = new CommandHandler();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) theClient0;
      objectArray0[1] = (Object) data0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t0F");
      Object object0 = new Object();
      objectArray0[4] = object0;
      data1.setLastAsked("No Client Connected : ");
      Object object1 = new Object();
      objectArray0[6] = object1;
      theClient0.getClientBinaryHandler();
      theClient0.setClientCommandHandler(commandHandler0);
      theClient0.setMaxConnectionMsg("t0F");
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.6695792540767598
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientEventHandler();
      QuickServer quickServer0 = new QuickServer("3eWn+57z");
      quickServer0.suspendService();
      theClient0.setServer(quickServer0);
      theClient0.setClientEventHandler((ClientEventHandler) null);
      theClient0.getClientObjectHandler();
      theClient0.getSocketChannel();
      theClient0.setTimeoutMsg("`x7It2&A$)WcK");
      theClient0.getSocketChannel();
      theClient0.getClientCommandHandler();
      theClient0.setClientCommandHandler((ClientCommandHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      ClientEvent clientEvent0 = theClient0.getClientEvent();
      theClient0.setClientEvent(clientEvent0);
      theClient0.getClientData();
      theClient0.setClientData((ClientData) null);
      theClient0.setClientEvent(clientEvent0);
      theClient0.getMaxAuthTry();
      theClient0.getClientObjectHandler();
      theClient0.getAuthenticator();
      theClient0.getClientAuthenticationHandler();
      theClient0.setTimeout(125);
      theClient0.getSocket();
      theClient0.getTimeoutMsg();
      theClient0.getClientWriteHandler();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientEvent();
      theClient0.setSocketChannel((SocketChannel) null);
      assertEquals(125, theClient0.getTimeout());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      theClient0.setSocketChannel((SocketChannel) null);
      QuickServer quickServer0 = new QuickServer(", Event: ");
      assertFalse(quickServer0.isRawCommunicationLogging());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("Jl");
      theClient0.setTimeout((-861));
      theClient0.setMaxAuthTryMsg("Jl");
      theClient0.getSocket();
      Data data0 = new Data();
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.getClientWriteHandler();
      theClient0.getMaxAuthTryMsg();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getAuthenticator();
      theClient0.getMaxAuthTry();
      theClient0.setClientWriteHandler((ClientWriteHandler) null);
      theClient0.setMaxAuthTry(2476);
      theClient0.getClientExtendedEventHandler();
      theClient0.getMaxAuthTryMsg();
      assertEquals((-861), theClient0.getTimeout());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      Data data0 = new Data();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      TheClient theClient1 = new TheClient();
      theClient1.getClientExtendedEventHandler();
      theClient1.setClientWriteHandler((ClientWriteHandler) null);
      ClientEvent clientEvent0 = ClientEvent.MAX_CON;
      theClient0.getClientEventHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setTimeoutMsg("");
      theClient0.getClientData();
      TheClient theClient1 = new TheClient();
      theClient0.getMaxAuthTryMsg();
      boolean boolean0 = theClient0.getTrusted();
      assertFalse(boolean0);
      
      theClient1.getClientEventHandler();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient1.setClientAuthenticationHandler(authenticator0);
      theClient1.setTimeoutMsg((String) null);
      theClient0.getClientEventHandler();
      theClient1.setTimeoutMsg((String) null);
      String string0 = theClient0.toString();
      assertEquals("{TheClient no socket, Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getTimeoutMsg();
      theClient0.getAuthenticator();
      theClient0.setAuthenticator((Authenticator) null);
      TheClient theClient2 = new TheClient();
      int int0 = theClient2.getTimeout();
      assertEquals(0, int0);
      
      theClient2.getClientBinaryHandler();
      assertTrue(theClient2.getCommunicationLogging());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          TheClient theClient0 = new TheClient();
          theClient0.getClientBinaryHandler();
          theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
          theClient0.setTrusted(true);
          theClient0.getTrusted();
          ClientEvent clientEvent0 = ClientEvent.MAX_CON;
          theClient0.setClientEvent(clientEvent0);
          theClient0.getClientBinaryHandler();
          theClient0.getAuthenticator();
          theClient0.setAuthenticator((Authenticator) null);
          theClient0.getClientBinaryHandler();
          InetAddress inetAddress0 = MockInetAddress.getByName("/secure-store/algorithm");
          MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(inetAddress0, 0);
          // Undeclared exception!
          try { 
            SocketChannel.open((SocketAddress) mockInetSocketAddress0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:0\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:625)
             // java.nio.channels.SocketChannel.open(SocketChannel.java:189)
             // sun.reflect.GeneratedMethodAccessor80.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      boolean boolean0 = theClient0.getCommunicationLogging();
      assertFalse(theClient0.getTrusted());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      Data data0 = new Data();
      theClient0.getClientAuthenticationHandler();
      theClient0.setClientAuthenticationHandler((ClientAuthenticationHandler) null);
      TheClient theClient1 = new TheClient();
      theClient1.setCommunicationLogging(true);
      theClient1.getClientExtendedEventHandler();
      assertTrue(theClient1.getCommunicationLogging());
      
      ClientEvent clientEvent0 = ClientEvent.MAX_CON;
      theClient0.getAuthenticator();
      assertFalse(theClient0.getTrusted());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setSocket((Socket) null);
      theClient0.getClientData();
      TheClient theClient1 = new TheClient();
      theClient1.getClientBinaryHandler();
      theClient0.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient1.setClientBinaryHandler((ClientBinaryHandler) null);
      theClient0.getTrusted();
      theClient1.getClientEventHandler();
      TheClient theClient2 = new TheClient();
      theClient1.getClientExtendedEventHandler();
      theClient2.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      ClientEvent clientEvent0 = ClientEvent.READ;
      TheClient theClient3 = new TheClient();
      ClientEvent clientEvent1 = ClientEvent.ACCEPT;
      theClient0.setClientEvent(clientEvent0);
      theClient2.getClientEvent();
      theClient0.setTrusted(false);
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3196998305427026
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QuickServer quickServer0 = new QuickServer("3eWn+57z");
      quickServer0.run();
      quickServer0.suspendService();
      TheClient theClient0 = new TheClient();
      theClient0.getClientBinaryHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }
}
