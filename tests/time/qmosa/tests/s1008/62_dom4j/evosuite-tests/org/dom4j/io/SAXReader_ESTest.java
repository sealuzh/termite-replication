/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 19:39:13 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.Node;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.rule.Pattern;
import org.dom4j.tree.NamespaceStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.ErrorHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.41845750766649
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      qName0.getDocumentFactory();
      Namespace namespace0 = new Namespace("", "QCJ^V'#T6ZEndAL62");
      Namespace namespace1 = Namespace.XML_NAMESPACE;
      Namespace.get("", "");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TW_?[rIVm&Tp");
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setEncoding("");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      try { 
        sAXReader0.read((InputStream) null, "3?h");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/3 (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/3 (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createQName("");
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getDefaultNamespace();
      QName.get("", (Namespace) null);
      defaultDocumentFactory0.createElement("Z[", "GesBA");
      defaultDocumentFactory0.createPattern("GesBA");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      defaultDocumentFactory0.createQName("WSS *`/Jg[*&$\"f%");
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.removeHandler("GesBA");
      sAXReader0.getErrorHandler();
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, fileSystemHandling0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      parserAdapter0.processingInstruction("vduWo:x", "vduWo:x");
      char[] charArray0 = new char[0];
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 10, 479);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      qName0.getDocumentFactory();
      Namespace namespace0 = new Namespace("", "");
      namespace0.detach();
      Namespace.get("", "");
      QName.get("", "", "");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("{Q$");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("Validation not supported for XMLReader: ", "");
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("http://xml.org/sax/properties/lexical-handler");
      InputSource inputSource1 = sAXReader_SAXEntityResolver1.resolveEntity("JVn#E@^Z>,v!n$", ":q");
      assertNotSame(inputSource1, inputSource0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      Namespace namespace0 = new Namespace("", "");
      namespace0.detach();
      Namespace.get("", "");
      QName.get("", "", "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      sAXReader0.isIncludeExternalDTDDeclarations();
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.5043085823072535
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#V~|(A");
      sAXReader0.setEncoding("#V~|(A");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.getDispatchHandler();
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.resetHandlers();
      StringReader stringReader0 = new StringReader("");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      defaultDocumentFactory0.createElement("g<d]aggHPO2I`", "GesBA");
      Pattern pattern0 = defaultDocumentFactory0.createPattern("GesBA");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      defaultDocumentFactory0.createQName("");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.removeHandler("g<d]aggHPO2I`");
      sAXReader0.isIncludeInternalDTDDeclarations();
      sAXReader0.getDispatchHandler();
      sAXReader0.getErrorHandler();
      try { 
        sAXReader0.setProperty("", pattern0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.051681985465941
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.setSystemId("xi~w';4nH&^");
      char[] charArray0 = new char[9];
      charArray0[1] = ')';
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("xi~w';4nH&^");
      sAXReader_SAXEntityResolver1.resolveEntity((String) null, (String) null);
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      try { 
        sAXReader0.configureReader(parserAdapter0, defaultHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@5b37355a Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2590733146306117
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("", (String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("C&/2", "//tmp/org.dom4j.io.SAXReader0*yhnTYVx");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("//tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader");
      sAXReader_SAXEntityResolver1.resolveEntity("", "");
      sAXReader_SAXEntityResolver1.resolveEntity("C&/2", "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("//tmp/org.dom4j.io.SAXReader0*yhnTYVx");
      InputSource inputSource0 = new InputSource();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      StringReader stringReader0 = new StringReader("3BG=;Kx\".ZN");
      InputSource inputSource1 = new InputSource(stringReader0);
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)66;
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("O3I1@N|ZJH#*RG3ruM");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity((String) null, "O3I1@N|ZJH#*RG3ruM");
      inputSource0.setByteStream((InputStream) null);
      inputSource0.getCharacterStream();
      sAXReader_SAXEntityResolver0.resolveEntity("8/uw1MbuEk9{D4", "http://xml.org/sax/features/string-interning");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.getExternalSubset((String) null, "");
      SAXReader sAXReader1 = new SAXReader();
      // Undeclared exception!
      try { 
        sAXReader1.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.setSystemId("xi~w';4nH&^");
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = ')';
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      HandlerBase handlerBase0 = new HandlerBase();
      sAXReader0.setEntityResolver(handlerBase0);
      try { 
        sAXReader0.read((Reader) null, "stE\"fz,j^");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: stE\"fz,j^ Nested exception: no protocol: stE\"fz,j^
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.349742765197841
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.mark(66);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      boolean boolean0 = true;
      SAXReader sAXReader1 = new SAXReader(true);
      File file0 = MockFile.createTempFile("org.dom4j.io.SAXReader", "*yhnTYVx");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.43050584153311
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Namespace namespace0 = new Namespace("QCJ^V'#T6ZEndAL62", "QCJ^V'#T6ZEndAL62");
      namespace0.detach();
      Namespace namespace1 = Namespace.get("QCJ^V'#T6ZEndAL62", "QCJ^V'#T6ZEndAL62");
      QName qName0 = QName.get("", "J#917_!", "J#917_!");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BeanElement beanElement0 = new BeanElement("org.dom4j.io.SAXModifyException", namespace0, "");
      beanElement0.element("http://xml.org/sax/features/namespaces", namespace1);
      namespace1.getUniquePath((Element) null);
      MockFile mockFile0 = new MockFile("//tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader", "");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl2, true);
      qName0.getDocumentFactory();
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      sAXReader0.resetHandlers();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@3172a2c7 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@3172a2c7 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.578423119326123
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(xMLReader0);
      xMLFilterImpl0.notationDecl("", "org.dom4j.io.SAXReader$SAXEntityResolver", ")");
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      sAXReader0.setEncoding((String) null);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      SAXReader sAXReader1 = new SAXReader(xMLReader0);
      sAXReader1.isStringInternEnabled();
      sAXReader1.getDispatchHandler();
      sAXReader1.isStringInternEnabled();
      try { 
        sAXReader0.read((InputStream) null, "org.dom4j.tree.BackedList");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/org.dom4j.tree.BackedList (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/org.dom4j.tree.BackedList (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7316728013692297
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("wjY.O}`", (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "http://xml.org/sax/features/namespace-prefixes");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", (String) null);
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver(":q");
      sAXReader_SAXEntityResolver0.resolveEntity("JVn#E@^Z,!nH^$", (String) null);
      sAXReader0.createDefaultEntityResolver("/[Vzw] jJ2?eF");
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5709195237181253
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Qs%EJy\"F\"";
      stringArray0[1] = "#h4CrYs_rbG";
      stringArray0[2] = "";
      stringArray0[3] = "w";
      stringArray0[4] = "||qe'y#7xgq=";
      stringArray0[5] = "3VeC2<<Jw']n&Nr:8";
      stringArray0[6] = "0GA7\"7^n7>?X";
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, dispatchHandler0, 1654);
      pruningElementStack0.getDispatchHandler();
      dispatchHandler0.setDefaultHandler((ElementHandler) null);
      sAXReader0.getEntityResolver();
      sAXReader0.createDefaultEntityResolver("?");
      sAXReader0.setDispatchHandler(dispatchHandler0);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("wjY.O}`", (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/nD_BIT1,");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", (String) null);
      sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      MockFile mockFile0 = new MockFile("org.jaxen.dom.NamespaceNode");
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.3080502943468506
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      boolean boolean0 = false;
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      xMLFilterImpl0.notationDecl("", "", "DN|Q8,VKC,PY' 6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#V~|(A");
      sAXReader0.setEncoding("#V~|(A");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) null, "?l?zwS]AGrjd 7//L{");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0516819854659416
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = '?';
      charArray0[2] = '.';
      charArray0[3] = '6';
      charArray0[4] = '2';
      charArray0[5] = 'E';
      charArray0[6] = 'u';
      charArray0[7] = 'Y';
      charArray0[8] = 'V';
      xMLReaderAdapter0.characters(charArray0, 3964, 3964);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.configureReader(parserAdapter0, defaultHandler0);
      sAXReader0.isStringInternEnabled();
      sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4379012195506835
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      xMLFilterImpl0.notationDecl("", "", "DN|Q8,VKC,PY' 6");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#V~|(A");
      sAXReader0.setEncoding("#V~|(A");
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      InputStream inputStream0 = null;
      try { 
        sAXReader0.read((InputStream) null, "?l?zwS]AGrjd 7//L{");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: ?l?zwS]AGrjd 7//L{ Nested exception: no protocol: ?l?zwS]AGrjd 7//L{
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver(" uri: ");
      sAXReader_SAXEntityResolver0.resolveEntity("!<s>$h]2uh9%_OJUb;j", " uri: ");
      SAXReader sAXReader0 = new SAXReader(false);
      boolean boolean0 = sAXReader0.isValidating();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3895530195104047
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      String string0 = "9qcbNU2&<]k";
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter2);
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      sAXReader0.getDispatchHandler();
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5518037159737408
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)53;
      byteArray0[5] = (byte) (-105);
      byteArray0[6] = (byte)47;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      sAXReader_SAXEntityResolver0.resolveEntity("//tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader", "//tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/nD_BIT1,");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver1.resolveEntity("", "//tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver2.resolveEntity("//tmp/tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader0/tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader", "?/pMwjC");
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      sAXReader_SAXEntityResolver2.resolveEntity("", "$?;[~b'B;K?MWv/");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(false);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("//tmp/tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader0/tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader");
      sAXReader_SAXEntityResolver0.resolveEntity("JVn#E@^Z>,v!n$", "wjY.O}`");
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.337271798865072
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.isIgnoreComments();
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDefaultHandler(dispatchHandler0);
      String string0 = "6F<6&kX.6CG ";
      sAXReader0.setStringInternEnabled(true);
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.installXMLFilter(parserAdapter1);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("/8W)*.");
      InputSource inputSource0 = new InputSource("9qcbNU2&<]k");
      SAXReader sAXReader1 = new SAXReader(parserAdapter0, false);
      try { 
        sAXReader0.setFeature("/8W)*.", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature '/8W)*.' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createQName("");
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getDefaultNamespace();
      QName.get("", (Namespace) null);
      defaultDocumentFactory0.createElement("Z[", "GesBA");
      defaultDocumentFactory0.createPattern("GesBA");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDocumentFactory.getInstance();
      defaultDocumentFactory0.createQName("WSS *`/Jg[*&$\"f%");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.removeHandler((String) null);
      sAXReader0.getErrorHandler();
      try { 
        sAXReader0.setProperty("Z[", "");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'Z[' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.3367045838905973
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      charArray0[1] = 'B';
      charArray0[2] = '#';
      charArray0[3] = 'n';
      MockFile mockFile0 = new MockFile("http://xml.org/sax/handlers/LexicalHandler");
      mockFile0.toURL();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      StringReader stringReader0 = new StringReader("http://xml.org/sax/handlers/LexicalHandler");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2631550402832814
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      parserAdapter0.processingInstruction("vduWo:x", "vduWo:x");
      char[] charArray0 = new char[2];
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 2552, 1389);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      StringReader stringReader0 = new StringReader("");
      InputSource inputSource0 = new InputSource(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      sAXReader0.installXMLFilter(parserAdapter0);
      sAXReader1.setIncludeInternalDTDDeclarations(false);
      sAXReader0.getXMLReader();
      String string0 = "http://xml.org/sax/handlers/LexicalHandler";
      try { 
        MockURL.URL("http://xml.org/sax/handlers/LexicalHandler", "http://xml.org/sax/handlers/LexicalHandler", "http://xml.org/sax/handlers/LexicalHandler");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: http://xml.org/sax/handlers/lexicalhandler
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.776776614288035
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      xMLFilterImpl0.notationDecl("", "", ")");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity(" : ", "");
      sAXReader_SAXEntityResolver0.resolveEntity("", "pTt{-<cvM");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader1 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("(MM4}+}u?&R");
      InputSource inputSource1 = sAXReader_SAXEntityResolver0.resolveEntity("pTt{-<cvM", "");
      assertNotSame(inputSource1, inputSource0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setValidation(true);
      sAXReader0.isIncludeExternalDTDDeclarations();
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      String string0 = null;
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      Namespace namespace0 = new Namespace("", "");
      defaultDocumentFactory0.createNamespace("", "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "http://xml.org/sax/features/namespaces");
      Namespace namespace1 = Namespace.XML_NAMESPACE;
      defaultDocumentFactory0.createText("");
      QName.get("", "", "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, false);
      try { 
        sAXReader0.read((Reader) stringReader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5551393240053732
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("C&/2", "//tmp/org.dom4j.io.SAXReader0*yhnTYVx");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("//tmp/org.dom4j.io.SAXReader0*yhnTYVx");
      sAXReader_SAXEntityResolver1.resolveEntity("", "");
      sAXReader_SAXEntityResolver1.resolveEntity("C&/2", "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("//tmp/org.dom4j.io.SAXReader0*yhnTYVx");
      sAXReader_SAXEntityResolver2.resolveEntity("//tmp/org.dom4j.io.SAXReader0*yhnTYVx", "/");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader_SAXEntityResolver2.uriPrefix = "";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("lt");
      sAXReader_SAXEntityResolver2.resolveEntity("", " : ");
      sAXReader0.createDefaultEntityResolver("hf/(t9JeiPdE");
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      parserAdapter0.processingInstruction("vduWo:x", "vduWo:x");
      char[] charArray0 = new char[0];
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 2842, 1389);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("f,YdIw&g");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity(":q", (String) null);
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.2009388382289825
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getSystemId();
      locator2Impl1.getPublicId();
      parserAdapter0.processingInstruction((String) null, (String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[1] = 'M';
      charArray0[2] = '0';
      charArray0[3] = 'f';
      charArray0[4] = '4';
      charArray0[5] = 'm';
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      StringReader stringReader0 = new StringReader("vduWo:x");
      StringReader stringReader1 = new StringReader("");
      InputSource inputSource0 = new InputSource(stringReader0);
      InputSource inputSource1 = new InputSource();
      try { 
        sAXReader0.read(inputSource1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.3219307546040406
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      qName0.getDocumentFactory();
      Namespace namespace0 = new Namespace("", "QCJ^V'#T6ZEndAL62");
      Namespace namespace1 = Namespace.XML_NAMESPACE;
      Namespace.get("", "");
      QName.get("", "QCJ^V'#T6ZEndAL62", "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BeanElement beanElement0 = new BeanElement("", namespace0, pipedInputStream0);
      beanElement0.element("d~TvH-_6;_", namespace0);
      namespace0.getUniquePath((Element) null);
      MockFile mockFile0 = new MockFile("", "7ERlH*");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@5ac77ec1 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@5ac77ec1 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      parserAdapter0.processingInstruction("vduWo:x", "vduWo:x");
      char[] charArray0 = new char[5];
      charArray0[0] = '>';
      charArray0[1] = 'r';
      charArray0[2] = 'L';
      charArray0[3] = 'x';
      charArray0[2] = ' ';
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 66, (-1));
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      try { 
        sAXReader0.setXMLReaderClassName("");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      String string0 = "=CuM>$Ag'Fe+S;";
      MockFile mockFile0 = new MockFile("=CuM>$Ag'Fe+S;");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("B1!Afw.75");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader1 = new SAXReader(parserAdapter0, true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.removeHandler((String) null);
      sAXReader1.addHandler("", (ElementHandler) null);
      SAXReader sAXReader2 = null;
      try {
        sAXReader2 = new SAXReader("B1!Afw.75", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class B1!Afw.75 not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2610316958599697
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      qName0.getDocumentFactory();
      Namespace namespace0 = new Namespace("", "QCJ^V'#T6ZEndAL62");
      Namespace namespace1 = Namespace.XML_NAMESPACE;
      Namespace.get("", "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      QName.get("", "QCJ^V'#T6ZEndAL62", "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BeanElement beanElement0 = new BeanElement("", namespace0, pipedInputStream0);
      beanElement0.element("d~TvH-_6;_", namespace0);
      namespace0.getUniquePath((Element) null);
      MockFile mockFile0 = new MockFile("", "7ERlH*");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@1f564d27 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@1f564d27 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      qName0.getDocumentFactory();
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.getDefaultNamespace();
      QName.get("", (Namespace) null);
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:/home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.isStripWhitespaceText();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)46;
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Namespace namespace0 = new Namespace("", "QCJ^V'#T6ZEndAL62");
      Node node0 = namespace0.detach();
      Namespace namespace1 = Namespace.get("", "");
      QName.get("", "QCJ^V'#T6ZEndAL62", "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BeanElement beanElement0 = new BeanElement("", namespace0, pipedInputStream0);
      beanElement0.element("d~TvHZ_6;_", namespace0);
      namespace0.getUniquePath((Element) null);
      QName.get("", namespace0);
      node0.getUniquePath((Element) beanElement0);
      QName.get("", namespace1);
      SAXReader sAXReader0 = new SAXReader((String) null);
      StringReader stringReader0 = new StringReader("");
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.1756646530046244
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      parserAdapter0.processingInstruction("vduWo:x", "vduWo:x");
      parserAdapter0.processingInstruction((String) null, "");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      char[] charArray0 = new char[0];
      xMLReaderAdapter1.ignorableWhitespace(charArray0, 2552, 2552);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      StringReader stringReader0 = new StringReader("");
      InputSource inputSource0 = new InputSource(stringReader0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.2287597528424845
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("C&/2", "//tmp/org.dom4j.io.SAXReader0*yhnTYVx");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("//tmp/org.dom4j.io.SAXReader0org.dom4j.io.SAXReader");
      sAXReader_SAXEntityResolver1.resolveEntity("", "");
      sAXReader_SAXEntityResolver1.resolveEntity("C&/2", "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver("//tmp/org.dom4j.io.SAXReader0*yhnTYVx");
      sAXReader_SAXEntityResolver2.resolveEntity("1", "/");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(false);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver3 = new SAXReader.SAXEntityResolver("lt");
      sAXReader_SAXEntityResolver2.resolveEntity("", " : ");
      try { 
        sAXReader0.read("{<Le-6");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: {<Le-6 Nested exception: no protocol: {<Le-6
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      charArray0[1] = 'B';
      charArray0[2] = '#';
      charArray0[3] = 'n';
      xMLReaderAdapter0.ignorableWhitespace(charArray0, '#', (-1641));
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      try { 
        sAXReader0.setFeature("org.dom4j.tree.AbstractCharacterData", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: org.dom4j.tree.AbstractCharacterData
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.333443371183037
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      MockFile mockFile0 = new MockFile("=CuM>$Ag'Fe+S;");
      URL uRL0 = mockFile0.toURL();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/=CuM>$Ag'Fe+S; (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/=CuM>$Ag'Fe+S; (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.createXMLReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      String string0 = "org.dom4j.factory";
      try { 
        xMLReaderAdapter0.parse("org.dom4j.factory");
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: http://xml.org/sax/features/namespace-prefixes
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      MockFile mockFile0 = new MockFile("7ERlH*", "7ERlH*");
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      assertNotNull(dispatchHandler0);
      
      sAXReader0.setDispatchHandler(dispatchHandler0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.4548116116238536
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "uLZ");
      DefaultDocumentFactory.getInstance();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.getEncoding();
      defaultDocumentFactory0.createElement("TB!qiin9g&e-G7W1.rF", "");
      sAXReader0.getXMLFilter();
      sAXReader0.createXMLReader();
      InputSource inputSource0 = new InputSource();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("");
      qName0.getDocumentFactory();
      Namespace namespace0 = new Namespace("", "");
      namespace0.detach();
      Namespace.get("", "");
      QName.get("", "", "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BeanElement beanElement0 = new BeanElement("", namespace0, pipedInputStream0);
      beanElement0.element("d~TvHZ_6;_", namespace0);
      namespace0.getUniquePath((Element) null);
      QName.get("", namespace0);
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      sAXReader0.setIgnoreComments(false);
      DispatchHandler dispatchHandler1 = sAXReader0.getDispatchHandler();
      dispatchHandler0.addHandler("namespace::*[name()='']", dispatchHandler1);
      sAXReader0.setDefaultHandler(dispatchHandler0);
      try { 
        sAXReader0.setFeature("org.dom4j.io.SAXReader", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature 'org.dom4j.io.SAXReader' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl0.getSystemId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      parserAdapter0.processingInstruction("4S>~g}SwY@", "/zka;OVYqGw3UWxv(");
      xMLReaderAdapter0.ignorableWhitespace((char[]) null, 1389, 1389);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter1, false);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-105);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "file://");
      byteArray0[0] = (byte)29;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-92);
      byteArray0[6] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("E4,r\"F3nB");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class E4,r\"F3nB not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.583718905676371
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader((XMLReader) null);
      sAXReader0.removeHandler("");
      sAXReader0.getErrorHandler();
      sAXReader1.setErrorHandler((ErrorHandler) null);
      sAXReader1.getDocumentFactory();
      sAXReader1.createContentHandler((XMLReader) null);
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      try { 
        sAXReader1.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.getDocumentFactory();
      sAXReader0.getXMLFilter();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      char[] charArray0 = new char[3];
      charArray0[0] = 'O';
      charArray0[1] = 'z';
      charArray0[2] = '#';
      defaultHandler0.ignorableWhitespace(charArray0, 15, 15);
      defaultHandler0.processingInstruction("]r,0beUTj1 e<]f", "]r,0beUTj1 e<]f");
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.2615228530700917
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1*p");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1*p");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      sAXReader0.getDocumentFactory();
      String string0 = "";
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Feature: http://xml.org/sax/features/namespace-prefixes Nested exception: Feature: http://xml.org/sax/features/namespace-prefixes
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      sAXReader0.installXMLFilter(parserAdapter0);
      sAXReader0.getDispatchHandler();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLReader0);
      sAXReader0.configureReader(xMLReader0, sAXContentHandler0);
      parserAdapter0.setDTDHandler(sAXContentHandler0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      try { 
        xMLReaderAdapter0.setLocale(locale0);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // setLocale not supported
         //
         verifyException("org.xml.sax.helpers.XMLReaderAdapter", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.490922603994677
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          SAXReader sAXReader0 = new SAXReader((XMLReader) null, true);
          sAXReader0.setStripWhitespaceText(false);
          sAXReader0.setXMLReader((XMLReader) null);
          DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
          sAXReader0.setDocumentFactory(documentFactory0);
          DocumentFactory documentFactory1 = sAXReader0.getDocumentFactory();
          sAXReader0.setDocumentFactory(documentFactory1);
          sAXReader0.getXMLFilter();
          URL uRL0 = MockURL.getFtpExample();
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("wjY.O}`", (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/nD_BIT1,");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      sAXReader_SAXEntityResolver0.resolveEntity("", (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = '>';
      charArray0[2] = 'Z';
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      QName qName0 = QName.get("mI?uy1`Odra,r|^-J:");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      NamespaceStack namespaceStack0 = new NamespaceStack(documentFactory0);
      namespaceStack0.pop(";S YGlB");
      QName.get("", (Namespace) null, "mI?uy1`Odra,r|^-J:");
      qName0.getDocumentFactory();
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      boolean boolean0 = sAXReader0.isMergeAdjacentText();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.endDocument();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.isValidating();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark(844);
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
