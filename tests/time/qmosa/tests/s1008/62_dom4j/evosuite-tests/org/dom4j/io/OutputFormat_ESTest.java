/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 20:14:45 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("L", true, "L");
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("-omitEncoding");
      String[] stringArray0 = new String[9];
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-omitEncoding";
      outputFormat0.setLineSeparator(stringArray0[0]);
      stringArray0[1] = "-omitEncoding";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.291083022806839
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-newlines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      outputFormat1.setNewlines(true);
      OutputFormat outputFormat2 = new OutputFormat("-newlines");
      outputFormat1.setLineSeparator("-trimText");
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "-newlines";
      outputFormat2.setPadText(false);
      stringArray1[2] = "-e4pandEmpty@,3qR^o+yeB*";
      stringArray1[3] = "-trimText";
      stringArray1[4] = "-newlines";
      stringArray1[5] = "-trimText";
      stringArray1[7] = "-trimText";
      outputFormat2.parseOptions(stringArray1, 1);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat3 = new OutputFormat("-trimText", false);
      outputFormat3.setIndent("");
      outputFormat3.setNewLineAfterNTags(1);
      outputFormat3.getNewLineAfterNTags();
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat3.setIndent((String) null);
      outputFormat1.parseOptions(stringArray1, 4590);
      assertEquals("-trimText", outputFormat1.getLineSeparator());
      
      int int0 = outputFormat2.getNewLineAfterNTags();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3161368710298924
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-newlines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      outputFormat1.setNewlines(true);
      OutputFormat outputFormat2 = new OutputFormat("-newlines");
      outputFormat1.setLineSeparator("-trimText");
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "-newlines";
      stringArray1[2] = "-expandEmpty@,3qR^o+yeB*";
      stringArray1[3] = "-trimText";
      stringArray1[4] = "-newlines";
      stringArray1[5] = "-trimText";
      stringArray1[6] = "-trimText";
      stringArray1[7] = "-trimText";
      outputFormat2.parseOptions(stringArray1, 1);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat2.parseOptions(stringArray1, 8);
      outputFormat2.getLineSeparator();
      outputFormat2.setIndent("-trimText");
      boolean boolean0 = outputFormat2.isExpandEmptyElements();
      assertEquals("-trimText", outputFormat2.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.78606782228368
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterNTags((-478818448));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?IJ2";
      stringArray0[1] = "sb&lrF5@9{zg";
      stringArray0[2] = "%\"91 fy#4/";
      stringArray0[3] = "QzHw1";
      stringArray0[4] = "LIXLXmZt^";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("sb&lrF5@9{zg");
      outputFormat1.setEncoding("LIXLXmZt^");
      stringArray0[5] = "";
      outputFormat1.setIndent(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setTrimText(false);
      outputFormat0.setPadText(false);
      stringArray0[6] = "MNaH<a";
      outputFormat0.parseOptions(stringArray0, 1158);
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.isExpandEmptyElements();
      outputFormat2.setSuppressDeclaration(true);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.getNewLineAfterNTags();
      outputFormat2.getEncoding();
      outputFormat0.isExpandEmptyElements();
      outputFormat2.parseOptions(stringArray0, 0);
      assertFalse(outputFormat2.isTrimText());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setEncoding("J6wPHeNa7>*~%9/$H$");
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isExpandEmptyElements();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setIndent("J6wPHeNa7>*~%9/$H$");
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertEquals("J6wPHeNa7>*~%9/$H$", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "_Dq:xW";
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true, "_Dq:xW");
      boolean boolean0 = false;
      outputFormat0.setNewlines(false);
      int int0 = 1;
      OutputFormat outputFormat1 = new OutputFormat("~");
      outputFormat0.setLineSeparator("~");
      String[] stringArray0 = new String[7];
      stringArray0[5] = "-suppressDeclaration";
      stringArray0[1] = "-suppressDeclaration";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7483007165592315
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true, "_D:x:W");
      boolean boolean0 = false;
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("~");
      outputFormat0.setLineSeparator("-padText");
      String[] stringArray0 = new String[7];
      stringArray0[5] = "-suppressDeclaration";
      stringArray0[1] = "-padText";
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.545828257931353
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("H29C4kQ\"'qQ6*paTr", true, "-xhtml-/#)0Uk[_$e(M{0.-A");
      assertTrue(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("gr:.RzT,I.fz");
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "H29C4kQ\"'qQ6*paTr";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-lineSeparator";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5084965683569505
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("J6wPHeNa7>*~%9/$H$");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "J6wPHeNa7>*~%9/$H$";
      stringArray0[3] = "";
      outputFormat1.setLineSeparator("");
      outputFormat1.parseOptions(stringArray0, 1);
      assertEquals("J6wPHeNa7>*~%9/$H$", outputFormat1.getLineSeparator());
      
      outputFormat0.parseOptions(stringArray0, 3);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0014246167267165
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("~eDO$", false, (String) null);
      outputFormat0.setNewlines(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "~eDO$";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "~eDO$";
      stringArray0[3] = "~eDO$";
      stringArray0[4] = null;
      stringArray0[5] = "~eDO$";
      stringArray0[6] = "UTF-8";
      stringArray0[7] = "~eDO$";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat1.isXHTML();
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setEncoding("UTF-8");
      OutputFormat outputFormat3 = new OutputFormat("");
      outputFormat3.isSuppressDeclaration();
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      outputFormat5.setIndent(stringArray0[4]);
      outputFormat3.getIndent();
      OutputFormat.createPrettyPrint();
      outputFormat5.isXHTML();
      outputFormat4.isNewlines();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('r');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (r)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setEncoding("");
      outputFormat0.getEncoding();
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "#.I?F*";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "#.I?F*";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1105435014));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1105435014
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~", false, "~");
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1484);
      outputFormat0.setIndent("-omitEncoding");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "";
      stringArray0[3] = "-omitEncoding";
      stringArray0[4] = "";
      stringArray0[5] = "-expandEmpty)";
      stringArray0[6] = "73}";
      stringArray0[7] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 1484);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewlines(true);
      outputFormat0.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertEquals("-omitEncoding", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.704355559998282
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewlines(true);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "J6wPHeNa7>*~%9/$H$";
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = null;
      stringArray0[6] = "J6wPHeNa7>*~%9/$H$";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7080372970948847
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-newlines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-newlines";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setLineSeparator("3E");
      outputFormat1.parseOptions(stringArray0, 5);
      outputFormat0.setNewLineAfterDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-944));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.290316535631819
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Q:`rN");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setAttributeQuoteCharacter('\'');
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterNTags(5169);
      outputFormat0.setIndent(false);
      outputFormat1.setIndent(true);
      outputFormat0.setTrimText(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setEncoding("Q:`rN");
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.getLineSeparator();
      outputFormat1.setTrimText(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat1.setIndent(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isSuppressDeclaration();
      outputFormat0.setIndentSize(5169);
      outputFormat0.setIndentSize(0);
      outputFormat1.isPadText();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setSuppressDeclaration(true);
      assertTrue(outputFormat1.isOmitEncoding());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9983728152440876
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("]k9DEr(yK.W");
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(1664);
      outputFormat0.isXHTML();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setIndent("[_6A5mWX`iM_YfaKBg");
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("4|'Ks}");
      assertEquals("]k9DEr(yK.W", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7074515352304802
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("(newline2", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(newline2";
      outputFormat0.setIndentSize((-1995264347));
      outputFormat1.setLineSeparator("(newline2");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.setNewLineAfterDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("T(\u0003#Pou ", true);
      outputFormat0.setNewlines(true);
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat1.setLineSeparator(".+/hOr~|M<0^*");
      assertEquals(".+/hOr~|M<0^*", outputFormat1.getLineSeparator());
      
      OutputFormat outputFormat2 = new OutputFormat("!#", true);
      outputFormat2.setPadText(true);
      OutputFormat outputFormat3 = new OutputFormat("-expandEmpty-trimText");
      outputFormat2.setNewLineAfterDeclaration(true);
      String string0 = outputFormat3.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "";
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      String string1 = "J6wPHeNa7>*~%9/$H$";
      outputFormat0.setEncoding((String) null);
      outputFormat0.getEncoding();
      outputFormat0.setExpandEmptyElements(false);
      boolean boolean1 = false;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1251));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1251
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("J6wPHeNa7>*~%9/$H$");
      String[] stringArray0 = new String[9];
      stringArray0[2] = "J6wPHeNa7>*~%9/$H$";
      stringArray0[3] = "J6wPHeNa7>*~%9/$H$";
      outputFormat0.setLineSeparator(stringArray0[0]);
      stringArray0[1] = "J6wPHeNa7>*~%9/$H$";
      outputFormat0.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat1.getLineSeparator();
      int int0 = outputFormat1.getNewLineAfterNTags();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2615061340720266
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newines";
      stringArray0[1] = "-newines";
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("-newines");
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray1 = new String[7];
      outputFormat0.setOmitEncoding(true);
      stringArray1[0] = "-newines";
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray1[1] = "-newines";
      outputFormat0.setPadText(false);
      stringArray1[2] = "|e4pandEmpty@,zqR^o+yeB*";
      stringArray1[3] = "-newines";
      outputFormat0.setLineSeparator("-newines");
      stringArray1[4] = "-newines";
      stringArray1[5] = "-newines";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("-omitEncoding");
      assertEquals("-omitEncoding", outputFormat0.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true);
      String[] stringArray0 = new String[5];
      outputFormat0.setIndent(true);
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[0] = "-newlines";
      stringArray0[3] = "-newlines";
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setIndent("*$X*");
      assertEquals("*$X*", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("b:\"w1%/K", false);
      String string0 = outputFormat1.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.238846104111004
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~", false, "~");
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterNTags(1484);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isOmitEncoding();
      outputFormat0.setTrimText(true);
      outputFormat0.getEncoding();
      outputFormat0.setExpandEmptyElements(false);
      assertEquals("", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat("(hQI:kHB.*#}BB");
      outputFormat1.isPadText();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals("UTF-8", outputFormat2.getEncoding());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.406000896837545
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[1] = "%/k}~ml:o>";
      stringArray0[2] = ")";
      outputFormat0.parseOptions(stringArray0, 453);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false, ")");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.isXHTML();
      outputFormat0.setEncoding("%/k}~ml:o>");
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat1.setNewlines(false);
      outputFormat3.setIndent("UTF-8");
      outputFormat2.setSuppressDeclaration(false);
      outputFormat3.getIndent();
      outputFormat0.isXHTML();
      outputFormat2.setXHTML(false);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat2.setOmitEncoding(true);
      assertTrue(outputFormat2.isOmitEncoding());
      
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat4.isTrimText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8047056673944684
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",><l.q/j", false, "@,3qR^o+yeB*");
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "@,3qR^o+yeB*";
      stringArray0[2] = "";
      stringArray0[3] = "@,3qR^o+yeB*";
      outputFormat1.setNewLineAfterNTags(39);
      stringArray0[4] = ",><l.q/j";
      stringArray0[5] = "@,3qR^o+yeB*";
      stringArray0[6] = "J6wPHeNa7>*~%9/$H$";
      stringArray0[7] = ",><l.q/j";
      stringArray0[8] = ",><l.q/j";
      outputFormat0.parseOptions(stringArray0, 1527);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.parseOptions(stringArray0, 7);
      outputFormat1.getLineSeparator();
      assertEquals(39, outputFormat1.getNewLineAfterNTags());
      
      outputFormat0.parseOptions(stringArray0, 7);
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "%/k}~ml:o>";
      stringArray0[2] = ")";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "73}";
      stringArray0[6] = "";
      stringArray0[7] = "-omitEncoding";
      stringArray0[8] = "\n";
      outputFormat0.parseOptions(stringArray0, 34);
      assertTrue(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.isTrimText();
      outputFormat0.setOmitEncoding(false);
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true, "_D:x:W");
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("~");
      OutputFormat outputFormat2 = new OutputFormat("", false, "DMmWNabI+1TZ3_[l_X[");
      String[] stringArray0 = new String[0];
      outputFormat2.parseOptions(stringArray0, 0);
      OutputFormat outputFormat3 = new OutputFormat("-expandEmpty-expandEmpty", true);
      outputFormat3.setNewLineAfterDeclaration(false);
      outputFormat3.setLineSeparator("-xhtml");
      outputFormat2.setNewLineAfterDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-81));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -81
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8735586012105023
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.setEncoding("UTF-8");
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("UTF-8");
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setXHTML(false);
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat1.isExpandEmptyElements();
      String string0 = outputFormat1.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3384481491346487
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = new OutputFormat();
      assertEquals("\n", outputFormat1.getLineSeparator());
      
      outputFormat1.setLineSeparator((String) null);
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "";
      stringArray0[7] = null;
      stringArray0[8] = "";
      outputFormat1.parseOptions(stringArray0, 1);
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      OutputFormat outputFormat2 = new OutputFormat("b:\"w1%/K", true);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
      
      outputFormat0.parseOptions(stringArray0, 1458);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3471126131151332
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      outputFormat0.setLineSeparator((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[2];
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(stringArray0[0]);
      outputFormat0.setNewLineAfterDeclaration(true);
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isPadText());
      
      String string0 = outputFormat1.getIndent();
      assertNull(string0);
      
      outputFormat1.setNewLineAfterDeclaration(true);
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isOmitEncoding());
      assertTrue(outputFormat1.isTrimText());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("\n", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7575827984108483
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[1] = "%/k}~ml:o>";
      stringArray0[2] = ")";
      stringArray0[3] = "";
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-1933));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1933
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.21665828239057
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newines";
      stringArray0[1] = "-newines";
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator("-newines");
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray1 = new String[7];
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(true);
      stringArray1[0] = "-newines";
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray1[1] = "-newines";
      outputFormat0.setPadText(false);
      stringArray1[2] = "|e4pandEmpty@,zqR^o+yeB*";
      stringArray1[3] = "-newines";
      outputFormat0.setLineSeparator("-newines");
      stringArray1[4] = "-newines";
      stringArray1[5] = "-newines";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("-omitEncoding");
      outputFormat0.setIndent("-newines");
      outputFormat0.setIndent("|e4pandEmpty@,zqR^o+yeB*");
      String[] stringArray2 = new String[1];
      stringArray2[0] = "-newines";
      int int0 = outputFormat0.parseOptions(stringArray2, 1);
      assertEquals("-newines", outputFormat0.getLineSeparator());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(boolean0);
      
      outputFormat0.setTrimText(true);
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean1 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.6883569797160485
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "%/k}~ml:o>";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "%/k}~ml:o>";
      outputFormat0.isNewlines();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setIndent(false);
      outputFormat1.setIndentSize(2465);
      outputFormat1.setIndent("-expandEmpty-newines");
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('r');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (r)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("h7kf_~ R||:$/!Ov*g", false);
      outputFormat1.setIndent(",><l.q/j");
      assertEquals(",><l.q/j", outputFormat1.getIndent());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(true);
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8456124882786633
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("J6wPHeNa7>*~%9/$H$");
      assertEquals("\n", outputFormat1.getLineSeparator());
      
      outputFormat1.setLineSeparator("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "J6wPHeNa7>*~%9/$H$";
      stringArray0[1] = "J6wPHeNa7>*~%9/$H$";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.973176228217073
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("~", false, "~");
      outputFormat0.setNewlines(true);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setPadText(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterNTags(0);
      assertEquals("", outputFormat0.getIndent());
      
      outputFormat0.setIndent("~");
      outputFormat0.isNewlines();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.setSuppressDeclaration(true);
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.360380995184394
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",><l.q/j", false, "@,3qR^o+yeB*");
      outputFormat0.setEncoding("@,3qR^o+yeB*");
      outputFormat0.getEncoding();
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[5];
      outputFormat0.setOmitEncoding(false);
      stringArray0[0] = "J6wPHeNa7>*~%9/$H$";
      stringArray0[1] = "@,3qR^o+yeB*";
      outputFormat0.setOmitEncoding(false);
      stringArray0[2] = "J6wPHeNa7>*~%9/$H$";
      outputFormat0.setIndentSize(34);
      stringArray0[3] = "@,3qR^o+yeB*";
      stringArray0[4] = "#.I?F*";
      outputFormat0.parseOptions(stringArray0, 34);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.038877106053737
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-expandEmptyUTF-8";
      stringArray0[1] = "QFXG.}Y13grjAPCo";
      stringArray0[2] = "Bc.y$\"m";
      stringArray0[3] = "-expandEmptyih=JlmX|4e#,+,+i";
      stringArray0[4] = "-xhtmlg";
      stringArray0[5] = "-expandEmptyih=JlmX|4e#,+,+i";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", true);
      char char0 = '*';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat("H,;=q", true);
      outputFormat1.setOmitEncoding(false);
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals("H,;=q", outputFormat1.getIndent());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isOmitEncoding());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "1)xyQ";
      stringArray0[2] = "";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 136);
      outputFormat0.parseOptions(stringArray0, 6);
      int int0 = outputFormat0.parseOptions(stringArray0, 136);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals(136, int0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-newlines", true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      outputFormat1.setNewlines(true);
      OutputFormat outputFormat2 = new OutputFormat("-newlines");
      outputFormat1.setLineSeparator("-trimText");
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-newlines";
      stringArray1[1] = "-newlines";
      stringArray1[3] = "-expandEmpty@,3qR^o+yeB*";
      stringArray1[3] = "-trimText";
      stringArray1[4] = "-newlines";
      stringArray1[5] = "-newlines";
      stringArray1[6] = "-newlines";
      stringArray1[7] = "-trimText";
      outputFormat2.setXHTML(true);
      OutputFormat outputFormat3 = new OutputFormat();
      outputFormat3.setNewLineAfterDeclaration(true);
      outputFormat1.getLineSeparator();
      assertEquals("-trimText", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("J6wPHeNa7>*~%9/$H$");
      OutputFormat outputFormat1 = new OutputFormat("-e4pan", true);
      assertFalse(outputFormat1.isPadText());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("-e4pan", outputFormat1.getIndent());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewlines());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      
      String string0 = outputFormat0.getEncoding();
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("J6wPHeNa7>*~%9/$H$", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
  }
}
