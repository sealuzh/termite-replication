/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:32:48 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.image.ImageProducer;
import java.awt.image.IndexColorModel;
import java.awt.image.RescaleOp;
import java.net.Proxy;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3224106955121098
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[2] = 1033;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      visualListModel0.data = vector1;
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElementAt((VisualPageListItem) null, (-648));
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.enableInputMethods(true);
      visualListModel1.moveDownIndex(0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(6, (Collection<VisualPageListItem>) priorityQueue0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.addElementAt((VisualPageListItem) null, 6);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.40439823421475
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[2] = 1033;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      vector1.remove((Object) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.removeElementAt(0, true);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1033, (-640), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1033) > toIndex(-640)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[8];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      proxy_TypeArray0[1] = proxy_Type1;
      visualListModel0.moveUpIndexes(intArray0);
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1033
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[8];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      visualListModel0.clearData();
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.HTTP;
      proxy_TypeArray0[3] = proxy_Type3;
      Proxy.Type proxy_Type4 = Proxy.Type.SOCKS;
      proxy_TypeArray0[4] = proxy_Type4;
      Proxy.Type proxy_Type5 = Proxy.Type.DIRECT;
      proxy_TypeArray0[5] = proxy_Type5;
      Proxy.Type proxy_Type6 = Proxy.Type.SOCKS;
      proxy_TypeArray0[6] = proxy_Type6;
      Proxy.Type proxy_Type7 = Proxy.Type.DIRECT;
      proxy_TypeArray0[7] = proxy_Type7;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(proxy_TypeArray0);
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      visualListModel0.updateElementAt(1033, (VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.428306092730813
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.subList(108, 1033);
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.502420099185768
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(6, (Collection<VisualPageListItem>) priorityQueue0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.addElementAt((VisualPageListItem) null, 6);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[8];
      intArray0[0] = 6;
      intArray0[1] = 6;
      intArray0[2] = (-1);
      intArray0[3] = 6;
      intArray0[4] = 6;
      intArray0[5] = 6;
      intArray0[6] = (-1799);
      intArray0[7] = 6;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<Proxy.Type> vector1 = new Vector<Proxy.Type>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(vector1);
      jComboBox0.enableInputMethods(false);
      visualListModel1.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      vector2.add((VisualPageListItem) null);
      vector2.add((VisualPageListItem) null);
      vector0.ensureCapacity((-1799));
      visualListModel0.setData(vector2);
      visualListModel0.updateElementAt((-2528), (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7579041672872995
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.elementsChanged();
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.clone();
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      vector0.toArray(integerArray0);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      visualListModel0.removeElements(0, 0, true);
      vector0.add((VisualPageListItem) null);
      visualListModel1.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.addElementAt((VisualPageListItem) null, 631);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.getListDataListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel1.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer2;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = (Integer) 1033;
      integerArray0[4] = integer4;
      integerArray0[5] = integer5;
      integerArray0[6] = (Integer) 1033;
      integerArray0[7] = (Integer) 1033;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.clearData();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8800221234841177
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      priorityQueue0.removeAll(linkedList0);
      visualListModel0.addAllElements(6, (Collection<VisualPageListItem>) priorityQueue0);
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.addElementAt((VisualPageListItem) null, 6);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel1.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = (-3020);
      intArray0[1] = (-846);
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 6;
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addAllElements(6, (Collection<VisualPageListItem>) priorityQueue0);
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-120));
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      int[] intArray0 = new int[2];
      intArray0[0] = (-120);
      intArray0[1] = (-1799);
      Vector<Proxy.Type> vector1 = new Vector<Proxy.Type>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "N(;R9jQPTO%";
      stringArray0[1] = "";
      stringArray0[2] = "$VALUES";
      stringArray0[3] = "?Ll_)G'Ibd&";
      Locale.getISOLanguages();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(vector1);
      jComboBox0.createImage((ImageProducer) null);
      jComboBox0.enableInputMethods(false);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      vector2.add((VisualPageListItem) null);
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector3 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector2);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.248821541093825
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      visualListModel1.addElementAt((VisualPageListItem) null, 0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      vector2.add((VisualPageListItem) null);
      visualListModel1.updateElementAt(0, (VisualPageListItem) null);
      vector2.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector2.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector2.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector3 = new Vector<VisualPageListItem>();
      vector3.add((VisualPageListItem) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 3296;
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector2);
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6218475069391354
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[2] = 1033;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-27));
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      int int0 = new Integer(1033);
      visualListModel0.addElementAt((VisualPageListItem) null, (-4225));
      Vector<VisualPageListItem> vector2 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      vector2.add((VisualPageListItem) null);
      vector2.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.subList(108, 1033);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.appendAllElements(stack0);
      visualListModel0.addAllElements(287, (Collection<VisualPageListItem>) null);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1034
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[8];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      proxy_TypeArray0[1] = proxy_Type1;
      visualListModel0.moveUpIndexes(intArray0);
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1033
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.71747278103407
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      Vector<VisualPageListItem> vector2 = visualListModel0.data;
      vector2.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector3 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(vector1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      Stack<Integer> stack1 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.454482887875094
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[2] = 1033;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      boolean boolean0 = new Boolean(true);
      visualListModel0.getSize();
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel2.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5820183568770023
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[2] = 1033;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addElementAt((VisualPageListItem) null, (-648));
      Vector<VisualPageListItem> vector1 = visualListModel2.data;
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel2.setData(visualPageListItemArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.getValidElements();
      visualListModel2.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel2.elementChanged((VisualPageListItem) null);
      assertFalse(visualListModel2.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[8];
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      proxy_TypeArray0[1] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type1;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.096297385982472
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      Integer integer0 = new Integer((-396));
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer.toUnsignedLong((-396));
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer2;
      integerArray0[1] = integer4;
      integerArray0[2] = integer2;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer5;
      integerArray0[4] = integer3;
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[5] = integer6;
      integerArray0[6] = integer1;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      defaultComboBoxModel0.addElement(integer5);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.prependAllElements(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1049561813316413
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2388060551041957
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1033);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1032
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0647549344121345
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9989);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      vector0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      Boolean boolean1 = new Boolean(false);
      vector1.add((VisualPageListItem) null);
      Boolean boolean2 = new Boolean(true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2448999724663743
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[2] = 1033;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      vector1.remove((Object) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      visualListModel0.getSize();
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1033
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.892539934689926
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[2] = 1033;
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9517632546458659
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.getSize();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1033, "86AV@ >");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4627207128115307
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((-1092), (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1033);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector2 = new Vector<VisualPageListItem>();
      vector2.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(false);
      visualListModel0.subList(0, 0);
      visualListModel0.appendAllElements(vector2);
      visualListModel0.addAllElements(196, (Collection<VisualPageListItem>) vector1);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1033
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9844935290697798
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[2];
      intArray1[0] = 0;
      visualListModel0.subList(0, 0);
      intArray1[1] = 0;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertFalse(intArray0.equals((Object)intArray1));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8212565066006587
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1033
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1033
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElementAt((VisualPageListItem) null, 1026);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1033
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9230105908424857
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.rotateClockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      Vector<VisualPageListItem> vector2 = visualListModel0.data;
      vector2.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector3 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(vector1);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      Stack<Integer> stack1 = new Stack<Integer>();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      boolean boolean0 = true;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3080561808079394
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9986);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      Boolean boolean1 = new Boolean(false);
      vector1.add((VisualPageListItem) null);
      Boolean.valueOf(true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData(visualPageListItemArray0);
      List<VisualPageListItem> list0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((-2117), (Collection<VisualPageListItem>) vector1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.493499203019262
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[3];
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.DIRECT;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.SOCKS;
      proxy_TypeArray0[2] = proxy_Type2;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(proxy_TypeArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(1, 50, false);
      visualListModel0.updateElementAt((-1864), (VisualPageListItem) null);
      List<VisualPageListItem> list0 = visualListModel1.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.505443429095587
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList(1033, 2024, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(3, intArray0.length);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.035639204717278
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.getRenderer();
      jComboBox0.isFocusable();
      jComboBox0.repaint(1301, (-2769), 1301, (-2769));
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-396));
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      integerArray0[5] = integer5;
      Integer.toUnsignedLong(4677);
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      integerArray0[6] = integer6;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      defaultComboBoxModel0.addElement(integer7);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox1);
      int[] intArray0 = new int[3];
      intArray0[0] = (-2769);
      intArray0[1] = (-2769);
      intArray0[2] = 1880;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.prependAllElements(priorityQueue0);
      visualListModel0.moveDownIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = Integer.getInteger("", integer3);
      integerArray0[3] = integer4;
      Integer integer5 = Integer.getInteger("", (int) integerArray0[0]);
      integerArray0[4] = integer5;
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[5] = integer6;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke('y');
      jComboBox0.getActionForKeyStroke(keyStroke0);
      VisualListModel visualListModel1 = new VisualListModel();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      Hashtable<RenderingHints.Key, DefaultTableModel> hashtable0 = new Hashtable<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 0.95F, renderingHints0);
      visualListModel2.undeleteElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel2.reverseElements(intArray0);
      assertFalse(visualListModel2.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.getRenderer();
      jComboBox0.isFocusable();
      int int0 = 1301;
      int int1 = (-2769);
      jComboBox0.repaint(1301, (-2769), 1301, (-2769));
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(979, (-2769));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(979) > toIndex(-2769)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 0;
      int int1 = 0;
      int int2 = (-1);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5743378653255435
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[16];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.subList(108, 1033);
      visualListModel0.updateElementAt(1033, (VisualPageListItem) null);
      visualListModel0.moveDownIndex(269);
      visualListModel0.getElements();
      visualListModel0.addElementAt((VisualPageListItem) null, 14);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[8];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      visualListModel0.clearData();
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.HTTP;
      proxy_TypeArray0[3] = proxy_Type3;
      Proxy.Type proxy_Type4 = Proxy.Type.SOCKS;
      proxy_TypeArray0[4] = proxy_Type4;
      Proxy.Type proxy_Type5 = Proxy.Type.DIRECT;
      proxy_TypeArray0[5] = proxy_Type5;
      Proxy.Type proxy_Type6 = Proxy.Type.SOCKS;
      proxy_TypeArray0[6] = proxy_Type6;
      Proxy.Type proxy_Type7 = Proxy.Type.DIRECT;
      proxy_TypeArray0[7] = proxy_Type7;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(proxy_TypeArray0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.7474133403541616
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1140));
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.elementsChanged();
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.addAllElements(0, (Collection<VisualPageListItem>) null);
      vector0.add((VisualPageListItem) null);
      boolean boolean0 = new Boolean(true);
      visualListModel2.getSize();
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel4.undeleteElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel3.setData(visualPageListItemArray0);
      visualListModel2.addElementAt(visualPageListItemArray0[3], 1033);
      visualListModel2.setData(visualPageListItemArray0);
      visualListModel4.removeElements(1033, 0, false);
      assertFalse(visualListModel4.equals((Object)visualListModel1));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 641;
      intArray0[1] = (-675);
      intArray0[2] = 50000;
      intArray0[3] = 32;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(0, 1449, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      Stack<Proxy.Type> stack0 = new Stack<Proxy.Type>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(stack0);
      jComboBox0.repaint((-2737), (-3051), 1033, 1033);
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndex((-3659));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-883);
      intArray0[1] = 0;
      intArray0[2] = 0;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements((-1), (-1), false);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      visualListModel0.subList((-3051), (-999));
      jComboBox0.repaint((-3051), (-3051), (-3051), (-37));
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-381), (-381), false);
      assertNull(collection0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6183972463477243
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.subList((-1005), (-1005), true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.prependAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Object object0 = new Object();
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, object0);
      visualListModel1.appendAllElements((Collection<VisualPageListItem>) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      // Undeclared exception!
      try { 
        renderingHints0.put(visualListModel0, defaultEditorKit_PasteAction0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.pdfsam.guiclient.commons.models.VisualListModel cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      ComboBoxModel<Integer> comboBoxModel0 = jComboBox0.getModel();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(comboBoxModel0);
      visualListModel0.addListDataListener(jComboBox1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.removeElements(13, (-12), true);
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[4] = integer4;
      Object object0 = new Object();
      int[] intArray0 = new int[9];
      intArray0[0] = (-1520);
      intArray0[1] = (int) integerArray0[4];
      intArray0[2] = 0;
      intArray0[3] = (int) integerArray0[2];
      intArray0[4] = (int) integerArray0[2];
      int int0 = (-1);
      intArray0[5] = (-1);
      intArray0[6] = 3818;
      intArray0[7] = int0;
      intArray0[8] = (int) integerArray0[3];
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(9, intArray0.length);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.3791235169376774
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = 0;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      visualListModel0.prependAllElements(collection0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, (Object) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      // Undeclared exception!
      try { 
        renderingHints0.put((Object) null, visualListModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.4517957860297357
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      visualListModel0.prependAllElements(collection0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[9];
      proxy_TypeArray0[0] = proxy_Type1;
      proxy_TypeArray0[1] = proxy_Type0;
      proxy_TypeArray0[2] = proxy_Type0;
      proxy_TypeArray0[3] = proxy_Type0;
      proxy_TypeArray0[4] = proxy_Type0;
      proxy_TypeArray0[5] = proxy_Type0;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[6] = proxy_Type2;
      proxy_TypeArray0[7] = proxy_Type1;
      proxy_TypeArray0[8] = proxy_Type1;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(proxy_TypeArray0);
      jComboBox0.repaint((-1), (-442), 1438, (-442));
      jComboBox0.enableInputMethods(true);
      String[] stringArray0 = new String[0];
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      visualListModel0.addListDataListener(jComboBox1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2521), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2521
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      integerArray0[5] = integer5;
      visualListModel0.subList((-1), 1000, true);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.prependAllElements(vector1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[8];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      visualListModel0.clearData();
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.HTTP;
      proxy_TypeArray0[3] = proxy_Type3;
      Proxy.Type proxy_Type4 = Proxy.Type.SOCKS;
      proxy_TypeArray0[4] = proxy_Type4;
      Proxy.Type proxy_Type5 = Proxy.Type.DIRECT;
      proxy_TypeArray0[5] = proxy_Type5;
      Proxy.Type proxy_Type6 = Proxy.Type.SOCKS;
      proxy_TypeArray0[6] = proxy_Type6;
      Proxy.Type proxy_Type7 = Proxy.Type.HTTP;
      proxy_TypeArray0[7] = proxy_Type7;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(proxy_TypeArray0);
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity(4);
      visualListModel0.setData(vector0);
      visualListModel0.updateElementAt(1033, (VisualPageListItem) null);
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = (-2064);
      int int1 = (-2666);
      visualListModel0.subList((-2064), (-2666), true);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-2666));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3917878574574845
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[10];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[7];
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type2 = Proxy.Type.HTTP;
      proxy_TypeArray0[1] = proxy_Type2;
      proxy_TypeArray0[2] = proxy_Type1;
      proxy_TypeArray0[3] = proxy_Type1;
      proxy_TypeArray0[4] = proxy_Type1;
      proxy_TypeArray0[5] = proxy_Type0;
      proxy_TypeArray0[6] = proxy_Type1;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(proxy_TypeArray0);
      jComboBox0.repaint((-2769), (-2521), (-2769), (-3015));
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, (Object) null);
      RescaleOp rescaleOp0 = new RescaleOp(1, 100.0F, renderingHints0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(10, intArray0.length);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.elementsChanged();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer1;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer4;
      visualListModel0.getElementAt((int) integerArray0[4]);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1520);
      intArray0[1] = (int) integerArray0[4];
      intArray0[2] = 0;
      intArray0[3] = (int) integerArray0[2];
      intArray0[4] = (int) integerArray0[2];
      int int0 = (-1);
      intArray0[5] = (-1);
      intArray0[6] = 3818;
      intArray0[7] = int0;
      intArray0[8] = (int) integerArray0[3];
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1778, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1778
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.9844935290697798
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      priorityQueue0.removeAll(linkedList0);
      visualListModel0.addAllElements(6, (Collection<VisualPageListItem>) priorityQueue0);
      VisualListModel visualListModel1 = new VisualListModel();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "ViZ|0X`(e!K";
      visualListModel1.getValidElements();
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel1.getListDataListeners();
      visualListModel1.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2218));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.addAllElements((-1519), (Collection<VisualPageListItem>) hashSet0);
      visualListModel0.addAllElements((-1519), (Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-35);
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-644), (-1519), byteArray0, byteArray0, byteArray0, (byte) (-77));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }
}
