/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:28:23 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      File file0 = MockFile.createTempFile("\"package\"", ">");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("^8}$ekY2zS", stringWriter0);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      // Undeclared exception!
      try { 
        jJTJavaParserState0.peekNode();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.394993443200781
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";");
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      stringWriter0.flush();
      SimpleNode simpleNode1 = new SimpleNode(45);
      simpleNode0.setIdentifier(";");
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
      
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.308405621922804
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      stringWriter0.flush();
      StringReader stringReader0 = new StringReader("T(;PZ?*J<UMKUW+HD-");
      simpleNode0.jjtAddChild((Node) null, 6);
      simpleNode0.setIdentifier(">=");
      SimpleNode simpleNode1 = new SimpleNode(6);
      simpleNode1.jjtGetParent();
      stringWriter0.write(":");
      simpleNode1.setIdentifier(":");
      simpleNode0.setIdentifier("BlockStatement");
      simpleNode1.jjtGetParent();
      simpleNode1.setIdentifier(">=");
      simpleNode0.jjtGetParent();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append('w');
      simpleNode1.dump(":", stringWriter1);
      simpleNode0.setIdentifier(":");
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-110947053));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -110947053
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1182968896299266
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetParent();
      simpleNode1.setIdentifier("<<");
      stringWriter0.write("<<");
      simpleNode1.setIdentifier("");
      stringWriter0.flush();
      stringWriter0.append('^');
      simpleNode0.dump("<<", stringWriter0);
      simpleNode1.setIdentifier((String) null);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream((InputStream) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1417887047160478
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      StringReader stringReader1 = new StringReader("@");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode0, 1);
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtGetParent();
      String string0 = ": ";
      String string1 = "VariableDeclaratorId";
      simpleNode0.setIdentifier("VariableDeclaratorId");
      simpleNode0.setIdentifier(": ");
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("9K");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.parent = null;
      StringWriter stringWriter1 = stringWriter0.append('O');
      stringWriter0.close();
      simpleNode0.dump(string0, stringWriter1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1578007452434291
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("*lt");
      StringReader stringReader1 = new StringReader("@");
      StringReader stringReader2 = new StringReader("@");
      StringReader stringReader3 = new StringReader("@");
      JavaParser javaParser0 = new JavaParser(stringReader2);
      simpleNode0.setIdentifier("*lt");
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode1.setIdentifier("}");
      simpleNode0.setIdentifier("}");
      simpleNode0.jjtGetParent();
      stringWriter0.append('3');
      stringWriter0.close();
      simpleNode1.dump((String) null, stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1074787335));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5682231038287275
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      stringWriter0.write("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 5385);
      simpleNode0.setIdentifier("<<");
      simpleNode0.jjtGetParent();
      StringWriter stringWriter1 = stringWriter0.append('O');
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.TokenMgrError", stringWriter1);
      simpleNode0.toString();
      simpleNode0.jjtGetChild(3619);
      simpleNode0.jjtGetParent();
      stringWriter1.close();
      simpleNode0.toString("}");
      // Undeclared exception!
      simpleNode0.dump("</", stringWriter1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8243076169818917
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("||");
      simpleNode0.jjtAddChild((Node) null, 739);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier(">>");
      simpleNode0.setIdentifier("&&");
      simpleNode0.jjtGetParent();
      simpleNode0.dump("&&", stringWriter0);
      simpleNode0.setIdentifier("&&");
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString("p4T8+YC44{oy,\"GTd");
      simpleNode0.jjtGetChild(102);
      simpleNode0.jjtGetParent();
      SimpleNode simpleNode1 = new SimpleNode(5380);
      simpleNode0.jjtGetChild(0);
      SimpleNode simpleNode2 = new SimpleNode(1);
      simpleNode2.jjtGetNumChildren();
      simpleNode0.toString("Gv>;,|MiJGHf'");
      assertEquals(740, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7811934850728233
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      String string0 = "T(;PZ_?*J<UMK+HD-";
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node1 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier(" : ");
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtGetParent();
      StringWriter stringWriter1 = stringWriter0.append('[');
      simpleNode0.dump("T(;PZ_?*J<UMK+HD-", stringWriter1);
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.toString(" : ");
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2034649036));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2034649036
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7685528005856301
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtGetParent();
      StringWriter stringWriter1 = stringWriter0.append('[');
      simpleNode0.dump("]vEhiH3!:ppah", stringWriter1);
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.toString(" : ");
      simpleNode0.toString(" : ");
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1090835249));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.setIdentifier("<~");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("Block");
      // Undeclared exception!
      try { 
        simpleNode0.dump("T(;PZ_?*J<UMK+HD-", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      StringWriter stringWriter0 = new StringWriter(2);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "Literal");
      stringWriter1.flush();
      SimpleNode simpleNode0 = new SimpleNode(2039);
      simpleNode0.setIdentifier("*rshft");
      // Undeclared exception!
      try { 
        simpleNode0.dump("EnumDeclaration", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.622827904722017
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 682;
      simpleNode0.jjtGetParent();
      String string0 = "upIs&Vva1lOEQ$Cia^";
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      stringWriter0.write("upIs&Vva1lOEQ$Cia^");
      simpleNode0.dump("upIs&Vva1lOEQ$Cia^", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringReader stringReader0 = new StringReader("upIs&Vva1lOEQ$Cia^");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      simpleNode0.jjtAddChild((Node) null, 1);
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-3243));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4084090469465655
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      StringWriter stringWriter0 = new StringWriter(2);
      StringWriter stringWriter1 = new StringWriter(2);
      StringReader stringReader0 = new StringReader("*rshft");
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.setIdentifier("Literal");
      simpleNode0.setIdentifier("Literal");
      simpleNode0.setIdentifier(")");
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("9K");
      SimpleNode simpleNode1 = new SimpleNode(50);
      StringWriter stringWriter2 = stringWriter1.append('t');
      simpleNode0.dump("`D??K", stringWriter1);
      simpleNode0.setIdentifier(":i-Qg:x\"oOuY3S55{oN");
      simpleNode1.toString("`D??K");
      simpleNode0.dump(":i-Qg:x\"oOuY3S55{oN", stringWriter2);
      simpleNode0.toString();
      StringWriter stringWriter3 = stringWriter2.append('@');
      simpleNode0.dump("", stringWriter3);
      assertEquals("t<AdditiveExpression>\n  <identifier>Literal</identifier>\n  <identifier>Literal</identifier>\n  <identifier>)</identifier>\n  <identifier>9K</identifier>\n</AdditiveExpression>\n<AdditiveExpression>\n  <identifier>Literal</identifier>\n  <identifier>Literal</identifier>\n  <identifier>)</identifier>\n  <identifier>9K</identifier>\n  <identifier>:i-Qg:x\"oOuY3S55{oN</identifier>\n</AdditiveExpression>\n@<AdditiveExpression>\n  <identifier>Literal</identifier>\n  <identifier>Literal</identifier>\n  <identifier>)</identifier>\n  <identifier>9K</identifier>\n  <identifier>:i-Qg:x\"oOuY3S55{oN</identifier>\n</AdditiveExpression>\n", stringWriter2.toString());
      assertEquals("t<AdditiveExpression>\n  <identifier>Literal</identifier>\n  <identifier>Literal</identifier>\n  <identifier>)</identifier>\n  <identifier>9K</identifier>\n</AdditiveExpression>\n<AdditiveExpression>\n  <identifier>Literal</identifier>\n  <identifier>Literal</identifier>\n  <identifier>)</identifier>\n  <identifier>9K</identifier>\n  <identifier>:i-Qg:x\"oOuY3S55{oN</identifier>\n</AdditiveExpression>\n@<AdditiveExpression>\n  <identifier>Literal</identifier>\n  <identifier>Literal</identifier>\n  <identifier>)</identifier>\n  <identifier>9K</identifier>\n  <identifier>:i-Qg:x\"oOuY3S55{oN</identifier>\n</AdditiveExpression>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node1 = javaParser0.currNode;
      stringReader0.mark(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetParent();
      int int1 = 5385;
      simpleNode0.jjtAddChild((Node) null, 5385);
      simpleNode0.setIdentifier("<<");
      simpleNode0.setIdentifier("");
      stringWriter0.close();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1053));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1053
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(42);
      String string0 = "</";
      JavaParser javaParser0 = new JavaParser("J~SK1");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 42);
      Node node0 = simpleNode0.parent;
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode0.jjtAddChild((Node) null, 34);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1108));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1108
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5574459045404252
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtSetParent((Node) null);
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode1.setIdentifier("<<");
      simpleNode1.setIdentifier("");
      simpleNode1.jjtGetParent();
      stringWriter0.write("9K", 0, 0);
      StringWriter stringWriter1 = stringWriter0.append('g');
      simpleNode1.jjtGetParent();
      simpleNode1.setIdentifier("<<");
      simpleNode1.jjtGetParent();
      StringWriter stringWriter2 = stringWriter0.append('g');
      stringWriter2.close();
      simpleNode1.dump("<<", stringWriter1);
      int int0 = 10;
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4099599417683046
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtSetParent((Node) null);
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetParent();
      simpleNode1.setIdentifier("<<");
      simpleNode1.setIdentifier("");
      simpleNode1.jjtGetParent();
      StringWriter stringWriter1 = stringWriter0.append('g');
      stringWriter1.close();
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.TokenMgrError", stringWriter0);
      simpleNode1.dump("com.soops.CEN4010.JMCA.JParser.TokenMgrError", stringWriter1);
      simpleNode1.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 5386);
      assertEquals(5387, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1265386804514934
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      StringReader stringReader1 = new StringReader("@");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      Node node0 = javaParser0.currNode;
      SimpleNode simpleNode0 = new SimpleNode(0);
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = null;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[8] = null;
      simpleNode1.children = nodeArray0;
      simpleNode1.toString("VariableDeclaratorId");
      simpleNode1.dump("VariableDeclaratorId", stringWriter0);
      assertEquals("<CompilationUnit></CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3389);
      Node node0 = null;
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.toString(">=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3389
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9108143899222205
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtSetParent((Node) null);
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode1.setIdentifier("<<");
      simpleNode1.setIdentifier("<<");
      simpleNode1.jjtGetParent();
      stringWriter0.write("9K", 0, 0);
      StringWriter stringWriter1 = stringWriter0.append('g');
      simpleNode1.jjtGetParent();
      StringWriter stringWriter2 = stringWriter1.append('O');
      simpleNode0.dump("<<", stringWriter2);
      simpleNode1.setIdentifier("3'#%Ry#^Z-4r");
      SimpleNode simpleNode2 = new SimpleNode(4603);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(4603);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4603
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      int int0 = (-1108);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1108));
      Node node0 = simpleNode0.parent;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 0);
      arrayList0.toArray(javaParserTokenManager0.jjstrLiteralImages);
      Node[] nodeArray0 = new Node[9];
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      nodeArray0[8] = (Node) simpleNode0;
      // Undeclared exception!
      try { 
        simpleNode0.toString("]vEhiH3!:ppah");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1108
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1608);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1608
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2856280477226785
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      stringWriter0.flush();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      simpleNode0.jjtAddChild((Node) null, 6);
      simpleNode0.setIdentifier("QU[");
      SimpleNode simpleNode1 = new SimpleNode(6);
      simpleNode1.jjtGetParent();
      simpleNode1.setIdentifier(":");
      simpleNode0.setIdentifier("BlockStatement");
      simpleNode1.jjtGetParent();
      simpleNode1.setIdentifier("QU[");
      SimpleNode simpleNode2 = new SimpleNode(46);
      simpleNode2.jjtGetParent();
      StringWriter stringWriter1 = stringWriter0.append('O');
      stringWriter1.append('O');
      simpleNode0.dump("XjOHs=t", stringWriter0);
      simpleNode0.setIdentifier("*lt");
      simpleNode2.dump(";E(", stringWriter1);
      simpleNode2.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetChild(1);
      assertEquals(7, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4414056445508083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node1 = javaParser0.currNode;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-52);
      byte byte0 = (byte) (-95);
      byteArray0[1] = (byte) (-95);
      byteArray0[2] = (byte)37;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser1 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser1.MultiplicativeExpression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5179872908529675
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      StringWriter stringWriter0 = new StringWriter(2);
      stringWriter0.append((CharSequence) "Literal");
      stringWriter0.flush();
      SimpleNode simpleNode0 = new SimpleNode(50);
      simpleNode0.dump("zRrQ*F[2,RI`q6rGl<", stringWriter0);
      assertEquals("Literal", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("zRrQ*F[2,RI`q6rGl<");
      assertEquals("zRrQ*F[2,RI`q6rGl<AdditiveExpression", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5915237539570675
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringReader stringReader0 = new StringReader("T(;PZ_?*J<UMK+HD-");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node1 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetParent();
      simpleNode0.setIdentifier("T(;PZ_?*J<UMK+HD-");
      simpleNode0.setIdentifier("");
      simpleNode0.jjtGetParent();
      StringWriter stringWriter1 = stringWriter0.append('[');
      stringWriter1.close();
      simpleNode0.dump("", stringWriter1);
      simpleNode0.setIdentifier("^6qRXLeBwo>wIr#-R&o");
      simpleNode0.jjtClose();
      simpleNode0.jjtSetParent((Node) null);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter2.append('[');
      simpleNode0.dump("f@{HK*yQUig|w*%sg", stringWriter3);
      simpleNode0.dump((String) null, stringWriter2);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtOpen();
      simpleNode0.dump("f@{HK*yQUig|w*%sg", stringWriter3);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(5360);
      File file0 = MockFile.createTempFile("rPzuJ6x^R", "rPzuJ6x^R");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      Node node0 = javaParser0.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-956));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-903));
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte) (-24);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte)95;
      byteArray0[7] = (byte)102;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)95);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OWe>AY2]u&)HIx|!{,");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 2702);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 1;
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)117);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }
}
