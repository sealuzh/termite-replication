/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:38:19 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.738617337824592
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("general.error.promotesSecurityRisk");
      ontologyTerm0.setOntologyName("heU%*<");
      ontologyTerm0.setDescription("Unknown");
      ontologyTerm0.setTerm(">YZiqe*P?xU");
      ontologyTerm0.setOntologyName(">YZiqe*P?xU");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      rawVariable0.getCodeBookNumber();
      rawVariable0.getYear();
      rawVariable0.getLabel();
      rawVariable0.clone();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      User.detectFieldChanges(user0, user0, user0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.7420851553536156
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      derivedVariable0.setCleaned(false);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.clone();
      supportingDocument0.setDescription("NON_EXISTENT_ALIAS_FILE_PATH");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.8142313415531164
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.stream();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.getFilePath();
      derivedVariable0.setNotes("..y^>nQJ");
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getFilePath();
      derivedVariable0.getForm();
      derivedVariable0.getYear();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.clone();
      derivedVariable0.getAlias();
      assertEquals("..y^>nQJ", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6166581159129416
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.columnEnd = "blank";
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6183972463477247
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("ES7M/;@s#9fvkW");
      assertEquals("ES7M/;@s#9fvkW", rawVariable0.getLabel());
      
      derivedVariable0.setCleaned(true);
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.createVariableSummary();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6925503526260917
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("user.userID.label");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument2);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1719330103601107
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("x:q1ZFGvPP6<R");
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(false);
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      rawVariable0.setLabel("l");
      rawVariable0.setName("U}A-GY>}");
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1066280319823423
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.getCategory();
      derivedVariable0.setCategory("EpI71,$jF#PA[|+k");
      derivedVariable0.getDisplayName();
      assertEquals("EpI71,$jF#PA[|+k", derivedVariable0.getCategory());
      
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      User user2 = new User("Noo=Qh1r(", (String) null);
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getDisplayName();
      rawVariable1.getQuestionNumber();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.9548754124764436
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.alternativeVariable.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setNotes((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("K|OA_r", "variable.questionNumber.label");
      RawVariable rawVariable2 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, rawVariable2, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.getFilePath();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.isCleaned();
      derivedVariable1.getCategory();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.721952113903694
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      
      supportingDocument0.setDescription("VnV\f~#u~L<'8pE");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("x:q1ZFGvPP6<R");
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean1 == boolean0);
      
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.745910136412458
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getValueLabels();
      User user0 = new User("|q>$>", "beD7f0H i[LiJte23");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.747647826160577
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable3 = (RawVariable)rawVariable2.clone();
      assertFalse(rawVariable3.isNewRecord());
      assertEquals("Unknown", rawVariable3.getAvailability());
      assertEquals(0, rawVariable3.getIdentifier());
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
      assertEquals("Unknown", rawVariable3.getCategory());
      assertFalse(rawVariable3.isCleaned());
      
      supportingDocument0.setDescription("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setIdentifier((-1975));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.listIterator();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9172276743174836
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      derivedVariable0.setCleaned(false);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCategory();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable2);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable2.createVariableSummary();
      User user2 = new User("N78f\t&to5s-UZ5OIL", (String) null);
      User user3 = new User();
      user3.setFirstName("..wCJ?=dDTBs~I<n+");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user3, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8875113783568844
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.getDisplayName();
      derivedVariable0.removeValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) null);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable1.getCodeBookNumber();
      derivedVariable0.removeSourceVariable(rawVariable0);
      boolean boolean0 = rawVariable1.isCoded();
      assertFalse(boolean0);
      
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.3665903996941062
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(false);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCategory();
      derivedVariable0.setAvailability("Unknown");
      derivedVariable0.setCategory("Unknown");
      derivedVariable0.getDisplayName();
      derivedVariable0.setYear("Unknown");
      rawVariable0.setIdentifier(0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.createVariableSummary();
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", derivedVariable0.getYear());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable2.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6183972463477243
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getFilePath();
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.357285019952196
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.476357846205098
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("$nd$u2");
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("p~<k;ho8O$*g?K)", "bl)ank");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setDescription("bl)ank");
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("3P3x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6212645889471853
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCoded();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.form = "[hE6Hq^(<S(pJ#zl?";
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("[hE6Hq^(<S(pJ#zl?", rawVariable0.getForm());
      
      rawVariable1.getYear();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8415821543946986
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable2);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      User user2 = new User("user.password.label", "\"fk5&dl=P3?1kJ5PVW");
      User user3 = new User();
      user2.setFirstName("user.password.label");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      derivedVariable0.getDisplayName();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("|q>$>");
      rawVariable0.createVariableSummary();
      assertEquals("|q>$>", rawVariable0.getNotes());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.867106336929976
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(false);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(rawVariable0);
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable0.getCategory();
      derivedVariable0.setCategory("Unknown");
      derivedVariable0.getDisplayName();
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable2.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      derivedVariable3.addSourceVariable(rawVariable0);
      DerivedVariable derivedVariable4 = (DerivedVariable)derivedVariable3.clone();
      assertEquals("Unknown", derivedVariable4.getCategory());
      assertEquals(0, derivedVariable4.getIdentifier());
      assertFalse(derivedVariable4.isCleaned());
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
      assertEquals("Unknown", derivedVariable4.getAvailability());
      assertFalse(derivedVariable4.isNewRecord());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7866687254045313
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("}5Y2'");
      supportingDocument0.setDescription("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.questionNumber = "7%arvBnF(`(r':GZLT";
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.973176228217073
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCodeBookNumber("UNABLE_TO_GET_USER_IDENTIFIER");
      rawVariable1.setIdentifier((-2975));
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.createVariableSummary();
      Variable.validateFields(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.containsSourceVariable((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7064187767445995
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("@Zr/rb|");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.remove((Object) "@Zr/rb|");
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setAlias("@Zr/rb|");
      rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      rawVariable0.clone();
      rawVariable0.setAvailability("@Zr/rb|");
      rawVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      Variable.validateFields(rawVariable0);
      RawVariable.validateFields(rawVariable0);
      rawVariable0.getNotes();
      User user0 = new User("R6F/:E", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setQuestionNumber("qmV.8fp|=");
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.7884413432093758
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.getFilePath();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.773777680548033
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("+,C`ITi0m/t;fo`5{k0", "+,C`ITi0m/t;fo`5{k0");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable1.getCodeBookNumber();
      derivedVariable0.removeSourceVariable(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      valueLabel0.setValue((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel4 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel4);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      arrayList1.add((Variable) rawVariable0);
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabel5.setValue("-");
      derivedVariable0.removeSourceVariables(arrayList1);
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("nl'z_]L");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getValueLabels();
      derivedVariable0.setIdentifier(644);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setLabel("|q>$>");
      rawVariable0.getValueLabels();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals("|q>$>", rawVariable0.getLabel());
      assertFalse(arrayList0.isEmpty());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.5803725724750626
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.821130325493228
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.getFilePath();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("jchEhSgy<`M@&Bu");
      rawVariable0.setCleaned(false);
      String string0 = "user.addressLine1.label";
      rawVariable0.setColumnStart("user.addressLine1.label");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("variable.cleaningDescription.label", "nv6FF^*");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setForm("u");
      derivedVariable0.setCleaningDescription("supportingDocument.fileName.label");
      assertEquals("supportingDocument.fileName.label", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.7971377304062592
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "3C eAg_4Q";
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable2.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable2.getSupportingDocuments();
      rawVariable1.setSupportingDocuments(arrayList1);
      rawVariable0.setIdentifier((-1368));
      assertEquals((-1368), rawVariable0.getIdentifier());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable2.removeSupportingDocument(supportingDocument1);
      derivedVariable0.createVariableSummary();
      Variable.validateFields(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.blank");
      rawVariable0.setForm("|q>$>");
      rawVariable0.setAvailability("tje^9Z");
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.setAvailability("<o%,g ");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.isCleaned();
      rawVariable0.getAvailability();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnEnd();
      rawVariable0.getValueLabels();
      System.setCurrentTimeMillis(1L);
      rawVariable0.isCleaned();
      rawVariable0.getSupportingDocuments();
      assertEquals("<o%,g ", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6315560383090397
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList1);
      rawVariable1.getFilePath();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.061133509315999
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      ValueLabel valueLabel3 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel3);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("RH&Y%-p$&'R\"E1.bYU", (String) null);
      User user1 = new User();
      ValueLabel.detectFieldChanges(user1, rawVariable0, valueLabel0, valueLabel3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel5);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm1);
      derivedVariable2.removeOntologyTerms(arrayList1);
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user2, derivedVariable2, derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals(0, arrayList2.size());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.624185799765243
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      valueLabel0.setValue((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      arrayList0.add(supportingDocument0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      
      supportingDocument0.setDescription("Z8");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5971960405549486
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      valueLabel0.setValue((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("-", (String) null);
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel2, valueLabel2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel3 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable2.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable3);
      assertEquals(1, arrayList1.size());
      
      derivedVariable3.addSourceVariable(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable3.getIdentifier());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(182);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAvailability("Unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      assertEquals(182, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.836041545443152
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("p~<k;ho8O$*g?K)", "p~<k;ho8O$*g?K)");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      User user1 = new User("general.error.blankField", "UNABLE_TO_CHECK_DATABASE_EXISTS");
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.0785463995716924
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      derivedVariable0.setCleaned(false);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList2.add(supportingDocument2);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCategory();
      derivedVariable0.setCategory("Unknown");
      derivedVariable0.getDisplayName();
      User user1 = new User();
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      
      User user3 = new User("", (String) null);
      User user4 = new User();
      ArrayList<MacawChangeEvent> arrayList3 = DerivedVariable.detectFieldChanges(user4, derivedVariable1, derivedVariable1);
      assertTrue(arrayList3.isEmpty());
      
      derivedVariable1.getDisplayName();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0111135035319254
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setQuestionNumber("UNABLE_TO_CLEAR_TABLE");
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User("|q>$>", "|q>$>");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setDescription("blank");
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user1 = new User("blank", "|q>$>");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      derivedVariable1.addSourceVariable(rawVariable0);
      assertEquals("UNABLE_TO_CLEAR_TABLE", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.createVariableSummary();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList2);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6166581159129416
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      User user0 = new User("general.error.blankField", "UNABLE_TO_CHECK_DATABASE_EXISTS");
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getName();
      rawVariable1.setName("");
      rawVariable0.setIdentifier((-1));
      rawVariable0.setCodeBookNumber("");
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.3196998305427026
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath((String) null);
      rawVariable0.setColumnEnd("");
      rawVariable0.getColumnEnd();
      rawVariable0.getAvailability();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setCoded(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIdentifier(0);
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setDescription("");
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setForm("eKMGmz,?;");
      rawVariable0.setCoded(false);
      rawVariable0.setCleaned(false);
      rawVariable0.getForm();
      rawVariable0.notes = "IQd}|]-{yW` ;\"";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getCleaningDescription();
      rawVariable0.setColumnStart("gwC97b,vg");
      assertEquals("gwC97b,vg", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      valueLabel0.setValue((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.questionNumber = "";
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.getCategory();
      rawVariable0.getCleaningDescription();
      rawVariable0.getLabel();
      rawVariable0.setYear("6Ow[)XM6n/\"?Th7H");
      rawVariable0.setCleaningStatus((String) null);
      int int0 = rawVariable0.getIdentifier();
      assertEquals("6Ow[)XM6n/\"?Th7H", rawVariable0.getYear());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.908465362520742
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("UySB");
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.form = "/~x~!`<b t?44./3r";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("UySB");
      derivedVariable0.form = "/~x~!`<b t?44./3r";
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.getCodeBookNumber();
      assertEquals("UySB", derivedVariable0.getNotes());
      
      derivedVariable0.setNotes((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("", "d;MsGWe`olLDPxc&P*Q");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable2.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable1.removeOntologyTerms(arrayList0);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      rawVariable0.getFilePath();
      rawVariable0.setColumnStart("|q>$>");
      rawVariable0.setIdentifier(2147483645);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(false);
      rawVariable0.getForm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getCleaningDescription();
      rawVariable0.setColumnStart("#2Sm]>5!VkYqp");
      assertEquals("#2Sm]>5!VkYqp", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.6256878823154617
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-3631));
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setColumnStart("");
      derivedVariable0.getAvailability();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.700950732939748
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.setCoded(false);
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      assertFalse(ontologyTerm3.equals((Object)ontologyTerm0));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.626916081775054
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      Function<String, OntologyTerm> function0 = (Function<String, OntologyTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super String, ? extends OntologyTerm>) function0);
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setForm("");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("h");
      derivedVariable0.getAvailability();
      derivedVariable0.setCategory("");
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.clone();
      assertEquals("h", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("_{Crgy/ ~0#:b+");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("_{Crgy/ ~0#:b+");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setIdentifier((-1975));
      rawVariable0.getColumnEnd();
      assertEquals((-1975), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.805754096314494
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setMissingValue(false);
      valueLabel0.setValue("Y?NfyME1oMX|T$r-/");
      valueLabel0.setValue("|q>$>");
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("Y?NfyME1oMX|T$r-/");
      arrayList0.add(supportingDocument0);
      supportingDocument0.clone();
      arrayList0.listIterator();
      rawVariable0.setColumnEnd("|q>$>");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getYear();
      assertEquals("|q>$>", rawVariable0.getColumnEnd());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable1.getForm();
      rawVariable1.getColumnStart();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.1931737420535486
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCategory();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("Unknown");
      derivedVariable0.getDisplayName();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCodeBookNumber("Unknown");
      derivedVariable0.createVariableSummary();
      User user1 = new User("Unknown", "blank");
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable0);
      assertEquals("Unknown", derivedVariable2.getCodeBookNumber());
      
      derivedVariable1.getDisplayName();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6445466163956546
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "user.email.saveChanges";
      rawVariable0.setFilePath("user.email.saveChanges");
      rawVariable0.setIdentifier(3);
      rawVariable0.getLabel();
      rawVariable0.getColumnEnd();
      String string1 = "QCyzP_@XgGsyy";
      rawVariable0.setColumnStart("QCyzP_@XgGsyy");
      User user0 = new User();
      rawVariable0.setColumnEnd("");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.clone();
      derivedVariable0.setCoded(true);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setName("H8TOvR/D)N&%mrvCz3");
      arrayList1.containsAll(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User("Unknown", "");
      User.checkValidUserIDField("Unknown");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.setName("Unknown");
      rawVariable0.setAvailability("Unknown");
      assertEquals("Unknown", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.876949002992066
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setName("M#2[na61by_g)LOD%=#");
      derivedVariable0.setNotes("M#2[na61by_g)LOD%=#");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("", "M#2[na61by_g)LOD%=#");
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel1);
      derivedVariable0.addValueLabel(valueLabel1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      assertEquals("M#2[na61by_g)LOD%=#", derivedVariable0.getNotes());
      
      derivedVariable2.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8819629168922707
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("p~<k;ho8O$*g?K)", "p~<k;ho8O$*g?K)");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      Variable.validateFields(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.753908722080709
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.isCoded();
      User user0 = new User("|q>$>", "variable.year.label");
      User.checkValidUserIDField("");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      Variable.validateFields(rawVariable1);
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.3719177844436765
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("n", "");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm5);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.696783156858896
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm2);
      arrayList1.add(ontologyTerm2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList1);
      assertEquals(3, arrayList1.size());
      
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      rawVariable0.setCleaningStatus("RM?e'rHtD[IQ");
      valueLabel0.setMissingValue(false);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      valueLabel0.setValue((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable1.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      rawVariable0.getFilePath();
      rawVariable0.setColumnStart("q>$>");
      rawVariable0.setIdentifier(2147483645);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(false);
      rawVariable0.getForm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getCleaningDescription();
      rawVariable0.setColumnStart("#2Sm]>5!VkYqp");
      assertEquals("2147483645", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.6695893081660844
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      UnaryOperator<OntologyTerm> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setForm("");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      rawVariable1.setSupportingDocuments(arrayList2);
      rawVariable1.cloneAttributes(derivedVariable0);
      rawVariable1.setForm("LR:aEG");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable2 = new RawVariable();
      arrayList3.add((Variable) rawVariable2);
      derivedVariable1.setIsNewRecord(true);
      derivedVariable1.addSourceVariables(arrayList3);
      RawVariable rawVariable3 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("LR:aEG", rawVariable1.getForm());
      
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.addOntologyTerms(arrayList0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.78544177211529
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setPhone("variable.category.label");
      derivedVariable0.setAlias("variable.category.label");
      user0.setFirstName("variable.codeBookNumber.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCategory("variable.category.label");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.6686201280924267
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.clone();
      rawVariable0.setCleaningStatus("CANCEL");
      rawVariable0.setAlias("SzhSi6Z'P.>,6M");
      rawVariable0.setColumnStart("CANCEL");
      rawVariable0.getCleaningDescription();
      rawVariable0.setCoded(true);
      rawVariable0.setForm("");
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("UNABLE_TO_GET_SOURCE_VARIABLES");
      rawVariable0.getNotes();
      assertEquals("UNABLE_TO_GET_SOURCE_VARIABLES", rawVariable0.getNotes());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.878666739983584
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCleaned(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("}5Y2'");
      rawVariable1.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument4);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "variable.notes.label";
      derivedVariable0.removeSourceVariable((Variable) null);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription("x:q1ZFGvPP6<R");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.0593725391245323
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User("p~<k;ho8O$*g?K)", "bl)ank");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm0.setDescription("bl)ank");
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user1 = new User("SwWKsqYJ3;z;P6", (String) null);
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertTrue(arrayList1.isEmpty());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.741435101182435
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCoded());
      assertEquals(0, rawVariable2.getIdentifier());
      
      supportingDocument0.setDescription("x:q1ZFGvPP6<R");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
  }
}
