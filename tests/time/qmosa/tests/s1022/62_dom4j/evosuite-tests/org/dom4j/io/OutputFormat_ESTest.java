/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:07:14 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4639939523139693
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertFalse(boolean0);
      
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "MT.'";
      stringArray0[2] = "-expandEmpty-trimText";
      stringArray0[3] = "";
      outputFormat0.setLineSeparator((String) null);
      stringArray0[4] = "-expandEmpty-trimText";
      stringArray0[5] = "UTF-8";
      stringArray0[6] = "-expandEmpty-trimText";
      stringArray0[7] = "";
      stringArray0[8] = "-expandEmpty-trimText";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat2 = new OutputFormat("", true, "oK]*:D]M|}iqju");
      outputFormat0.setNewLineAfterDeclaration(true);
      boolean boolean1 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9456645463488123
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "UTF-8";
      OutputFormat outputFormat0 = new OutputFormat("UTF-8", false, (String) null);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getEncoding();
      outputFormat0.getEncoding();
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("(i<*0n");
      assertEquals("(i<*0n", outputFormat0.getIndent());
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8519340006187157
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.isSuppressDeclaration();
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "MT.'";
      stringArray0[2] = "{P0hB]ki~irA?xKIv~u";
      stringArray0[3] = "";
      outputFormat0.setLineSeparator((String) null);
      stringArray0[4] = "{P0hB]ki~irA?xKIv~u";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setOmitEncoding(false);
      OutputFormat outputFormat3 = new OutputFormat("8u,t>T&<WbQ4}", false, ".X^k1~OH");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat3.isNewLineAfterDeclaration();
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.365454235697414
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[14];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "j3`";
      stringArray0[2] = "j3`";
      stringArray0[3] = "j3`";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "j3`";
      stringArray0[6] = "'-ZJ}pK6T";
      stringArray0[7] = "(i<*0n}";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("j3`");
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, '\"');
      assertEquals("j3`", outputFormat0.getEncoding());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat2.getLineSeparator();
      String string0 = outputFormat2.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5335422100206513
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setEncoding("");
      outputFormat1.setIndent(false);
      OutputFormat outputFormat2 = new OutputFormat("aNXGWa;NJ:ziu].;j", true, "");
      OutputFormat outputFormat3 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "z";
      outputFormat3.parseOptions(stringArray0, 0);
      OutputFormat outputFormat4 = new OutputFormat("-expandEmpty-newlnes");
      OutputFormat outputFormat5 = new OutputFormat("");
      outputFormat3.setPadText(false);
      outputFormat5.setTrimText(true);
      outputFormat5.setIndent("-trimText");
      outputFormat2.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      int int0 = outputFormat5.parseOptions(stringArray0, 0);
      assertTrue(outputFormat5.isTrimText());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3111318660248874
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("{P0hB]ki~irA?xKIv~u", true, "-newlines");
      outputFormat1.setTrimText(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-5ML%oQe;Efj";
      stringArray0[3] = "";
      OutputFormat outputFormat2 = new OutputFormat("%C");
      outputFormat2.setNewlines(false);
      OutputFormat outputFormat3 = new OutputFormat("-5ML%oQe;Efj", false);
      outputFormat3.setIndentSize(0);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent("");
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-omitEncoding";
      stringArray1[1] = "";
      stringArray1[2] = "{P0hB]ki~irA?xKIv~u";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[6] = "";
      stringArray1[7] = "-newlines";
      stringArray1[8] = "";
      int int0 = outputFormat3.parseOptions(stringArray1, 0);
      assertEquals("", outputFormat3.getIndent());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5995886388348914
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.isSuppressDeclaration();
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "MT.'";
      stringArray0[2] = "{P0hB]ki~irA?xKIv~u";
      stringArray0[3] = "";
      outputFormat0.setLineSeparator((String) null);
      stringArray0[4] = "{P0hB]ki~irA?xKIv~u";
      stringArray0[5] = "UTF-8";
      stringArray0[6] = "{P0hB]ki~irA?xKIv~u";
      stringArray0[7] = "";
      stringArray0[8] = "{P0hB]ki~irA?xKIv~u";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat2 = new OutputFormat("b[4BRXRYrY__MeF", true);
      outputFormat2.setOmitEncoding(true);
      assertTrue(outputFormat2.isOmitEncoding());
      
      outputFormat1.setNewLineAfterDeclaration(false);
      boolean boolean0 = outputFormat1.isNewLineAfterDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7564101636837464
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "aNXGWa;NJ:ziu].;j");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-indentSize", false, "");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "aNXGWa;NJ:ziu].;j";
      outputFormat0.setXHTML(true);
      stringArray0[1] = "hC";
      stringArray0[2] = "";
      stringArray0[3] = "hC";
      stringArray0[4] = "-indentSize";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.isSuppressDeclaration();
      outputFormat2.setExpandEmptyElements(true);
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat1.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter('1');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (1)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.443497918945448
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat("-xhtml1C", true, "aNXGWa;NJ:ziu].;j");
      outputFormat0.setPadText(false);
      outputFormat1.setIndent(true);
      OutputFormat outputFormat2 = new OutputFormat("-xhtml1C", false, "");
      int int0 = 0;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "aNXGWa;NJ:ziu].;j";
      stringArray0[2] = "hC";
      stringArray0[3] = "hC";
      stringArray0[4] = "aNXGWa;NJ:ziu].;j";
      stringArray0[5] = "hC";
      stringArray0[6] = "-xhtml1C";
      stringArray0[7] = "-xhtml-5ML%oQe;Efj";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"aNXGWa;NJ:ziu].;j\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0871068051485753
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "2";
      stringArray0[1] = "'L";
      stringArray0[2] = "Dy&G+V8t_5o*/h";
      stringArray0[4] = "Dy&G+V8t_5o*/h";
      stringArray0[5] = "ILV";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setPadText(true);
      outputFormat1.isPadText();
      outputFormat1.setIndent(stringArray0[3]);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.isPadText();
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      char char0 = outputFormat1.getAttributeQuoteCharacter();
      assertTrue(outputFormat1.isPadText());
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8079657826038025
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("");
      outputFormat1.setXHTML(true);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(false);
      outputFormat1.isXHTML();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.getLineSeparator();
      OutputFormat.createCompactFormat();
      outputFormat1.setLineSeparator("7 q((KX{zsWy8:C{C|$");
      outputFormat1.isSuppressDeclaration();
      assertEquals("7 q((KX{zsWy8:C{C|$", outputFormat1.getLineSeparator());
      
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "";
      stringArray0[2] = "\n";
      stringArray0[3] = "";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "7 q((KX{zsWy8:C{C|$";
      stringArray0[6] = "7 q((KX{zsWy8:C{C|$";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat2.getLineSeparator());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8077728441511685
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.isSuppressDeclaration();
      outputFormat1.setExpandEmptyElements(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "MT.'";
      stringArray0[2] = "{P0hB]ki~irA?xKIv~u";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setExpandEmptyElements(true);
      OutputFormat outputFormat3 = new OutputFormat();
      OutputFormat.createPrettyPrint();
      outputFormat3.setNewLineAfterDeclaration(true);
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat4 = new OutputFormat("");
      outputFormat4.getLineSeparator();
      // Undeclared exception!
      try { 
        outputFormat4.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.278697210295098
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ik", true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("V7?K)`)NyFvq");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-2913));
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setPadText(true);
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent("");
      outputFormat2.setXHTML(true);
      outputFormat0.setIndent(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat2.setIndent("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getLineSeparator();
      assertEquals((-2913), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9975070143782867
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("f", true);
      outputFormat0.setIndentSize(1110);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent("\n");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Q');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Q)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8161869165714504
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "aNXG-aVNJ:z].j");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize((-1916129832));
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\n";
      stringArray0[1] = "";
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      stringArray0[4] = "I@f%\"YhZ%#&.!";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isPadText();
      outputFormat0.setIndent("");
      outputFormat0.setIndent("Invalid attribute quote character (");
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("Invalid attribute quote character (", outputFormat0.getIndent());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4494008484301473
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "aNXGWa;NJ:ziu].;j";
      stringArray0[4] = "aNXGWa;NJ:ziu].;j";
      stringArray0[2] = "sqMK@p\"O/>>";
      stringArray0[3] = "sqMK@p\"O/>>";
      stringArray0[4] = "aNXGWa;NJ:ziu].;j";
      stringArray0[5] = "sqMK@p\"O/>>";
      stringArray0[6] = "aNXGWa;NJ:ziu].;j";
      stringArray0[7] = "sqMK@p\"O/>>";
      stringArray0[8] = "sqMK@p\"O/>>";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("-expandEmpty\n");
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = new OutputFormat("sqMK@p\"O/>>", false, "");
      outputFormat3.parseOptions(stringArray0, 1392);
      OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('&');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (&)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "9y,";
      OutputFormat outputFormat0 = new OutputFormat("9y,");
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", true);
      outputFormat0.setLineSeparator("Invalid attribute quote character (");
      boolean boolean0 = false;
      String string1 = "aNXGWa;NJ:zi";
      OutputFormat outputFormat2 = new OutputFormat("aNXGWa;NJ:zi", true);
      outputFormat2.setNewlines(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('m');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (m)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.555947011804492
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-newlines", true, "-newlines");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-newlines";
      stringArray0[5] = "-newlines";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("1QTe\"4 @c?:+");
      outputFormat2.setIndentSize(6);
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals("\n", outputFormat3.getLineSeparator());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2296723844383997
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[0];
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("pg!ugyS:");
      outputFormat1.setPadText(true);
      outputFormat1.setIndent("-newlines");
      outputFormat0.setTrimText(false);
      outputFormat1.setNewlines(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize((-3275));
      outputFormat0.setIndentSize((-1556));
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setTrimText(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setTrimText(false);
      outputFormat1.isTrimText();
      outputFormat0.setLineSeparator("-newlines");
      outputFormat0.setIndent("pg!ugyS:");
      outputFormat2.setExpandEmptyElements(true);
      outputFormat1.setLineSeparator("");
      assertTrue(outputFormat1.isTrimText());
      
      outputFormat1.setTrimText(false);
      boolean boolean0 = outputFormat2.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7790602198084993
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getLineSeparator();
      OutputFormat.createCompactFormat();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\n";
      stringArray0[1] = "{P0hB]ki~irA?xKIv~u";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "\n";
      stringArray0[5] = null;
      stringArray0[6] = "\n";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat1 = new OutputFormat("", true, "\n");
      outputFormat0.setNewLineAfterDeclaration(true);
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.278697210295098
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ik", true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("V7?K)`)NyFvq");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-2913));
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(true);
      assertEquals("", outputFormat0.getLineSeparator());
      
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("ik");
      outputFormat1.setXHTML(false);
      outputFormat2.setIndent(true);
      outputFormat2.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat3 = new OutputFormat("", true, "");
      outputFormat3.setNewlines(true);
      outputFormat1.setIndent("-suppressDeclaration");
      boolean boolean0 = outputFormat3.isExpandEmptyElements();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.4162134738653434
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("L;IoBM");
      outputFormat1.setXHTML(false);
      outputFormat0.setNewLineAfterNTags(2550);
      outputFormat0.setTrimText(false);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setEncoding("");
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.getLineSeparator();
      outputFormat2.setSuppressDeclaration(true);
      outputFormat1.isNewlines();
      assertEquals("L;IoBM", outputFormat1.getLineSeparator());
      
      outputFormat2.getAttributeQuoteCharacter();
      outputFormat2.isExpandEmptyElements();
      boolean boolean0 = outputFormat2.isNewlines();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("p(L7(#4|_", false, "p(L7(#4|_");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding("p(L7(#4|_");
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize((-3257));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("-expandEmptyaNXG-a;NJ:ziu].;j");
      outputFormat0.setIndent("p(L7(#4|_");
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("p(L7(#4|_", outputFormat0.getIndent());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.226535129536439
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setLineSeparator("L;IoBM");
      outputFormat0.setXHTML(false);
      outputFormat0.setExpandEmptyElements(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setIndentSize((-1848772072));
      outputFormat1.getAttributeQuoteCharacter();
      OutputFormat.createCompactFormat();
      outputFormat1.isExpandEmptyElements();
      outputFormat1.isNewlines();
      outputFormat0.setIndent("-newlnes");
      assertEquals("-newlnes", outputFormat0.getIndent());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1761414031011608
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("mjWORSfI");
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(false);
      assertFalse(outputFormat1.isNewLineAfterDeclaration());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent(false);
      outputFormat0.getIndent();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getEncoding();
      outputFormat2.setNewlines(true);
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "mjWORSfI";
      stringArray0[1] = "mjWORSfI";
      stringArray0[2] = "_,B?i~I:-MW8${,z\"fs";
      stringArray0[3] = "mjWORSfI";
      stringArray0[4] = "mjWORSfI";
      stringArray0[5] = "VQg/[iV`0R";
      int int0 = outputFormat0.parseOptions(stringArray0, 1354);
      assertEquals(1354, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "aNXGWa;NJ:ziu].;j");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-indentSize", false, "");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "aNXGWa;NJ:ziu].;j";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "-indentSize";
      OutputFormat outputFormat2 = new OutputFormat("");
      outputFormat2.setIndentSize(828);
      OutputFormat outputFormat3 = new OutputFormat("-expandEmpty9y,", false);
      outputFormat2.getEncoding();
      assertEqualsoutputFormat2.getIndent());
      
      outputFormat3.getEncoding();
      int int0 = outputFormat1.parseOptions(stringArray0, 1580);
      assertEquals(1580, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-newlines";
      outputFormat1.setOmitEncoding(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding((String) null);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "hC";
      stringArray1[1] = "hC";
      stringArray1[2] = null;
      stringArray1[3] = "-newlines";
      stringArray1[4] = "-newlines";
      stringArray1[5] = "hC";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray1, (-940));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -940
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "rHcffz-{,EuY7@";
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("rHcffz-{,EuY7@", true);
      outputFormat0.setLineSeparator("rHcffz-{,EuY7@");
      outputFormat0.setNewlines(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('*');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (*)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewlines(true);
      outputFormat1.setNewlines(true);
      outputFormat0.setPadText(true);
      outputFormat0.setNewLineAfterNTags(2286);
      outputFormat0.setXHTML(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewlines(true);
      assertEquals(2286, outputFormat0.getNewLineAfterNTags());
      
      outputFormat1.isXHTML();
      boolean boolean0 = outputFormat1.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("5Mf}`SWaL ?", false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, int0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("5Mf}`SWaL ?", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize((-4007));
      outputFormat0.setLineSeparator("-lineSeparator");
      outputFormat0.setNewlines(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setLineSeparator("-lineSeparator");
      outputFormat0.getLineSeparator();
      outputFormat0.isXHTML();
      outputFormat0.setIndent((String) null);
      outputFormat0.getLineSeparator();
      assertEquals("-lineSeparator", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.3947559363940085
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("f", true);
      outputFormat0.setIndentSize(1110);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent("\n");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setPadText(false);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setXHTML(true);
      outputFormat2.setXHTML(false);
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(false);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat1.getLineSeparator();
      outputFormat1.getIndent();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals("UTF-8", outputFormat3.getEncoding());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9515964463695217
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtml-newlnes");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtml-newlnes";
      stringArray0[1] = "";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-xhtml-newlnes";
      outputFormat1.parseOptions(stringArray0, 1273);
      OutputFormat outputFormat2 = new OutputFormat("HVPu04QC\"dHXip}o");
      outputFormat1.setPadText(true);
      OutputFormat outputFormat3 = new OutputFormat("gqsV4[o'uN~IPr<A", true);
      outputFormat2.setPadText(false);
      outputFormat0.setTrimText(true);
      outputFormat1.setIndent("");
      outputFormat3.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray0, 1273);
      assertTrue(outputFormat1.isPadText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.241593635420705
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-newlines", true, "-newlines");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-newlines";
      stringArray0[5] = "-newlines";
      outputFormat1.parseOptions(stringArray0, 0);
      OutputFormat outputFormat2 = new OutputFormat("1QTe\"4 @c?:+");
      outputFormat2.setIndentSize(6);
      outputFormat2.setTrimText(true);
      outputFormat1.setIndent("aNXGWa;NJ:ziu].;j");
      outputFormat1.parseOptions(stringArray0, 6);
      assertEquals("aNXGWa;NJ:ziu].;j", outputFormat1.getIndent());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("5Mf}`SWaL ?", false);
      outputFormat0.setNewLineAfterNTags((-1561));
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-1561), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("p(L7(#4|_", false, "p(L7(#4|_");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndentSize((-3257));
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3257));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3257
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("ON1RTAa47>3&qr),G:");
      outputFormat0.setXHTML(false);
      outputFormat0.isOmitEncoding();
      outputFormat0.getLineSeparator();
      assertEquals("ON1RTAa47>3&qr),G:", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("2", false, "2");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("2");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = false;
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(false);
      String string0 = "";
      OutputFormat outputFormat1 = new OutputFormat("-newlnes");
      int int0 = 1273;
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 1273);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7726496271670902
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = new OutputFormat("#Ir/Q2;9($8z.");
      outputFormat1.setExpandEmptyElements(false);
      outputFormat0.setIndentSize(0);
      outputFormat1.setIndent("");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "-xhtmlsqMK@p\"O/>>";
      stringArray1[2] = "XE]nT'H3s_";
      stringArray1[3] = "(i<*0n}";
      stringArray1[4] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-2253));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2253
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
