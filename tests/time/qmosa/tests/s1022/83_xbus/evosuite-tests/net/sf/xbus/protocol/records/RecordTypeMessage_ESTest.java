/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:07:18 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.function.BiFunction;
import javax.activation.DataHandler;
import javax.xml.soap.MimeHeaders;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.Message;
import org.apache.axis.SOAPPart;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("RC_OK", (XBUSSystem) null, "RC_OK");
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-86);
      byteArray0[1] = (byte)105;
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, (byte)0);
      // Undeclared exception!
      try { 
        recordTypeMessage1.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("Releasing connection back to connection manager.", (XBUSSystem) null, "Releasing connection back to connection manager.");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "'Tb`XGov\"sW{?q%", "Releasing connection back to connection manager.", "'Tb`XGov\"sW{?q%");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      documentTypeImpl0.compareDocumentPosition(hTMLDocumentImpl0);
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "Releasing connection back to connection manager.");
      Document document0 = elementDefinitionImpl0.getOwnerDocument();
      elementDefinitionImpl0.getLastChild();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      CoreDocumentImpl.isXMLName("HZTKe8J=^", true);
      deferredDocumentImpl0.isSameNode(document0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      deferredDocumentImpl0.getDocumentURI();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "Releasing connection back to connection manager.", "Releasing connection back to connection manager.", "Releasing connection back to connection manager.");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("Releasing connection back to connection manager.", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(deferredDocumentImpl0);
      documentFragmentImpl0.cloneNode(false);
      deferredDocumentImpl0.importNode(documentFragmentImpl0, false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getChildNodes();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(deferredDocumentImpl0, "E");
      Document document0 = elementDefinitionImpl0.getOwnerDocument();
      ElementDefinitionImpl elementDefinitionImpl1 = new ElementDefinitionImpl(deferredDocumentImpl0, "T)EVYW9P=");
      elementDefinitionImpl0.getLastChild();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.setStandalone(true);
      elementDefinitionImpl1.getFeature("", "");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      deferredDocumentImpl0.setEncoding((String) null);
      pSVIDocumentImpl0.getXmlEncoding();
      deferredDocumentImpl0.isSameNode(elementDefinitionImpl1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "RC_OK");
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders1 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      Message message0 = new Message(elementDefinitionImpl0, true, mimeHeaders1);
      DataHandler dataHandler0 = new DataHandler(documentFragmentImpl0, "  ");
      message0.createAttachmentPart(dataHandler0);
      SOAPPart sOAPPart0 = new SOAPPart(message0, document0, true);
      sOAPPart0.getNextSibling();
      Document document1 = sOAPPart0.getSOAPDocument();
      recordTypeMessage0.setResponseDocument(document1, (XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseObject();
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Hashtable<String, Integer> hashtable0 = new Hashtable<String, Integer>();
      Integer integer0 = new Integer(122);
      hashtable0.put("", integer0);
      Integer integer1 = new Integer(0);
      hashtable0.getOrDefault("wePt", integer1);
      Hashtable<String, Integer> hashtable1 = new Hashtable<String, Integer>();
      BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      hashtable0.compute("Jz htqw^MC1y:=", biFunction0);
      Hashtable<String, Integer> hashtable2 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable3 = new Hashtable<String, Integer>();
      BiFunction<String, Integer, Integer> biFunction1 = (BiFunction<String, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-82);
      byteArray0[3] = (byte) (-14);
      byteArray0[4] = (byte) (-16);
      byteArray0[5] = (byte)115;
      ByteArrayList.createByteArrayList(byteArray0, 122);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "k(Tv2_=-");
      Integer integer2 = new Integer(4);
      try { 
        recordTypeMessage0.setRequestObject(integer2, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Hashtable<String, Integer> hashtable0 = new Hashtable<String, Integer>();
      Integer integer0 = new Integer((-1));
      Hashtable<String, Integer> hashtable1 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable2 = new Hashtable<String, Integer>();
      Integer integer1 = new Integer((-1120));
      hashtable0.put("otj[}sJU!h%g<]cSf%K", integer1);
      Hashtable<String, Integer> hashtable3 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable4 = new Hashtable<String, Integer>();
      hashtable4.keys();
      hashtable0.putAll(hashtable4);
      Hashtable<String, Integer> hashtable5 = new Hashtable<String, Integer>();
      BiFunction<Object, Integer, Integer> biFunction0 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , anyInt());
      hashtable2.compute("wp&aza`gBsd", biFunction0);
      Hashtable<String, Integer> hashtable6 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable7 = new Hashtable<String, Integer>();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      recordTypeMessage0.setResponseDocument(pSVIDocumentImpl0, (XBUSSystem) null);
      Hashtable<String, Integer> hashtable8 = new Hashtable<String, Integer>();
      Integer integer2 = new Integer(82);
      Hashtable<String, Integer> hashtable9 = new Hashtable<String, Integer>();
      assertTrue(hashtable9.isEmpty());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "02";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "02");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(" v", (XBUSSystem) null, "d");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("d", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(deferredDocumentImpl0);
      documentFragmentImpl0.cloneNode(false);
      deferredDocumentImpl0.importNode(documentFragmentImpl0, false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getChildNodes();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(deferredDocumentImpl0, "E");
      Document document0 = elementDefinitionImpl0.getOwnerDocument();
      ElementDefinitionImpl elementDefinitionImpl1 = new ElementDefinitionImpl(deferredDocumentImpl0, "T)EVYW9P=");
      elementDefinitionImpl0.getLastChild();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.setStandalone(true);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      deferredDocumentImpl0.setEncoding((String) null);
      pSVIDocumentImpl0.getXmlEncoding();
      deferredDocumentImpl0.isSameNode(elementDefinitionImpl1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "RC_OK");
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      org.apache.axis.message.MimeHeaders mimeHeaders1 = new org.apache.axis.message.MimeHeaders(mimeHeaders0);
      Message message0 = new Message(elementDefinitionImpl0, true, mimeHeaders1);
      DataHandler dataHandler0 = new DataHandler(documentFragmentImpl0, "  ");
      message0.createAttachmentPart(dataHandler0);
      SOAPPart sOAPPart0 = new SOAPPart(message0, document0, true);
      sOAPPart0.getSOAPDocument();
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Hashtable<String, Integer> hashtable0 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable1 = new Hashtable<String, Integer>();
      BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Hashtable<String, Integer> hashtable2 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable3 = new Hashtable<String, Integer>();
      hashtable3.clone();
      BiFunction<String, Integer, Integer> biFunction1 = (BiFunction<String, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction1).apply(anyString() , anyInt());
      hashtable3.compute("", biFunction1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      hashtable0.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "Q?>f&<4*suq($J5X");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("RC_OK", (XBUSSystem) null, "RC_OK");
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-86);
      byteArray0[1] = (byte)105;
      recordTypeMessage1.setRequestObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage1.getShortname());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "misjingBin?ngExc0ption");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[2];
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[1] = (byte) (-35);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JT&TUpJa's");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JT&TUpJa's");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "misjingBin?ngExc0ption");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[2];
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.iterator();
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArrayList0.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("0", (XBUSSystem) null, "d");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      try { 
        recordTypeMessage0.setResponseObject("0", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "missingBindingException");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-35);
      byteArrayList0.add(byteArray0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Hashtable<String, Integer> hashtable0 = new Hashtable<String, Integer>();
      byteArrayList0.toString();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      Integer integer0 = new Integer(8);
      hashtable0.put("", integer0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      Hashtable<String, Integer> hashtable1 = new Hashtable<String, Integer>();
      Integer integer1 = new Integer((-3963));
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer2 = new Integer((-3963));
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-80);
      byteArray0[3] = (byte) (-97);
      byteArrayList0.add(byteArray0);
      Hashtable<String, Integer> hashtable2 = new Hashtable<String, Integer>();
      BiFunction<Object, Integer, Integer> biFunction1 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, ",%Et", "EK YGT\"+3.]", (String) null);
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0, false);
      ElementDefinitionImpl elementDefinitionImpl0 = documentImpl0.createElementDefinition("I");
      elementDefinitionImpl0.getOwnerDocument();
      elementDefinitionImpl0.getLastChild();
      ElementDefinitionImpl elementDefinitionImpl1 = new ElementDefinitionImpl(documentImpl0, "LH~58");
      elementDefinitionImpl0.compareDocumentPosition(elementDefinitionImpl1);
      elementDefinitionImpl1.getBaseURI();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "");
      elementDefinitionImpl0.getLastChild();
      elementDefinitionImpl0.cloneNode(false);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      pSVIDocumentImpl1.getPrefix();
      pSVIDocumentImpl1.createElementNS("org.apache.axis.encoding.ser.CalendarSerializer", ",%Et", (String) null);
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(false, false);
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(false, false);
      deferredDocumentImpl2.lookupElementDefinition("EK YGT\"+3.]");
      hTMLDocumentImpl0.adoptNode(elementDefinitionImpl1);
      pSVIDocumentImpl1.isSameNode(elementDefinitionImpl1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "EK YGT\"+3.]");
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "org.apache.axis.handlers.soap.SOAPService", "tFSQYO", "tFSQYO");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getChildNodes();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "org.apache.axis.handlers.soap.SOAPService");
      Document document0 = elementDefinitionImpl0.getOwnerDocument();
      ElementDefinitionImpl elementDefinitionImpl1 = new ElementDefinitionImpl(hTMLDocumentImpl0, "Fragment cannot be specified in both the path and fragment!");
      hTMLDocumentImpl0.getChildNodes();
      documentTypeImpl0.compareDocumentPosition(document0);
      hTMLDocumentImpl0.getTitle();
      ElementDefinitionImpl elementDefinitionImpl2 = new ElementDefinitionImpl(coreDocumentImpl0, "");
      elementDefinitionImpl2.getOwnerDocument();
      ElementDefinitionImpl elementDefinitionImpl3 = new ElementDefinitionImpl(coreDocumentImpl0, "T)EVYW9P=");
      elementDefinitionImpl2.getNextSibling();
      elementDefinitionImpl1.getLastChild();
      elementDefinitionImpl3.getFirstChild();
      elementDefinitionImpl1.getPrefix();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.createElementNS("", "w@r@?W.", (String) null);
      DocumentImpl documentImpl0 = new DocumentImpl();
      pSVIDocumentImpl0.isSameNode((Node) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "w@r@?W.");
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(deferredDocumentImpl0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "schema", "schema", "tFSQYO");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = (HTMLDocumentImpl)hTMLDocumentImpl0.getChildNodes();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(deferredDocumentImpl0, "E");
      deferredDocumentImpl0.createDeferredElement("FORM_SOAENVELOPE");
      DeferredDocumentImpl deferredDocumentImpl1 = (DeferredDocumentImpl)elementDefinitionImpl0.getOwnerDocument();
      deferredDocumentImpl1.createTextNode("5z3@A-%OHcLYCS*$'");
      ElementDefinitionImpl elementDefinitionImpl1 = new ElementDefinitionImpl(deferredDocumentImpl0, "T)EVYW9P=");
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.getTitle();
      ElementDefinitionImpl elementDefinitionImpl2 = new ElementDefinitionImpl(hTMLDocumentImpl1, "003");
      elementDefinitionImpl0.getOwnerDocument();
      ElementDefinitionImpl elementDefinitionImpl3 = new ElementDefinitionImpl(deferredDocumentImpl1, "");
      elementDefinitionImpl3.getBaseURI();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl1, "");
      elementDefinitionImpl3.getLastChild();
      elementDefinitionImpl0.getFirstChild();
      elementDefinitionImpl1.getPrefix();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.getPrefix();
      PSVIElementNSImpl pSVIElementNSImpl0 = (PSVIElementNSImpl)pSVIDocumentImpl0.createElementNS("T)EVYW9P=", "tFSQYO", "");
      DocumentImpl documentImpl0 = new DocumentImpl();
      documentImpl0.adoptNode(pSVIElementNSImpl0);
      deferredDocumentImpl1.isSameNode(documentImpl0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("T)EVYW9P=", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "misjingBin?ngExc0ption");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte) (-27);
      byteArray0[7] = (byte)6;
      byteArray0[8] = (byte) (-92);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "misjingBin?ngExc0ption");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray1 = new byte[2];
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray1[1] = (byte) (-35);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JT&TUpJa's");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JT&TUpJa's");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Hashtable<String, Integer> hashtable0 = new Hashtable<String, Integer>();
      Integer integer0 = new Integer((-1));
      Hashtable<String, Integer> hashtable1 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable2 = new Hashtable<String, Integer>();
      Integer integer1 = new Integer((-1120));
      hashtable1.put("otj[}sJU!h%g<]cSf%K", integer1);
      Hashtable<String, Integer> hashtable3 = new Hashtable<String, Integer>();
      Hashtable<String, Integer> hashtable4 = new Hashtable<String, Integer>();
      hashtable3.keys();
      Integer integer2 = new Integer(6);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer3 = new Integer(6);
      hashMap0.put("9o(cSZx", integer3);
      hashMap0.put("otj[}sJU!h%g<]cSf%K", integer2);
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      hashtable3.putAll(hashtable0);
      Hashtable<String, Integer> hashtable5 = new Hashtable<String, Integer>();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setErrortext("");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      Hashtable<String, Integer> hashtable6 = new Hashtable<String, Integer>();
      Integer integer4 = new Integer(6);
      Hashtable<String, Integer> hashtable7 = new Hashtable<String, Integer>();
      assertTrue(hashtable7.equals((Object)hashtable2));
  }
}
