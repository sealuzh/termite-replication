/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:42:59 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.List;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.io.vfmem.DataStore;
import org.apache.derby.impl.io.vfmem.VirtualFile;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8423600709066026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[6] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string0 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0[1], stringArray0);
      SQLUtil.parseColumnTypeAndSize("1i8X^7");
      String[] stringArray1 = new String[2];
      stringArray1[0] = string0;
      stringArray1[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string1 = SQLUtil.innerJoin(string0, stringArray1, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray1);
      SQLUtil.isDML("PUe]vJX(W ?q%#BBF");
      SQLUtil.normalize("<kI", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(string0, (DBSchema) null);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable(string1);
      Object object0 = new Object();
      SQLUtil.renderColumnListWithTableName("org.apache.derby.iapi.services.timer.TimerFactory", stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(7, "deletenbz(y)+ul-w");
      Integer.getInteger("selectrk&3@l");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(string0, defaultDBTable0, dBDataType0, (Integer) null);
      SQLUtil.renderColumn(defaultDBColumn0);
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4156748716264342
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[5] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[6] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string0 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0[1], stringArray0);
      SQLUtil.parseColumnTypeAndSize("1i8X^7");
      String[] stringArray1 = new String[2];
      stringArray1[0] = string0;
      stringArray1[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string1 = SQLUtil.innerJoin(string0, stringArray1, stringArray0[0], "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray1);
      SQLUtil.isDML("PUe]vJX(W ?q%#BBF");
      SQLUtil.normalize("<kI", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(string0, (DBSchema) null);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable(string1);
      Object object0 = new Object();
      SQLUtil.renderColumnListWithTableName("org.apache.derby.iapi.services.timer.TimerFactory", stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(7, "deletenbz(y)+ul-w");
      Integer.getInteger("selectrk&3@l");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(string0, defaultDBTable0, dBDataType0, (Integer) null);
      SQLUtil.renderColumn(defaultDBColumn0);
      StringBuilder stringBuilder0 = new StringBuilder(7);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("deletenbz(y)+ul-w");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"y\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8423600709066026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[5] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[6] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string0 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0[1], stringArray0);
      SQLUtil.parseColumnTypeAndSize("1i8X^7");
      String[] stringArray1 = new String[2];
      stringArray1[0] = string0;
      stringArray1[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string1 = SQLUtil.innerJoin(string0, stringArray1, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray1);
      SQLUtil.isDML("PUe]vJX(W ?q%#BBF");
      SQLUtil.normalize("<kI", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(string0, (DBSchema) null);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable(string1);
      Object object0 = new Object();
      SQLUtil.renderColumnListWithTableName("org.apache.derby.iapi.services.timer.TimerFactory", stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(7, "deletenbz(y)+ul-w");
      Integer.getInteger("selectrk&3@l");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(string0, defaultDBTable0, dBDataType0, (Integer) null);
      SQLUtil.renderColumn(defaultDBColumn0);
      StringBuilder stringBuilder0 = new StringBuilder(410);
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND null = null AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor'", stringBuilder0);
      assertSame(stringBuilder0, stringBuilder1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.552521510649192
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLUtil.isDML("exec|6g~spc]w$8{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "dop idex";
      stringArray0[1] = "exec|6g~spc]w$8{";
      stringArray0[2] = "exec|6g~spc]w$8{";
      stringArray0[1] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[4] = "exec|6g~spc]w$8{";
      stringArray0[5] = stringArray0[3];
      stringArray0[6] = "dop idex";
      stringArray0[7] = "6FHX*x:BZP6iR.vV";
      stringArray0[4] = "exec|6g~spc]w$8{";
      SQLUtil.renderColumnListWithTableName("updatepue]vjx(w ?q%#bbf", stringArray0);
      SQLUtil.mutatesDataOrStructure("updatepue]vjx(w ?q%#bbf");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(stringArray0[5]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.46382817184739
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[5] = "'kcsdfCy{mY'MN";
      stringArray0[6] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string0 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0[1], stringArray0);
      SQLUtil.parseColumnTypeAndSize("1i8X^7");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "'kcsdfCy{mY'MN";
      stringArray1[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string1 = SQLUtil.innerJoin(string0, stringArray1, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "'kcsdfCy{mY'MN", stringArray1);
      String string2 = "PUe]vJX(W ?q%#BBF";
      SQLUtil.isDML("PUe]vJX(W ?q%#BBF");
      SQLUtil.normalize("<kI", true);
      DBSchema dBSchema0 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(string0, (DBSchema) null);
      defaultDBTable0.toString();
      DataStore dataStore0 = new DataStore((String) null);
      VirtualFile virtualFile0 = new VirtualFile("'kcsdfCy{mY'MN", dataStore0);
      OutputStream outputStream0 = virtualFile0.getOutputStream(true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0, false);
      mockPrintWriter0.println(false);
      SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure(string1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6815563206157873
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SQLUtil.isDML("exec|6g~spc]w$8{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "drop index";
      stringArray0[1] = "exec|6g~spc]w$8{";
      stringArray0[2] = "exec|6g~spc]w$8{";
      stringArray0[3] = "updatepue]vjx(w ?q%#bbf";
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("3CBqzomE|&2o4|POl", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6066699893655365
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter table9", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("create table ", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      dBUniqueIndex0.setDoc(" and ");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(dBTable0, (String) null, true, stringArray0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType dBDataType0 = DBDataType.getInstance(128, "|@CmGlnNJqK ");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("7(", dBTable0, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder("XHn77[bkRFn[]");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("7(", stringBuilder0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      assertEquals("XHn77[bkRFn[] and 7(|@CMGLNNJQK (2,2)", stringBuilder1.toString());
      
      String[] stringArray1 = new String[1];
      stringArray1[0] = "|@CmGlnNJqK ";
      String string0 = SQLUtil.innerJoin("XHn77[bkRFn[]", stringArray1, " and ", "create table ", stringArray0);
      assertEquals(" and  as create table  on XHn77[bkRFn[].|@CmGlnNJqK  = create table .null", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2841768832943719
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = SQLUtil.isDML("exec|6g~spc]w$8{");
      assertFalse(boolean0);
      
      String string0 = SQLUtil.normalize("7%O2\"TkH", false);
      assertEquals("7 % O2 \"TkH\"", string0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "drop indexexec|6g~spc]w$8{";
      stringArray0[2] = "?BQ^VtAv";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "7 % O2 \"TkH\"";
      stringArray0[4] = "select into";
      stringArray0[5] = "/`5";
      stringArray0[4] = "select into";
      stringArray0[7] = "select into";
      String string1 = SQLUtil.renderColumnListWithTableName("select into", stringArray0);
      assertEquals("select into.drop indexexec|6g~spc]w$8{, select into.null, select into.?BQ^VtAv, select into.7 % O2 \"TkH\", select into.select into, select into./`5, select into.null, select into.select into", string1);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3010386369482903
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(" or ");
      StringBuilder stringBuilder1 = stringBuilder0.insert(4, (float) 4);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition("G7NcpYc|k;[j;O D5!", stringBuilder1);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      stringBuilder2.append((Object) " or ");
      Character character0 = new Character('S');
      SQLUtil.substituteMarkers("alter tabletruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", "alter tabletruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", character0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder3 = new StringBuilder("");
      SQLUtil.addRequiredCondition("", stringBuilder0);
      String[] stringArray0 = new String[0];
      SQLUtil.join("G7NcpYc|k;[j;O D5!", "'S'", stringArray0, "", (String) null, stringArray0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("'S'", defaultDBTable0, 4, "alter materialized view");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder2);
      assertEquals(" or 4.0 or G7NcpYc|k;[j;O D5! or  and ALTER MATERIALIZED VIEW", stringBuilder2.toString());
      assertEquals(" or 4.0 or G7NcpYc|k;[j;O D5! or  and ALTER MATERIALIZED VIEW", stringBuilder0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9562610057703038
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLUtil.renderValue("9");
      Object object0 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      String[] stringArray0 = new String[9];
      stringArray0[3] = "9";
      stringArray0[1] = "9";
      stringArray0[2] = " name = ";
      stringArray0[3] = "'9'";
      stringArray0[4] = "'9'";
      stringArray0[5] = "table null";
      stringArray0[6] = "table null";
      stringArray0[7] = "9";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[8] = "M%,";
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("table null");
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName("'9'", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7500731400296665
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      assertNull(boolean0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[5] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[6] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string0 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0[1], stringArray0);
      SQLUtil.parseColumnTypeAndSize("1i8X^7");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray1[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string1 = SQLUtil.innerJoin(string0, stringArray1, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray1);
      SQLUtil.isDML("PUe]vJX(W ?q%#BBF");
      String string2 = SQLUtil.normalize("<kI", true);
      assertEquals("< kI", string2);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(string0, (DBSchema) null);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable(string1);
      Object object0 = new Object();
      String string3 = SQLUtil.renderColumnListWithTableName("org.apache.derby.iapi.services.timer.TimerFactory", stringArray0);
      assertEquals("org.apache.derby.iapi.services.timer.TimerFactory.org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor, org.apache.derby.iapi.services.timer.TimerFactory.null, org.apache.derby.iapi.services.timer.TimerFactory.org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor, org.apache.derby.iapi.services.timer.TimerFactory.org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor, org.apache.derby.iapi.services.timer.TimerFactory.org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor, org.apache.derby.iapi.services.timer.TimerFactory.org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor, org.apache.derby.iapi.services.timer.TimerFactory.org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", string3);
      
      String string4 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND null = null AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor' AND org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor = 'org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor'", string4);
      
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      DBDataType dBDataType0 = DBDataType.getInstance(122, "2#l0@wL^upR$VA1,");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("from", defaultDBTable1, dBDataType0, (Integer) null);
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("IO8$:]7vIn{", defaultDBTable1, dBDataType0, integer0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("v", defaultDBTable0, 122, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      String string5 = SQLUtil.renderColumnNames(dBColumnArray0);
      assertEquals("from, IO8$:]7vIn{, v", string5);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("uY-}+C~_", "D#<>Xt", versionNumber0);
      DBCatalog dBCatalog0 = new DBCatalog("bFc1K&r[ %=$dtX", defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("fwEjdJkOs7Gb-bs,|", dBSchema0);
      SQLUtil.ownerDotComponent(defaultDatabase0);
      defaultDatabase0.isIdentical((DBObject) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      SQLUtil.typeAndName(dBPackage0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "null fwEjdJkOs7Gb-bs,|";
      stringArray0[1] = "uY-}+C~_";
      stringArray0[2] = "bFc1K&r[ %=$dtX";
      stringArray0[3] = "D#<>Xt";
      stringArray0[4] = "uY-}+C~_";
      stringArray0[5] = "fwEjdJkOs7Gb-bs,|";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6764281154875817
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.Object@1bf31b4f";
      stringArray0[1] = "java.lang.Object@1bf31b4f";
      stringArray0[2] = "java.lang.Object@1bf31b4f";
      SQLUtil.substituteMarkers("", "5DhmjWORSfIvCrJ", "java.lang.Object@1bf31b4f");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("java.lang.Object@1bf31b4f");
      DBDataType dBDataType0 = DBDataType.getInstance(3606, "org.apache.derby.iapi.");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("insert", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      defaultDBColumn0.getNotNullConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "org.postgresql.jdbc2.AbstractJdbc2Clob";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.postgresql.jdbc2.AbstractJdbc2Clob");
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("org.postgresql.jdbc2.AbstractJdbc2Clob", compositeDBObject0);
      tableContainer0.getSchema();
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.960841804955975
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(" or ");
      StringBuilder stringBuilder1 = stringBuilder0.insert(4, (float) 4);
      SQLUtil.addOptionalCondition("G7NcpYc|k;[j;O D5!", stringBuilder1);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      Character character0 = new Character('S');
      SQLUtil.substituteMarkers("alter tabletruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", "alter tabletruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", character0);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder2 = new StringBuilder("");
      SQLUtil.addRequiredCondition("", stringBuilder0);
      Character character1 = new Character('S');
      SQLUtil.substituteMarkers(";ewNK/", "42X40", character1);
      // Undeclared exception!
      try { 
        SQLUtil.join(" or ", "tq%2/wVo{T`+Lt", (String[]) null, "select intoorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", " D'djwG+cTvM^U$@(", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8072354461116467
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[3];
      SQLUtil.normalize("\u0000~z<]K^d@$pb^S[", false);
      SQLUtil.leftJoin("2m%", stringArray0, "IsN|R:GrOSU{", "w6(`", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" 00 ~ z < ] K ^ d @ $ pb ^ S [");
      Object object1 = new Object();
      SQLUtil.isProcedureCall(" DEFAULT ");
      String[] stringArray1 = new String[1];
      stringArray1[0] = "update";
      SQLUtil.renderWhereClause(stringArray1, stringArray1);
      String[] stringArray2 = new String[0];
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "O", stringArray1, "create materialized view", (String) null, stringArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2470182985255105
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.Object@69a6946";
      stringArray0[1] = "java.lang.Object@69a6946";
      stringArray0[2] = "java.lang.Object@69a6946";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLUtil.leftJoin("java.lang.Object@69a6946", stringArray0, "java.lang.Object@69a6946", "2m%", stringArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "updatepue]vjx(w ?q%#bbf");
      String string0 = SQLUtil.normalize("drop tabletruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", false);
      assertEquals("drop tabletruncatedeletepue ] vjx (w ? q % # bbf.randomutils warning :, deletepue ] vjx (w ? q % # bbf.deletepue ] vjx (w ? q % # bbf, deletepue ] vjx (w ? q % # bbf.null, deletepue ] vjx (w ? q % # bbf.randomutils warning :", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7731114382942814
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "drop index";
      stringArray0[3] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[5] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[6] = "drop index";
      stringArray0[7] = "6FHX*x:BZP6iR.vV";
      SQLUtil.renderColumnListWithTableName("updatepue]vjx(w ?q%#bbf", stringArray0);
      SQLUtil.mutatesDataOrStructure("updatepue]vjx(w ?q%#bbf");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop index");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "updatepue]vjx(w ?q%#bbf.drop index, updatepue]vjx(w ?q%#bbf.null, updatepue]vjx(w ?q%#bbf.null, updatepue]vjx(w ?q%#bbf.updatepue]vjx(w ?q%#bbf, updatepue]vjx(w ?q%#bbf.null, updatepue]vjx(w ?q%#bbf.updatepue]vjx(w ?q%#bbf, updatepue]vjx(w ?q%#bbf.drop index, updatepue]vjx(w ?q%#bbf.6FHX*x:BZP6iR.vV, updatepue]vjx(w ?q%#bbf.null, updatepue]vjx(w ?q%#bbf.null, updatepue]vjx(w ?q%#bbf.null, updatepue]vjx(w ?q%#bbf.null, updatepue]vjx(w ?q%#bbf.null", true, stringArray0);
      String string0 = "r";
      StringBuilder stringBuilder0 = new StringBuilder("r");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", defaultDBTable0, (-518088035), ", ");
      defaultDBColumn0.getNotNullConstraint();
      // Undeclared exception!
      try { 
        stringBuilder1.insert(2147483645, (Object) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2147483645
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5205769940148244
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("0<:~-j>_-u");
      defaultDBTable0.isIdentical(defaultDBTable1);
      String[] stringArray0 = new String[3];
      Object object0 = new Object();
      defaultDBTable0.equals(object0);
      stringArray0[2] = "";
      stringArray0[1] = "create unique indextruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:";
      stringArray0[2] = "";
      SQLUtil.typeAndName(defaultDBTable0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil.isDDL("DoyYP= ");
      SQLUtil.renderColumnListWithTableName("create unique indextruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", stringArray0);
      Integer integer0 = new Integer(8001);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("rename", defaultDBTable1, (DBDataType) null, integer0, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1419583658868566
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SQLUtil.isQuery("FHCm*ONFll0wI");
      String string0 = SQLUtil.normalize("FHCm*ONFll0wI", false);
      assertEquals("FHCm * ONFll0wI", string0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "FHCm * ONFll0wI";
      stringArray0[1] = "FHCm * ONFll0wI";
      boolean boolean0 = SQLUtil.isDML("FHCm * ONFll0wI");
      assertFalse(boolean0);
      
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("FHCm*ONFll0wI", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop indexorg.apach", dBSchema0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("alter tabledrop indexorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor");
      Object object0 = new Object();
      String string1 = SQLUtil.renderColumnListWithTableName("derby.version.drdamaint", stringArray0);
      assertEquals("derby.version.drdamaint.FHCm * ONFll0wI, derby.version.drdamaint.FHCm * ONFll0wI, derby.version.drdamaint.null, derby.version.drdamaint.null, derby.version.drdamaint.null, derby.version.drdamaint.null, derby.version.drdamaint.null", string1);
      
      String string2 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("FHCm * ONFll0wI = 'FHCm * ONFll0wI' AND FHCm * ONFll0wI = 'FHCm * ONFll0wI' AND null = null AND null = null AND null = null AND null = null AND null = null", string2);
      
      DBDataType dBDataType0 = DBDataType.getInstance(7, "derby.version.drdamaint");
      Integer.getInteger(":PKpDW/g7");
      Integer integer0 = new Integer(90078);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable1, dBDataType0, integer0);
      String string3 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("null DERBY.VERSION.DRDAMAINT(90078) NULL", string3);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SQLUtil.removeComments("sq>ayFS*.ciLT");
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1049561813316413
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.innerJoin("sq>ayFS*.ciT", stringArray0, "trunca", "sq>ayFS*.ciT", stringArray0);
      SQLUtil.mutatesStructure("rename");
      String string1 = SQLUtil.removeComments("x8eoaShi");
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1469057994057184
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "FHCm*ONFll0wI");
      SQLUtil.isQuery("FHCm*ONFll0wI");
      String string0 = SQLUtil.normalize("FHCm*ONFll0wI", false);
      assertEquals("FHCm * ONFll0wI", string0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "FHCm * ONFll0wI";
      stringArray0[1] = "FHCm * ONFll0wI";
      SQLUtil.isDML("FHCm * ONFll0wI");
      boolean boolean0 = SQLUtil.isDDL("drop index");
      assertTrue(boolean0);
      
      String string1 = SQLUtil.renderColumnListWithTableName("FHCm*ONFll0wI", stringArray0);
      assertEquals("FHCm*ONFll0wI.FHCm * ONFll0wI, FHCm*ONFll0wI.FHCm * ONFll0wI, FHCm*ONFll0wI.null, FHCm*ONFll0wI.null, FHCm*ONFll0wI.null, FHCm*ONFll0wI.null, FHCm*ONFll0wI.null", string1);
      
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("FHCm * ONFll0wI");
      assertNull(boolean1);
      
      Boolean boolean2 = SQLUtil.mutatesStructure("EgMGY/o((@=1aC");
      assertFalse(boolean2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1233914200760555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = SQLUtil.isQuery(":h/'oLdrb/yvtTS");
      String string0 = SQLUtil.normalize("@4GTA_~9R6]XbIDp.`", false);
      assertEquals("@ 4GTA_ ~ 9R6 ] XbIDp.`", string0);
      
      boolean boolean1 = SQLUtil.isDML("DIL");
      boolean boolean2 = SQLUtil.isDDL("drop index");
      assertFalse(boolean2 == boolean1);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[2] = "create unique indexorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor";
      stringArray0[3] = "@4GTA_~9R6]XbIDp.`";
      SQLUtil.renderColumnListWithTableName("Q2J_6hc5^h-X#cW}l{0", stringArray0);
      Boolean boolean3 = SQLUtil.mutatesDataOrStructure("create unique indexorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor");
      assertTrue(boolean3);
      assertNotNull(boolean3);
      
      Boolean boolean4 = SQLUtil.mutatesStructure("@ 4GTA_ ~ 9R6 ] XbIDp.`");
      assertTrue(boolean4.equals((Object)boolean0));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.442470333070849
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLUtil.isDML("exec|6g~spc]w$8{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("drop index");
      SQLUtil.isDDL("XSRS1.S");
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("org.databene.jdbacl.SQLUtil", stringArray0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("executefhc*onfll0wi.og$g!i([ic_, fhc*onfll0wi.fhc*onfll0wi, fhc*onfll0wi.og$g!i([ic_, fhc*onfll0wi.fhc*onfll0wi, fhc*onfll0wi.select into, fhc*onfll0wi.fhc * onfll0wi as og$g!i([ic_ on fhc*onfll0wi.fhc * onfll0wi = og$g!i([ic_.fhc * onfll0wi and fhc*onfll0wi.null = og$g!i([ic_.null and fhc*onfll0wi.fhc*onfll0wi = og$g!i([ic_.fhc*onfll0wi and fhc*onfll0wi.fhc*onfll0wi = og$g!i([ic_.fhc*onfll0wi and fhc*onfll0wi.select into = og$g!i([ic_.select into and fhc*onfll0wi.fhc*onfll0wi = og$g!i([ic_.fhc*onfll0wi and fhc*onfll0wi.fhc * onfll0wi = og$g!i([ic_.fhc * onfll0wi, fhc*onfll0wi.fhc * onfll0wi");
      assertNull(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      DBUniqueConstraint dBUniqueConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter table9", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("create table ", true, dBPrimaryKeyConstraint0);
      dBUniqueIndex0.toString();
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(dBTable0, (String) null, false, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4387424672740177
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[6];
      SQLUtil.isDDL("call");
      DBCatalog dBCatalog0 = new DBCatalog("ALL");
      DBSchema dBSchema0 = new DBSchema("call");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "AXA%$l");
      dBCatalog0.getSchemas();
      SQLUtil.mutatesDataOrStructure("%dGVd3DhUPAqI\"");
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      VersionNumber versionNumber0 = VersionNumber.valueOf("execute6");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("create table ", "execute6", versionNumber0);
      defaultDatabase0.isIdentical((DBObject) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("execute6");
      SQLUtil.typeAndName(defaultDBTable1);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.093492698587631
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object object0 = new Object();
      boolean boolean0 = SQLUtil.isQuery(";tgr(2F");
      String string0 = SQLUtil.normalize(";tgr(2F", false);
      assertEquals("; tgr (2F", string0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Og$g!i([Ic_";
      stringArray0[1] = "Og$g!i([Ic_";
      stringArray0[2] = "select into";
      stringArray0[4] = "select into";
      String string1 = SQLUtil.innerJoin("Og$g!i([Ic_", stringArray0, "drop materialized v", "exec", stringArray0);
      assertEquals("drop materialized v as exec on Og$g!i([Ic_.Og$g!i([Ic_ = exec.Og$g!i([Ic_ and Og$g!i([Ic_.Og$g!i([Ic_ = exec.Og$g!i([Ic_ and Og$g!i([Ic_.select into = exec.select into and Og$g!i([Ic_.null = exec.null and Og$g!i([Ic_.select into = exec.select into", string1);
      
      String string2 = SQLUtil.renderColumnListWithTableName("select into", stringArray0);
      assertEquals("select into.Og$g!i([Ic_, select into.Og$g!i([Ic_, select into.select into, select into.null, select into.select into", string2);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("6qE6C");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8913274484505221
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("0<:~-j>_-u");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "/GOgU";
      stringArray0[3] = "5DhmjWORSfIvCrJ";
      stringArray0[4] = "/GOgU";
      String string0 = SQLUtil.join("/GOgU", "/GOgU", stringArray0, "/GOgU", "", stringArray0);
      assertEquals("/GOgU join /GOgU as  on /GOgU. = . and /GOgU. = . and /GOgU./GOgU = ./GOgU and /GOgU.5DhmjWORSfIvCrJ = .5DhmjWORSfIvCrJ and /GOgU./GOgU = ./GOgU and /GOgU.null = .null", string0);
      
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("O6!");
      DBDataType dBDataType0 = DBDataType.getInstance((-279293152), "insert");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("am-zr%>)6'(", defaultDBTable1, dBDataType0, integer1, integer0);
      String string1 = SQLUtil.normalize("insertam-zr%>)6'(w)*{", false);
      assertEquals("insertam - zr % >) 6 '(w)*{'", string1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.41050280823891
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      SQLUtil.normalize("", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Og$g!i([Ic_";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "Og$g!i([Ic_";
      stringArray0[4] = "";
      stringArray0[5] = "select into";
      String string0 = SQLUtil.innerJoin("execute", stringArray0, "execute", "", stringArray0);
      assertEquals("execute as  on execute.Og$g!i([Ic_ = .Og$g!i([Ic_ and execute. = . and execute. = . and execute.Og$g!i([Ic_ = .Og$g!i([Ic_ and execute. = . and execute.select into = .select into", string0);
      
      String string1 = SQLUtil.renderColumnListWithTableName("AC2?n]na", stringArray0);
      assertEquals("AC2?n]na.Og$g!i([Ic_, AC2?n]na., AC2?n]na., AC2?n]na.Og$g!i([Ic_, AC2?n]na., AC2?n]na.select into", string1);
      
      Boolean boolean0 = SQLUtil.mutatesStructure("");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.647910094287312
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String[] stringArray0 = new String[3];
      stringArray0[1] = "java.lang.Object@3e71481f";
      stringArray0[1] = "java.lang.Object@3e71481f";
      stringArray0[2] = "java.lang.Object@3e71481f";
      SQLUtil.normalize(" AND ", false);
      SQLUtil.leftJoin("AND", stringArray0, "java.lang.Object@3e71481f", "2m;%", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("updateorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "|6G~sPC]w$8{", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("|6G~sPC]w$8{", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, stringArray0[0], true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      Object object1 = new Object();
      Object object2 = new Object();
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.440832331432847
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("insertupdatepue]vjx(w ?q%#bbf");
      boolean boolean0 = SQLUtil.isDDL("updatepue]vjx(w ?q%#bbf");
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName(" or ", stringArray0);
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      assertNotNull(boolean1);
      assertFalse(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.710027779724208
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "drop index";
      stringArray0[1] = "exec|6g~spc]w$8{";
      stringArray0[2] = "exec|6g~spc]w$8{";
      stringArray0[3] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[0] = "exec|6g~spc]w$8{";
      stringArray0[5] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[6] = "drop index";
      stringArray0[7] = "6FHX*x:BZP6iR.vV";
      String string0 = SQLUtil.removeComments("drop index");
      assertEquals("drop index", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "FHCm*ONFll0wI";
      SQLUtil.isQuery("FHCm*ONFll0wI");
      String[] stringArray0 = new String[7];
      String string1 = "drop index";
      // Undeclared exception!
      try { 
        SQLUtil.isDML(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("))Tq ");
      stringBuilder0.insert(4, 0.75F);
      SQLUtil.addOptionalCondition("", stringBuilder0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("select into");
      Character character0 = new Character('S');
      SQLUtil.substituteMarkers("XePxuW9zTsi#L", " or ", stringBuilder0);
      assertEquals("))Tq0.75  or ", stringBuilder0.toString());
      
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      StringBuilder stringBuilder1 = new StringBuilder("XePxuW9zTsi#L");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "XePxuW9zTsi#L";
      String string0 = SQLUtil.join((String) null, "select into", stringArray0, "", (String) null, stringArray0);
      assertEquals(" as null on select into.XePxuW9zTsi#L = null.XePxuW9zTsi#L", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7071704513769115
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":/~_k";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DBSchema dBSchema0 = new DBSchema("", (DBCatalog) null);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "lci/pMuZ\"";
      stringArray1[1] = "select intoorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor";
      String string0 = SQLUtil.leftJoin("delete", stringArray1, "|6G~sPC]w$8{", "SYSCS_GET_DATABASE_PROPERTY", stringArray1);
      assertEquals("left join |6G~sPC]w$8{ as SYSCS_GET_DATABASE_PROPERTY on delete.lci/pMuZ\" = SYSCS_GET_DATABASE_PROPERTY.lci/pMuZ\" and delete.select intoorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor = SYSCS_GET_DATABASE_PROPERTY.select intoorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", string0);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("lci/pMuZ\"");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "MnQ|n_&LA-2", false, stringArray1);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("lci/pMuZ\"", false, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(dBTable0, "K<t`JQ3B)/ Fiq?U", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("PRIMARY KEY (lci/pMuZ\", select intoorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor)", string1);
      
      Object object0 = new Object();
      Object object1 = new Object();
      String string2 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM lci/pMuZ\" WHERE :/~_k = ':/~_k'", string2);
      
      boolean boolean0 = SQLUtil.isProcedureCall("wQ,");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("'1,Svm(6!XQF,7l", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("'1,Svm(6!XQF,7l", dBSchema0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "'1,Svm(6!XQF,7l", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT '1,Svm(6!XQF,7l PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.764682334443463
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[5] = "'kcsdfCy{mY'MN";
      stringArray0[6] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string0 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0[1], stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "'kcsdfCy{mY'MN";
      stringArray1[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      SQLUtil.innerJoin(string0, stringArray1, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "'kcsdfCy{mY'MN", stringArray1);
      SQLUtil.isDML("PUe]vJX(W ?q%#BBF");
      SQLUtil.normalize("<kI", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(string0, (DBSchema) null);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", true, stringArray0);
      defaultDBTable0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      DataStore dataStore0 = new DataStore((String) null);
      VirtualFile virtualFile0 = new VirtualFile("'kcsdfCy{mY'MN", dataStore0);
      OutputStream outputStream0 = virtualFile0.getOutputStream(true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0, false);
      mockPrintWriter0.println(false);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec1, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3113369638633987
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SQLUtil.mutatesStructure("D9");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("aq+J");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "XBCM2.S";
      stringArray0[1] = "XBCM2.S";
      stringArray0[2] = "D9";
      stringArray0[3] = "aq+J";
      stringArray0[0] = "D9";
      DBDataType dBDataType0 = DBDataType.getInstance(2147483645, "D9");
      Integer integer0 = new Integer(2147483645);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("aq+J", defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.substituteMarkers("XBCM2.S", "select into", defaultDBColumn0);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("XBCM2.S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      StringBuilder stringBuilder1 = stringBuilder0.append((long) 0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null, stringBuilder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5843256154455476
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[5] = "'kcsdfCy{mY'MN";
      stringArray0[6] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string0 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0[1], stringArray0);
      SQLUtil.parseColumnTypeAndSize("1i8X^7");
      String[] stringArray1 = new String[2];
      stringArray1[0] = "'kcsdfCy{mY'MN";
      stringArray1[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      SQLUtil.innerJoin(string0, stringArray1, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "'kcsdfCy{mY'MN", stringArray1);
      SQLUtil.isDML("PUe]vJX(W ?q%#BBF");
      SQLUtil.normalize("<kI", true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(string0, (DBSchema) null);
      String string1 = defaultDBTable0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      DataStore dataStore0 = new DataStore((String) null);
      VirtualFile virtualFile0 = new VirtualFile("'kcsdfCy{mY'MN", dataStore0);
      OutputStream outputStream0 = virtualFile0.getOutputStream(true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0, false);
      mockPrintWriter0.println(false);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      SQLUtil.removeComments(string1);
      defaultDBTable0.getUniqueConstraint(stringArray1);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append((-2220.0F));
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      StringBuilder stringBuilder2 = stringBuilder1.append(stringBuffer0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder2, nameSpec1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1531782505128936
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter table9", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("create table ", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(dBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint2 = new DBPrimaryKeyConstraint(dBTable0, "AqhWS>ITS", true, stringArray0);
      String string0 = SQLUtil.pkSpec(dBPrimaryKeyConstraint2, nameSpec0);
      assertEquals("CONSTRAINT AqhWS>ITS PRIMARY KEY ()", string0);
      
      String string1 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint1, nameSpec0);
      assertEquals("PRIMARY KEY ()", string1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9148724049704793
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SQLUtil.isDML("exec|6g~spc]w$8{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "drop index";
      stringArray0[1] = "exec|6g~spc]w$8{";
      stringArray0[2] = "exec|6g~spc]w$8{";
      stringArray0[3] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[4] = "exec|6g~spc]w$8{";
      stringArray0[5] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[6] = "drop index";
      stringArray0[7] = "6FHX*x:BZP6iR.vV";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "exec|6g~spc]w$8{";
      SQLUtil.renderColumnListWithTableName("drop index", stringArray1);
      SQLUtil.mutatesDataOrStructure("exec|6g~spc]w$8{");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "exec|6g~spc]w$8{", true, stringArray1);
      StringBuilder stringBuilder0 = new StringBuilder("updatepue]vjx(w ?q%#bbf");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, ">*|GiCx>nAAJZ1O]i1", true, stringArray0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.ukSpec(dBPrimaryKeyConstraint1, nameSpec1);
      // Undeclared exception!
      try { 
        stringBuilder1.replace((-1), (-1), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.986166328257851
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.Object@5a2ba45f";
      String string0 = " AND ";
      String string1 = "\\00~z<]K^d@$pb^S[";
      SQLUtil.normalize("\u0000~z<]K^d@$pb^S[", false);
      String string2 = "2m%";
      String string3 = "IsN|R:GrOSU{";
      String string4 = "w6(`";
      SQLUtil.leftJoin("2m%", stringArray0, "IsN|R:GrOSU{", "w6(`", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" DEFAULT ");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "java.lang.Object@5a2ba45f", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      Object object1 = new Object();
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        defaultDBTable0.getProvider(9);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 9, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "bFc1K&r[ %=$dtX";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("bFc1K&r[ %=$dtX");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8212477418798363
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.Object@b4932e2";
      stringArray0[1] = "java.lang.Object@b4932e2";
      stringArray0[2] = "java.lang.Object@b4932e2";
      SQLUtil.join("java.lang.Object@b4932e2", "java.lang.Object@b4932e2", stringArray0, "5DhmjWORSfIvCrJ", "", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("java.lang.Object@b4932e2");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("hw_+n8g yJf");
      Object object1 = new Object();
      SQLUtil.renderColumnListWithTableName("p@KJ", stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "5DhmjWORSfIvCrJ";
      stringArray1[1] = "ex=ec";
      stringArray1[2] = "p@KJ";
      stringArray1[3] = "p@KJ.java.lang.Object@b4932e2, p@KJ.java.lang.Object@b4932e2, p@KJ.java.lang.Object@b4932e2";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.0092482930376914
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.Object@3b357cea";
      stringArray0[1] = "java.lang.Object@3b357cea";
      stringArray0[2] = "java.lang.Object@3b357cea";
      Object object1 = new Object();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.typeAndName(defaultDBTable0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-73);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("alter materialized viewtruncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      Object object2 = new Object();
      SQLUtil.renderColumnListWithTableName("ex=ec", stringArray0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "{";
      stringArray1[1] = "SELECT * FROM null WHERE java.lang.Object@3b357cea = 'java.lang.Object@3b357cea' AND java.lang.Object@3b357cea = 'java.lang.Object@3b357cea' AND java.lang.Object@3b357cea = 'java.lang.Object@3b357cea'";
      stringArray1[2] = "SELECT * FROM null WHERE java.lang.Object@3b357cea = 'java.lang.Object@3b357cea' AND java.lang.Object@3b357cea = 'java.lang.Object@3b357cea' AND java.lang.Object@3b357cea = 'java.lang.Object@3b357cea'";
      stringArray1[3] = "update";
      stringArray1[4] = "table null";
      stringArray1[5] = "ex=ec";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      String[] stringArray1 = new String[8];
      stringArray1[0] = null;
      stringArray1[1] = "(ikda@j*{J!nBiUKT8";
      stringArray1[2] = null;
      stringArray1[3] = null;
      stringArray1[4] = "(ikda@j*{J!nBiUKT8";
      stringArray1[5] = null;
      stringArray1[6] = null;
      stringArray1[7] = null;
      SQLUtil.leftJoin((String) null, stringArray0, stringArray0[1], "(ikda@j*{J!nBiUKT8", stringArray1);
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      String string0 = "exec6";
      String string1 = "`CZvS$}k\"6j<&1";
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      VersionNumber versionNumber0 = new VersionNumber(columnDescriptorList0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("sCWFg", "`CZvS$}k\"6j<&1", versionNumber0);
      defaultDatabase0.getTable(stringArray1[2], false);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("create unique index");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7251641336621888
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":/~_k";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBSchema dBSchema0 = new DBSchema("", (DBCatalog) null);
      SQLUtil.join("SYSCS_GET_DATABASE_PROPERTY", "\"wV;q-xKgPJL", stringArray0, "*>jI", "java.lang.object@73465f10", stringArray0);
      SQLUtil.parseColumnTypeAndSize("java.lang.object@73465f10");
      String[] stringArray1 = new String[7];
      stringArray1[0] = "\"wV;q-xKgPJL";
      stringArray1[1] = "SYSCS_GET_DATABASE_PROPERTY";
      stringArray1[2] = "java.lang.object@73465f10";
      stringArray1[3] = "\"wV;q-xKgPJL";
      stringArray1[4] = "W??Ed7%nYEpT)a";
      stringArray1[5] = "java.lang.object@73465f10";
      stringArray1[6] = "left";
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("*>jI", stringArray1, "\"wV;q-xKgPJL", "left", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.523967437042777
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SQLUtil.isDML("Rk&3@l");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#kC1|;5yVvQ");
      SQLUtil.normalize("#kC1|;5yVvQ", false);
      DataStore dataStore0 = new DataStore("Rk&3@l");
      VirtualFile virtualFile0 = new VirtualFile("Rk&3@l", dataStore0);
      virtualFile0.list();
      OutputStream outputStream0 = virtualFile0.getOutputStream(false);
      virtualFile0.getOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0, true);
      mockPrintWriter0.println(false);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchema("80000058-00d0-fd77-3ed8-000a0a0b1900");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      SQLUtil.mutatesDataOrStructure("80000058-00d0-fd77-3ed8-000a0a0b1900");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "#kC1|;5yVvQ";
      stringArray0[1] = "execfhcm*onfll0wi.og$g!i([ic_, fhcm*onfll0wi.fhcm*onfll0wi, fhcm*onfll0wi.og$g!i([ic_, fhcm*onfll0wi.fhcm*onfll0wi, fhcm*onfll0wi.select into, fhcm*onfll0wi.fhcm * onfll0wi as og$g!i([ic_ on fhcm*onfll0wi.fhcm * onfll0wi = og$g!i([ic_.fhcm * onfll0wi and fhcm*onfll0wi.fhcm * onfll0wi = og$g!i([ic_.fhcm * onfll0wi and fhcm*onfll0wi.fhcm*onfll0wi = og$g!i([ic_.fhcm*onfll0wi and fhcm*onfll0wi.fhcm*onfll0wi = og$g!i([ic_.fhcm*onfll0wi and fhcm*onfll0wi.select into = og$g!i([ic_.select into and fhcm*onfll0wi.fhcm*onfll0wi = og$g!i([ic_.fhcm*onfll0wi and fhcm*onfll0wi.fhcm * onfll0wi = og$g!i([ic_.fhcm * onfll0wi, fhcm*onfll0wi.fhcm * onfll0wi";
      SQLUtil.join("Rk&3@l", "#kC1|;5yVvQ", stringArray0, "# kC1 | ; 5yVvQ", "@9\"[4Q?:#BonUqG+}Md", stringArray0);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SQLUtil.substituteMarkers("", "", "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "''";
      SQLUtil.renderColumnNames(stringArray0);
      SQLUtil.typeAndName((DBObject) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "9qmV.8fp|=wOEVY/", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("", true, dBUniqueConstraint0);
      dBUniqueIndex0.setName("9qmV.8fp|=wOEVY/");
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, "''", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder("");
      // Undeclared exception!
      try { 
        stringBuilder0.replace(188, 1238, "xu,H<YF!BJ'*kaQih");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "";
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("", (String[]) null, (String) null, (String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[7];
      stringArray0[0] = "U\"W7c";
      stringArray0[4] = "3\"%Bt";
      stringArray0[6] = "org.apache.derby.impl.sql.compile.NextSequenceNode";
      System.setCurrentTimeMillis(0L);
      String string0 = SQLUtil.leftJoin("4Nx{9;?2Q3", stringArray0, "43X33.U", "3zC", stringArray0);
      String string1 = SQLUtil.join("~G*V/aHU.{2", "executeorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", stringArray0, " = ", "executeorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.574337865325543
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SQLUtil.isProcedureCall("");
      String string0 = "5owrz-I";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("5owrz-I", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = "rename";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rename");
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("rename", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.889071897239774
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SQLUtil.isDML("exec|6g~spc]w$8{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "drop index";
      stringArray0[1] = "exec|6g~spc]w$8{";
      stringArray0[2] = "exec|6g~spc]w$8{";
      stringArray0[3] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[4] = "exec|6g~spc]w$8{";
      stringArray0[5] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[6] = "drop index";
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FBConnectionProperties fBConnectionProperties1 = new FBConnectionProperties();
      DBSchema dBSchema0 = new DBSchema("x^wx8");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("roleName", dBSchema0);
      DBDataType.getInstance(1315, "");
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", (String) null, "truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("0<:~-j>_-u");
      defaultDBTable0.isIdentical(defaultDBTable1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "/GOgU";
      stringArray0[3] = "5DhmjWORSfIvCrJ";
      stringArray0[4] = "/GOgU";
      stringArray0[5] = "5DhmjWORSfIvCrJ";
      SQLUtil.join("/GOgU", "/GOgU", stringArray0, "/GOgU", "", stringArray0);
      DefaultDBTable defaultDBTable2 = new DefaultDBTable("O6!");
      DBDataType dBDataType0 = DBDataType.getInstance((-279293152), "insert");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("am-zr%>)6'(", defaultDBTable2, dBDataType0, integer1, integer0);
      String[] stringArray1 = new String[0];
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) defaultDBTable0;
      objectArray0[1] = (Object) "5DhmjWORSfIvCrJ";
      objectArray0[2] = (Object) "insert";
      objectArray0[3] = (Object) defaultDBTable2;
      String string0 = SQLUtil.renderWhereClause(stringArray1, objectArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("T=%Ts)a2H");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("T=%Ts)a2H", dBSchema0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "T=%Ts)a2H";
      stringArray0[1] = "T=%Ts)a2H";
      stringArray0[2] = "T=%Ts)a2H";
      stringArray0[3] = "T=%Ts)a2H";
      stringArray0[4] = "T=%Ts)a2H";
      stringArray0[5] = "T=%Ts)a2H";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("T=%Ts)a2H", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H) REFERENCES T=%Ts)a2H(T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H)", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String[] stringArray0 = new String[5];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(stringArray0[2]);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      SQLUtil.renderColumnNames((String[]) null);
      DBDataType dBDataType0 = DBDataType.getInstance(1548, "O!}'R%");
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(stringArray0[2], defaultDBTable0, dBDataType0, integer0, integer0);
      StringBuilder stringBuilder0 = new StringBuilder("alter index");
      SQLUtil.addRequiredCondition("Ng", stringBuilder0);
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("5DhmjWORSfIv>rJ", defaultDBTable0, 1548, "Ng");
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = "COLUMNPRIV";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SQLUtil sQLUtil0 = new SQLUtil();
      boolean boolean0 = true;
      String string0 = null;
      TableContainer tableContainer0 = new TableContainer((String) null);
      // Undeclared exception!
      try { 
        tableContainer0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.TableContainer", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.55436400816976
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SQLUtil.isDML("exec|6g~spc]w$8{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.mutatesDataOrStructure("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:";
      stringArray0[1] = "5DhmjWORSfIvCrJ";
      stringArray0[2] = "5DhmjWORSfIvCrJ";
      DBDataType dBDataType0 = DBDataType.getInstance(3995, "truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      Integer integer0 = new Integer(3995);
      TableContainer tableContainer0 = new TableContainer("truncat");
      tableContainer0.getTable("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("5DhmjWORSfIvCrJ", (DBTable) null, dBDataType0, integer0, integer0);
      SQLUtil.substituteMarkers("5DhmjWORSfIvCrJ", "truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:", (Object) null);
      // Undeclared exception!
      try { 
        DBDataType.getInstance("select into");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "alter table9", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("create table ", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      int int0 = 2147483645;
      int int1 = (-2306);
      DBDataType dBDataType0 = DBDataType.getInstance((-2306), "alter table9");
      Integer integer0 = new Integer(2147483645);
      Integer integer1 = new Integer((-778));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/*", defaultDBTable0, dBDataType0, integer0, integer1);
      String string0 = "truncateorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor";
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "truncateorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", dBTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("0<:~-j>_-u");
      String[] stringArray0 = new String[6];
      SQLUtil.join("0<:~-j>_-u", "/FP>mJUVmj5r]\u0006", stringArray0, "", "0<:~-j>_-u", stringArray0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("0<:~-j>_-u join  as 0<:~-j>_-u on /FP>mJUVmj5r]\u0006.null = 0<:~-j>_-u.null and /FP>mJUVmj5r]\u0006.null = 0<:~-j>_-u.null and /FP>mJUVmj5r]\u0006.null = 0<:~-j>_-u.null and /FP>mJUVmj5r]\u0006.null = 0<:~-j>_-u.null and /FP>mJUVmj5r]\u0006.null = 0<:~-j>_-u.null and /FP>mJUVmj5r]\u0006.null = 0<:~-j>_-u.null");
      DBDataType dBDataType0 = DBDataType.getInstance((-279293152), "I");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("quo<7=,(SI92", defaultDBTable1, dBDataType0, integer2, integer1);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("uY-}+C~_", "BLOB", versionNumber0);
      DBCatalog dBCatalog0 = new DBCatalog("uY-}+C~_", defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("BLOB", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("BLOB", dBSchema0);
      SQLUtil.ownerDotComponent(dBPackage0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "BLOB";
      objectArray0[4] = (Object) null;
      SQLUtil.typeAndName(dBSchema0);
      objectArray0[5] = (Object) defaultDatabase0;
      objectArray0[6] = (Object) dBCatalog0;
      objectArray0[7] = (Object) null;
      objectArray0[8] = (Object) dBSchema0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "alter materialized view9";
      String string0 = SQLUtil.join("call", "alter materialized view9", stringArray0, "alter materialized view9", "alter materialized view9", stringArray0);
      assertEquals("call join alter materialized view9 as alter materialized view9 on alter materialized view9. = alter materialized view9. and alter materialized view9.alter materialized view9 = alter materialized view9.alter materialized view9 and alter materialized view9.null = alter materialized view9.null", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5819085347071358
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SQLUtil.isDML("exec|6g~spc]w$8{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "drop index";
      stringArray0[1] = "exec|6g~spc]w$8{";
      stringArray0[2] = "exec|6g~spc]w$8{";
      stringArray0[3] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[4] = "exec|6g~spc]w$8{";
      stringArray0[5] = "updatepue]vjx(w ?q%#bbf";
      stringArray0[6] = "drop index";
      stringArray0[7] = "6FHX*x:BZP6iR.vV";
      stringArray0[8] = "exec|6g~spc]w$8{";
      SQLUtil.renderColumnListWithTableName("updatepue]vjx(w ?q%#bbf", stringArray0);
      SQLUtil.mutatesDataOrStructure("updatepue]vjx(w ?q%#bbf");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("updatepue]vjx(w ?q%#bbf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: updatepue]vjx(w ?q%#bbf
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.5542309123585936
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SQLUtil.mutatesStructure("D9");
      System.setCurrentTimeMillis(10L);
      SQLUtil.isDML("updatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("o7pr?xa|k]f;v@5");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "XBCM2.S";
      stringArray0[1] = "drop index";
      SQLUtil.renderColumnListWithTableName("D9", stringArray0);
      SQLUtil.mutatesDataOrStructure("+;e/M{<$");
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("XBCM2.S");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      boolean boolean0 = SQLUtil.isProcedureCall("exec|6g~spc]w$8{");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.328145673690373
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis(2398L);
      SQLUtil.isDML("execupdatepue]vjx(w ?q%#bbf");
      SQLUtil.isDDL("truncatedeletepue]vjx(w ?q%#bbf.randomutils warning: , deletepue]vjx(w ?q%#bbf.deletepue]vjx(w ?q%#bbf, deletepue]vjx(w ?q%#bbf.null, deletepue]vjx(w ?q%#bbf.randomutils warning:");
      String[] stringArray0 = new String[12];
      stringArray0[1] = "exec|6g~spc]w$8{";
      stringArray0[2] = "exec|6g~spc]w$8{";
      stringArray0[3] = "execupdatepue]vjx(w ?q%#bbf";
      stringArray0[4] = "exec|6g~spc]w$8{";
      stringArray0[5] = "execupdatepue]vjx(w ?q%#bbf";
      stringArray0[6] = "drop index";
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(".>UnS\"JPVV");
      assertNull(boolean0);
      
      Boolean boolean1 = SQLUtil.mutatesStructure("exec|6g~spc]w$8{");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "$";
      stringArray0[1] = "bqwK~b.;|~:C?v8";
      stringArray0[2] = "alter tableorg.firebirdsql.gds.impl.wire.transactionparameterbufferimpl";
      stringArray0[3] = "drop table";
      stringArray0[4] = "ns\")qHyWf<o;c";
      stringArray0[5] = "drop materialized vieworg.firebirdsql.gds.impl.wire.transactionparameterbufferimpl";
      stringArray0[6] = "org.firebir";
      stringArray0[7] = "_";
      stringArray0[8] = "org.apache.derby.iapi.sql.dictionary.RoleGrantDescriptor";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(" or ");
      stringBuilder0.append(0.0);
      SQLUtil.removeComments("drop table");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
