/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:15:23 GMT 2019
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.845101989612073
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.padString("", 0, false);
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      String[][] stringArray1 = new String[16][5];
      stringArray1[0] = stringArray0;
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize(stringArray1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.491633901109355
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 26;
      intArray0[5] = 0;
      resultMatrixHTML0.padString("6In@ZmLN)PL CMz>n", 0, false);
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixHTML0.m_RankingDiff = intArray0;
      int[] intArray1 = new int[1];
      intArray1[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray1;
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.stdDevPrecTipText();
      resultMatrixHTML0.setRowNameWidth(208);
      resultMatrixHTML0.globalInfo();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.8642837260540808
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      Vector<String> vector0 = new Vector<String>();
      vector0.iterator();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.globalInfo();
      vector0.stream();
      vector0.add(" ");
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      resultMatrixHTML0.showStdDevTipText();
      resultMatrixPlainText0.isMean((-1098));
      resultMatrixHTML0.getDefaultShowAverage();
      resultMatrixHTML0.meanPrecTipText();
      ResultMatrixHTML resultMatrixHTML1 = null;
      try {
        resultMatrixHTML1 = new ResultMatrixHTML((-1), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=4.088747711008914
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.removeFilterName("@^e^{x");
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixCSV0.setCountWidth(2257);
      resultMatrixPlainText0.m_RowNameWidth = 1;
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.setRowHidden(0, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      ResultMatrixLatex resultMatrixLatex1 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex1.setOptions(resultMatrixPlainText0.m_RowNames);
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2;
      intArray0[3] = 1945;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.stdDevPrecTipText();
      resultMatrixPlainText1.clearRanking();
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.9384727287206442
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(37, 0);
      resultMatrixGnuPlot0.getOptions();
      resultMatrixGnuPlot0.getMean((-2788), 975);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=4.184210731725346
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.removeFilterName("@^e^{x");
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixPlainText0.m_RowNameWidth = 1;
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.setRowHidden(1, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setOptions(stringArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixLatex.main(resultMatrixPlainText0.m_RowNames);
      ResultMatrixSignificance.main(resultMatrixPlainText0.m_RowNames);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.9902621505860023
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setStdDevWidth((-1073));
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(99, 1, 0.0);
      resultMatrixHTML0.getCount((-774));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      Vector<Integer> vector0 = new Vector<Integer>(2, 2);
      resultMatrixSignificance0.m_HeaderValues = vector0;
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixLatex.main((String[]) null);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.getHeader("*NjkjW);");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.194150495504465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.setSize(97, 10);
      resultMatrixGnuPlot0.m_EnumerateRowNames = true;
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.getMeanWidth();
      resultMatrixGnuPlot0.getDefaultEnumerateColNames();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      int[][] intArray0 = new int[9][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 97;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 10;
      intArray2[1] = 10;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 1;
      intArray2[5] = 142;
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 0;
      intArray3[1] = 142;
      intArray3[2] = 142;
      intArray3[3] = 2;
      intArray3[4] = 142;
      intArray3[5] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 2;
      intArray4[1] = 10;
      intArray4[2] = 1;
      intArray4[3] = 2;
      intArray4[4] = 0;
      intArray4[5] = 2;
      intArray4[6] = 2;
      intArray4[7] = 2;
      intArray4[8] = 142;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = (-1502);
      intArray5[1] = 10;
      intArray5[2] = 97;
      intArray5[3] = 1;
      intArray5[4] = 0;
      intArray5[5] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = (-3241);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[7];
      intArray7[0] = 0;
      intArray7[1] = 142;
      intArray7[2] = 0;
      intArray7[3] = 2;
      intArray7[4] = 0;
      intArray7[5] = 0;
      intArray7[6] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[0];
      intArray0[7] = intArray8;
      int[] intArray9 = new int[5];
      intArray9[0] = 2;
      intArray9[1] = 1;
      intArray9[2] = (-1502);
      intArray9[3] = 0;
      intArray9[4] = 2;
      intArray0[8] = intArray9;
      resultMatrixHTML0.setRanking(intArray0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.341629132163693
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary((int[][]) null, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.8143908871202075
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[1];
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.getColName(2329);
      resultMatrixGnuPlot0.clear();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.toStringRanking();
      resultMatrixLatex0.toStringMatrix();
      resultMatrixLatex0.getDisplayCol(1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.5627514200130066
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      int int0 = resultMatrixGnuPlot0.getDisplayCol(0);
      assertEquals(0, int0);
      
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot1.setPrintRowNames(false);
      resultMatrixGnuPlot1.getSignificanceCount(0, (-1103));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixSignificance0);
      resultMatrixLatex0.getDefaultPrintColNames();
      assertTrue(resultMatrixLatex0.getEnumerateColNames());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(40, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getCountWidth());
      
      int int1 = resultMatrixCSV0.getVisibleColCount();
      assertEquals(1, int1);
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.5626057864648426
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(0, 0, 605.533284442);
      double double0 = resultMatrixHTML0.getCount(0);
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.9374687645695685
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      resultMatrixSignificance0.setPrintColNames(false);
      int int0 = resultMatrixCSV1.getDisplayRow(0);
      assertEquals(0, int0);
      
      resultMatrixCSV0.getDefaultMeanPrec();
      resultMatrixCSV0.getRevision();
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertFalse(resultMatrixSignificance0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringSummary();
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.67021252769406
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(36);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      assertEquals(36, resultMatrixCSV0.getStdDevWidth());
      
      resultMatrixCSV0.m_StdDevWidth = 2655;
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2655, 1);
      resultMatrixLatex0.m_ColNameWidth = 2655;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = "]";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[4] = "[";
      resultMatrixLatex0.getDefaultStdDevWidth();
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixLatex0.m_StdDevWidth = 1;
      int int0 = resultMatrixCSV0.getDisplayRow((-2077));
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.953298716266952
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toStringMatrix();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 0;
      resultMatrixHTML0.m_Counts = doubleArray0;
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(97);
      ResultMatrixLatex.main((String[]) null);
      resultMatrixHTML0.setMeanPrec(97);
      assertEquals(97, resultMatrixHTML0.getCountWidth());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.208297958495492
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[9];
      stringArray1[0] = " ";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = " ";
      stringArray1[4] = "systemDialogs";
      stringArray1[5] = "v";
      stringArray1[6] = "";
      stringArray1[7] = "";
      stringArray1[8] = " ";
      stringArray0[0] = stringArray1;
      resultMatrixSignificance0.getColSize(stringArray0, 1);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1), (-1431));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.5661288212070374
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(0, 0, 605.533284442);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.setStdDev(40, 32, 0.0);
      resultMatrixCSV0.isAverage((-5589));
      resultMatrixCSV0.getDisplayName();
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.34176252414201
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.m_ShowAverage = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      intArray0[7] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixSignificance0.headerKeys();
      resultMatrixGnuPlot0.isMean(1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.2569201508079573
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getColName((-21));
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = (-21);
      resultMatrixCSV0.setRowOrder(intArray0);
      int[][] intArray1 = new int[9][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      int[] intArray2 = new int[1];
      intArray2[0] = 2;
      intArray1[7] = intArray2;
      intArray1[8] = intArray0;
      resultMatrixCSV0.setRanking(intArray1);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.8069145379467333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.removeFilterName("@^e^{x");
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixPlainText0.m_RowNameWidth = 1;
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.setRowHidden(1, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 0;
      intArray1[4] = 2;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = (-1);
      intArray2[1] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 0;
      intArray3[1] = (-1);
      intArray3[2] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = (-1);
      intArray4[1] = 0;
      intArray4[2] = 1;
      intArray4[3] = (-1);
      intArray4[4] = 2;
      intArray4[5] = (-1);
      intArray4[6] = 1;
      intArray4[7] = 0;
      intArray4[8] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[1] = (-503);
      intArray5[2] = 1;
      intArray5[3] = 2;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = 1;
      intArray6[1] = 1;
      intArray6[2] = 1;
      intArray6[3] = 0;
      intArray6[4] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 2;
      intArray7[1] = 0;
      intArray7[2] = 0;
      intArray7[3] = 2;
      intArray7[4] = 0;
      intArray7[5] = 2499;
      intArray0[6] = intArray7;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=4.0102483794013875
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = "";
      stringArray0[2] = "*";
      stringArray0[3] = "";
      stringArray0[4] = "";
      ResultMatrixHTML.main(stringArray0);
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.toStringRanking();
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.776096111028742
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol((-85));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ")";
      stringArray0[1] = "*";
      stringArray0[2] = ")";
      stringArray0[3] = "v";
      stringArray0[4] = " ";
      stringArray0[5] = "v";
      stringArray0[6] = "(";
      stringArray0[7] = "(";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.getRevision();
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.281605848690576
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1961);
      int[][] intArray0 = new int[6][8];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 45;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      intArray3[1] = 45;
      intArray3[2] = 45;
      intArray3[3] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 1961;
      intArray4[1] = 1961;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 45;
      intArray5[1] = 1;
      intArray5[2] = 1961;
      intArray5[3] = 1961;
      intArray5[4] = 2;
      intArray5[5] = 1961;
      intArray5[6] = 1;
      intArray5[7] = 0;
      intArray5[8] = 1961;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = 2;
      intArray6[1] = 0;
      intArray6[2] = 1;
      intArray6[3] = 0;
      intArray6[4] = 2;
      intArray6[5] = 0;
      intArray6[6] = 45;
      intArray6[7] = 0;
      intArray6[8] = 1961;
      intArray0[5] = intArray6;
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertEquals(1961, resultMatrixSignificance0.getRowCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(1, resultMatrixSignificance0.getColCount());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.2286443931453856
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      resultMatrixPlainText0.setSize(789, 789);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.912736445308378
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot0.getDisplayCol(655);
      resultMatrixGnuPlot0.getSignificanceCount(1694, (-840));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      stringArray0[4] = " ";
      resultMatrixGnuPlot0.RIGHT_PARENTHESES = "v";
      stringArray0[6] = " ";
      stringArray0[7] = "";
      stringArray0[8] = "*";
      ResultMatrixCSV.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.441113612617862
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 26;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      resultMatrixHTML0.m_RankingDiff = intArray0;
      int[] intArray1 = new int[1];
      resultMatrixHTML0.m_ShowStdDev = false;
      resultMatrixHTML0.m_ColOrder = intArray1;
      resultMatrixHTML0.setStdDevWidth(0);
      resultMatrixHTML0.getRevision();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.stdDevPrecTipText();
      resultMatrixHTML0.setRowNameWidth(208);
      assertEquals(208, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.0396833133779486
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int int0 = resultMatrixCSV0.getDisplayRow(2);
      assertEquals((-1), int0);
      
      int int1 = resultMatrixCSV0.getDefaultMeanPrec();
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, int1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.8229603650233455
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(true);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.getDefaultStdDevPrec();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.getColName(97);
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.m_ColNameWidth = 0;
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.getEnumerateColNames();
      resultMatrixLatex0.getSummaryTitle(2);
      resultMatrixLatex0.meanWidthTipText();
      resultMatrixLatex0.stdDevPrecTipText();
      assertTrue(resultMatrixLatex0.getShowAverage());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.9776062307153337
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(0);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_StdDevWidth = 2655;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth((-1));
      ResultMatrixLatex.main((String[]) null);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.getDefaultPrintColNames();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.9101687750962313
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth((-1186));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getStdDevPrec();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.toStringMatrix();
      String[] stringArray0 = new String[5];
      resultMatrixLatex0.setStdDevPrec((-1420));
      stringArray0[0] = "(";
      stringArray0[1] = "-ranking data not set-";
      stringArray0[2] = "Dataset (1)\n-----------\nrow0       \n";
      stringArray0[3] = " ";
      stringArray0[4] = "$circ$";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixLatex0.getShowStdDev();
      resultMatrixLatex0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=4.120184360229887
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(36);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_StdDevWidth = 2655;
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2655, 1);
      resultMatrixLatex0.m_ColNameWidth = 2655;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v";
      stringArray0[1] = "]";
      stringArray0[2] = " ";
      stringArray0[3] = "(";
      stringArray0[4] = "[";
      resultMatrixLatex0.getDefaultStdDevWidth();
      resultMatrixLatex0.setOptions(stringArray0);
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixLatex0.m_StdDevWidth = 2329;
      resultMatrixGnuPlot0.getColName(0);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.toStringRanking();
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.9131647745863334
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      String[][] stringArray1 = new String[1][5];
      stringArray1[0] = stringArray0;
      resultMatrixSignificance0.getColSize(stringArray1, 0);
      ResultMatrixHTML resultMatrixHTML0 = null;
      try {
        resultMatrixHTML0 = new ResultMatrixHTML((-1), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=4.023995086169954
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      assertEquals(18, stringArray0.length);
      
      String string0 = resultMatrixSignificance0.toStringKey();
      assertEquals("Key:\n", string0);
      
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(1, 0);
      double double0 = resultMatrixGnuPlot0.getMean(2, 26);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string1 = resultMatrixCSV0.toStringKey();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals("Key,\n[1],col0\n", string1);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(0, resultMatrixCSV0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.4150840923770085
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(114, 1);
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(1);
      int int0 = 84;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(84, (-388));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.281382721594089
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getColName(0);
      assertNotNull(string0);
      assertEquals("[1]", string0);
      
      resultMatrixCSV0.setStdDevPrec((-1));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getMean((-175), 45);
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.4928938091049497
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(7, 7);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "(";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      stringArray0[4] = ")";
      stringArray0[5] = " ";
      stringArray0[6] = " ";
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.setSignificanceWidth(125);
      resultMatrixPlainText0.setStdDevPrec(7);
      resultMatrixPlainText0.getColName(7);
      // Undeclared exception!
      try { 
        resultMatrixPlainText0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7328536339093623
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      String[][] stringArray0 = new String[6][1];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      stringArray1[1] = "$\bullet$";
      stringArray1[2] = "*";
      stringArray1[3] = "v";
      stringArray1[4] = " ";
      stringArray1[5] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      stringArray2[1] = "(";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[0] = ")";
      stringArray3[1] = "*";
      stringArray3[2] = "v";
      stringArray3[3] = ")";
      stringArray3[4] = "!j\"5BLHo/D";
      stringArray3[5] = "(";
      stringArray3[6] = "\n";
      stringArray3[7] = "v";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[3];
      stringArray4[0] = "8034";
      stringArray4[1] = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      stringArray4[2] = "8x\"_x_qgF";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[0];
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[7];
      stringArray6[0] = " ";
      stringArray6[1] = "$circ$";
      stringArray6[2] = "*";
      stringArray6[3] = ")";
      stringArray6[4] = "8x\"_x_qgF";
      stringArray6[5] = "(";
      stringArray6[6] = "8x\"_x_qgF";
      stringArray0[5] = stringArray6;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize(stringArray0, 1, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.861335923039791
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixHTML0);
      Vector<String> vector0 = new Vector<String>();
      vector0.iterator();
      resultMatrixPlainText0.m_HeaderKeys = vector0;
      resultMatrixPlainText0.globalInfo();
      resultMatrixHTML0.m_PrintRowNames = false;
      vector0.stream();
      vector0.add("Variance: ");
      resultMatrixPlainText0.toStringKey();
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixHTML0.showStdDevTipText();
      resultMatrixPlainText0.isMean(0);
      resultMatrixHTML0.getDefaultShowAverage();
      resultMatrixHTML0.meanPrecTipText();
      resultMatrixHTML0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(2461, 24);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.487634764824865
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 0;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(97, 0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.doubleToString(0, (-364));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.8918703246518165
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(0);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_StdDevWidth = 2655;
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2655, 1);
      resultMatrixLatex0.m_ColNameWidth = 2655;
      resultMatrixLatex0.getDefaultPrintColNames();
      resultMatrixCSV0.setPrintRowNames(true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.setRemoveFilterName(true);
      resultMatrixGnuPlot0.getColName(2655);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.toStringRanking();
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2289874463186274
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(32, 26);
      resultMatrixPlainText0.m_ColNameWidth = 1853;
      resultMatrixPlainText0.getDefaultCountWidth();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[2];
      intArray1[0] = (-2428);
      intArray1[1] = 949;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = (-2428);
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(5, 1970);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.984712502398711
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.getOptions();
      resultMatrixHTML0.getColName((-686));
      resultMatrixHTML0.setMeanWidth((-686));
      resultMatrixHTML0.setPrintColNames(true);
      ResultMatrixSignificance resultMatrixSignificance0 = null;
      try {
        resultMatrixSignificance0 = new ResultMatrixSignificance(0, (-686));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.441847180997983
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int int0 = 404;
      resultMatrixCSV0.toStringKey();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 404;
      intArray1[2] = 1;
      intArray1[3] = 1;
      resultMatrixCSV1.getColName((-1));
      resultMatrixCSV1.m_RowNameWidth = (-872);
      intArray1[4] = 404;
      intArray1[5] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        resultMatrixCSV1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7254154857298523
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(21, 13);
      assertEquals(0, resultMatrixGnuPlot1.getSignificanceWidth());
      assertFalse(resultMatrixGnuPlot1.getShowStdDev());
      assertTrue(resultMatrixGnuPlot1.getPrintColNames());
      
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      double double0 = resultMatrixGnuPlot0.getMean(1, 21);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(25, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.2282744338409093
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.rowNameWidthTipText();
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getRemoveFilterName());
      assertTrue(resultMatrixSignificance0.getDefaultEnumerateColNames());
      assertEquals(1, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.43740094110858
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 5);
      double[][] doubleArray0 = new double[8][0];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 1744;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 1744;
      doubleArray1[4] = (double) 1744;
      doubleArray1[5] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = 2631.0509329464876;
      doubleArray2[3] = (double) 1;
      doubleArray2[4] = 688.115;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = 0.0;
      doubleArray2[7] = (double) 1;
      doubleArray2[8] = (-1011.6058752);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = 2631.0509329464876;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1744;
      doubleArray4[1] = (-1011.6058752);
      doubleArray4[2] = 0.0;
      doubleArray4[3] = (-1011.6058752);
      doubleArray4[4] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = (double) 1;
      doubleArray5[4] = (double) 5;
      doubleArray5[5] = (double) 0;
      doubleArray5[6] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = 1044.0;
      doubleArray6[1] = (-1011.6058752);
      doubleArray6[2] = (double) 1;
      doubleArray6[3] = 688.115;
      doubleArray6[4] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[6];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = 1044.0;
      doubleArray7[2] = (double) 5;
      doubleArray7[3] = 0.0;
      doubleArray7[4] = (-1011.6058752);
      doubleArray7[5] = 2631.0509329464876;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[8];
      doubleArray8[0] = 688.115;
      doubleArray8[1] = (double) 1;
      doubleArray8[2] = (double) 0;
      doubleArray8[3] = 2631.0509329464876;
      doubleArray8[4] = (double) 1744;
      doubleArray8[5] = 688.115;
      doubleArray8[6] = (double) 1744;
      doubleArray8[7] = (-183.1939683);
      doubleArray0[7] = doubleArray8;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      resultMatrixPlainText0.setMeanWidth(1744);
      resultMatrixPlainText0.m_CountWidth = (-3566);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setPrintRowNames(false);
      assertTrue(resultMatrixPlainText0.getEnumerateRowNames());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.9270822435732704
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(0);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_StdDevWidth = 2655;
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2655, 1);
      resultMatrixLatex0.m_ColNameWidth = 2655;
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getColName(2655);
      resultMatrixGnuPlot0.clear();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "]";
      stringArray0[1] = "";
      stringArray0[2] = "$\bullet$";
      ResultMatrixCSV.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.192997046442502
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getColOrder();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      String string0 = resultMatrixGnuPlot0.toStringKey();
      assertEquals(0, resultMatrixGnuPlot0.getDefaultMeanWidth());
      assertEquals("Key:\n", string0);
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.4891747146076337
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.setRemoveFilterName(false);
      String string0 = resultMatrixLatex0.getSummaryTitle((-1));
      assertEquals("`", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(155, 1);
      resultMatrixHTML0.setEnumerateColNames(true);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getEnumerateRowNames();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      assertEquals(2, resultMatrixGnuPlot0.getVisibleColCount());
      
      boolean boolean0 = resultMatrixLatex0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertFalse(resultMatrixLatex0.getRemoveFilterName());
      assertEquals(1, resultMatrixLatex0.getRowCount());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(0, resultMatrixLatex0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.141379169300235
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 3;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 0;
      intArray0[7] = 1;
      resultMatrixHTML0.m_ColOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.8506262608805635
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      resultMatrixGnuPlot0.clearSummary();
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(18, stringArray0.length);
      
      resultMatrixGnuPlot0.getMean(0, 61);
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(26, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getVisibleRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.428748492421972
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      resultMatrixGnuPlot0.getMean(26, 498);
      boolean boolean0 = resultMatrixGnuPlot0.isMean((-925));
      assertFalse(boolean0);
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(26, resultMatrixGnuPlot0.getVisibleColCount());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=4.077690246964204
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      assertEquals(1, resultMatrixCSV0.getColCount());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.removeFilterName("@^e^{x");
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixPlainText0.m_RowNameWidth = 1;
      assertEquals(1, resultMatrixPlainText0.getVisibleRowCount());
      
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.setRowHidden(1, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixGnuPlot0);
      resultMatrixLatex0.setOptions(stringArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      resultMatrixLatex0.setColOrder(intArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayName();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText0.stdDevPrecTipText();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      
      resultMatrixPlainText1.clearRanking();
      assertEquals(1, resultMatrixPlainText1.getVisibleRowCount());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.2913072068308646
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString(":qOYq7p{po'", 2767, false);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      boolean boolean0 = resultMatrixGnuPlot0.getShowAverage();
      assertFalse(boolean0);
      
      resultMatrixGnuPlot0.getColOrder();
      assertEquals(2, resultMatrixGnuPlot0.getDefaultStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.518944055167585
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.getColName(0);
      assertEquals("[1]", string0);
      assertNotNull(string0);
      
      resultMatrixCSV0.setStdDevPrec((-1));
      String string1 = resultMatrixCSV0.padString("", 1);
      assertEquals(" ", string1);
      
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV0.setColNameWidth((-1));
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = 2;
      resultMatrixCSV0.setColOrder(intArray0);
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.511726957018748
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString("enum-row-names", (-145), false);
      resultMatrixGnuPlot0.isRowName((-145));
      resultMatrixGnuPlot0.clearSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.LEFT_PARENTHESES = null;
      resultMatrixSignificance0.padString("f0dX", (-1114));
      resultMatrixGnuPlot0.setPrintColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.removeFilterName("f0dX");
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.m_ColNames = stringArray0;
      resultMatrixGnuPlot0.setStdDev(50, 97, 1409.46838);
      resultMatrixSignificance0.setStdDevWidth(2);
      resultMatrixSignificance0.isMean((-1114));
      resultMatrixCSV0.enumerateRowNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.globalInfo();
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getSignificanceWidth());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.9002364723297585
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      String[] stringArray0 = resultMatrixGnuPlot0.getOptions();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(18, stringArray0.length);
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.padString("", (-2249));
      assertEquals("", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 2);
      resultMatrixCSV1.globalInfo();
      resultMatrixCSV0.setColNameWidth(0);
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(25, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getColNameWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertTrue(resultMatrixCSV0.getEnumerateColNames());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.241352272723124
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixCSV0);
      resultMatrixHTML0.setStdDevWidth((-1073));
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(99, 1, 0.0);
      resultMatrixHTML0.getCount((-774));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 2);
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV1.clear();
      assertEquals(25, resultMatrixHTML0.getRowNameWidth());
      assertTrue(resultMatrixHTML0.getPrintRowNames());
      assertEquals(0, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getMeanPrec());
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(0, resultMatrixHTML0.getMeanWidth());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      
      resultMatrixCSV0.clear();
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      assertEquals(1, resultMatrixCSV0.getRowCount());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.124365809783805
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray0[1] = doubleArray2;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixLatex0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.961951576830073
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1961);
      int[][] intArray0 = new int[6][8];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 45;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(1);
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.5626057864648426
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ShowStdDev = true;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(0, 0, 605.533284442);
      double double0 = resultMatrixHTML0.getCount(97);
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.977605745136168
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(0);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_StdDevWidth = 2655;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(97);
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.2364195679099574
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      resultMatrixCSV0.m_Wins = intArray0;
      resultMatrixCSV0.getDisplayRow(192);
      String[] stringArray0 = new String[0];
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.355431330880217
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      resultMatrixGnuPlot0.getMean(2, (-95));
      assertEquals(26, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowStdDev());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(2, resultMatrixGnuPlot0.getDefaultMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
  }
}
