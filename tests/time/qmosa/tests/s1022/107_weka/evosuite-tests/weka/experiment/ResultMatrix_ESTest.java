/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 30 08:36:34 GMT 2020
 */

package weka.experiment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.experiment.ResultMatrix;
import weka.experiment.ResultMatrixCSV;
import weka.experiment.ResultMatrixGnuPlot;
import weka.experiment.ResultMatrixHTML;
import weka.experiment.ResultMatrixLatex;
import weka.experiment.ResultMatrixPlainText;
import weka.experiment.ResultMatrixSignificance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMatrix_ESTest extends ResultMatrix_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.5130977373713814
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[5];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toArray();
      resultMatrixPlainText0.m_StdDevPrec = (-615);
      resultMatrixPlainText0.setMeanPrec(0);
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixSignificance0.getRevision();
      resultMatrixPlainText0.setRowName(0, "The maximum width of the column names (0 = optimal).");
      assertEquals(1, resultMatrixPlainText0.getVisibleColCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.815711446812026
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      resultMatrixGnuPlot0.getRevision();
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[3] = 1;
      intArray2[7] = 26;
      intArray2[4] = 0;
      resultMatrixCSV0.WIN_STRING = "8034";
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 0;
      resultMatrixGnuPlot0.getVisibleRowCount();
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot((-639), 3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.4191713200283544
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      int[][] intArray0 = new int[0][6];
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0253117962064526
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      resultMatrixGnuPlot0.getRevision();
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[3] = 1;
      intArray2[7] = 26;
      intArray2[4] = 0;
      resultMatrixCSV0.WIN_STRING = "8034";
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 68);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 1);
      resultMatrixSignificance0.listOptions();
      assertEquals(1, resultMatrixSignificance0.getVisibleRowCount());
      
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText1.getDefaultCountWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      boolean boolean0 = resultMatrixHTML0.getPrintColNames();
      assertFalse(boolean0);
      
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName((-1504), "(");
      resultMatrixCSV0.setCount(2, 0.0);
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertFalse(resultMatrixCSV0.getEnumerateColNames());
      
      resultMatrixGnuPlot0.toStringSummary();
      assertEquals(26, resultMatrixGnuPlot0.getColCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.522460152904822
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toArray();
      resultMatrixPlainText0.m_StdDevPrec = (-615);
      resultMatrixPlainText0.setMeanPrec(0);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixPlainText0);
      assertEquals((-615), resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.setStdDev(1, 0, 0);
      resultMatrixHTML0.getCount(0);
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2896990610323606
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 24;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(24, 0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "v";
      stringArray0[3] = "..";
      stringArray0[4] = "";
      stringArray0[5] = "v";
      resultMatrixGnuPlot0.setOptions(stringArray0);
      resultMatrixGnuPlot0.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(120, 7);
      resultMatrixSignificance0.setStdDevWidth((-340));
      ResultMatrixCSV resultMatrixCSV0 = null;
      try {
        resultMatrixCSV0 = new ResultMatrixCSV(125, (-2380));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0445224377234217
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixHTML0.getDisplayName();
      resultMatrixLatex0.printRowNamesTipText();
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertTrue(resultMatrixLatex0.getPrintRowNames());
      
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(64, 0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColName(62, "(?=]f(!FjIQ=AkQ");
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(64, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(0, resultMatrixSignificance0.getVisibleRowCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.1994155275861615
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[5];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      int[][] intArray0 = new int[5][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 26;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 0;
      intArray2[1] = 26;
      intArray2[2] = (-1);
      intArray2[3] = 0;
      intArray2[4] = 5;
      intArray2[5] = 26;
      intArray2[6] = 0;
      intArray2[7] = 2;
      intArray2[8] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 5;
      intArray3[1] = 1;
      intArray3[2] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = (-1);
      intArray4[1] = (-57);
      intArray4[2] = 2;
      intArray4[3] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = 2;
      intArray5[3] = 2;
      intArray5[4] = 0;
      intArray0[4] = intArray5;
      resultMatrixCSV0.m_Wins = intArray0;
      resultMatrixCSV0.toArray();
      resultMatrixPlainText0.m_StdDevPrec = (-615);
      resultMatrixPlainText0.setMeanPrec(0);
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0286035426618665
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(0);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8456384931342575
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      resultMatrixSignificance0.clearHeader();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      resultMatrixSignificance0.m_RankingWins = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearHeader();
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
      
      resultMatrixCSV0.clear();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setColName(1, "Key:\n");
      assertFalse(resultMatrixLatex0.getEnumerateRowNames());
      assertEquals(2, resultMatrixLatex0.getMeanPrec());
      assertEquals(2, resultMatrixLatex0.getStdDevPrec());
      assertEquals(25, resultMatrixLatex0.getRowNameWidth());
      assertEquals(0, resultMatrixLatex0.getSignificanceWidth());
      assertEquals(0, resultMatrixLatex0.getMeanWidth());
      assertEquals(0, resultMatrixLatex0.getStdDevWidth());
      
      resultMatrixCSV0.setCount(2, 2);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertFalse(resultMatrixCSV0.getDefaultRemoveFilterName());
      assertFalse(resultMatrixCSV0.getShowAverage());
      assertFalse(resultMatrixCSV0.getShowStdDev());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(2, 647);
      resultMatrixSignificance0.setCountWidth(2);
      resultMatrixSignificance0.clearHeader();
      assertEquals(2, resultMatrixSignificance0.getCountWidth());
      
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.clearHeader();
      resultMatrixCSV0.clear();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(resultMatrixCSV0);
      resultMatrixLatex0.setColName(2, "#######\n");
      resultMatrixCSV0.setCount(0, 1);
      resultMatrixLatex0.globalInfo();
      resultMatrixCSV0.setCount(0, (-322.87736247784));
      assertTrue(resultMatrixCSV0.getPrintRowNames());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(9, 9);
      int[] intArray0 = new int[0];
      resultMatrixSignificance0.m_SignificanceWidth = 3351;
      resultMatrixSignificance0.m_ColOrder = intArray0;
      resultMatrixSignificance0.clear();
      resultMatrixSignificance0.getDefaultShowStdDev();
      resultMatrixSignificance0.clearRanking();
      resultMatrixSignificance0.setStdDevPrec((-1109));
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      assertFalse(resultMatrixSignificance0.getShowAverage());
      assertEquals(9, resultMatrixSignificance0.getVisibleRowCount());
      assertEquals(9, resultMatrixSignificance0.getVisibleColCount());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5690572532800373
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(true);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.m_ColOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[8][7];
      intArray1[0] = resultMatrixLatex0.m_ColOrder;
      intArray1[1] = resultMatrixLatex0.m_ColOrder;
      intArray1[2] = resultMatrixLatex0.m_ColOrder;
      intArray1[3] = resultMatrixLatex0.m_ColOrder;
      intArray1[4] = intArray0;
      intArray1[5] = resultMatrixLatex0.m_ColOrder;
      intArray1[6] = resultMatrixLatex0.m_ColOrder;
      intArray1[7] = intArray0;
      resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "$circ$";
      stringArray0[2] = "*";
      stringArray0[3] = "$circ$";
      stringArray0[4] = "";
      stringArray0[5] = "*";
      stringArray0[6] = "";
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(926, 2);
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      boolean boolean0 = resultMatrixHTML0.getPrintColNames();
      assertEquals(50, resultMatrixHTML0.getRowNameWidth());
      assertEquals(2, resultMatrixHTML0.getStdDevPrec());
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      assertTrue(boolean0);
      
      resultMatrixLatex0.setColName((-1715), "ey7.1n8");
      assertEquals(1, resultMatrixLatex0.getVisibleColCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.47840947841564
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(97);
      ResultMatrixLatex.main((String[]) null);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      resultMatrixGnuPlot0.toStringKey();
      resultMatrixGnuPlot0.listOptions();
      int[][] intArray0 = new int[0][5];
      resultMatrixGnuPlot0.setRanking(intArray0);
      assertEquals(97, resultMatrixHTML0.getCountWidth());
      assertFalse(resultMatrixHTML0.getPrintColNames());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8052960326856375
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      resultMatrixGnuPlot0.getRevision();
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[3] = 1;
      intArray2[7] = 26;
      intArray2[4] = 0;
      resultMatrixCSV0.WIN_STRING = "8034";
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray2[8] = 1;
      intArray0[1] = intArray2;
      resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertTrue(resultMatrixCSV1.getPrintColNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertEquals(50, resultMatrixCSV1.getRowNameWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertFalse(resultMatrixCSV1.getEnumerateColNames());
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.setStdDev(0, 2, 2);
      resultMatrixHTML0.getCount(10);
      assertEquals(1, resultMatrixHTML0.getVisibleRowCount());
      assertEquals(1, resultMatrixHTML0.getVisibleColCount());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7184804374555256
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[][] intArray0 = new int[7][1];
      int[] intArray1 = new int[3];
      intArray1[0] = 2;
      intArray1[1] = 1;
      intArray1[2] = 2;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = 1;
      intArray4[1] = 2;
      intArray4[2] = 53;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 2;
      intArray5[1] = 53;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 53;
      intArray5[5] = 53;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[5];
      intArray6[0] = 53;
      intArray6[1] = 2;
      intArray6[2] = 53;
      intArray6[3] = 2;
      intArray6[4] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[7];
      intArray7[0] = 2;
      intArray7[1] = 53;
      intArray7[2] = 1;
      intArray7[3] = (-262);
      intArray7[4] = 53;
      intArray7[5] = 2;
      intArray7[6] = 2;
      intArray0[6] = intArray7;
      resultMatrixHTML0.setRanking(intArray0);
      resultMatrixHTML0.getDefaultShowStdDev();
      assertEquals(1, resultMatrixHTML0.getColCount());
      assertEquals(0, resultMatrixHTML0.getDefaultMeanWidth());
      assertEquals(1, resultMatrixHTML0.getRowCount());
      assertEquals(2, resultMatrixHTML0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixHTML0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.527914712476691
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      resultMatrixGnuPlot0.getRevision();
      intArray0[0] = intArray1;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixCSV0);
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      String[][] stringArray1 = new String[3][7];
      String[] stringArray2 = new String[0];
      stringArray1[0] = stringArray2;
      stringArray1[1] = stringArray0;
      stringArray1[2] = stringArray0;
      resultMatrixSignificance0.getColSize(stringArray1, 1);
      ResultMatrixLatex resultMatrixLatex0 = null;
      try {
        resultMatrixLatex0 = new ResultMatrixLatex(2, (-871));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.90255381859477
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(0, "");
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(34, 582);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.874519625657589
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder((int[]) null);
      resultMatrixLatex0.setPrintRowNames(false);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.549318601296154
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = " ";
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toArray();
      resultMatrixPlainText0.m_StdDevPrec = (-615);
      ResultMatrixPlainText.main(stringArray0);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText(26, 0);
      resultMatrixSignificance0.listOptions();
      resultMatrixPlainText0.getDefaultCountWidth();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(2, "(");
      resultMatrixCSV0.setCount((-34), 81);
      assertEquals(1, resultMatrixCSV0.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      assertFalse(resultMatrixCSV0.getShowStdDev());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.191545952644191
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setRowHidden(1, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(47, 0);
      resultMatrixGnuPlot1.setEnumerateRowNames(false);
      resultMatrixGnuPlot1.toStringMatrix();
      resultMatrixGnuPlot1.setShowAverage(false);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixPlainText0);
      int[][] intArray1 = new int[6][0];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      resultMatrixHTML1.m_Significance = intArray1;
      resultMatrixPlainText0.toStringKey();
      resultMatrixHTML1.getDefaultSignificanceWidth();
      ResultMatrixHTML resultMatrixHTML2 = null;
      try {
        resultMatrixHTML2 = new ResultMatrixHTML(1, (-2478));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2522695733518288
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.m_SignificanceWidth = 452;
      resultMatrixSignificance0.setOptions((String[]) null);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColName(1, "*");
      assertFalse(resultMatrixSignificance0.getPrintRowNames());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.858895905982988
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setRowHidden(0, true);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.946271959759045
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = resultMatrixPlainText0.getDisplayCol(0);
      assertEquals(0, int0);
      
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "v";
      stringArray0[1] = "*";
      resultMatrixSignificance1.getRevision();
      assertEquals(1, resultMatrixSignificance1.getColCount());
      assertEquals(1, resultMatrixSignificance1.getRowCount());
      
      resultMatrixSignificance0.setColName(0, " ");
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(0, resultMatrixSignificance0.getDefaultMeanWidth());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.037107624109427
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      int[] intArray0 = new int[0];
      resultMatrixLatex0.m_ColOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[8][7];
      intArray1[0] = resultMatrixLatex0.m_ColOrder;
      intArray1[1] = resultMatrixLatex0.m_ColOrder;
      intArray1[2] = resultMatrixLatex0.m_ColOrder;
      intArray1[3] = resultMatrixLatex0.m_ColOrder;
      intArray1[4] = intArray0;
      intArray1[5] = resultMatrixLatex0.m_ColOrder;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-count-width";
      stringArray0[1] = ")";
      stringArray0[2] = " ";
      try { 
        resultMatrixSignificance0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \")\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.5333309329945566
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.setSignificanceWidth(0);
      resultMatrixCSV0.getDefaultPrintColNames();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7875166656265864
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(true);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.m_ColOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[8][7];
      intArray1[1] = resultMatrixLatex0.m_ColOrder;
      intArray1[2] = resultMatrixLatex0.m_ColOrder;
      intArray1[3] = resultMatrixLatex0.m_ColOrder;
      intArray1[5] = resultMatrixLatex0.m_ColOrder;
      intArray1[6] = resultMatrixLatex0.m_ColOrder;
      intArray1[7] = intArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setRanking(intArray1);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3826655783158333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[7];
      ResultMatrixCSV.main(stringArray0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setSize(54, (-1358));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.5124456593796096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toStringMatrix();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(1181);
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "v";
      stringArray0[1] = "(";
      stringArray0[2] = "v";
      stringArray0[3] = "v";
      stringArray0[4] = "v";
      stringArray0[5] = "<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>Average</td><td align=\"right\">NaN.00</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n";
      resultMatrixHTML0.setPrintRowNames(true);
      stringArray0[6] = "v";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance1.getRevision();
      int int0 = resultMatrixHTML0.getMeanPrec();
      assertTrue(resultMatrixHTML0.getShowAverage());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getRowName((-1));
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.284867869350357
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.setMeanWidth((-3527));
      resultMatrixPlainText0.m_StdDevPrec = (-3527);
      resultMatrixPlainText0.getDefaultEnumerateRowNames();
      resultMatrixPlainText0.setStdDevPrec((-376));
      resultMatrixPlainText0.setColNameWidth((-376));
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixPlainText0);
      resultMatrixGnuPlot0.toArray();
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      resultMatrixGnuPlot0.clear();
      int[][] intArray0 = new int[2][2];
      int[] intArray1 = new int[8];
      resultMatrixPlainText0.doubleToString((-187.5811), 1);
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = (-1);
      intArray1[6] = (-376);
      intArray1[7] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = (-1);
      intArray2[1] = 0;
      intArray2[2] = (-1);
      intArray2[3] = (-3527);
      intArray2[4] = 2;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.setSummary(intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9923393182697247
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixGnuPlot0.clearRanking();
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 1);
      String string0 = resultMatrixGnuPlot0.doubleToString(1, 0);
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals("1.", string0);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
      assertEquals(40, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixSignificance0.addHeader("[", "v");
      assertEquals(0, resultMatrixSignificance0.getVisibleRowCount());
      
      int int0 = resultMatrixCSV0.getDefaultStdDevPrec();
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertEquals(0, resultMatrixCSV0.getColCount());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.4163965805012095
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringMatrix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.316379479061607
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "(";
      stringArray0[1] = "(";
      stringArray0[2] = " ";
      stringArray0[3] = "*";
      stringArray0[4] = "*";
      stringArray0[5] = " ";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColName((-1763), " ");
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.071080362736029
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(0, 0, 605.533284442);
      resultMatrixHTML0.getCount(97);
      resultMatrixHTML0.getDefaultPrintRowNames();
      assertEquals(2, resultMatrixHTML0.getStdDevWidth());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.679706038839934
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(54, 54);
      // Undeclared exception!
      try { 
        resultMatrixGnuPlot0.getHeader("*");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.040113582839997
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(54, 54);
      resultMatrixGnuPlot0.getVisibleRowCount();
      int int0 = ResultMatrix.SIGNIFICANCE_TIE;
      resultMatrixGnuPlot0.isStdDev(54);
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "v";
      stringArray0[5] = "*";
      stringArray0[6] = "v";
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColName(30, "*");
      int int1 = 582;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(582, 4185);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.45554445186815
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(97);
      ResultMatrixLatex.main((String[]) null);
      resultMatrixHTML0.setSignificance((-1560), 0, 97);
      resultMatrixHTML0.isStdDev(4);
      assertTrue(resultMatrixHTML0.getShowAverage());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.773775537304291
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[0];
      resultMatrixGnuPlot0.getRevision();
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[2] = 1;
      intArray2[3] = 26;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray2[8] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      intArray3[1] = 2;
      intArray3[2] = 1;
      intArray3[3] = 26;
      intArray0[2] = intArray3;
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(resultMatrixGnuPlot0);
      resultMatrixGnuPlot1.setSummary(intArray0, intArray0);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixGnuPlot1);
      resultMatrixCSV0.globalInfo();
      resultMatrixCSV1.padString("", 0, false);
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.clearHeader();
      resultMatrixCSV1.getDefaultRowNameWidth();
      assertEquals(2, resultMatrixCSV1.getStdDevPrec());
      assertTrue(resultMatrixCSV1.getPrintColNames());
      assertEquals(0, resultMatrixCSV1.getStdDevWidth());
      assertTrue(resultMatrixCSV1.getPrintRowNames());
      assertEquals(0, resultMatrixCSV1.getSignificanceWidth());
      assertFalse(resultMatrixCSV1.getEnumerateRowNames());
      assertEquals(2, resultMatrixCSV1.getMeanPrec());
      assertEquals(0, resultMatrixCSV1.getCountWidth());
      assertEquals(0, resultMatrixCSV1.getMeanWidth());
      assertEquals(50, resultMatrixCSV1.getRowNameWidth());
      assertEquals(26, resultMatrixCSV1.getVisibleColCount());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.762136040901145
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringSummary();
      int int0 = resultMatrixGnuPlot0.getVisibleRowCount();
      assertEquals(1, int0);
      
      int int1 = ResultMatrix.SIGNIFICANCE_TIE;
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      stringArray0[1] = "Max index (ints): ";
      stringArray0[2] = "Max index (ints): ";
      stringArray0[3] = "";
      stringArray0[4] = "v";
      stringArray0[5] = "*";
      stringArray0[6] = "v";
      resultMatrixGnuPlot0.getRowOrder();
      resultMatrixGnuPlot0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getDefaultRowNameWidth();
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getVisibleColCount());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.5065410877262027
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[5];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixPlainText0);
      resultMatrixCSV0.toArray();
      resultMatrixPlainText0.m_StdDevPrec = (-615);
      resultMatrixPlainText0.setMeanPrec(0);
      assertEquals((-615), resultMatrixPlainText0.getStdDevPrec());
      
      ResultMatrixPlainText.main(stringArray0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColName((-1), " ");
      assertTrue(resultMatrixSignificance0.getEnumerateColNames());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.9515594161282523
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString(":qOYq7p{po'", 2767, false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 569);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 2;
      intArray0[5] = 2767;
      intArray0[6] = 3;
      intArray0[7] = 2;
      resultMatrixCSV0.setRowOrder(intArray0);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.headerKeys();
      resultMatrixGnuPlot0.isMean(1);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = null;
      try {
        resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1012, (-5317));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.4801084376895295
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.m_StdDevWidth = (-1);
      resultMatrixHTML0.getCountWidth();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixHTML0);
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.getRevision();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = null;
      try {
        resultMatrixGnuPlot0 = new ResultMatrixGnuPlot((-1), 97);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9792949754551623
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.setPrintRowNames(false);
      resultMatrixSignificance0.getDefaultShowStdDev();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixSignificance0);
      resultMatrixSignificance0.m_PrintRowNames = false;
      resultMatrixSignificance0.m_ColNameWidth = 1;
      resultMatrixGnuPlot0.setShowStdDev(false);
      resultMatrixGnuPlot0.m_EnumerateColNames = false;
      resultMatrixGnuPlot0.toStringKey();
      Vector<String> vector0 = new Vector<String>();
      resultMatrixGnuPlot0.m_HeaderValues = vector0;
      resultMatrixSignificance0.getMean(789, 789);
      resultMatrixGnuPlot0.getRowName(2);
      resultMatrixSignificance0.removeFilterNameTipText();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "*";
      vector0.toArray(stringArray0);
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.getRevision();
      resultMatrixSignificance0.getDisplayName();
      resultMatrixSignificance0.getColHidden(514);
      resultMatrixSignificance0.getDefaultRowNameWidth();
      resultMatrixSignificance0.getDefaultStdDevWidth();
      assertTrue(resultMatrixSignificance0.getEnumerateRowNames());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.415099083818193
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      resultMatrixPlainText0.TIE_STRING = "/^?wkz]I*juS*N";
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      stringArray0[4] = "v";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.setColName(2, "'Wx) EV*$GD4^W{Rl");
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixPlainText0.getColHidden(26);
      boolean boolean0 = resultMatrixPlainText0.isAverage(5);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.114414117418198
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(0, 0, 605.533284442);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      resultMatrixCSV0.isAverage((-1712));
      resultMatrixCSV0.getDisplayName();
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
      assertFalse(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.845638493134258
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixLatex0);
      resultMatrixCSV0.m_ShowAverage = false;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      Vector<Integer> vector0 = new Vector<Integer>();
      resultMatrixGnuPlot0.m_HeaderKeys = vector0;
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 2;
      intArray0[6] = 2;
      intArray0[7] = 1;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixSignificance0.headerKeys();
      resultMatrixGnuPlot0.isMean(1);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.8578613523789516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setRowOrder(intArray0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.setPrintRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.381715023072341
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      resultMatrixPlainText0.getDisplayCol(26);
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*";
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      stringArray0[3] = "(";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      stringArray0[4] = "v";
      resultMatrixSignificance0.setOptions(stringArray0);
      resultMatrixSignificance0.getRevision();
      resultMatrixSignificance0.setColName(2, "'Wx) EV*$GD4^W{Rl");
      resultMatrixSignificance0.headerKeys();
      resultMatrixSignificance0.getEnumerateRowNames();
      assertEquals(0, resultMatrixSignificance0.getStdDevPrec());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.9681239800897954
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      assertEquals(50, resultMatrixCSV0.getRowNameWidth());
      assertEquals(0, resultMatrixCSV0.getMeanWidth());
      assertEquals(0, resultMatrixCSV0.getCountWidth());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertTrue(resultMatrixCSV0.getPrintColNames());
      assertEquals(0, resultMatrixCSV0.getSignificanceWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
      assertEquals(2, resultMatrixCSV0.getMeanPrec());
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(2, 0);
      resultMatrixCSV1.getDefaultEnumerateColNames();
      resultMatrixCSV1.setRowHidden((-2093), false);
      resultMatrixCSV1.setRowName(317, "b5}");
      assertEquals(0, resultMatrixCSV1.getDefaultColNameWidth());
      assertEquals(0, resultMatrixCSV1.getVisibleRowCount());
      assertEquals(2, resultMatrixCSV1.getColCount());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.453356273536435
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.setShowStdDev(false);
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(97);
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.506600547053077
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(20, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getDefaultSignificanceWidth();
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.950391601025311
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      int int0 = (-85);
      resultMatrixPlainText0.getDisplayCol((-85));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      String[] stringArray0 = new String[8];
      stringArray0[0] = ")";
      stringArray0[1] = "v";
      stringArray0[2] = ")";
      stringArray0[3] = "v";
      stringArray0[4] = " ";
      stringArray0[5] = "v";
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.getColSize((String[][]) null, 4796);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.791039810954727
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1961);
      int[][] intArray0 = new int[6][8];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 45;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      intArray3[1] = 45;
      intArray3[2] = 45;
      intArray3[3] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 1961;
      intArray4[1] = 1961;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 45;
      intArray5[1] = 1;
      intArray5[2] = 1961;
      intArray5[3] = 1961;
      intArray5[4] = 2;
      intArray5[5] = 1961;
      intArray5[6] = 1;
      intArray5[7] = 0;
      intArray5[8] = 1961;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = 2;
      intArray6[1] = 0;
      intArray6[2] = 1;
      intArray6[3] = 0;
      intArray6[4] = 2;
      intArray6[5] = 0;
      intArray6[6] = 45;
      intArray6[7] = 0;
      intArray6[8] = 1961;
      intArray0[5] = intArray6;
      resultMatrixSignificance0.setSummary(intArray0, intArray0);
      int int0 = resultMatrixSignificance0.getSignificanceWidth();
      assertEquals(0, int0);
      assertEquals(1961, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultCountWidth());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.920584833654642
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      int[] intArray0 = new int[1];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixHTML0);
      int[][] intArray1 = new int[7][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray1[6] = intArray2;
      resultMatrixGnuPlot0.setSummary(intArray1, intArray1);
      resultMatrixGnuPlot0.getDefaultStdDevWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixHTML0);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML();
      resultMatrixHTML1.setStdDev(726, (-3580), 0);
      resultMatrixHTML0.getCount((-682));
      assertEquals(0, resultMatrixHTML0.getRowNameWidth());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText();
      // Undeclared exception!
      resultMatrixPlainText0.setSize(789, 789);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.934912507337768
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getDefaultMeanWidth();
      resultMatrixGnuPlot0.getDisplayCol(655);
      resultMatrixGnuPlot0.getSignificanceCount(1694, (-840));
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.toStringRanking();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 0;
      intArray0[2] = 2;
      resultMatrixCSV0.m_RankingWins = intArray0;
      assertEquals(40, resultMatrixCSV0.getRowNameWidth());
      
      resultMatrixCSV0.clear();
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.5805376244873655
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(70, 5);
      resultMatrixSignificance0.toStringRanking();
      String string0 = resultMatrixSignificance0.getSummaryTitle(37);
      assertEquals("l", string0);
      
      resultMatrixSignificance0.getDisplayName();
      assertEquals(2, resultMatrixSignificance0.getDefaultStdDevPrec());
      assertEquals(2, resultMatrixSignificance0.getMeanPrec());
      assertEquals(5, resultMatrixSignificance0.getRowCount());
      assertEquals(0, resultMatrixSignificance0.getDefaultColNameWidth());
      assertEquals(0, resultMatrixSignificance0.getCountWidth());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.324176910035511
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(true);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.m_ColOrder = intArray0;
      resultMatrixLatex0.getDefaultStdDevPrec();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(0, 0);
      resultMatrixPlainText0.getColName(97);
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.m_ColNameWidth = 0;
      resultMatrixPlainText0.listOptions();
      resultMatrixPlainText0.getDefaultMeanPrec();
      resultMatrixPlainText0.getEnumerateColNames();
      resultMatrixLatex0.getSummaryTitle(2);
      resultMatrixLatex0.meanWidthTipText();
      resultMatrixLatex0.stdDevPrecTipText();
      assertTrue(resultMatrixLatex0.getShowAverage());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      String string0 = resultMatrixHTML0.toStringMatrix();
      assertEquals("<table border=\"1\" cellpadding=\"3\" cellspacing=\"0\">\n   <tr><td><b>Dataset</b></td><td align=\"center\" colspan=\"1\"><b>(1)</b></td></tr>\n   <tr><td>row0</td><td align=\"right\">&nbsp;</td></tr>\n   <tr><td>(v/ /*)</td><td align=\"right\">&nbsp;</td></tr>\n</table>\n", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7458535301741085
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      resultMatrixCSV0.m_Wins = intArray0;
      resultMatrixCSV0.getDisplayRow(192);
      int int0 = resultMatrixCSV0.getDefaultMeanPrec();
      assertEquals(1, resultMatrixCSV0.getColCount());
      assertEquals(0, resultMatrixCSV0.getDefaultMeanWidth());
      assertEquals(2, int0);
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertTrue(resultMatrixCSV0.getPrintRowNames());
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6808649498588037
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setShowAverage(true);
      int[] intArray0 = new int[0];
      resultMatrixLatex0.m_ColOrder = intArray0;
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      int[][] intArray1 = new int[8][7];
      intArray1[0] = resultMatrixLatex0.m_ColOrder;
      intArray1[1] = resultMatrixLatex0.m_ColOrder;
      intArray1[2] = resultMatrixLatex0.m_ColOrder;
      intArray1[3] = resultMatrixLatex0.m_ColOrder;
      intArray1[4] = intArray0;
      intArray1[5] = resultMatrixLatex0.m_ColOrder;
      intArray1[6] = resultMatrixLatex0.m_ColOrder;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixLatex0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2161, 793);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.5191686328769176
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(54, 54);
      ResultMatrixGnuPlot resultMatrixGnuPlot1 = new ResultMatrixGnuPlot(1, 1);
      resultMatrixGnuPlot1.globalInfo();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 1);
      resultMatrixHTML0.globalInfo();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      ResultMatrixPlainText resultMatrixPlainText2 = new ResultMatrixPlainText();
      resultMatrixPlainText2.setRowNameWidth(2);
      assertEquals(2, resultMatrixPlainText2.getRowNameWidth());
      
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth((-4319));
      ResultMatrixLatex.main((String[]) null);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(54, resultMatrixGnuPlot0.getRowCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.411000721851639
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setCountWidth((-1186));
      resultMatrixLatex0.toStringRanking();
      resultMatrixLatex0.getStdDevPrec();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      resultMatrixSignificance0.toString();
      resultMatrixSignificance0.setShowAverage(false);
      resultMatrixSignificance0.toStringMatrix();
      String[] stringArray0 = new String[5];
      resultMatrixLatex0.setStdDevPrec((-1420));
      stringArray0[0] = "(";
      stringArray0[1] = "-ranking data not set-";
      stringArray0[2] = "Dataset (1)\n-----------\nrow0       \n";
      stringArray0[3] = " ";
      stringArray0[4] = "$circ$";
      resultMatrixSignificance0.m_RowNames = stringArray0;
      resultMatrixLatex0.getShowStdDev();
      resultMatrixLatex0.setRemoveFilterName(false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      // Undeclared exception!
      try { 
        resultMatrixSignificance0.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.45782270980291
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      String[][] stringArray1 = new String[1][5];
      stringArray1[0] = stringArray0;
      resultMatrixSignificance0.getColSize(stringArray1, 0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(10, 0);
      resultMatrixLatex0.setEnumerateColNames(false);
      resultMatrixLatex0.rowNameWidthTipText();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixSignificance0.clearHeader();
      ResultMatrixSignificance resultMatrixSignificance1 = null;
      try {
        resultMatrixSignificance1 = new ResultMatrixSignificance((-1689), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.4776648817417266
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.m_ShowAverage = true;
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.078014567747475
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(0, 0);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.setRowHidden((-1365), true);
      resultMatrixCSV0.setRowName(0, "J&W{b?kJTh5)uZS");
      resultMatrixCSV0.setStdDevPrec(8);
      assertEquals(8, resultMatrixCSV0.getStdDevPrec());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.800398115921774
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevPrec((-1));
      String string0 = resultMatrixCSV0.padString("", 1);
      assertEquals(" ", string0);
      
      resultMatrixCSV0.globalInfo();
      assertEquals(2, resultMatrixCSV0.getStdDevPrec());
      assertFalse(resultMatrixCSV0.getRemoveFilterName());
      assertEquals(2, resultMatrixCSV0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.234159116938083
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setPrintRowNames(true);
      resultMatrixLatex0.toStringMatrix();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.getRevision();
      String[][] stringArray0 = new String[6][1];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      stringArray1[1] = "$\bullet$";
      stringArray1[2] = "*";
      stringArray1[3] = "v";
      stringArray1[4] = " ";
      stringArray1[5] = " ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      stringArray2[1] = "(";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[0] = ")";
      stringArray3[1] = "*";
      stringArray3[2] = "v";
      stringArray3[3] = ")";
      stringArray3[4] = "!j\"5BLHo/D";
      stringArray3[5] = "(";
      stringArray3[6] = "\n";
      stringArray3[7] = "v";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[3];
      stringArray4[0] = "8034";
      stringArray4[1] = "\begin{table}[thb]\ncaption{label{labelname}Table Caption}\n\footnotesize\n{centering \begin{tabular}{lr}\n\\\nhline\nDataset & (1)\\\nhline\nrow0 &    \\\nhline\nmulticolumn{2}{c}{$circ$, $\bullet$ statistically significant improvement or degradation}\\\nend{tabular} \footnotesize par}\nend{table}\n";
      stringArray4[2] = "8x\"_x_qgF";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[0];
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[7];
      stringArray6[0] = " ";
      stringArray6[1] = "$circ$";
      stringArray6[2] = "*";
      stringArray6[3] = ")";
      stringArray6[4] = "8x\"_x_qgF";
      stringArray6[5] = "(";
      stringArray6[6] = "8x\"_x_qgF";
      stringArray0[5] = stringArray6;
      // Undeclared exception!
      try { 
        resultMatrixLatex0.getColSize(stringArray0, 1, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.8892425051146353
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      resultMatrixGnuPlot0.getMean(26, 498);
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(26, resultMatrixGnuPlot0.getColCount());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.1961700467697733
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      resultMatrixHTML0.m_ShowAverage = true;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.doubleToString(0, (-374));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8027646048348562
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int int0 = 0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 404;
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.setColOrder(intArray0);
      resultMatrixLatex0.setPrintRowNames(true);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.6614892281034646
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.TIE_STRING = "";
      resultMatrixSignificance0.m_ShowStdDev = false;
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      String[][] stringArray1 = new String[1][5];
      stringArray1[0] = stringArray0;
      ResultMatrixSignificance resultMatrixSignificance1 = new ResultMatrixSignificance();
      resultMatrixSignificance1.setOptions(stringArray0);
      assertEquals(2, resultMatrixSignificance0.getStdDevPrec());
      
      resultMatrixSignificance1.getRevision();
      assertEquals(0, resultMatrixSignificance1.getStdDevPrec());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.2421538427440075
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      resultMatrixHTML0.toStringMatrix();
      resultMatrixHTML0.getCountWidth();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(1, 54);
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(resultMatrixHTML0);
      int[][] intArray0 = new int[5][8];
      int[] intArray1 = new int[12];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 2;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 2;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[1];
      intArray4[0] = 2;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 54;
      intArray5[1] = 1;
      intArray0[4] = intArray5;
      resultMatrixHTML0.assign(resultMatrixCSV1);
      // Undeclared exception!
      try { 
        resultMatrixCSV1.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.942171506593454
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      resultMatrixHTML0.setRowNameWidth(0);
      int[] intArray0 = new int[1];
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(33, 54);
      int[][] intArray1 = new int[1][2];
      intArray1[0] = intArray0;
      int[][] intArray2 = new int[9][2];
      intArray2[0] = intArray0;
      intArray2[1] = intArray0;
      intArray2[2] = intArray0;
      intArray2[3] = intArray0;
      intArray2[4] = intArray0;
      intArray2[5] = intArray0;
      intArray2[6] = intArray0;
      intArray2[7] = intArray0;
      intArray2[8] = intArray0;
      resultMatrixCSV0.setRanking(intArray2);
      ResultMatrixHTML resultMatrixHTML1 = new ResultMatrixHTML(resultMatrixHTML0);
      // Undeclared exception!
      try { 
        resultMatrixHTML1.toStringMatrix();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.3414972867114465
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.setStdDevWidth(0);
      resultMatrixCSV0.m_EnumerateRowNames = false;
      resultMatrixCSV0.m_StdDevWidth = 2655;
      resultMatrixCSV0.getDefaultPrintColNames();
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(2655, 1);
      resultMatrixLatex0.m_ColNameWidth = 2655;
      resultMatrixLatex0.getDefaultPrintColNames();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.getColName(2655);
      resultMatrixGnuPlot0.clear();
      resultMatrixCSV0.toStringRanking();
      // Undeclared exception!
      resultMatrixLatex0.toStringMatrix();
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.952853440631588
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 404;
      resultMatrixCSV1.getColName(404);
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.7380783554095367
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(32, 26);
      resultMatrixPlainText0.m_ColNameWidth = 1853;
      resultMatrixPlainText0.getDefaultCountWidth();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[2];
      intArray1[0] = (-2428);
      intArray1[1] = 949;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = (-2428);
      intArray2[1] = 2;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      resultMatrixPlainText0.m_NonSigWins = intArray0;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(5, 1970);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.9779945576543874
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      String string0 = resultMatrixCSV0.toStringKey();
      assertEquals(1, resultMatrixCSV0.getRowCount());
      assertEquals("Key,\n[1],col0\n", string0);
      
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 404;
      intArray0[2] = 1;
      intArray0[3] = 1;
      String string1 = resultMatrixCSV1.getColName((-1));
      assertNull(string1);
      
      resultMatrixCSV1.m_RowNameWidth = (-872);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV1);
      resultMatrixGnuPlot0.getMean(0, 1);
      assertFalse(resultMatrixGnuPlot0.getEnumerateRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals((-872), resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.2501444518297604
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance();
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixSignificance0.getOptions();
      resultMatrixCSV0.m_RankingLosses = intArray0;
      resultMatrixCSV0.getRevision();
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      resultMatrixSignificance0.m_ColHidden = booleanArray0;
      resultMatrixSignificance0.setStdDevWidth(30);
      resultMatrixCSV0.setSignificanceWidth(2);
      resultMatrixCSV0.meanPrecTipText();
      assertEquals(30, resultMatrixSignificance0.getStdDevWidth());
      assertEquals(0, resultMatrixCSV0.getStdDevWidth());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.177528360219101
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(22, 22);
      resultMatrixGnuPlot0.m_StdDevWidth = (-889);
      resultMatrixGnuPlot0.listOptions();
      resultMatrixGnuPlot0.getColName((-1315));
      resultMatrixGnuPlot0.showStdDevTipText();
      assertEquals(22, resultMatrixGnuPlot0.getVisibleColCount());
      
      String string0 = resultMatrixGnuPlot0.toStringMatrix();
      int int0 = resultMatrixGnuPlot0.getMeanWidth();
      assertEquals(0, int0);
      
      String[][] stringArray0 = new String[6][4];
      String[] stringArray1 = new String[6];
      stringArray1[0] = null;
      stringArray1[1] = "";
      stringArray1[2] = "v";
      stringArray1[3] = "";
      stringArray1[4] = "v";
      stringArray1[5] = string0;
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = null;
      stringArray2[1] = "";
      stringArray2[2] = "*";
      stringArray2[3] = "*";
      stringArray2[4] = string0;
      stringArray2[5] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = " ";
      stringArray3[1] = string0;
      stringArray3[2] = " ";
      stringArray3[3] = "";
      stringArray3[4] = "";
      stringArray3[5] = "";
      stringArray3[6] = string0;
      stringArray3[7] = "";
      stringArray3[8] = "v";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[6];
      stringArray4[0] = "?**Q^dhlYm";
      stringArray4[1] = string0;
      stringArray4[2] = string0;
      stringArray4[3] = " ";
      stringArray4[4] = "";
      stringArray4[5] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "";
      stringArray5[1] = "?**Q^dhlYm";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[0];
      stringArray0[5] = stringArray6;
      resultMatrixGnuPlot0.getColSize(stringArray0, 9);
      assertEquals(22, resultMatrixGnuPlot0.getVisibleRowCount());
      assertTrue(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixGnuPlot0.getShowStdDev());
      assertEquals(50, resultMatrixGnuPlot0.getRowNameWidth());
      assertEquals(50, resultMatrixGnuPlot0.getColNameWidth());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.9458755173797666
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 5);
      double[][] doubleArray0 = new double[8][0];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 1744;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 1744;
      doubleArray1[4] = (double) 1744;
      doubleArray1[5] = (double) 1;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = 2631.0509329464876;
      doubleArray2[3] = (double) 1;
      doubleArray2[4] = 688.115;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = 0.0;
      doubleArray2[7] = (double) 1;
      doubleArray2[8] = (-1011.6058752);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = 2631.0509329464876;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = (double) 1744;
      doubleArray4[1] = (-1011.6058752);
      doubleArray4[2] = 0.0;
      doubleArray4[3] = (-1011.6058752);
      doubleArray4[4] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (double) 0;
      doubleArray5[2] = (double) 1;
      doubleArray5[3] = (double) 1;
      doubleArray5[4] = (double) 5;
      doubleArray5[5] = (double) 0;
      doubleArray5[6] = (double) 0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = 1044.0;
      doubleArray6[1] = (-1011.6058752);
      doubleArray6[2] = (double) 1;
      doubleArray6[3] = 688.115;
      doubleArray6[4] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[6];
      doubleArray7[0] = (double) 1;
      doubleArray7[1] = 1044.0;
      doubleArray7[2] = (double) 5;
      doubleArray7[3] = 0.0;
      doubleArray7[4] = (-1011.6058752);
      doubleArray7[5] = 2631.0509329464876;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[8];
      doubleArray8[0] = 688.115;
      doubleArray8[1] = (double) 1;
      doubleArray8[2] = (double) 0;
      doubleArray8[3] = 2631.0509329464876;
      doubleArray8[4] = (double) 1744;
      doubleArray8[5] = 688.115;
      doubleArray8[6] = (double) 1744;
      doubleArray8[7] = (-183.1939683);
      doubleArray0[7] = doubleArray8;
      resultMatrixPlainText0.m_Mean = doubleArray0;
      resultMatrixPlainText0.setMeanWidth(1744);
      resultMatrixPlainText0.m_CountWidth = (-3566);
      resultMatrixPlainText0.getDefaultCountWidth();
      resultMatrixPlainText0.enumerateRowNamesTipText();
      resultMatrixPlainText0.setPrintRowNames(false);
      assertEquals(1744, resultMatrixPlainText0.getMeanWidth());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.6973448725294586
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.getDefaultPrintColNames();
      resultMatrixCSV0.getColOrder();
      assertFalse(resultMatrixCSV0.getDefaultEnumerateRowNames());
      assertEquals(1, resultMatrixCSV0.getVisibleColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(0, 97);
      resultMatrixGnuPlot0.toStringKey();
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintRowNames());
      assertEquals(97, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertFalse(resultMatrixGnuPlot0.getDefaultRemoveFilterName());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.992400521059247
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      resultMatrixLatex0.m_PrintRowNames = true;
      resultMatrixLatex0.setRemoveFilterName(false);
      String string0 = resultMatrixLatex0.getSummaryTitle((-1));
      assertEquals("`", string0);
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(155, 1);
      resultMatrixHTML0.setEnumerateColNames(true);
      resultMatrixHTML0.getDefaultPrintColNames();
      resultMatrixHTML0.getEnumerateRowNames();
      assertTrue(resultMatrixHTML0.getEnumerateColNames());
      assertEquals(155, resultMatrixHTML0.getColCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(2, 1);
      resultMatrixGnuPlot0.getDefaultEnumerateRowNames();
      boolean boolean0 = resultMatrixLatex0.getEnumerateRowNames();
      assertFalse(boolean0);
      
      resultMatrixLatex0.getDisplayName();
      resultMatrixLatex0.getDefaultPrintColNames();
      assertEquals(0, resultMatrixLatex0.getDefaultColNameWidth());
      assertEquals(1, resultMatrixLatex0.getVisibleRowCount());
      assertFalse(resultMatrixLatex0.getDefaultShowStdDev());
      assertEquals(2, resultMatrixLatex0.getDefaultMeanPrec());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.648625546111829
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 3;
      intArray0[2] = 1;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 0;
      intArray0[7] = 1;
      resultMatrixHTML0.m_ColOrder = intArray0;
      // Undeclared exception!
      try { 
        resultMatrixHTML0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.115475024880771
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(0, 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      resultMatrixHTML0.m_ColOrder = intArray0;
      resultMatrixHTML0.setStdDevWidth(2);
      resultMatrixHTML0.getRevision();
      resultMatrixHTML0.setStdDev(5, 0, 605.533284442);
      resultMatrixHTML0.setPrintColNames(true);
      double double0 = resultMatrixHTML0.getCount(68);
      assertTrue(resultMatrixHTML0.getPrintColNames());
      assertEquals(0.0, double0, 0.01);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.461025896767752
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(0, 0);
      resultMatrixSignificance0.m_ShowStdDev = false;
      String[] stringArray0 = resultMatrixSignificance0.getOptions();
      resultMatrixSignificance0.toStringKey();
      resultMatrixSignificance0.showStdDevTipText();
      resultMatrixSignificance0.stdDevWidthTipText();
      resultMatrixSignificance0.setCountWidth(0);
      String[][] stringArray1 = new String[1][5];
      stringArray1[0] = stringArray0;
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      resultMatrixCSV0.setRowOrder(intArray0);
      resultMatrixSignificance0.headerKeys();
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixCSV0);
      resultMatrixGnuPlot0.isMean(0);
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex(0, 16);
      // Undeclared exception!
      try { 
        resultMatrixLatex0.toStringHeader();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.899370419893724
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      resultMatrixCSV0.toStringKey();
      int int0 = 0;
      resultMatrixCSV0.removeFilterName("CMz>");
      ResultMatrixCSV resultMatrixCSV1 = new ResultMatrixCSV(0, 0);
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 404;
      int int1 = (-1);
      resultMatrixCSV0.getRevision();
      // Undeclared exception!
      try { 
        resultMatrixCSV0.setRanking(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.915077985572466
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(9, 9);
      resultMatrixCSV0.getDefaultEnumerateColNames();
      resultMatrixCSV0.setEnumerateRowNames(true);
      resultMatrixCSV0.setRowHidden(9, true);
      resultMatrixCSV0.padString("|vTIjgz", 9);
      resultMatrixCSV0.m_SignificanceWidth = 26;
      resultMatrixCSV0.setRowName(9, "J&W{b?kJTh5)uZS");
      assertTrue(resultMatrixCSV0.getEnumerateRowNames());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.800398115921774
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString(":qOYq7p{po'", 2767, false);
      resultMatrixGnuPlot0.setEnumerateColNames(false);
      boolean boolean0 = resultMatrixGnuPlot0.getShowAverage();
      assertFalse(boolean0);
      
      resultMatrixGnuPlot0.getColOrder();
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultCountWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.2717591528972543
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV();
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(resultMatrixCSV0);
      resultMatrixPlainText0.removeFilterName("@^e^{x");
      resultMatrixPlainText0.getRevision();
      resultMatrixPlainText0.printColNamesTipText();
      resultMatrixPlainText0.m_RowNameWidth = 1;
      resultMatrixCSV0.setShowStdDev(false);
      resultMatrixCSV0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixPlainText0.m_RowNames = stringArray0;
      resultMatrixPlainText0.setPrintColNames(false);
      resultMatrixPlainText0.getRowCount();
      resultMatrixPlainText0.setRowHidden(1, false);
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.toStringMatrix();
      ResultMatrixCSV resultMatrixCSV1 = null;
      try {
        resultMatrixCSV1 = new ResultMatrixCSV(4, (-2406));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.experiment.ResultMatrix", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.0153240793209064
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.padString("enum-row-names", (-145), false);
      resultMatrixGnuPlot0.isRowName((-145));
      resultMatrixGnuPlot0.clearSummary();
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(resultMatrixGnuPlot0);
      resultMatrixSignificance0.getDefaultPrintColNames();
      resultMatrixSignificance0.LEFT_PARENTHESES = null;
      resultMatrixSignificance0.padString("f0dX", (-1114));
      resultMatrixGnuPlot0.setPrintColNames(false);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixSignificance0);
      resultMatrixCSV0.removeFilterName("f0dX");
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultMatrixSignificance0.m_RowHidden = booleanArray0;
      resultMatrixCSV0.getDefaultRowNameWidth();
      resultMatrixGnuPlot0.getDefaultColNameWidth();
      resultMatrixGnuPlot0.toStringSummary();
      String[] stringArray0 = new String[0];
      resultMatrixSignificance0.m_ColNames = stringArray0;
      resultMatrixGnuPlot0.setStdDev(50, 97, 1409.46838);
      resultMatrixSignificance0.setStdDevWidth(2);
      resultMatrixSignificance0.isMean((-1114));
      resultMatrixCSV0.enumerateRowNamesTipText();
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      resultMatrixHTML0.globalInfo();
      assertFalse(resultMatrixGnuPlot0.getPrintColNames());
      assertFalse(resultMatrixHTML0.getEnumerateRowNames());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.631612186595399
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ResultMatrixLatex resultMatrixLatex0 = new ResultMatrixLatex();
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray0[1] = doubleArray2;
      resultMatrixLatex0.m_StdDev = doubleArray0;
      assertEquals(1, resultMatrixLatex0.getRowCount());
      
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(resultMatrixLatex0);
      resultMatrixGnuPlot0.enumerateRowNamesTipText();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getStdDevWidth());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleColCount());
      assertTrue(resultMatrixGnuPlot0.getPrintRowNames());
      assertEquals(0, resultMatrixGnuPlot0.getSignificanceWidth());
      assertEquals(0, resultMatrixGnuPlot0.getMeanWidth());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertEquals(0, resultMatrixGnuPlot0.getRowNameWidth());
      assertTrue(resultMatrixGnuPlot0.getEnumerateColNames());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.5191686328769176
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(26, 0);
      ResultMatrixCSV resultMatrixCSV0 = new ResultMatrixCSV(resultMatrixGnuPlot0);
      int[][] intArray0 = new int[3][9];
      resultMatrixCSV0.m_StdDevPrec = 2239;
      int[] intArray1 = new int[0];
      resultMatrixGnuPlot0.getRevision();
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 1;
      intArray2[1] = 2;
      intArray2[3] = 1;
      intArray2[7] = 26;
      intArray2[4] = 0;
      resultMatrixCSV0.WIN_STRING = "8034";
      assertEquals(2239, resultMatrixCSV0.getStdDevPrec());
      
      intArray2[5] = 0;
      intArray2[6] = 2;
      intArray2[7] = 0;
      intArray2[8] = 1;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(1, 5);
      resultMatrixHTML0.globalInfo();
      resultMatrixPlainText0.setRowNameWidth(1);
      resultMatrixHTML0.WIN_STRING = "V;eGi]&";
      resultMatrixHTML0.getDefaultSignificanceWidth();
      resultMatrixHTML0.setCountWidth(0);
      ResultMatrixLatex.main((String[]) null);
      resultMatrixPlainText0.toStringMatrix();
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(0, resultMatrixGnuPlot0.getCountWidth());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.754260013139539
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      int[][] intArray0 = new int[2][2];
      int[] intArray1 = new int[8];
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.setColOrder(intArray1);
      resultMatrixGnuPlot0.setStdDev(1071, 114, 812.910192831);
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getRowCount());
      assertEquals(2, resultMatrixGnuPlot0.getMeanPrec());
      assertTrue(resultMatrixGnuPlot0.getDefaultPrintColNames());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.462012381889054
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ResultMatrixSignificance resultMatrixSignificance0 = new ResultMatrixSignificance(1, 1961);
      int[][] intArray0 = new int[6][8];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 45;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 2;
      intArray3[1] = 45;
      intArray3[2] = 45;
      intArray3[3] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 1961;
      intArray4[1] = 1961;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 45;
      intArray5[1] = 1;
      intArray5[2] = 1961;
      intArray5[3] = 1961;
      intArray5[4] = 2;
      intArray5[5] = 1961;
      intArray5[6] = 1;
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(97, 2);
      resultMatrixHTML0.setCountWidth(761);
      ResultMatrixLatex.main((String[]) null);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.5191686328769176
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot(24, 0);
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(0, resultMatrixGnuPlot0.getRowCount());
      assertEquals(24, resultMatrixGnuPlot0.getColCount());
      
      ResultMatrixHTML resultMatrixHTML0 = new ResultMatrixHTML(resultMatrixGnuPlot0);
      ResultMatrixPlainText resultMatrixPlainText0 = new ResultMatrixPlainText(2, 311);
      resultMatrixHTML0.globalInfo();
      ResultMatrixPlainText resultMatrixPlainText1 = new ResultMatrixPlainText();
      resultMatrixPlainText1.setRowNameWidth(1);
      resultMatrixHTML0.getDefaultSignificanceWidth();
      assertEquals(0, resultMatrixHTML0.getCountWidth());
      
      resultMatrixHTML0.setCountWidth(3273);
      ResultMatrixLatex.main((String[]) null);
      resultMatrixPlainText1.toStringMatrix();
      resultMatrixGnuPlot0.globalInfo();
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.6885678425123976
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ResultMatrixGnuPlot resultMatrixGnuPlot0 = new ResultMatrixGnuPlot();
      resultMatrixGnuPlot0.getMean(13, 498);
      assertEquals(0, resultMatrixGnuPlot0.getDefaultSignificanceWidth());
      assertEquals(1, resultMatrixGnuPlot0.getColCount());
      assertEquals(1, resultMatrixGnuPlot0.getVisibleRowCount());
      assertFalse(resultMatrixGnuPlot0.getDefaultShowAverage());
      assertEquals(2, resultMatrixGnuPlot0.getStdDevPrec());
      assertEquals(0, resultMatrixGnuPlot0.getDefaultStdDevWidth());
  }
}
