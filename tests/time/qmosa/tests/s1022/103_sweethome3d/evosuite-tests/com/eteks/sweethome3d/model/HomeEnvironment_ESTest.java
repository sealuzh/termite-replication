/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 04 06:29:15 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoWidth(1172);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 419.8F, 33, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setCeillingLightColor((-288));
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-778));
      homeEnvironment1.setPhotoQuality(33);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoQuality(14);
      homeEnvironment1.setVideoWidth((-3694));
      TexturesCategory texturesCategory0 = new TexturesCategory("%3zM");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%3zM");
      homeEnvironment1.setPhotoHeight(300);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "PHOTO_HEIGHT");
      homeEnvironment1.setPhotoWidth(300);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      homeEnvironment1.getDrawingMode();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2120368823182077
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      homeEnvironment0.setVideoFrameRate(11053224);
      homeEnvironment0.setVideoWidth(1267);
      homeEnvironment0.setPhotoHeight(1601);
      List<Camera> list0 = new LinkedList<Camera>();
      homeEnvironment0.setPhotoHeight(1601);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(1601);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0724441304240537
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoWidth((-209));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor((-5276));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1h(h;");
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth((-209));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoWidth((-209));
      assertEquals((-5276), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.225227939993955
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(14);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", homeEnvironment_Property0, homeEnvironment_Property0);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "T3m0ZPZw:", homeEnvironment1, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setCeillingLightColor(1);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.setVideoQuality(1115);
      homeEnvironment0.setWallsAlpha(1.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      boolean boolean0 = homeEnvironment2.isObserverCameraElevationAdjusted();
      assertEquals(1115, homeEnvironment1.getVideoQuality());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.3215064679896233
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FISHEYE", propertyChangeListener0);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", homeEnvironment2, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setSubpartSizeUnderLight(0.0F);
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setCeillingLightColor(0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.setVideoQuality(400);
      homeEnvironment0.setWallsAlpha(1.5F);
      homeEnvironment1.isAllLevelsVisible();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 1484;
      homeEnvironment0.setVideoFrameRate(1484);
      homeEnvironment0.setPhotoQuality(33);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Random.setNextRandom(400);
      FileSystemHandling.shouldAllThrowIOExceptions();
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("FILL", "FILL", resourceURLContent0, 400, 400, "SUBPART_SIZE_UNDER_LIGHT", true);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1073741824, homeTexture0, 15, homeTexture0, 15, 1073741824);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.setCeillingLightColor(400);
      homeEnvironment0.setPhotoHeight(15);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(1073741824);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(15, homeEnvironment0.getPhotoHeight());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.344282324621489
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setPhotoWidth(11053224);
      homeEnvironment0.setWallsAlpha(11053224);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("zO~%e[57)(J4]A[b", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("zO~%e[57)(J4]A[b", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy1);
      homeEnvironment0.setWallsAlpha(320);
      homeEnvironment0.setCeillingLightColor((-1385));
      homeEnvironment0.setSubpartSizeUnderLight((-744.094F));
      homeEnvironment0.setPhotoHeight(320);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      String string0 = "jar:";
      homeEnvironment1.getVideoCameraPath();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("jar:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.jar:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.284999743429781
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(12);
      homeEnvironment0.setVideoWidth(3109);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(12);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setPhotoHeight((-1639));
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth((-2560));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.setVideoWidth(2792);
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals((-1639), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.753349994178044
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setCeillingLightColor(808);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "could not load ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VFjj_b}'\"G_sI");
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth((-3972));
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getDrawingMode();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(0, homeTexture0, 3665, homeTexture0, 2139576860, 0);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment2.setVideoWidth(4);
      homeEnvironment1.getSkyColor();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(33, homeTexture0, (-642), 9, 2139576860);
      homeEnvironment3.getSubpartSizeUnderLight();
      homeEnvironment2.setSkyTexture(homeTexture0);
      homeEnvironment0.getCeillingLightColor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment3.setVideoWidth(9);
      assertEquals(7, homeEnvironment3.getVideoHeight());
      
      homeEnvironment0.getVideoCameraPath();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Random.setNextRandom(400);
      FileSystemHandling.shouldAllThrowIOExceptions();
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("FILL", "FILL", resourceURLContent0, 400, 400, "SUBPART_SIZE_UNDER_LIGHT", true);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1073741824, homeTexture0, 15, homeTexture0, 15, 1073741824);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setCeillingLightColor(5080);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setWallsAlpha(5080);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundColor((-3945));
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(5080.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-3945), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0455987381565137
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoWidth((-2380));
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setCeillingLightColor(13427964);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.getPhotoWidth();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.getSubpartSizeUnderLight();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "com.eteks.sweethome3d.io.HomeURLContent", temporaryURLContent0, 0.0F, 0.0F, "com.eteks.sweethome3d.io.HomeURLContent");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment0.getCeillingLightColor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment1.setVideoWidth(1);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(1, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      URL uRL1 = MockURL.URL(uRL0, "com.eteks.sweethome3d.tools.TemporaryURLContent", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.TemporaryURLContent", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("JZ*Pk,4_g&FofLn_", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("JZ*Pk,4_g&FofLn_", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.TemporaryURLContent", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      homeEnvironment1.getLightColor();
      CatalogTexture catalogTexture0 = new CatalogTexture("IYJ~~nB<", temporaryURLContent0, 3991, 13684944);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-1857), homeTexture0, (-823), 704, 13684944);
      homeEnvironment2.setLightColor(2253);
      assertEquals(2253, homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.050469885856446
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoFrameRate((-616));
      homeEnvironment0.setVideoWidth((-616));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setCeillingLightColor((-126));
      homeEnvironment0.setPhotoHeight(808);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(1740);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-616), homeEnvironment0.getVideoFrameRate());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0272157910004682
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoWidth((-1632));
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setCeillingLightColor(1073741824);
      homeEnvironment1.setPhotoHeight((-1178));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment2.getLightColor();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.setLightColor(1073741824);
      assertEquals(1073741824, homeEnvironment3.getLightColor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.68478541691352
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      int int0 = 14;
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("RATIO_3_2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.RATIO_3_2
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.4153064443868852
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(213.31786F);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.setVideoQuality(402);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyColor(300);
      byte[] byteArray0 = new byte[0];
      homeEnvironment0.setVideoWidth((-1073741823));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoQuality(748);
      homeEnvironment0.getDrawingMode();
      Random.setNextRandom(9);
      homeEnvironment0.setLightColor(300);
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(9);
      homeEnvironment0.getWallsAlpha();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("Aa8o1K+o~L<Op$\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.Aa8o1K+o~L<Op$\"
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.4543773953841663
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setPhotoWidth(11053224);
      homeEnvironment0.setWallsAlpha(11053224);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("zO~%e[57)(J4]A[b", propertyChangeListener0);
      Camera camera0 = new Camera(39.0F, 39.0F, 39.0F, 1851.1774F, 1851.1774F, 3586.3345F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("com.eteks.sweethome3d.model.AspectRatio", "zO~%e[57)(J4]A[b", camera0, aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("zO~%e[57)(J4]A[b", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy1);
      homeEnvironment0.setWallsAlpha(320);
      homeEnvironment0.setCeillingLightColor((-1385));
      homeEnvironment0.setSubpartSizeUnderLight(4042.0134F);
      homeEnvironment0.setPhotoHeight(320);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getLightColor();
      homeEnvironment1.getVideoCameraPath();
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setGroundColor(320);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(4042.0134F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("p4}@ZIbyb", (Content) null, 808, (-2365.2256F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2753, homeTexture0, (-3944), (-1890), (-1833.632F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(400, int0);
      
      homeEnvironment0.getDrawingMode();
      assertEquals((-1890), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(2753, homeEnvironment0.getGroundColor());
      assertEquals((-3944), homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1833.632F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("T326dIeu", "\"-x]bgz~j", (Content) null, 1.0F, (-1261.945F), "Z2\"p(|ZPt8V3PvO");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1890), homeTexture0, 2111, homeTexture0, 33, 1.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.setPhotoWidth(2111);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.getDrawingMode();
      assertEquals(2111, homeEnvironment0.getPhotoWidth());
      assertEquals(33, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, uRLContent0, 0, (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-2380), 2.0F);
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSkyColor((-2380));
      homeEnvironment0.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.setWallsAlpha(630.0999F);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getLightColor();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("e4}@ZIbyb", "h.Lh@=E+I", (Content) null, 1.0F, 1.0F, "h.Lh@=E+I", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(808, homeTexture0, 808, homeTexture0, 808, 2946.8818F);
      homeEnvironment1.setGroundColor(2146547782);
      assertEquals(2146547782, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.994140011011283
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-1.0F), 1.3427964E7F, 1851.1774F, 1851.1774F, (-1645.26F), (-77.723F), (-622L), camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.push(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("9qmV.8fp|=wOEVY/", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy4);
      homeEnvironment0.setWallsAlpha(0.0F);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1279462185041473
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture(",\"$a-s]O{GZ", uRLContent0, (-3782.9946F), (-3782.9946F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(280, homeTexture0, 280, 4, 280);
      homeEnvironment1.setGroundColor(3);
      homeEnvironment2.getGroundTexture();
      homeEnvironment2.setSkyColor(280);
      homeEnvironment1.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoWidth();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Camera", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(",\"$a-s]O{GZ", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment2.setWallsAlpha((-2308.1F));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(0, (HomeTexture) null, 400, homeTexture0, 3, 0.0F);
      homeEnvironment2.getVideoHeight();
      int int0 = homeEnvironment2.getVideoHeight();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment2.getDrawingMode());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoWidth(1172);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("i~I:-MW8${,", "S_AON", (Content) null, 1.0F, (-1890), "(J,Gw9.?1:@5Y[w^(~", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1890), homeTexture0, (-1890), homeTexture0, 808, (-3044.494F));
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.setGroundColor((-1890));
      assertEquals((-1890), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(808, homeEnvironment0.getLightColor());
      assertEquals((-3044.494F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1890), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setPhotoWidth(11053224);
      AspectRatio aspectRatio2 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setSubpartSizeUnderLight((-4964.971F));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.070111222362747
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      homeEnvironment0.setCeillingLightColor(1586);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(3310.0974F, (-686.4985F), (-1785.27F), (-686.4985F), 3310.0974F, (-1.0F), 1586, camera_Lens0);
      Camera camera1 = camera0.clone();
      camera1.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      homeEnvironment2.setVideoCameraPath(linkedList0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment2.setPhotoWidth((-1632));
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment2.setSubpartSizeUnderLight(0.0F);
      homeEnvironment1.setPhotoHeight(867);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment3.setVideoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.240555505820405
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      homeEnvironment0.setCeillingLightColor(1586);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setSubpartSizeUnderLight(1586);
      homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoWidth(0);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment2.setAllLevelsVisible(false);
      homeEnvironment1.setWallsAlpha(2294.28F);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListenerProxy0);
      homeEnvironment1.setWallsAlpha(1586);
      homeEnvironment0.setCeillingLightColor(1505);
      homeEnvironment0.setSubpartSizeUnderLight((-77.723F));
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.getLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.3031513228679628
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(1586);
      homeEnvironment0.setCeillingLightColor(1586);
      homeEnvironment0.setSubpartSizeUnderLight(1586);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(1586);
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment1.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(0, 1586, 0, 2294.187F, 1586, (-211.80795F), 1586, camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "", propertyChangeListenerProxy0, camera0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setCeillingLightColor(13427964);
      homeEnvironment2.setSubpartSizeUnderLight(13427964);
      homeEnvironment1.setPhotoHeight(1586);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment1.getLightColor();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setLightColor(4840);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment1.getDrawingMode());
      assertEquals(1586, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.1476947907327726
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor((-1));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      homeEnvironment1.setVideoWidth((-1667));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setSkyColor((-1));
      homeEnvironment1.getGroundTexture();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode2 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.getVideoWidth();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setAllLevelsVisible(true);
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setVideoQuality((-1958));
      homeEnvironment1.setPhotoWidth(400);
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.9954171502194566
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setCeillingLightColor(14);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", homeEnvironment_Property0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setLightColor(13684944);
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-4201));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-4201), 270.6F, (-1787.0F), 1.0F, 0.0F, 1.0F, (-1L), camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.push(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getLightColor();
      homeEnvironment0.setLightColor((-4201));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("j|Tx:Px");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.j|Tx:Px
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0421258918826033
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("FISHEYE", propertyChangeListener0);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("f'!cCXKR'vcfH/8T)BI", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "", "", homeEnvironment0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setSubpartSizeUnderLight(14);
      homeEnvironment2.setPhotoHeight(0);
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.getPhotoQuality();
      assertEquals(14.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      
      homeEnvironment2.getLightColor();
      homeEnvironment2.setLightColor(13684944);
      assertEquals(11053224, homeEnvironment2.getGroundColor());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoQuality((-1632));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(13684944, int0);
      
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      URL uRL1 = MockURL.URL(uRL0, "com.eteks.sweethome3d.tools.TemporaryURLContent", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(0.0F, float0, 0.01F);
      
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.2381531034180036
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio2);
      homeEnvironment1.setVideoWidth(33);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setCeillingLightColor(521);
      homeEnvironment0.setPhotoHeight(521);
      homeEnvironment0.setSubpartSizeUnderLight(4516.6F);
      homeEnvironment1.setPhotoHeight(61);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getLightColor();
      homeEnvironment1.setLightColor(33);
      assertEquals(4516.6F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(265);
      homeEnvironment0.setCeillingLightColor((-4230));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(303.75946F, (-0.44815376F), 3969.4033F, (-0.44815376F), 0.0F, (-3579.0F), 265, camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.push(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("P,}{lr/4_u(\"X(W", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("SUBPART_SIZE_UNDER_LIGHT", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("BI", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("BI", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("jtg9BB3d[~", propertyChangeListenerProxy3);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setLightColor(3991);
      assertEquals((-4230), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.820255121797642
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-375.2082F), (-3303.8381F), (-3303.8381F), (-1145.991F), (-1145.991F), 630.0999F, 3186L, camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(867);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSubpartSizeUnderLight((-3774.2075F));
      String string0 = "PHOTO_ASPECT_RATIO";
      homeEnvironment0.setPhotoHeight(2146374410);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.isAllLevelsVisible();
      homeEnvironment1.setAllLevelsVisible(true);
      CatalogTexture catalogTexture0 = new CatalogTexture("e4}@ZIbyb", "e4}@ZIbyb", (Content) null, 1.0F, 0.0F, "e4}@ZIbyb", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-52), homeTexture0, 140, homeTexture0, 706, 140);
      homeEnvironment2.setPhotoQuality((-52));
      homeEnvironment2.setGroundColor((-52));
      assertEquals((-52), homeEnvironment2.getPhotoQuality());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Random.setNextRandom(400);
      FileSystemHandling.shouldAllThrowIOExceptions();
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("FILL", "FILL", resourceURLContent0, 400, 400, "SUBPART_SIZE_UNDER_LIGHT", true);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1073741828, homeTexture0, 35, homeTexture0, 35, 1073741828);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoWidth(400);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture1 = new CatalogTexture("SUBPART_SIZE_UNDER_LIGHT", temporaryURLContent0, 35, 35, true);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setCeillingLightColor(5080);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getCeillingLightColor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL");
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setVideoWidth(1073741828);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(805306368, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      System.setCurrentTimeMillis((-5557L));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(16, (HomeTexture) null, 16, 16, 537.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-5557L), (-5557L), 16, 16, (-2557.4114F), (-77.723F), 1053L, camera_Lens0);
      Consumer<Camera> consumer0 = (Consumer<Camera>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      linkedList0.clone();
      linkedList0.removeFirst();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.isAllLevelsVisible();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getGroundColor();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio2);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.9237738987163584
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      int int0 = 0;
      homeEnvironment1.setGroundColor(0);
      homeEnvironment1.setPhotoHeight(14);
      homeEnvironment0.setPhotoWidth(14);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HomeEnvironment.Property.values();
      homeEnvironment0.setVideoFrameRate(14);
      homeEnvironment1.clone();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.getVideoAspectRatio();
      String string0 = "VIEW_3D_RATIO";
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "VIEW_3D_RATIO", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(1484);
      homeEnvironment0.setPhotoQuality(33);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoQuality(33);
      homeEnvironment0.setVideoWidth(300);
      TexturesCategory texturesCategory0 = new TexturesCategory("%3zM");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Wp4O`H{IY");
      homeEnvironment0.setPhotoHeight((-1694));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wp4O`H{IY");
      homeEnvironment0.setPhotoWidth(300);
      homeEnvironment0.getDrawingMode();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getPhotoHeight();
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(225, homeEnvironment0.getVideoHeight());
      assertEquals((-1694), int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.221187535953551
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoWidth(1172);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(808);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      homeEnvironment0.setPhotoHeight((-3945));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1h(h;");
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth(8);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      HomeEnvironment.DrawingMode.values();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(1172, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("i~I:-MW8${,", "e4}@ZIbyb", (Content) null, 1.0F, 1.0F, "i~I:-MW8${,", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(18, homeTexture1, 808, homeTexture1, 8, 808);
      assertEquals(18, homeEnvironment1.getGroundColor());
      
      homeEnvironment1.setGroundColor(8);
      assertEquals(8, homeEnvironment1.getGroundColor());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(400);
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0059695736425467
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(33);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoWidth(1172);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getPhotoAspectRatio();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      System.setCurrentTimeMillis(1L);
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(13427964, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 2122, 2122);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2122, homeTexture0, 2, 2122, 0.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      assertEquals(2122, homeEnvironment0.getGroundColor());
      assertEquals(2122, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(2, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.9224967595081845
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoWidth(1172);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getPhotoAspectRatio();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 9, "k@G1?", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 9, 0.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 1041, homeTexture0, (-1228), 942.07F);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertTrue(boolean0);
      
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1041, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(942.07F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(9, homeEnvironment0.getGroundColor());
      assertEquals((-1228), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      int int0 = 33;
      homeEnvironment0.setPhotoQuality(33);
      homeEnvironment0.setSkyColor(33);
      homeEnvironment0.setVideoWidth(300);
      String string0 = "%3zM";
      TexturesCategory texturesCategory0 = new TexturesCategory("%3zM");
      int int1 = (-3148);
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture((-3148));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(12);
      homeEnvironment0.setPhotoQuality(4);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoQuality(4);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(12, homeEnvironment0.getSkyColor());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getLightColor();
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      MockURL.URL(uRL0, "com.eteks.sweethome3d.tools.TemporaryURLContent", uRLStreamHandler0);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getPhotoAspectRatio();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      homeEnvironment1.getVideoFrameRate();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(1484);
      homeEnvironment0.setPhotoQuality(33);
      homeEnvironment0.setVideoFrameRate(33);
      homeEnvironment0.setVideoQuality(33);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-1.0F), 1.0F, (-1.0F), 1484, 33, 2294.187F, 4279L, camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.push(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("2?x^s{,-/5}vZj", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("jcGSxv3#D~@", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy4);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("9qmV.8fp|=wOEVY/", propertyChangeListenerProxy2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy6);
      homeEnvironment0.setWallsAlpha((-1L));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(33, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("i~I:-MW8${,", "S_AON", (Content) null, 1.0F, (-1890), "e4}@ZIbyb", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1890), homeTexture0, (-1890), homeTexture0, 808, (-3044.494F));
      homeEnvironment0.setGroundColor((-1890));
      homeEnvironment0.setSkyColor(9);
      assertEquals(9, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7300480657918285
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-4201));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-4201), (-4201), 270.6F, 1702.769F, (-4201), 270.6F, 940L, camera_Lens1);
      linkedList0.add(camera0);
      Camera camera1 = new Camera(1702.769F, 270.6F, (-1787.0F), 1.0F, 0.0F, 1.0F, (-1L), camera_Lens0);
      camera1.setX(0.0F);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.push(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("9qmV.8fp|=wOEVY/", propertyChangeListenerProxy0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setVideoQuality((-4201));
      homeEnvironment0.setWallsAlpha(320.0F);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(320.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setCeillingLightColor((-4201));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1702.769F, 303.75946F, (-1787.0F), 1.0F, (-0.44815376F), 1.0F, (-1L), camera_Lens0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.push(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("!aqJ&l9KoS$^a", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("SUBPART_SIZE_UNDER_LIGHT", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("P,}{lr/4_u(\"X(W", propertyChangeListenerProxy1);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setLightColor(485);
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1.0F), 124, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(124, homeTexture0, 124, homeTexture0, 7, 7);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(124, homeEnvironment0.getSkyColor());
      assertEquals(7.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(7, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(124, homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1935.0F);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("If|Szh", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "y\"1$XT_Vy/{)", "y\"1$XT_Vy/{)", "If|Szh");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setLightColor((-1380));
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      assertEquals(1935.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }
}
